[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Updating ProjectRef(uri("file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project/"), "jsoniter-scala-build")...
[info] Done updating.
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[info] Setting Scala version to 2.12.6 on 4 projects.
[info] Reapplying settings...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Apr 27, 2018 2:47:56 PM
[info] Updating core...
[info] Done updating.
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 5 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:986:79: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toDouble(pos: Int): Double = java.lang.Double.parseDouble(new String(buf, 0, mark, pos - mark))
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:445:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:453:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:964:14: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       zoneId.getBytes(0, len, buf, pos)
[warn]              ^
[warn] four warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.25.1-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.25.1-SNAPSHOT.jar ...
[info] Compiling 57 Scala sources and 1 Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/ArrayOfYearMonthsBenchmark.scala:4:19: Unused import
[warn] import java.time.{LocalDate, YearMonth}
[warn]                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:48: Generated JSON codec for type 'Int':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Int] {
[info]       def nullValue: Int = 0;
[info]       def decodeValue(in: JsonReader, default: Int): Int = in.readInt();
[info]       def encodeValue(x: Int, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intCodec: JsonValueCodec[Int] = make[Int](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:57: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[String] {
[info]       def nullValue: String = null;
[info]       def decodeValue(in: JsonReader, default: String): String = in.readString(default);
[info]       def encodeValue(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonValueCodec[String] = make[String](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:65: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("a");
[info]       private[this] val r1: Array[String] = Array("b");
[info]       private[this] val r2: Array[String] = Array("l", "r");
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _a = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readString(_b)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = JsoniterCodecs.this.adtCodec.decodeValue(in, _l)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _r = JsoniterCodecs.this.adtCodec.decodeValue(in, _r)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d2(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d3(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("A")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("a");
[info]           out.writeVal(x.a)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("B")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("C")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.l, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("r");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.r, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val adtCodec: JsonValueCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "bd");
[info]       private[this] def d1(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _os = d1(in, _os)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bd");
[info]           out.writeVal(x.bd)
[info]         };
[info]         {
[info]           val v = x.os;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("os");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val anyRefsCodec: JsonValueCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:97: Generated JSON codec for type 'Array[BigDecimal]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigDecimal]] {
[info]       def nullValue: Array[BigDecimal] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = d0(in, default);
[info]       def encodeValue(x: Array[BigDecimal], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigDecimal] = new Array[scala.math.BigDecimal](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigDecimal](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigDecimal(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigDecimal], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigDecimalArrayCodec: JsonValueCodec[Array[BigDecimal]] = make[Array[BigDecimal]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:85: Generated JSON codec for type 'Array[BigInt]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigInt]] {
[info]       def nullValue: Array[BigInt] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigInt]): Array[BigInt] = d0(in, default);
[info]       def encodeValue(x: Array[BigInt], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigIntArrayCodec: JsonValueCodec[Array[BigInt]] = make[Array[BigInt]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:122: Generated JSON codec for type 'scala.collection.mutable.ArrayBuffer[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.ArrayBuffer[Boolean]] {
[info]       def nullValue: scala.collection.mutable.ArrayBuffer[Boolean] = ArrayBuffer.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               ArrayBuffer.empty[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayBufferCodec: JsonValueCodec[mutable.ArrayBuffer[Boolean]] = make[mutable.ArrayBuffer[Boolean]](CodecMakerConfig())
[info]                                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:88: Generated JSON codec for type 'Array[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Boolean]] {
[info]       def nullValue: Array[Boolean] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Boolean]): Array[Boolean] = d0(in, default);
[info]       def encodeValue(x: Array[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Boolean] = new Array[Boolean](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Boolean]): Array[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Boolean](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBoolean());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayCodec: JsonValueCodec[Array[Boolean]] = make[Array[Boolean]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:85: Generated JSON codec for type 'List[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[List[Boolean]] {
[info]       def nullValue: List[Boolean] = List.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: List[Boolean]): List[Boolean] = d0(in, default);
[info]       def encodeValue(x: List[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: List[Boolean]): List[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: List[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var l = x;
[info]         while (l.isEmpty.`unary_!`) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(l.head);
[info]             l = l.tail
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanListCodec: JsonValueCodec[List[Boolean]] = make[List[Boolean]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:91: Generated JSON codec for type 'scala.collection.immutable.Vector[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Vector[Boolean]] {
[info]       def nullValue: scala.collection.immutable.Vector[Boolean] = Vector.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanVectorCodec: JsonValueCodec[Vector[Boolean]] = make[Vector[Boolean]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:79: Generated JSON codec for type 'Array[Byte]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Byte]] {
[info]       def nullValue: Array[Byte] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Byte]): Array[Byte] = d0(in, default);
[info]       def encodeValue(x: Array[Byte], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Byte] = new Array[Byte](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Byte]): Array[Byte] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Byte](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readByte());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Byte], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val byteArrayCodec: JsonValueCodec[Array[Byte]] = make[Array[Byte]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:28:79: Generated JSON codec for type 'Array[Char]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Char]] {
[info]       def nullValue: Array[Char] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Char]): Array[Char] = d0(in, default);
[info]       def encodeValue(x: Array[Char], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Char] = new Array[Char](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Char]): Array[Char] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Char](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readChar());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Char], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val charArrayCodec: JsonValueCodec[Array[Char]] = make[Array[Char]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:29:85: Generated JSON codec for type 'Array[Double]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Double]] {
[info]       def nullValue: Array[Double] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Double]): Array[Double] = d0(in, default);
[info]       def encodeValue(x: Array[Double], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Double] = new Array[Double](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Double]): Array[Double] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Double](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDouble());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Double], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val doubleArrayCodec: JsonValueCodec[Array[Double]] = make[Array[Double]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:30:91: Generated JSON codec for type 'Array[java.time.Duration]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Duration]] {
[info]       def nullValue: Array[java.time.Duration] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Duration], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Duration] = new Array[java.time.Duration](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Duration](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDuration(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Duration], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val durationArrayCodec: JsonValueCodec[Array[Duration]] = make[Array[Duration]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:31:87: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value): com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val len = in.readStringAsCharBuf();
[info]           SuitEnum.values.iterator.find(((e) => in.isCharBufEqualsTo(len, e.toString))).getOrElse(in.enumValueError(len))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value, out: JsonWriter): Unit = out.writeVal(x.toString);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val enumArrayCodec: JsonValueCodec[Array[SuitEnum]] = make[Array[SuitEnum]](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:32:82: Generated JSON codec for type 'Array[Float]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Float]] {
[info]       def nullValue: Array[Float] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Float]): Array[Float] = d0(in, default);
[info]       def encodeValue(x: Array[Float], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Float] = new Array[Float](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Float]): Array[Float] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Float](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readFloat());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Float], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val floatArrayCodec: JsonValueCodec[Array[Float]] = make[Array[Float]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:33:88: Generated JSON codec for type 'Array[java.time.Instant]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Instant]] {
[info]       def nullValue: Array[java.time.Instant] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Instant], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Instant] = new Array[java.time.Instant](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Instant](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInstant(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Instant], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val instantArrayCodec: JsonValueCodec[Array[Instant]] = make[Array[Instant]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:34:76: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encodeValue(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Int] = new Array[Int](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intArrayCodec: JsonValueCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:35:83: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Suit): com.github.plokhotnyuk.jsoniter_scala.macros.Suit = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val v = in.readString(null);
[info]           try {
[info]             Suit.valueOf(v)
[info]           } catch {
[info]             case ((_): IllegalArgumentException) => in.enumValueError(v)
[info]           }
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Suit, out: JsonWriter): Unit = out.writeVal(x.name);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val javaEnumArrayCodec: JsonValueCodec[Array[Suit]] = make[Array[Suit]](CodecMakerConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:36:79: Generated JSON codec for type 'Array[Long]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Long]] {
[info]       def nullValue: Array[Long] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Long]): Array[Long] = d0(in, default);
[info]       def encodeValue(x: Array[Long], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Long] = new Array[Long](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Long]): Array[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLong());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val longArrayCodec: JsonValueCodec[Array[Long]] = make[Array[Long]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:37:94: Generated JSON codec for type 'Array[java.time.LocalDate]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDate]] {
[info]       def nullValue: Array[java.time.LocalDate] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDate], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDate] = new Array[java.time.LocalDate](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDate](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDate(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDate], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateArrayCodec: JsonValueCodec[Array[LocalDate]] = make[Array[LocalDate]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:38:106: Generated JSON codec for type 'Array[java.time.LocalDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDateTime]] {
[info]       def nullValue: Array[java.time.LocalDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDateTime] = new Array[java.time.LocalDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateTimeArrayCodec: JsonValueCodec[Array[LocalDateTime]] = make[Array[LocalDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:39:94: Generated JSON codec for type 'Array[java.time.LocalTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalTime]] {
[info]       def nullValue: Array[java.time.LocalTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalTime] = new Array[java.time.LocalTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localTimeArrayCodec: JsonValueCodec[Array[LocalTime]] = make[Array[LocalTime]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:40:109: Generated JSON codec for type 'Array[java.time.OffsetDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetDateTime]] {
[info]       def nullValue: Array[java.time.OffsetDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetDateTime] = new Array[java.time.OffsetDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetDateTimeArrayCodec: JsonValueCodec[Array[OffsetDateTime]] = make[Array[OffsetDateTime]](CodecMakerConfig())
[info]                                                                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:41:97: Generated JSON codec for type 'Array[java.time.OffsetTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetTime]] {
[info]       def nullValue: Array[java.time.OffsetTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetTime] = new Array[java.time.OffsetTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetTimeArrayCodec: JsonValueCodec[Array[OffsetTime]] = make[Array[OffsetTime]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:42:85: Generated JSON codec for type 'Array[java.time.Period]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Period]] {
[info]       def nullValue: Array[java.time.Period] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Period], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Period] = new Array[java.time.Period](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Period](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readPeriod(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Period], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val periodArrayCodec: JsonValueCodec[Array[Period]] = make[Array[Period]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:43:82: Generated JSON codec for type 'Array[Short]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Short]] {
[info]       def nullValue: Array[Short] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Short]): Array[Short] = d0(in, default);
[info]       def encodeValue(x: Array[Short], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Short] = new Array[Short](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Short]): Array[Short] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Short](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readShort());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Short], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val shortArrayCodec: JsonValueCodec[Array[Short]] = make[Array[Short]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:44:79: Generated JSON codec for type 'Array[java.util.UUID]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.util.UUID]] {
[info]       def nullValue: Array[java.util.UUID] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = d0(in, default);
[info]       def encodeValue(x: Array[java.util.UUID], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.util.UUID] = new Array[java.util.UUID](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.util.UUID](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readUUID(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.util.UUID], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val uuidArrayCodec: JsonValueCodec[Array[UUID]] = make[Array[UUID]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:45:79: Generated JSON codec for type 'Array[java.time.Year]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Year]] {
[info]       def nullValue: Array[java.time.Year] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Year], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Year] = new Array[java.time.Year](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Year](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYear(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Year], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearArrayCodec: JsonValueCodec[Array[Year]] = make[Array[Year]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:46:94: Generated JSON codec for type 'Array[java.time.YearMonth]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.YearMonth]] {
[info]       def nullValue: Array[java.time.YearMonth] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.YearMonth], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.YearMonth] = new Array[java.time.YearMonth](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.YearMonth](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYearMonth(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.YearMonth], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearMonthArrayCodec: JsonValueCodec[Array[YearMonth]] = make[Array[YearMonth]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:47:106: Generated JSON codec for type 'Array[java.time.ZonedDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZonedDateTime]] {
[info]       def nullValue: Array[java.time.ZonedDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZonedDateTime] = new Array[java.time.ZonedDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZonedDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZonedDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zonedDateTimeArrayCodec: JsonValueCodec[Array[ZonedDateTime]] = make[Array[ZonedDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:48:85: Generated JSON codec for type 'Array[java.time.ZoneId]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneId]] {
[info]       def nullValue: Array[java.time.ZoneId] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneId], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneId] = new Array[java.time.ZoneId](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneId](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneId(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneId], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneIdArrayCodec: JsonValueCodec[Array[ZoneId]] = make[Array[ZoneId]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:49:97: Generated JSON codec for type 'Array[java.time.ZoneOffset]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneOffset]] {
[info]       def nullValue: Array[java.time.ZoneOffset] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneOffset] = new Array[java.time.ZoneOffset](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneOffset](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneOffset(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneOffsetArrayCodec: JsonValueCodec[Array[ZoneOffset]] = make[Array[ZoneOffset]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:50:66: Generated JSON codec for type 'scala.collection.immutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.BitSet] {
[info]       def nullValue: scala.collection.immutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             var mi = 0;
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>(mi))
[info]                   {
[info]                     mi = i;
[info]                     if (i.>=(x.length))
[info]                       x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                     else
[info]                       ()
[info]                   }
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               {
[info]                 if (mi.>(1).&&(mi.+(1).!=(x.length)))
[info]                   x = java.util.Arrays.copyOf(x, mi.+(1))
[info]                 else
[info]                   ();
[info]                 BitSet.fromBitMaskNoCopy(x)
[info]               }
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bitSetCodec: JsonValueCodec[BitSet] = make[BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:51:87: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "l");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val extractFieldsCodec: JsonValueCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:52:94: Generated JSON codec for type 'scala.collection.immutable.IntMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.IntMap[Boolean]] {
[info]       def nullValue: scala.collection.immutable.IntMap[Boolean] = IntMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intMapOfBooleansCodec: JsonValueCodec[IntMap[Boolean]] = make[IntMap[Boolean]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:53:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("geometry");
[info]       private[this] val r1: Array[String] = Array("coordinates");
[info]       private[this] def d2(in: JsonReader, default: scala.collection.immutable.Map[String,String]): scala.collection.immutable.Map[String,String] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[String, String];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: (Double, Double)): (Double, Double) = if (in.isNextToken('['))
[info]         {
[info]           val _1: Double = in.readDouble();
[info]           val _2: Double = if (in.isNextToken(','))
[info]             in.readDouble()
[info]           else
[info]             in.commaError();
[info]           if (in.isNextToken(']'))
[info]             new (Double, Double)(_1, _2)
[info]           else
[info]             in.arrayEndError()
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: IndexedSeq[(Double, Double)]): IndexedSeq[(Double, Double)] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[(Double, Double)];
[info]             do 
[info]               x.+=(d7(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: IndexedSeq[IndexedSeq[(Double, Double)]]): IndexedSeq[IndexedSeq[(Double, Double)]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[(Double, Double)]];
[info]             do 
[info]               x.+=(d6(in, IndexedSeq.empty[(Double, Double)]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d4(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Polygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.LineString): com.github.plokhotnyuk.jsoniter_scala.macros.LineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.LineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]]): IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]             do 
[info]               x.+=(d5(in, IndexedSeq.empty[IndexedSeq[(Double, Double)]]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = IndexedSeq.empty[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d10(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d14(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _geometries: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 203916432 => if (in.isCharBufEqualsTo(l, "geometries"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometries = d14(in, _geometries)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection(geometries = _geometries)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d15(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Point): com.github.plokhotnyuk.jsoniter_scala.macros.Point = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: (Double, Double) = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Point(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry): com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 1267133722 => if (in.isCharBufEqualsTo(l, "Polygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d4(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1806700869 => if (in.isCharBufEqualsTo(l, "LineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d8(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -2116761119 => if (in.isCharBufEqualsTo(l, "MultiPolygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d9(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -627102946 => if (in.isCharBufEqualsTo(l, "MultiLineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d11(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1065891849 => if (in.isCharBufEqualsTo(l, "MultiPoint"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d12(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1950410960 => if (in.isCharBufEqualsTo(l, "GeometryCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d13(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 77292912 => if (in.isCharBufEqualsTo(l, "Point"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d15(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Feature): com.github.plokhotnyuk.jsoniter_scala.macros.Feature = if (in.isNextToken('{'))
[info]         {
[info]           var _properties: scala.collection.immutable.Map[String,String] = Map.empty[String, String];
[info]           var _geometry: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -926053069 => if (in.isCharBufEqualsTo(l, "properties"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _properties = d2(in, _properties)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1846020210 => if (in.isCharBufEqualsTo(l, "geometry"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometry = d3(in, _geometry)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(2).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Feature(properties = _properties, geometry = _geometry)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d17(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]             do 
[info]               x.+=(JsoniterCodecs.this.geoJSONCodec.decodeValue(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d16(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _features: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -290659267 => if (in.isCharBufEqualsTo(l, "features"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _features = d17(in, _features)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection(features = _features)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 685445846 => if (in.isCharBufEqualsTo(l, "Feature"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1377727980 => if (in.isCharBufEqualsTo(l, "FeatureCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d16(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e2(x: scala.collection.immutable.Map[String,String], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: (Double, Double), out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._1)
[info]         };
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._2)
[info]         };
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: IndexedSeq[(Double, Double)], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e7(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: IndexedSeq[IndexedSeq[(Double, Double)]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e6(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e4(x: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Polygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.LineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("LineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPolygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e10(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiLineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPoint")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e14(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("GeometryCollection")
[info]         };
[info]         {
[info]           val v = x.geometries;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geometries");
[info]               e14(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e15(x: com.github.plokhotnyuk.jsoniter_scala.macros.Point, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Point")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("coordinates");
[info]           e7(x.coordinates, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon)) => e4(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.LineString)) => e8(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon)) => e9(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString)) => e11(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint)) => e12(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection)) => e13(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Point)) => e15(x, out)
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Feature, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Feature")
[info]         };
[info]         {
[info]           val v = x.properties;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("properties");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geometry");
[info]           e3(x.geometry, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e17(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             JsoniterCodecs.this.geoJSONCodec.encodeValue(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e16(x: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("FeatureCollection")
[info]         };
[info]         {
[info]           val v = x.features;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("features");
[info]               e17(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Feature)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection)) => e16(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val geoJSONCodec: JsonValueCodec[GeoJSON] = make[GeoJSON](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:54:89: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("status");
[info]       private[this] val r1: Array[String] = Array("distance", "duration", "status");
[info]       private[this] val r2: Array[String] = Array("text", "value");
[info]       private[this] def d1(in: JsonReader, default: IndexedSeq[String]): IndexedSeq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _value = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _distance = d6(in, _distance)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _duration = d6(in, _duration)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _elements = d4(in, _elements)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _origin_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _rows: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _destination_addresses = d1(in, _destination_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _origin_addresses = d1(in, _origin_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _rows = d2(in, _rows)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(8).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e1(x: IndexedSeq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("value");
[info]           out.writeVal(x.value)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("distance");
[info]           e6(x.distance, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("duration");
[info]           e6(x.duration, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.elements;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("elements");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.destination_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("destination_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.origin_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("origin_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.rows;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("rows");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val googleMapsAPICodec: JsonValueCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:55:101: Generated JSON codec for type 'scala.collection.immutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.immutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mapOfIntsToBooleansCodec: JsonValueCodec[Map[Int, Boolean]] = make[Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:56:95: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "i");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val missingReqFieldCodec: JsonValueCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:57:89: Generated JSON codec for type 'scala.collection.mutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.BitSet] {
[info]       def nullValue: scala.collection.mutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>=(x.length))
[info]                   x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               BitSet.fromBitMaskNoCopy(x)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableBitSetCodec: JsonValueCodec[mutable.BitSet] = make[mutable.BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:58:120: Generated JSON codec for type 'scala.collection.mutable.LongMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.LongMap[Boolean]] {
[info]       def nullValue: scala.collection.mutable.LongMap[Boolean] = LongMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[Boolean];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableLongMapOfBooleansCodec: JsonValueCodec[mutable.LongMap[Boolean]] = make[mutable.LongMap[Boolean]](CodecMakerConfig())
[info]                                                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:59:124: Generated JSON codec for type 'scala.collection.mutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.mutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, Boolean];
[info]             do 
[info]               x.update(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableMapOfIntsToBooleansCodec: JsonValueCodec[mutable.Map[Int, Boolean]] = make[mutable.Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:60:96: Generated JSON codec for type 'scala.collection.mutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Set[Int]] {
[info]       def nullValue: scala.collection.mutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Set.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableSetOfIntsCodec: JsonValueCodec[mutable.Set[Int]] = make[mutable.Set[Int]](CodecMakerConfig())
[info]                                                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:61:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = ((0): Byte);
[info]           var _s: Short = ((0): Short);
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = '\u0000';
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var p0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(255).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val primitivesCodec: JsonValueCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:62:73: Generated JSON codec for type 'scala.collection.immutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Set[Int]] {
[info]       def nullValue: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val setOfIntsCodec: JsonValueCodec[Set[Int]] = make[Set[Int]](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:63:78: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decodeValue(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encodeValue(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private[this] val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private[this] val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private[this] val r4: Array[String] = Array("url", "description");
[info]       private[this] val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 31;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(15).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _expanded_url = in.readString(_expanded_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _display_url = in.readString(_display_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _hashtags = d3(in, _hashtags)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _symbols = d3(in, _symbols)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user_mentions = d4(in, _user_mentions)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = d12(in, _url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = d12(in, _description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r4(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var p0 = -1;
[info]           var p1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _location = in.readString(_location)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = in.readString(_description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d11(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _protected = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _followers_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _friends_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _listed_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favourites_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _utc_offset = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _time_zone = in.readString(_time_zone)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _verified = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _statuses_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translator = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translation_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_color = in.readString(_profile_background_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         if (p0.&(33554432).!=(0))
[info]                           p0.^=(33554432)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         if (p0.&(67108864).!=(0))
[info]                           p0.^=(67108864)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_tile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         if (p0.&(134217728).!=(0))
[info]                           p0.^=(134217728)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url = in.readString(_profile_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         if (p0.&(268435456).!=(0))
[info]                           p0.^=(268435456)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         if (p0.&(536870912).!=(0))
[info]                           p0.^=(536870912)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_banner_url = in.readString(_profile_banner_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         if (p0.&(1073741824).!=(0))
[info]                           p0.^=(1073741824)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_link_color = in.readString(_profile_link_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         if (p0.&(-2147483648).!=(0))
[info]                           p0.^=(-2147483648)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         if (p1.&(1).!=(0))
[info]                           p1.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         if (p1.&(2).!=(0))
[info]                           p1.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_text_color = in.readString(_profile_text_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         if (p1.&(4).!=(0))
[info]                           p1.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_use_background_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         if (p1.&(8).!=(0))
[info]                           p1.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _has_extended_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         if (p1.&(16).!=(0))
[info]                           p1.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         if (p1.&(32).!=(0))
[info]                           p1.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         if (p1.&(64).!=(0))
[info]                           p1.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _following = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         if (p1.&(128).!=(0))
[info]                           p1.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _follow_request_sent = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         if (p1.&(256).!=(0))
[info]                           p1.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _notifications = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         if (p1.&(512).!=(0))
[info]                           p1.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _translator_type = in.readString(_translator_type)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(-1).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           if (p1.&(1023).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p1).+(32)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 16777215;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(16650367).!=(0))
[info]             in.requiredFieldError(r5(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 33554431;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted_status = d13(in, _retweeted_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(33427583).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("expanded_url");
[info]           out.writeVal(x.expanded_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("display_url");
[info]           out.writeVal(x.display_url)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.hashtags;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("hashtags");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.symbols;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("symbols");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.user_mentions;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("user_mentions");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           e11(x.url, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           e11(x.description, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("location");
[info]           out.writeVal(x.location)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           out.writeVal(x.description)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e10(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("protected");
[info]           out.writeVal(x.`protected`)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("followers_count");
[info]           out.writeVal(x.followers_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("friends_count");
[info]           out.writeVal(x.friends_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("listed_count");
[info]           out.writeVal(x.listed_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favourites_count");
[info]           out.writeVal(x.favourites_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("utc_offset");
[info]           out.writeVal(x.utc_offset)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("time_zone");
[info]           out.writeVal(x.time_zone)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geo_enabled");
[info]           out.writeVal(x.geo_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("verified");
[info]           out.writeVal(x.verified)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("statuses_count");
[info]           out.writeVal(x.statuses_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("contributors_enabled");
[info]           out.writeVal(x.contributors_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translator");
[info]           out.writeVal(x.is_translator)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]           out.writeVal(x.is_translation_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_color");
[info]           out.writeVal(x.profile_background_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]           out.writeVal(x.profile_background_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]           out.writeVal(x.profile_background_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_tile");
[info]           out.writeVal(x.profile_background_tile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url");
[info]           out.writeVal(x.profile_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]           out.writeVal(x.profile_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_banner_url");
[info]           out.writeVal(x.profile_banner_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_link_color");
[info]           out.writeVal(x.profile_link_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]           out.writeVal(x.profile_sidebar_border_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]           out.writeVal(x.profile_sidebar_fill_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_text_color");
[info]           out.writeVal(x.profile_text_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]           out.writeVal(x.profile_use_background_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("has_extended_profile");
[info]           out.writeVal(x.has_extended_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile");
[info]           out.writeVal(x.default_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile_image");
[info]           out.writeVal(x.default_profile_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("following");
[info]           out.writeVal(x.following)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("follow_request_sent");
[info]           out.writeVal(x.follow_request_sent)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("notifications");
[info]           out.writeVal(x.notifications)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("translator_type");
[info]           out.writeVal(x.translator_type)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted_status");
[info]           e12(x.retweeted_status, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val twitterAPICodec: JsonValueCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:35:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:42:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:44:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:64:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:65:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:66:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:70:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:71:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:72:18: local val v3 in value twitterAPIFormat is never used
[warn]     implicit val v3: OFormat[UserEntities] = Json.format[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:73:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:74:18: local val v5 in value twitterAPIFormat is never used
[warn]     implicit val v5: OFormat[Entities] = Json.format[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:75:18: local val v6 in value twitterAPIFormat is never used
[warn]     implicit val v6: Format[User] = Jsonx.formatCaseClass[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:76:18: local val v7 in value twitterAPIFormat is never used
[warn]     implicit val v7: Format[RetweetedStatus] = Jsonx.formatCaseClass[RetweetedStatus]
[warn]                  ^
[warn] 15 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.1-SNAPSHOT.jar ...
[info] Compiling 49 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 421 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 617 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -p size=128 -jvm /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java -prof gc -rf json -rff graalvm1.json .*Benchmark.*
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce
[info] # Run progress: 0.00% complete, ETA 00:56:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43125.812 ops/s
[info] # Warmup Iteration   2: 491536.500 ops/s
[info] # Warmup Iteration   3: 964578.804 ops/s
[info] Iteration   1: 1008401.655 ops/s
[info]                  ·gc.alloc.rate:                   2109.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              3293.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2269.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3542.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.632 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.230 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 1064677.615 ops/s
[info]                  ·gc.alloc.rate:                   2219.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              3278.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1938.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2863.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.417 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.615 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1055774.506 ops/s
[info]                  ·gc.alloc.rate:               2217.947 MB/sec
[info]                  ·gc.alloc.rate.norm:          3306.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2280.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3399.638 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 1046742.322 ops/s
[info]                  ·gc.alloc.rate:                   2207.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              3318.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2977.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1034806.928 ops/s
[info]                  ·gc.alloc.rate:                   2175.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              3308.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2337.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3553.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce":
[info]   1042080.605 ±(99.9%) 84078.557 ops/s [Average]
[info]   (min, avg, max) = (1008401.655, 1042080.605, 1064677.615), stdev = 21834.934
[info]   CI (99.9%): [958002.047, 1126159.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate":
[info]   2186.181 ±(99.9%) 177.240 MB/sec [Average]
[info]   (min, avg, max) = (2109.984, 2186.181, 2219.159), stdev = 46.029
[info]   CI (99.9%): [2008.941, 2363.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3300.935 ±(99.9%) 58.823 B/op [Average]
[info]   (min, avg, max) = (3278.756, 3300.935, 3318.202), stdev = 15.276
[info]   CI (99.9%): [3242.112, 3359.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2161.408 ±(99.9%) 718.082 MB/sec [Average]
[info]   (min, avg, max) = (1938.242, 2161.408, 2337.306), stdev = 186.484
[info]   CI (99.9%): [1443.327, 2879.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3267.388 ±(99.9%) 1250.463 B/op [Average]
[info]   (min, avg, max) = (2863.708, 3267.388, 3553.648), stdev = 324.741
[info]   CI (99.9%): [2016.925, 4517.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.022 ±(99.9%) 7.799 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.022, 4.632), stdev = 2.025
[info]   CI (99.9%): [≈ 0, 8.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.588 ±(99.9%) 12.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.588, 7.230), stdev = 3.164
[info]   CI (99.9%): [≈ 0, 13.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 12.000, 20.000), stdev = 4.848
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala
[info] # Run progress: 0.24% complete, ETA 01:28:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45871.804 ops/s
[info] # Warmup Iteration   2: 1114342.907 ops/s
[info] # Warmup Iteration   3: 1817316.173 ops/s
[info] Iteration   1: 1999075.070 ops/s
[info]                  ·gc.alloc.rate:                   1286.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              1012.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     763.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2003113.650 ops/s
[info]                  ·gc.alloc.rate:                   1300.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              1022.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1021.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1908851.138 ops/s
[info]                  ·gc.alloc.rate:                   1233.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1078.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.624 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.339 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1944685.408 ops/s
[info]                  ·gc.alloc.rate:                   1265.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              1023.934 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1062.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2024780.723 ops/s
[info]                  ·gc.alloc.rate:               1315.698 MB/sec
[info]                  ·gc.alloc.rate.norm:          1022.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1025.739 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala":
[info]   1976101.198 ±(99.9%) 184033.891 ops/s [Average]
[info]   (min, avg, max) = (1908851.138, 1976101.198, 2024780.723), stdev = 47793.017
[info]   CI (99.9%): [1792067.307, 2160135.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1280.327 ±(99.9%) 124.353 MB/sec [Average]
[info]   (min, avg, max) = (1233.101, 1280.327, 1315.698), stdev = 32.294
[info]   CI (99.9%): [1155.974, 1404.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1019.560 ±(99.9%) 18.186 B/op [Average]
[info]   (min, avg, max) = (1012.735, 1019.560, 1023.934), stdev = 4.723
[info]   CI (99.9%): [1001.374, 1037.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1242.056 ±(99.9%) 586.242 MB/sec [Average]
[info]   (min, avg, max) = (970.006, 1242.056, 1319.837), stdev = 152.245
[info]   CI (99.9%): [655.815, 1828.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   990.203 ±(99.9%) 496.871 B/op [Average]
[info]   (min, avg, max) = (763.376, 990.203, 1078.111), stdev = 129.036
[info]   CI (99.9%): [493.332, 1487.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.348 ±(99.9%) 2.749 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.348, 1.624), stdev = 0.714
[info]   CI (99.9%): [≈ 0, 3.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.286 ±(99.9%) 2.268 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.286, 1.339), stdev = 0.589
[info]   CI (99.9%): [≈ 0, 2.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.140
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala
[info] # Run progress: 0.47% complete, ETA 01:28:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 925831.491 ops/s
[info] # Warmup Iteration   2: 4697744.920 ops/s
[info] # Warmup Iteration   3: 5295132.286 ops/s
[info] Iteration   1: 5274577.646 ops/s
[info]                  ·gc.alloc.rate:                   354.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              105.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 5253039.244 ops/s
[info]                  ·gc.alloc.rate:               366.642 MB/sec
[info]                  ·gc.alloc.rate.norm:          109.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 196.794 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 5285064.556 ops/s
[info]                  ·gc.alloc.rate:                   359.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              107.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5277291.240 ops/s
[info]                  ·gc.alloc.rate:               360.647 MB/sec
[info]                  ·gc.alloc.rate.norm:          107.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 98.141 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 5274475.858 ops/s
[info]                  ·gc.alloc.rate:               357.733 MB/sec
[info]                  ·gc.alloc.rate.norm:          106.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 98.290 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala":
[info]   5272889.709 ±(99.9%) 45845.565 ops/s [Average]
[info]   (min, avg, max) = (5253039.244, 5272889.709, 5285064.556), stdev = 11905.948
[info]   CI (99.9%): [5227044.144, 5318735.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   359.755 ±(99.9%) 17.658 MB/sec [Average]
[info]   (min, avg, max) = (354.117, 359.755, 366.642), stdev = 4.586
[info]   CI (99.9%): [342.096, 377.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   107.378 ±(99.9%) 5.948 B/op [Average]
[info]   (min, avg, max) = (105.667, 107.378, 109.845), stdev = 1.545
[info]   CI (99.9%): [101.430, 113.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   380.055 ±(99.9%) 608.296 MB/sec [Average]
[info]   (min, avg, max) = (255.792, 380.055, 656.863), stdev = 157.972
[info]   CI (99.9%): [≈ 0, 988.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   113.510 ±(99.9%) 182.929 B/op [Average]
[info]   (min, avg, max) = (76.327, 113.510, 196.794), stdev = 47.506
[info]   CI (99.9%): [≈ 0, 296.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.060 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.034), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson
[info] # Run progress: 0.71% complete, ETA 01:28:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 887.476 ops/s
[info] # Warmup Iteration   2: 165424.183 ops/s
[info] # Warmup Iteration   3: 440278.547 ops/s
[info] Iteration   1: 466808.743 ops/s
[info]                  ·gc.alloc.rate:                   2511.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              8467.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2619.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8832.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.946 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.932 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 472518.563 ops/s
[info]                  ·gc.alloc.rate:                   2514.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              8374.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2295.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7645.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.485 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 461616.245 ops/s
[info]                  ·gc.alloc.rate:                   2497.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              8512.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2316.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7898.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 465829.625 ops/s
[info]                  ·gc.alloc.rate:                   2540.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              8584.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2674.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9035.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 460276.259 ops/s
[info]                  ·gc.alloc.rate:                   2491.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              8517.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2358.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8063.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson":
[info]   465409.887 ±(99.9%) 18608.224 ops/s [Average]
[info]   (min, avg, max) = (460276.259, 465409.887, 472518.563), stdev = 4832.497
[info]   CI (99.9%): [446801.663, 484018.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2510.972 ±(99.9%) 74.214 MB/sec [Average]
[info]   (min, avg, max) = (2491.073, 2510.972, 2540.769), stdev = 19.273
[info]   CI (99.9%): [2436.758, 2585.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   8491.449 ±(99.9%) 297.757 B/op [Average]
[info]   (min, avg, max) = (8374.985, 8491.449, 8584.235), stdev = 77.326
[info]   CI (99.9%): [8193.692, 8789.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2452.902 ±(99.9%) 691.527 MB/sec [Average]
[info]   (min, avg, max) = (2295.550, 2452.902, 2674.234), stdev = 179.587
[info]   CI (99.9%): [1761.375, 3144.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   8295.024 ±(99.9%) 2333.575 B/op [Average]
[info]   (min, avg, max) = (7645.790, 8295.024, 9035.160), stdev = 606.022
[info]   CI (99.9%): [5961.449, 10628.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.643 ±(99.9%) 4.959 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.643, 2.946), stdev = 1.288
[info]   CI (99.9%): [≈ 0, 5.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.168 ±(99.9%) 16.721 B/op [Average]
[info]   (min, avg, max) = (0.141, 2.168, 9.932), stdev = 4.342
[info]   CI (99.9%): [≈ 0, 18.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.200, 17.000), stdev = 2.775
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce
[info] # Run progress: 0.94% complete, ETA 01:28:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31846.220 ops/s
[info] # Warmup Iteration   2: 646742.672 ops/s
[info] # Warmup Iteration   3: 935187.295 ops/s
[info] Iteration   1: 1054506.871 ops/s
[info]                  ·gc.alloc.rate:                   2788.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              4161.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2800.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4179.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.857 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.250 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         39.000 ms
[info] Iteration   2: 1075685.245 ops/s
[info]                  ·gc.alloc.rate:                   2837.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              4150.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2830.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4139.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.922 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   3: 1081051.374 ops/s
[info]                  ·gc.alloc.rate:                   2881.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              4195.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2547.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3708.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1063989.713 ops/s
[info]                  ·gc.alloc.rate:                   2834.854 MB/sec
[info]                  ·gc.alloc.rate.norm:              4193.403 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2936.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4344.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 1082044.233 ops/s
[info]                  ·gc.alloc.rate:                   2875.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              4183.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2660.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3869.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce":
[info]   1071455.487 ±(99.9%) 45767.896 ops/s [Average]
[info]   (min, avg, max) = (1054506.871, 1071455.487, 1082044.233), stdev = 11885.777
[info]   CI (99.9%): [1025687.591, 1117223.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate":
[info]   2843.578 ±(99.9%) 145.087 MB/sec [Average]
[info]   (min, avg, max) = (2788.189, 2843.578, 2881.718), stdev = 37.679
[info]   CI (99.9%): [2698.491, 2988.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   4176.683 ±(99.9%) 77.044 B/op [Average]
[info]   (min, avg, max) = (4150.238, 4176.683, 4195.350), stdev = 20.008
[info]   CI (99.9%): [4099.639, 4253.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2755.077 ±(99.9%) 586.449 MB/sec [Average]
[info]   (min, avg, max) = (2547.378, 2755.077, 2936.729), stdev = 152.299
[info]   CI (99.9%): [2168.628, 3341.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4048.452 ±(99.9%) 982.462 B/op [Average]
[info]   (min, avg, max) = (3708.601, 4048.452, 4344.099), stdev = 255.142
[info]   CI (99.9%): [3065.989, 5030.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.819 ±(99.9%) 9.325 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.819, 4.857), stdev = 2.422
[info]   CI (99.9%): [≈ 0, 11.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.689 ±(99.9%) 13.816 B/op [Average]
[info]   (min, avg, max) = (0.091, 2.689, 7.250), stdev = 3.588
[info]   CI (99.9%): [≈ 0, 16.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.count":
[info]   43.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.time":
[info]   103.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 20.600, 39.000), stdev = 10.877
[info]   CI (99.9%): [103.000, 103.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala
[info] # Run progress: 1.18% complete, ETA 01:28:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 152925.002 ops/s
[info] # Warmup Iteration   2: 2405172.348 ops/s
[info] # Warmup Iteration   3: 2837066.197 ops/s
[info] Iteration   1: 3077269.791 ops/s
[info]                  ·gc.alloc.rate:                   1229.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              628.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     663.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 3153973.316 ops/s
[info]                  ·gc.alloc.rate:                   1250.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              623.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     488.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3047607.698 ops/s
[info]                  ·gc.alloc.rate:                   1208.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              623.827 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     676.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.892 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 3152298.884 ops/s
[info]                  ·gc.alloc.rate:                   1251.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.684 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     655.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3140895.977 ops/s
[info]                  ·gc.alloc.rate:               1239.610 MB/sec
[info]                  ·gc.alloc.rate.norm:          621.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:      988.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 495.520 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala":
[info]   3114409.133 ±(99.9%) 188093.936 ops/s [Average]
[info]   (min, avg, max) = (3047607.698, 3114409.133, 3153973.316), stdev = 48847.398
[info]   CI (99.9%): [2926315.198, 3302503.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1235.600 ±(99.9%) 68.743 MB/sec [Average]
[info]   (min, avg, max) = (1208.000, 1235.600, 1251.201), stdev = 17.852
[info]   CI (99.9%): [1166.858, 1304.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   624.410 ±(99.9%) 10.369 B/op [Average]
[info]   (min, avg, max) = (621.148, 624.410, 628.601), stdev = 2.693
[info]   CI (99.9%): [614.040, 634.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1177.726 ±(99.9%) 682.890 MB/sec [Average]
[info]   (min, avg, max) = (978.299, 1177.726, 1313.024), stdev = 177.344
[info]   CI (99.9%): [494.836, 1860.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   595.959 ±(99.9%) 367.289 B/op [Average]
[info]   (min, avg, max) = (488.153, 595.959, 676.697), stdev = 95.384
[info]   CI (99.9%): [228.670, 963.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.379 ±(99.9%) 2.906 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.379, 1.728), stdev = 0.755
[info]   CI (99.9%): [≈ 0, 3.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.195 ±(99.9%) 1.502 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.195, 0.892), stdev = 0.390
[info]   CI (99.9%): [≈ 0, 1.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 9.000), stdev = 1.517
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala
[info] # Run progress: 1.41% complete, ETA 01:27:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2672717.934 ops/s
[info] # Warmup Iteration   2: 15925430.702 ops/s
[info] # Warmup Iteration   3: 20997396.257 ops/s
[info] Iteration   1: 20719279.394 ops/s
[info]                  ·gc.alloc.rate:                   1086.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 20783609.337 ops/s
[info]                  ·gc.alloc.rate:                   1098.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              83.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 19893562.086 ops/s
[info]                  ·gc.alloc.rate:                   1038.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.155 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.329 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 20105303.061 ops/s
[info]                  ·gc.alloc.rate:                   1052.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 21162137.033 ops/s
[info]                  ·gc.alloc.rate:               1101.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          81.917 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 72.705 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala":
[info]   20532778.182 ±(99.9%) 2005593.882 ops/s [Average]
[info]   (min, avg, max) = (19893562.086, 20532778.182, 21162137.033), stdev = 520846.362
[info]   CI (99.9%): [18527184.300, 22538372.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1075.401 ±(99.9%) 109.341 MB/sec [Average]
[info]   (min, avg, max) = (1038.547, 1075.401, 1101.872), stdev = 28.395
[info]   CI (99.9%): [966.060, 1184.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   82.411 ±(99.9%) 1.753 B/op [Average]
[info]   (min, avg, max) = (81.917, 82.411, 83.130), stdev = 0.455
[info]   CI (99.9%): [80.657, 84.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1048.067 ±(99.9%) 571.547 MB/sec [Average]
[info]   (min, avg, max) = (977.969, 1048.067, 1313.538), stdev = 148.429
[info]   CI (99.9%): [476.520, 1619.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   80.296 ±(99.9%) 41.896 B/op [Average]
[info]   (min, avg, max) = (72.705, 80.296, 99.430), stdev = 10.880
[info]   CI (99.9%): [38.401, 122.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.855 ±(99.9%) 7.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.855, 4.155), stdev = 1.845
[info]   CI (99.9%): [≈ 0, 7.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.562 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.068, 0.329), stdev = 0.146
[info]   CI (99.9%): [≈ 0, 0.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.800, 16.000), stdev = 5.070
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 1.65% complete, ETA 01:27:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3393205.037 ops/s
[info] # Warmup Iteration   2: 18540959.915 ops/s
[info] # Warmup Iteration   3: 20153673.229 ops/s
[info] Iteration   1: 20142443.114 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 20205295.438 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 20203742.959 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 19802454.902 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 20206936.157 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc":
[info]   20112174.514 ±(99.9%) 674902.884 ops/s [Average]
[info]   (min, avg, max) = (19802454.902, 20112174.514, 20206936.157), stdev = 175270.136
[info]   CI (99.9%): [19437271.630, 20787077.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson
[info] # Run progress: 1.88% complete, ETA 01:27:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2109.199 ops/s
[info] # Warmup Iteration   2: 336476.622 ops/s
[info] # Warmup Iteration   3: 949678.555 ops/s
[info] Iteration   1: 1060006.002 ops/s
[info]                  ·gc.alloc.rate:                   2513.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              3731.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2296.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3409.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.957 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.905 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 1064403.388 ops/s
[info]                  ·gc.alloc.rate:                   2484.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              3673.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2633.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3893.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.400 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1086527.904 ops/s
[info]                  ·gc.alloc.rate:                   2539.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              3679.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2325.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3368.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1052640.618 ops/s
[info]                  ·gc.alloc.rate:                   2491.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              3723.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2347.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3507.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1063289.579 ops/s
[info]                  ·gc.alloc.rate:                   2522.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              3732.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2360.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3493.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson":
[info]   1065373.498 ±(99.9%) 48848.912 ops/s [Average]
[info]   (min, avg, max) = (1052640.618, 1065373.498, 1086527.904), stdev = 12685.907
[info]   CI (99.9%): [1016524.586, 1114222.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2510.080 ±(99.9%) 87.601 MB/sec [Average]
[info]   (min, avg, max) = (2484.116, 2510.080, 2539.898), stdev = 22.750
[info]   CI (99.9%): [2422.478, 2597.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3707.839 ±(99.9%) 112.918 B/op [Average]
[info]   (min, avg, max) = (3673.047, 3707.839, 3732.918), stdev = 29.324
[info]   CI (99.9%): [3594.921, 3820.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2392.639 ±(99.9%) 526.473 MB/sec [Average]
[info]   (min, avg, max) = (2296.372, 2392.639, 2633.325), stdev = 136.723
[info]   CI (99.9%): [1866.166, 2919.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3534.712 ±(99.9%) 804.326 B/op [Average]
[info]   (min, avg, max) = (3368.655, 3534.712, 3893.669), stdev = 208.881
[info]   CI (99.9%): [2730.387, 4339.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.471 ±(99.9%) 3.222 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.471, 1.957), stdev = 0.837
[info]   CI (99.9%): [≈ 0, 3.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.698 ±(99.9%) 4.785 B/op [Average]
[info]   (min, avg, max) = (0.060, 0.698, 2.905), stdev = 1.243
[info]   CI (99.9%): [≈ 0, 5.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.800, 15.000), stdev = 1.924
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce
[info] # Run progress: 2.12% complete, ETA 01:27:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 102597.567 ops/s
[info] # Warmup Iteration   2: 1785351.562 ops/s
[info] # Warmup Iteration   3: 2978613.777 ops/s
[info] Iteration   1: 3749171.608 ops/s
[info]                  ·gc.alloc.rate:                   3406.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              1429.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3563.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1495.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.209 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.346 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 3839332.179 ops/s
[info]                  ·gc.alloc.rate:                   3499.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              1434.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3268.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1339.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 3765783.142 ops/s
[info]                  ·gc.alloc.rate:                   3469.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              1450.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3328.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1391.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 3827616.482 ops/s
[info]                  ·gc.alloc.rate:                   3526.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              1449.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3367.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1384.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 3806213.021 ops/s
[info]                  ·gc.alloc.rate:                   3501.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              1447.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1400.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce":
[info]   3797623.286 ±(99.9%) 150056.177 ops/s [Average]
[info]   (min, avg, max) = (3749171.608, 3797623.286, 3839332.179), stdev = 38969.113
[info]   CI (99.9%): [3647567.110, 3947679.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate":
[info]   3480.666 ±(99.9%) 178.301 MB/sec [Average]
[info]   (min, avg, max) = (3406.072, 3480.666, 3526.415), stdev = 46.304
[info]   CI (99.9%): [3302.365, 3658.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1442.271 ±(99.9%) 37.519 B/op [Average]
[info]   (min, avg, max) = (1429.113, 1442.271, 1450.064), stdev = 9.744
[info]   CI (99.9%): [1404.752, 1479.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3383.212 ±(99.9%) 426.998 MB/sec [Average]
[info]   (min, avg, max) = (3268.085, 3383.212, 3563.921), stdev = 110.890
[info]   CI (99.9%): [2956.213, 3810.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1402.283 ±(99.9%) 219.754 B/op [Average]
[info]   (min, avg, max) = (1339.661, 1402.283, 1495.343), stdev = 57.069
[info]   CI (99.9%): [1182.529, 1622.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.679 ±(99.9%) 5.446 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.679, 3.209), stdev = 1.414
[info]   CI (99.9%): [≈ 0, 6.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.285 ±(99.9%) 2.285 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.285, 1.346), stdev = 0.594
[info]   CI (99.9%): [≈ 0, 2.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.count":
[info]   51.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.600, 20.000), stdev = 3.050
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava
[info] # Run progress: 2.35% complete, ETA 01:27:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.574 ops/s
[info] # Warmup Iteration   2: 9261556.333 ops/s
[info] # Warmup Iteration   3: 10523858.889 ops/s
[info] Iteration   1: 11182736.011 ops/s
[info]                  ·gc.alloc.rate:                   1404.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              197.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     183.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 11072397.263 ops/s
[info]                  ·gc.alloc.rate:                   1388.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              197.418 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     185.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.856 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.690 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 11306595.897 ops/s
[info]                  ·gc.alloc.rate:                   1412.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              196.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 11324567.842 ops/s
[info]                  ·gc.alloc.rate:                   1426.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              198.229 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1618.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     224.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 11360951.407 ops/s
[info]                  ·gc.alloc.rate:                   1438.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              199.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava":
[info]   11249449.684 ±(99.9%) 460225.797 ops/s [Average]
[info]   (min, avg, max) = (11072397.263, 11249449.684, 11360951.407), stdev = 119519.178
[info]   CI (99.9%): [10789223.887, 11709675.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1414.226 ±(99.9%) 73.602 MB/sec [Average]
[info]   (min, avg, max) = (1388.967, 1414.226, 1438.206), stdev = 19.114
[info]   CI (99.9%): [1340.625, 1487.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   197.818 ±(99.9%) 3.747 B/op [Average]
[info]   (min, avg, max) = (196.541, 197.818, 199.168), stdev = 0.973
[info]   CI (99.9%): [194.071, 201.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1364.863 ±(99.9%) 547.182 MB/sec [Average]
[info]   (min, avg, max) = (1293.888, 1364.863, 1618.940), stdev = 142.102
[info]   CI (99.9%): [817.681, 1912.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   190.875 ±(99.9%) 73.749 B/op [Average]
[info]   (min, avg, max) = (180.070, 190.875, 224.924), stdev = 19.152
[info]   CI (99.9%): [117.126, 264.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.008 ±(99.9%) 8.285 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.008, 4.856), stdev = 2.152
[info]   CI (99.9%): [≈ 0, 9.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.143 ±(99.9%) 1.178 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.143, 0.690), stdev = 0.306
[info]   CI (99.9%): [≈ 0, 1.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 15.000), stdev = 3.834
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala
[info] # Run progress: 2.59% complete, ETA 01:27:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94610.869 ops/s
[info] # Warmup Iteration   2: 2675840.708 ops/s
[info] # Warmup Iteration   3: 3357273.455 ops/s
[info] Iteration   1: 3510456.987 ops/s
[info]                  ·gc.alloc.rate:                   2143.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              961.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2290.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1026.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.896 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.850 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 3687303.576 ops/s
[info]                  ·gc.alloc.rate:                   2226.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              950.341 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     842.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 3647737.783 ops/s
[info]                  ·gc.alloc.rate:                   2242.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              967.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2321.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1001.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 3666270.504 ops/s
[info]                  ·gc.alloc.rate:                   2241.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              962.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     861.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3526521.845 ops/s
[info]                  ·gc.alloc.rate:                   2226.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              993.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2355.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1051.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala":
[info]   3607658.139 ±(99.9%) 318792.535 ops/s [Average]
[info]   (min, avg, max) = (3510456.987, 3607658.139, 3687303.576), stdev = 82789.409
[info]   CI (99.9%): [3288865.604, 3926450.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2216.334 ±(99.9%) 158.630 MB/sec [Average]
[info]   (min, avg, max) = (2143.954, 2216.334, 2242.872), stdev = 41.196
[info]   CI (99.9%): [2057.704, 2374.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   967.047 ±(99.9%) 62.476 B/op [Average]
[info]   (min, avg, max) = (950.341, 967.047, 993.810), stdev = 16.225
[info]   CI (99.9%): [904.571, 1029.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2189.172 ±(99.9%) 708.228 MB/sec [Average]
[info]   (min, avg, max) = (1973.204, 2189.172, 2355.187), stdev = 183.924
[info]   CI (99.9%): [1480.944, 2897.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   956.541 ±(99.9%) 375.600 B/op [Average]
[info]   (min, avg, max) = (842.194, 956.541, 1051.098), stdev = 97.542
[info]   CI (99.9%): [580.940, 1332.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.421 ±(99.9%) 3.178 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.421, 1.896), stdev = 0.825
[info]   CI (99.9%): [≈ 0, 3.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.188 ±(99.9%) 1.426 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.188, 0.850), stdev = 0.370
[info]   CI (99.9%): [≈ 0, 1.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 13.000), stdev = 1.924
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala
[info] # Run progress: 2.82% complete, ETA 01:27:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3089954.167 ops/s
[info] # Warmup Iteration   2: 13436260.239 ops/s
[info] # Warmup Iteration   3: 14927472.793 ops/s
[info] Iteration   1: 14979603.429 ops/s
[info]                  ·gc.alloc.rate:                   1967.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              206.595 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.389 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 14651045.107 ops/s
[info]                  ·gc.alloc.rate:                   1943.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 15225952.640 ops/s
[info]                  ·gc.alloc.rate:                   1981.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              204.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     204.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 15288603.117 ops/s
[info]                  ·gc.alloc.rate:                   2002.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              206.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 14929063.626 ops/s
[info]                  ·gc.alloc.rate:                   1963.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              206.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     176.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala":
[info]   15014853.584 ±(99.9%) 982594.845 ops/s [Average]
[info]   (min, avg, max) = (14651045.107, 15014853.584, 15288603.117), stdev = 255176.761
[info]   CI (99.9%): [14032258.739, 15997448.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1971.604 ±(99.9%) 85.263 MB/sec [Average]
[info]   (min, avg, max) = (1943.159, 1971.604, 2002.504), stdev = 22.143
[info]   CI (99.9%): [1886.341, 2056.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   206.657 ±(99.9%) 5.347 B/op [Average]
[info]   (min, avg, max) = (204.875, 206.657, 208.700), stdev = 1.389
[info]   CI (99.9%): [201.309, 212.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1919.779 ±(99.9%) 529.451 MB/sec [Average]
[info]   (min, avg, max) = (1674.384, 1919.779, 1995.763), stdev = 137.497
[info]   CI (99.9%): [1390.327, 2449.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   201.207 ±(99.9%) 54.162 B/op [Average]
[info]   (min, avg, max) = (176.518, 201.207, 211.562), stdev = 14.066
[info]   CI (99.9%): [147.046, 255.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.791 ±(99.9%) 6.279 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.791, 3.707), stdev = 1.631
[info]   CI (99.9%): [≈ 0, 7.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.083 ±(99.9%) 0.659 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.083, 0.389), stdev = 0.171
[info]   CI (99.9%): [≈ 0, 0.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.400, 14.000), stdev = 3.130
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson
[info] # Run progress: 3.06% complete, ETA 01:26:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2313.098 ops/s
[info] # Warmup Iteration   2: 468467.051 ops/s
[info] # Warmup Iteration   3: 1846485.938 ops/s
[info] Iteration   1: 1974314.736 ops/s
[info]                  ·gc.alloc.rate:                   3228.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              2573.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2952.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2353.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.696 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.149 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1988991.599 ops/s
[info]                  ·gc.alloc.rate:                   3297.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              2607.858 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3306.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2615.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1971123.700 ops/s
[info]                  ·gc.alloc.rate:                   3275.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              2615.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3013.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2405.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 1941809.966 ops/s
[info]                  ·gc.alloc.rate:                   3250.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              2634.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3375.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2735.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 2001274.407 ops/s
[info]                  ·gc.alloc.rate:                   3325.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              2615.461 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3051.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2399.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson":
[info]   1975502.881 ±(99.9%) 86144.303 ops/s [Average]
[info]   (min, avg, max) = (1941809.966, 1975502.881, 2001274.407), stdev = 22371.402
[info]   CI (99.9%): [1889358.578, 2061647.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3275.319 ±(99.9%) 147.189 MB/sec [Average]
[info]   (min, avg, max) = (3228.460, 3275.319, 3325.677), stdev = 38.225
[info]   CI (99.9%): [3128.130, 3422.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   2609.219 ±(99.9%) 85.764 B/op [Average]
[info]   (min, avg, max) = (2573.377, 2609.219, 2634.174), stdev = 22.273
[info]   CI (99.9%): [2523.455, 2694.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3139.930 ±(99.9%) 726.096 MB/sec [Average]
[info]   (min, avg, max) = (2952.786, 3139.930, 3375.391), stdev = 188.565
[info]   CI (99.9%): [2413.834, 3866.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2502.138 ±(99.9%) 636.354 B/op [Average]
[info]   (min, avg, max) = (2353.640, 2502.138, 2735.779), stdev = 165.259
[info]   CI (99.9%): [1865.784, 3138.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.598 ±(99.9%) 4.520 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.598, 2.696), stdev = 1.174
[info]   CI (99.9%): [≈ 0, 5.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.476 ±(99.9%) 3.602 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.476, 2.149), stdev = 0.936
[info]   CI (99.9%): [≈ 0, 4.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 14.200, 15.000), stdev = 0.447
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce
[info] # Run progress: 3.29% complete, ETA 01:26:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82666.076 ops/s
[info] # Warmup Iteration   2: 2191282.766 ops/s
[info] # Warmup Iteration   3: 3038369.475 ops/s
[info] Iteration   1: 4804162.337 ops/s
[info]                  ·gc.alloc.rate:                   2415.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              791.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2536.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     830.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.191 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.700 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   2: 4884771.615 ops/s
[info]                  ·gc.alloc.rate:                   2434.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              784.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2219.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     714.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.933 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.945 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 4955154.590 ops/s
[info]                  ·gc.alloc.rate:                   2493.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              791.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2549.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     809.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4896127.527 ops/s
[info]                  ·gc.alloc.rate:                   2480.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              797.303 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2275.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     731.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 4934630.406 ops/s
[info]                  ·gc.alloc.rate:                   2505.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              799.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2312.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     737.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce":
[info]   4894969.295 ±(99.9%) 224087.224 ops/s [Average]
[info]   (min, avg, max) = (4804162.337, 4894969.295, 4955154.590), stdev = 58194.740
[info]   CI (99.9%): [4670882.071, 5119056.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2466.024 ±(99.9%) 150.375 MB/sec [Average]
[info]   (min, avg, max) = (2415.412, 2466.024, 2505.824), stdev = 39.052
[info]   CI (99.9%): [2315.649, 2616.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   792.804 ±(99.9%) 22.450 B/op [Average]
[info]   (min, avg, max) = (784.329, 792.804, 799.191), stdev = 5.830
[info]   CI (99.9%): [770.354, 815.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2378.714 ±(99.9%) 591.161 MB/sec [Average]
[info]   (min, avg, max) = (2219.346, 2378.714, 2549.217), stdev = 153.523
[info]   CI (99.9%): [1787.553, 2969.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   764.911 ±(99.9%) 199.186 B/op [Average]
[info]   (min, avg, max) = (714.942, 764.911, 830.937), stdev = 51.728
[info]   CI (99.9%): [565.725, 964.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.658 ±(99.9%) 8.992 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.658, 5.191), stdev = 2.335
[info]   CI (99.9%): [≈ 0, 10.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.540 ±(99.9%) 2.938 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.540, 1.700), stdev = 0.763
[info]   CI (99.9%): [≈ 0, 3.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 15.400, 34.000), stdev = 10.691
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava
[info] # Run progress: 3.53% complete, ETA 01:26:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.542 ops/s
[info] # Warmup Iteration   2: 20819480.035 ops/s
[info] # Warmup Iteration   3: 23522133.986 ops/s
[info] Iteration   1: 24491724.199 ops/s
[info]                  ·gc.alloc.rate:                   771.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 24565188.170 ops/s
[info]                  ·gc.alloc.rate:                   764.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 24484743.658 ops/s
[info]                  ·gc.alloc.rate:                   769.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 23370065.079 ops/s
[info]                  ·gc.alloc.rate:                   728.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 24654750.261 ops/s
[info]                  ·gc.alloc.rate:                   772.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.249 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.335 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava":
[info]   24313294.273 ±(99.9%) 2047511.041 ops/s [Average]
[info]   (min, avg, max) = (23370065.079, 24313294.273, 24654750.261), stdev = 531732.115
[info]   CI (99.9%): [22265783.233, 26360805.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   761.323 ±(99.9%) 71.800 MB/sec [Average]
[info]   (min, avg, max) = (728.427, 761.323, 772.804), stdev = 18.646
[info]   CI (99.9%): [689.523, 833.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   49.276 ±(99.9%) 0.949 B/op [Average]
[info]   (min, avg, max) = (48.995, 49.276, 49.571), stdev = 0.246
[info]   CI (99.9%): [48.327, 50.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   782.387 ±(99.9%) 686.747 MB/sec [Average]
[info]   (min, avg, max) = (651.487, 782.387, 978.112), stdev = 178.346
[info]   CI (99.9%): [95.640, 1469.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   50.569 ±(99.9%) 42.464 B/op [Average]
[info]   (min, avg, max) = (41.740, 50.569, 62.797), stdev = 11.028
[info]   CI (99.9%): [8.104, 93.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.067 ±(99.9%) 9.001 MB/sec [Average]
[info]   (min, avg, max) = (0.007, 1.067, 5.249), stdev = 2.338
[info]   CI (99.9%): [≈ 0, 10.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.574 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.068, 0.335), stdev = 0.149
[info]   CI (99.9%): [≈ 0, 0.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 11.000), stdev = 1.643
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala
[info] # Run progress: 3.76% complete, ETA 01:26:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 308825.394 ops/s
[info] # Warmup Iteration   2: 7937317.405 ops/s
[info] # Warmup Iteration   3: 9841417.398 ops/s
[info] Iteration   1: 10841675.266 ops/s
[info]                  ·gc.alloc.rate:                   340.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 10823264.193 ops/s
[info]                  ·gc.alloc.rate:               337.143 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46.738 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 10316637.973 ops/s
[info]                  ·gc.alloc.rate:                   323.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 10495175.062 ops/s
[info]                  ·gc.alloc.rate:               329.428 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 48.349 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 10321943.330 ops/s
[info]                  ·gc.alloc.rate:               338.251 MB/sec
[info]                  ·gc.alloc.rate.norm:          51.568 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49.313 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala":
[info]   10559739.165 ±(99.9%) 998102.537 ops/s [Average]
[info]   (min, avg, max) = (10316637.973, 10559739.165, 10841675.266), stdev = 259204.059
[info]   CI (99.9%): [9561636.628, 11557841.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   333.685 ±(99.9%) 27.167 MB/sec [Average]
[info]   (min, avg, max) = (323.403, 333.685, 340.201), stdev = 7.055
[info]   CI (99.9%): [306.518, 360.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   49.742 ±(99.9%) 3.976 B/op [Average]
[info]   (min, avg, max) = (49.019, 49.742, 51.568), stdev = 1.033
[info]   CI (99.9%): [45.766, 53.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   322.237 ±(99.9%) 3.242 MB/sec [Average]
[info]   (min, avg, max) = (321.418, 322.237, 323.454), stdev = 0.842
[info]   CI (99.9%): [318.995, 325.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   48.050 ±(99.9%) 4.958 B/op [Average]
[info]   (min, avg, max) = (46.660, 48.050, 49.313), stdev = 1.288
[info]   CI (99.9%): [43.091, 53.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala
[info] # Run progress: 4.00% complete, ETA 01:26:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3013197.975 ops/s
[info] # Warmup Iteration   2: 29550024.384 ops/s
[info] # Warmup Iteration   3: 33375127.576 ops/s
[info] Iteration   1: 33264398.490 ops/s
[info]                  ·gc.alloc.rate:                   1048.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.606 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 33235704.956 ops/s
[info]                  ·gc.alloc.rate:                   1039.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 33787888.609 ops/s
[info]                  ·gc.alloc.rate:                   1063.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.536 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.132 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 34547460.341 ops/s
[info]                  ·gc.alloc.rate:                   1105.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              50.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 35010043.276 ops/s
[info]                  ·gc.alloc.rate:                   1093.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala":
[info]   33969099.134 ±(99.9%) 3035283.154 ops/s [Average]
[info]   (min, avg, max) = (33235704.956, 33969099.134, 35010043.276), stdev = 788253.396
[info]   CI (99.9%): [30933815.980, 37004382.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1069.946 ±(99.9%) 109.578 MB/sec [Average]
[info]   (min, avg, max) = (1039.208, 1069.946, 1105.084), stdev = 28.457
[info]   CI (99.9%): [960.368, 1179.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   49.567 ±(99.9%) 1.842 B/op [Average]
[info]   (min, avg, max) = (49.158, 49.567, 50.344), stdev = 0.478
[info]   CI (99.9%): [47.724, 51.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1046.609 ±(99.9%) 557.773 MB/sec [Average]
[info]   (min, avg, max) = (977.596, 1046.609, 1305.677), stdev = 144.852
[info]   CI (99.9%): [488.836, 1604.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   48.458 ±(99.9%) 24.069 B/op [Average]
[info]   (min, avg, max) = (43.946, 48.458, 59.482), stdev = 6.251
[info]   CI (99.9%): [24.389, 72.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.849 ±(99.9%) 7.067 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 0.849, 4.132), stdev = 1.835
[info]   CI (99.9%): [≈ 0, 7.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.329 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.040, 0.192), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 11.000), stdev = 3.082
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 4.24% complete, ETA 01:26:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4934134.013 ops/s
[info] # Warmup Iteration   2: 31690461.316 ops/s
[info] # Warmup Iteration   3: 37565506.236 ops/s
[info] Iteration   1: 37644530.749 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 38183810.455 ops/s
[info]                  ·gc.alloc.rate:      5.934 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.245 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 38539300.245 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 38538293.779 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 38466530.084 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc":
[info]   38274493.063 ±(99.9%) 1468388.083 ops/s [Average]
[info]   (min, avg, max) = (37644530.749, 38274493.063, 38539300.245), stdev = 381335.722
[info]   CI (99.9%): [36806104.979, 39742881.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.187 ±(99.9%) 10.217 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.187, 5.934), stdev = 2.653
[info]   CI (99.9%): [≈ 0, 11.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.049 ±(99.9%) 0.421 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.049, 0.245), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson
[info] # Run progress: 4.47% complete, ETA 01:25:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37013.852 ops/s
[info] # Warmup Iteration   2: 841779.845 ops/s
[info] # Warmup Iteration   3: 2098211.480 ops/s
[info] Iteration   1: 2316865.766 ops/s
[info]                  ·gc.alloc.rate:                   3223.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              2188.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3283.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2229.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.339 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 2329665.827 ops/s
[info]                  ·gc.alloc.rate:                   3223.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              2177.674 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2995.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2023.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 2337346.365 ops/s
[info]                  ·gc.alloc.rate:                   3268.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              2200.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3025.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2037.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 2271823.909 ops/s
[info]                  ·gc.alloc.rate:                   3204.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              2219.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3383.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2344.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   5: 2354299.598 ops/s
[info]                  ·gc.alloc.rate:                   3290.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              2199.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3055.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2042.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson":
[info]   2322000.293 ±(99.9%) 119951.426 ops/s [Average]
[info]   (min, avg, max) = (2271823.909, 2322000.293, 2354299.598), stdev = 31151.004
[info]   CI (99.9%): [2202048.867, 2441951.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   3242.013 ±(99.9%) 137.404 MB/sec [Average]
[info]   (min, avg, max) = (3204.144, 3242.013, 3290.035), stdev = 35.683
[info]   CI (99.9%): [3104.609, 3379.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2197.252 ±(99.9%) 59.930 B/op [Average]
[info]   (min, avg, max) = (2177.674, 2197.252, 2219.607), stdev = 15.564
[info]   CI (99.9%): [2137.322, 2257.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   3148.948 ±(99.9%) 668.790 MB/sec [Average]
[info]   (min, avg, max) = (2995.634, 3148.948, 3383.825), stdev = 173.683
[info]   CI (99.9%): [2480.159, 3817.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2135.480 ±(99.9%) 555.012 B/op [Average]
[info]   (min, avg, max) = (2023.552, 2135.480, 2344.078), stdev = 144.135
[info]   CI (99.9%): [1580.468, 2690.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.142 ±(99.9%) 0.776 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.142, 0.500), stdev = 0.202
[info]   CI (99.9%): [≈ 0, 0.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.096 ±(99.9%) 0.527 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.096, 0.339), stdev = 0.137
[info]   CI (99.9%): [≈ 0, 0.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 15.400, 20.000), stdev = 2.793
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 4.71% complete, ETA 01:25:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47131.130 ops/s
[info] # Warmup Iteration   2: 334409.480 ops/s
[info] # Warmup Iteration   3: 345637.215 ops/s
[info] Iteration   1: 366455.943 ops/s
[info]                  ·gc.alloc.rate:                   2179.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              9358.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2248.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9655.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.984 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.107 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 372221.889 ops/s
[info]                  ·gc.alloc.rate:                   2190.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              9262.538 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1925.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8141.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.232 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 369400.888 ops/s
[info]                  ·gc.alloc.rate:                   2177.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              9278.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2270.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9674.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 366235.466 ops/s
[info]                  ·gc.alloc.rate:                   2185.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              9392.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8490.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 371296.285 ops/s
[info]                  ·gc.alloc.rate:                   2236.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              9478.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2331.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9884.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce":
[info]   369122.094 ±(99.9%) 10519.826 ops/s [Average]
[info]   (min, avg, max) = (366235.466, 369122.094, 372221.889), stdev = 2731.965
[info]   CI (99.9%): [358602.268, 379641.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2193.917 ±(99.9%) 92.966 MB/sec [Average]
[info]   (min, avg, max) = (2177.748, 2193.917, 2236.105), stdev = 24.143
[info]   CI (99.9%): [2100.951, 2286.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9354.018 ±(99.9%) 339.056 B/op [Average]
[info]   (min, avg, max) = (9262.538, 9354.018, 9478.120), stdev = 88.052
[info]   CI (99.9%): [9014.962, 9693.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2150.537 ±(99.9%) 715.427 MB/sec [Average]
[info]   (min, avg, max) = (1925.590, 2150.537, 2331.936), stdev = 185.794
[info]   CI (99.9%): [1435.110, 2865.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9169.410 ±(99.9%) 3055.748 B/op [Average]
[info]   (min, avg, max) = (8141.695, 9169.410, 9884.315), stdev = 793.568
[info]   CI (99.9%): [6113.662, 12225.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.872 ±(99.9%) 6.714 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.872, 3.984), stdev = 1.744
[info]   CI (99.9%): [≈ 0, 7.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.739 ±(99.9%) 28.836 B/op [Average]
[info]   (min, avg, max) = (0.088, 3.739, 17.107), stdev = 7.488
[info]   CI (99.9%): [≈ 0, 32.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 16.000), stdev = 3.271
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.94% complete, ETA 01:25:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62490.443 ops/s
[info] # Warmup Iteration   2: 587411.103 ops/s
[info] # Warmup Iteration   3: 742312.406 ops/s
[info] Iteration   1: 923055.971 ops/s
[info]                  ·gc.alloc.rate:                   800.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              1364.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1648.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.699 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.896 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 890371.207 ops/s
[info]                  ·gc.alloc.rate:               777.033 MB/sec
[info]                  ·gc.alloc.rate.norm:          1372.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1140.426 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 919569.818 ops/s
[info]                  ·gc.alloc.rate:                   805.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              1379.229 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1661.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 901290.988 ops/s
[info]                  ·gc.alloc.rate:                   779.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              1360.773 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1135.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.654 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 903351.325 ops/s
[info]                  ·gc.alloc.rate:                   782.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              1363.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1136.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala":
[info]   907527.862 ±(99.9%) 52261.897 ops/s [Average]
[info]   (min, avg, max) = (890371.207, 907527.862, 923055.971), stdev = 13572.249
[info]   CI (99.9%): [855265.965, 959789.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   789.076 ±(99.9%) 50.615 MB/sec [Average]
[info]   (min, avg, max) = (777.033, 789.076, 805.858), stdev = 13.145
[info]   CI (99.9%): [738.461, 839.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1368.188 ±(99.9%) 29.379 B/op [Average]
[info]   (min, avg, max) = (1360.773, 1368.188, 1379.229), stdev = 7.630
[info]   CI (99.9%): [1338.809, 1397.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   777.131 ±(99.9%) 674.241 MB/sec [Average]
[info]   (min, avg, max) = (645.490, 777.131, 970.920), stdev = 175.098
[info]   CI (99.9%): [102.890, 1451.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1344.360 ±(99.9%) 1091.885 B/op [Average]
[info]   (min, avg, max) = (1135.311, 1344.360, 1661.733), stdev = 283.559
[info]   CI (99.9%): [252.475, 2436.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.452 ±(99.9%) 2.742 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.452, 1.699), stdev = 0.712
[info]   CI (99.9%): [≈ 0, 3.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.775 ±(99.9%) 4.669 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.775, 2.896), stdev = 1.213
[info]   CI (99.9%): [≈ 0, 5.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.304
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.18% complete, ETA 01:25:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 672284.977 ops/s
[info] # Warmup Iteration   2: 1589311.735 ops/s
[info] # Warmup Iteration   3: 1624162.419 ops/s
[info] Iteration   1: 1632506.828 ops/s
[info]                  ·gc.alloc.rate:                   1120.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              1080.156 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     952.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1626082.376 ops/s
[info]                  ·gc.alloc.rate:                   1181.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              1143.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1277.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.075 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1658248.223 ops/s
[info]                  ·gc.alloc.rate:                   1134.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              1076.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     934.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.909 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1707604.885 ops/s
[info]                  ·gc.alloc.rate:               1168.574 MB/sec
[info]                  ·gc.alloc.rate.norm:          1077.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1308.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1206.493 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1682830.682 ops/s
[info]                  ·gc.alloc.rate:                   1141.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              1067.311 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     918.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala":
[info]   1661454.599 ±(99.9%) 131799.986 ops/s [Average]
[info]   (min, avg, max) = (1626082.376, 1661454.599, 1707604.885), stdev = 34228.038
[info]   CI (99.9%): [1529654.612, 1793254.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1149.297 ±(99.9%) 96.864 MB/sec [Average]
[info]   (min, avg, max) = (1120.417, 1149.297, 1181.631), stdev = 25.155
[info]   CI (99.9%): [1052.433, 1246.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1089.026 ±(99.9%) 119.016 B/op [Average]
[info]   (min, avg, max) = (1067.311, 1089.026, 1143.637), stdev = 30.908
[info]   CI (99.9%): [970.010, 1208.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1116.736 ±(99.9%) 694.728 MB/sec [Average]
[info]   (min, avg, max) = (982.577, 1116.736, 1319.656), stdev = 180.419
[info]   CI (99.9%): [422.008, 1811.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1057.913 ±(99.9%) 655.320 B/op [Average]
[info]   (min, avg, max) = (918.942, 1057.913, 1277.225), stdev = 170.185
[info]   CI (99.9%): [402.592, 1713.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.839 ±(99.9%) 5.271 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.839, 3.177), stdev = 1.369
[info]   CI (99.9%): [≈ 0, 6.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.808 ±(99.9%) 5.101 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.808, 3.075), stdev = 1.325
[info]   CI (99.9%): [≈ 0, 5.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 13.000), stdev = 4.159
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 5.41% complete, ETA 01:25:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10978.522 ops/s
[info] # Warmup Iteration   2: 127687.517 ops/s
[info] # Warmup Iteration   3: 174580.082 ops/s
[info] Iteration   1: 216086.681 ops/s
[info]                  ·gc.alloc.rate:                   3972.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              28924.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3922.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28565.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.455 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 213553.040 ops/s
[info]                  ·gc.alloc.rate:                   3911.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              28816.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3663.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26994.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.307 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 220479.261 ops/s
[info]                  ·gc.alloc.rate:                   4034.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              28791.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4047.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28883.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.892 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 220492.103 ops/s
[info]                  ·gc.alloc.rate:                   4076.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              29096.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4070.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29052.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 219935.200 ops/s
[info]                  ·gc.alloc.rate:                   4066.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              29097.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3738.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26752.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.447 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson":
[info]   218109.257 ±(99.9%) 12097.224 ops/s [Average]
[info]   (min, avg, max) = (213553.040, 218109.257, 220492.103), stdev = 3141.611
[info]   CI (99.9%): [206012.033, 230206.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4011.951 ±(99.9%) 267.627 MB/sec [Average]
[info]   (min, avg, max) = (3911.049, 4011.951, 4076.239), stdev = 69.502
[info]   CI (99.9%): [3744.325, 4279.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   28945.121 ±(99.9%) 566.467 B/op [Average]
[info]   (min, avg, max) = (28791.286, 28945.121, 29097.174), stdev = 147.110
[info]   CI (99.9%): [28378.655, 29511.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3888.483 ±(99.9%) 700.358 MB/sec [Average]
[info]   (min, avg, max) = (3663.806, 3888.483, 4070.097), stdev = 181.881
[info]   CI (99.9%): [3188.125, 4588.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   28049.829 ±(99.9%) 4201.486 B/op [Average]
[info]   (min, avg, max) = (26752.598, 28049.829, 29052.354), stdev = 1091.113
[info]   CI (99.9%): [23848.342, 32251.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.450 ±(99.9%) 1.066 B/op [Average]
[info]   (min, avg, max) = (0.149, 0.450, 0.892), stdev = 0.277
[info]   CI (99.9%): [≈ 0, 1.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   58.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.600, 12.000), stdev = 0.548
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   80.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 16.000, 18.000), stdev = 1.225
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 5.65% complete, ETA 01:24:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 105083.530 ops/s
[info] # Warmup Iteration   2: 413821.095 ops/s
[info] # Warmup Iteration   3: 437066.644 ops/s
[info] Iteration   1: 439770.469 ops/s
[info]                  ·gc.alloc.rate:                   1449.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              5188.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4701.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.622 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.963 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 435889.893 ops/s
[info]                  ·gc.alloc.rate:                   1425.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              5147.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4709.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 434111.424 ops/s
[info]                  ·gc.alloc.rate:               1417.988 MB/sec
[info]                  ·gc.alloc.rate.norm:          5140.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1626.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5895.395 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 435383.857 ops/s
[info]                  ·gc.alloc.rate:                   1419.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              5132.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4725.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 442434.918 ops/s
[info]                  ·gc.alloc.rate:                   1462.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              5202.153 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4682.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce":
[info]   437518.112 ±(99.9%) 13347.322 ops/s [Average]
[info]   (min, avg, max) = (434111.424, 437518.112, 442434.918), stdev = 3466.257
[info]   CI (99.9%): [424170.790, 450865.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1435.227 ±(99.9%) 76.663 MB/sec [Average]
[info]   (min, avg, max) = (1417.988, 1435.227, 1462.602), stdev = 19.909
[info]   CI (99.9%): [1358.565, 1511.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5162.322 ±(99.9%) 119.818 B/op [Average]
[info]   (min, avg, max) = (5132.404, 5162.322, 5202.153), stdev = 31.116
[info]   CI (99.9%): [5042.504, 5282.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1373.599 ±(99.9%) 543.977 MB/sec [Average]
[info]   (min, avg, max) = (1304.575, 1373.599, 1626.165), stdev = 141.269
[info]   CI (99.9%): [829.622, 1917.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4942.776 ±(99.9%) 2051.460 B/op [Average]
[info]   (min, avg, max) = (4682.317, 4942.776, 5895.395), stdev = 532.758
[info]   CI (99.9%): [2891.317, 6994.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.899 ±(99.9%) 6.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.899, 3.622), stdev = 1.563
[info]   CI (99.9%): [≈ 0, 6.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.224 ±(99.9%) 21.536 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.224, 12.963), stdev = 5.593
[info]   CI (99.9%): [≈ 0, 24.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 15.000), stdev = 3.962
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.88% complete, ETA 01:24:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 149731.288 ops/s
[info] # Warmup Iteration   2: 987485.439 ops/s
[info] # Warmup Iteration   3: 1015139.414 ops/s
[info] Iteration   1: 1022725.048 ops/s
[info]                  ·gc.alloc.rate:               480.853 MB/sec
[info]                  ·gc.alloc.rate.norm:          739.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:      318.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 489.494 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 974674.626 ops/s
[info]                  ·gc.alloc.rate:                   471.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              761.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          638.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1030.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 983865.609 ops/s
[info]                  ·gc.alloc.rate:               465.277 MB/sec
[info]                  ·gc.alloc.rate.norm:          744.273 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 513.097 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1012780.646 ops/s
[info]                  ·gc.alloc.rate:                   487.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              757.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     998.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 995251.057 ops/s
[info]                  ·gc.alloc.rate:               469.522 MB/sec
[info]                  ·gc.alloc.rate.norm:          742.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 509.330 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala":
[info]   997859.397 ±(99.9%) 76556.849 ops/s [Average]
[info]   (min, avg, max) = (974674.626, 997859.397, 1022725.048), stdev = 19881.571
[info]   CI (99.9%): [921302.548, 1074416.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   474.971 ±(99.9%) 35.423 MB/sec [Average]
[info]   (min, avg, max) = (465.277, 474.971, 487.889), stdev = 9.199
[info]   CI (99.9%): [439.547, 510.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   749.075 ±(99.9%) 37.179 B/op [Average]
[info]   (min, avg, max) = (739.995, 749.075, 761.022), stdev = 9.655
[info]   CI (99.9%): [711.896, 786.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   448.467 ±(99.9%) 675.603 MB/sec [Average]
[info]   (min, avg, max) = (318.076, 448.467, 643.084), stdev = 175.452
[info]   CI (99.9%): [≈ 0, 1124.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   708.279 ±(99.9%) 1078.652 B/op [Average]
[info]   (min, avg, max) = (489.494, 708.279, 1030.517), stdev = 280.123
[info]   CI (99.9%): [≈ 0, 1786.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.112 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.065), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.12% complete, ETA 01:24:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1079581.731 ops/s
[info] # Warmup Iteration   2: 2424863.840 ops/s
[info] # Warmup Iteration   3: 2632641.055 ops/s
[info] Iteration   1: 2601468.715 ops/s
[info]                  ·gc.alloc.rate:               1277.151 MB/sec
[info]                  ·gc.alloc.rate.norm:          772.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 796.126 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   2: 2772828.869 ops/s
[info]                  ·gc.alloc.rate:                   1315.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              746.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     747.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.740 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.122 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2731928.512 ops/s
[info]                  ·gc.alloc.rate:                   1322.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              761.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     754.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2734439.798 ops/s
[info]                  ·gc.alloc.rate:                   1327.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              763.639 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     753.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2783101.319 ops/s
[info]                  ·gc.alloc.rate:                   1316.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     743.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala":
[info]   2724753.443 ±(99.9%) 279404.966 ops/s [Average]
[info]   (min, avg, max) = (2601468.715, 2724753.443, 2783101.319), stdev = 72560.582
[info]   CI (99.9%): [2445348.476, 3004158.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1311.620 ±(99.9%) 76.565 MB/sec [Average]
[info]   (min, avg, max) = (1277.151, 1311.620, 1327.081), stdev = 19.884
[info]   CI (99.9%): [1235.056, 1388.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   757.785 ±(99.9%) 46.655 B/op [Average]
[info]   (min, avg, max) = (744.297, 757.785, 772.688), stdev = 12.116
[info]   CI (99.9%): [711.130, 804.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1313.270 ±(99.9%) 14.081 MB/sec [Average]
[info]   (min, avg, max) = (1309.333, 1313.270, 1317.440), stdev = 3.657
[info]   CI (99.9%): [1299.189, 1327.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   758.962 ±(99.9%) 81.937 B/op [Average]
[info]   (min, avg, max) = (743.072, 758.962, 796.126), stdev = 21.279
[info]   CI (99.9%): [677.025, 840.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.823 ±(99.9%) 6.301 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.823, 3.740), stdev = 1.636
[info]   CI (99.9%): [≈ 0, 7.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.468 ±(99.9%) 3.575 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.468, 2.122), stdev = 0.929
[info]   CI (99.9%): [≈ 0, 4.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 13.000), stdev = 3.564
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 6.35% complete, ETA 01:24:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1576642.171 ops/s
[info] # Warmup Iteration   2: 2756925.564 ops/s
[info] # Warmup Iteration   3: 2806478.068 ops/s
[info] Iteration   1: 2817125.163 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2804904.853 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2806293.869 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2807171.984 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2806336.853 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2808366.544 ±(99.9%) 19112.087 ops/s [Average]
[info]   (min, avg, max) = (2804904.853, 2808366.544, 2817125.163), stdev = 4963.348
[info]   CI (99.9%): [2789254.457, 2827478.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 6.59% complete, ETA 01:24:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 105543.977 ops/s
[info] # Warmup Iteration   2: 474556.120 ops/s
[info] # Warmup Iteration   3: 573932.387 ops/s
[info] Iteration   1: 644651.138 ops/s
[info]                  ·gc.alloc.rate:                   1354.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              3306.284 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3155.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.254 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.263 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 642533.470 ops/s
[info]                  ·gc.alloc.rate:                   1234.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              3023.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1287.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3153.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.888 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.625 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 654186.866 ops/s
[info]                  ·gc.alloc.rate:                   1172.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              2820.691 B/op
[info]                  ·gc.churn.PS_Eden_Space:          961.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2312.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.709 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.112 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 691773.045 ops/s
[info]                  ·gc.alloc.rate:                   970.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              2208.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          962.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2189.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.265 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.153 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 689798.852 ops/s
[info]                  ·gc.alloc.rate:                   966.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              2205.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          963.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2199.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson":
[info]   664588.674 ±(99.9%) 93664.054 ops/s [Average]
[info]   (min, avg, max) = (642533.470, 664588.674, 691773.045), stdev = 24324.257
[info]   CI (99.9%): [570924.620, 758252.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1139.817 ±(99.9%) 652.477 MB/sec [Average]
[info]   (min, avg, max) = (966.668, 1139.817, 1354.808), stdev = 169.446
[info]   CI (99.9%): [487.340, 1792.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2712.817 ±(99.9%) 1898.394 B/op [Average]
[info]   (min, avg, max) = (2205.528, 2712.817, 3306.284), stdev = 493.007
[info]   CI (99.9%): [814.424, 4611.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1093.699 ±(99.9%) 690.943 MB/sec [Average]
[info]   (min, avg, max) = (961.482, 1093.699, 1293.170), stdev = 179.436
[info]   CI (99.9%): [402.755, 1784.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2602.203 ±(99.9%) 1950.477 B/op [Average]
[info]   (min, avg, max) = (2189.989, 2602.203, 3155.863), stdev = 506.533
[info]   CI (99.9%): [651.725, 4552.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.428 ±(99.9%) 8.880 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.428, 6.254), stdev = 2.306
[info]   CI (99.9%): [≈ 0, 11.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.840 ±(99.9%) 21.722 B/op [Average]
[info]   (min, avg, max) = (0.047, 5.840, 15.263), stdev = 5.641
[info]   CI (99.9%): [≈ 0, 27.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.400, 21.000), stdev = 6.877
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 6.82% complete, ETA 01:23:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2623.709 ops/s
[info] # Warmup Iteration   2: 12510.102 ops/s
[info] # Warmup Iteration   3: 15397.373 ops/s
[info] Iteration   1: 20816.950 ops/s
[info]                  ·gc.alloc.rate:                   1650.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              124759.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1453.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109888.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      18.883 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1427.615 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 20505.939 ops/s
[info]                  ·gc.alloc.rate:                   1746.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              133991.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1755.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     134689.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.938 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 148.705 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 21796.551 ops/s
[info]                  ·gc.alloc.rate:                   1718.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              124098.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1812.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130855.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.566 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 20471.846 ops/s
[info]                  ·gc.alloc.rate:                   1949.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              149825.512 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1872.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143874.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.636 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 356.195 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 21593.307 ops/s
[info]                  ·gc.alloc.rate:                   1821.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              132757.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1908.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     139059.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 593.654 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce":
[info]   21036.919 ±(99.9%) 2386.345 ops/s [Average]
[info]   (min, avg, max) = (20471.846, 21036.919, 21796.551), stdev = 619.726
[info]   CI (99.9%): [18650.574, 23423.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate":
[info]   1777.355 ±(99.9%) 440.228 MB/sec [Average]
[info]   (min, avg, max) = (1650.191, 1777.355, 1949.821), stdev = 114.326
[info]   CI (99.9%): [1337.127, 2217.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   133086.394 ±(99.9%) 39981.829 B/op [Average]
[info]   (min, avg, max) = (124098.774, 133086.394, 149825.512), stdev = 10383.154
[info]   CI (99.9%): [93104.565, 173068.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1760.357 ±(99.9%) 697.592 MB/sec [Average]
[info]   (min, avg, max) = (1453.496, 1760.357, 1908.167), stdev = 181.162
[info]   CI (99.9%): [1062.765, 2457.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   131673.405 ±(99.9%) 50491.633 B/op [Average]
[info]   (min, avg, max) = (109888.710, 131673.405, 143874.500), stdev = 13112.517
[info]   CI (99.9%): [81181.772, 182165.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   6.808 ±(99.9%) 28.337 MB/sec [Average]
[info]   (min, avg, max) = (0.437, 6.808, 18.883), stdev = 7.359
[info]   CI (99.9%): [≈ 0, 35.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   511.547 ±(99.9%) 2137.102 B/op [Average]
[info]   (min, avg, max) = (31.566, 511.547, 1427.615), stdev = 554.999
[info]   CI (99.9%): [≈ 0, 2648.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 14.000, 21.000), stdev = 4.359
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.06% complete, ETA 01:23:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8594.445 ops/s
[info] # Warmup Iteration   2: 34452.467 ops/s
[info] # Warmup Iteration   3: 46462.987 ops/s
[info] Iteration   1: 42337.973 ops/s
[info]                  ·gc.alloc.rate:                   1500.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              55778.408 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60298.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.132 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.898 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 39241.138 ops/s
[info]                  ·gc.alloc.rate:                   1336.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              53613.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52231.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.514 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 100.845 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 42239.629 ops/s
[info]                  ·gc.alloc.rate:                   1155.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              43073.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36150.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103.976 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 42045.514 ops/s
[info]                  ·gc.alloc.rate:                   1159.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              43384.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48648.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.338 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 41348.535 ops/s
[info]                  ·gc.alloc.rate:                   1128.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              42960.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37284.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.508 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala":
[info]   41442.558 ±(99.9%) 4967.083 ops/s [Average]
[info]   (min, avg, max) = (39241.138, 41442.558, 42337.973), stdev = 1289.936
[info]   CI (99.9%): [36475.475, 46409.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1256.281 ±(99.9%) 614.963 MB/sec [Average]
[info]   (min, avg, max) = (1128.841, 1256.281, 1500.774), stdev = 159.704
[info]   CI (99.9%): [641.318, 1871.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   47762.112 ±(99.9%) 24559.036 B/op [Average]
[info]   (min, avg, max) = (42960.598, 47762.112, 55778.408), stdev = 6377.904
[info]   CI (99.9%): [23203.076, 72321.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1234.847 ±(99.9%) 1044.093 MB/sec [Average]
[info]   (min, avg, max) = (970.201, 1234.847, 1622.394), stdev = 271.148
[info]   CI (99.9%): [190.754, 2278.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   46922.628 ±(99.9%) 39410.813 B/op [Average]
[info]   (min, avg, max) = (36150.518, 46922.628, 60298.568), stdev = 10234.863
[info]   CI (99.9%): [7511.815, 86333.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.150 ±(99.9%) 5.302 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.150, 2.790), stdev = 1.377
[info]   CI (99.9%): [≈ 0, 6.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   44.313 ±(99.9%) 204.504 B/op [Average]
[info]   (min, avg, max) = (2.338, 44.313, 103.976), stdev = 53.109
[info]   CI (99.9%): [≈ 0, 248.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.200, 15.000), stdev = 3.033
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.29% complete, ETA 01:23:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14152.803 ops/s
[info] # Warmup Iteration   2: 45564.319 ops/s
[info] # Warmup Iteration   3: 48909.252 ops/s
[info] Iteration   1: 47768.173 ops/s
[info]                  ·gc.alloc.rate:                   852.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              28094.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          900.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29673.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.093 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 200.733 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 52021.575 ops/s
[info]                  ·gc.alloc.rate:                   912.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              27606.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          900.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27227.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.630 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 49664.304 ops/s
[info]                  ·gc.alloc.rate:                   852.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              27004.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:          904.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28667.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 297.768 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   4: 50434.609 ops/s
[info]                  ·gc.alloc.rate:                   693.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              21655.707 B/op
[info]                  ·gc.churn.PS_Eden_Space:          597.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18657.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.859 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 120.439 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 52207.785 ops/s
[info]                  ·gc.alloc.rate:                   716.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              21610.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          597.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18023.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.859 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala":
[info]   50419.289 ±(99.9%) 7038.543 ops/s [Average]
[info]   (min, avg, max) = (47768.173, 50419.289, 52207.785), stdev = 1827.887
[info]   CI (99.9%): [43380.747, 57457.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   805.672 ±(99.9%) 366.033 MB/sec [Average]
[info]   (min, avg, max) = (693.946, 805.672, 912.552), stdev = 95.058
[info]   CI (99.9%): [439.640, 1171.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   25194.495 ±(99.9%) 12606.275 B/op [Average]
[info]   (min, avg, max) = (21610.853, 25194.495, 28094.541), stdev = 3273.810
[info]   CI (99.9%): [12588.219, 37800.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   780.216 ±(99.9%) 640.873 MB/sec [Average]
[info]   (min, avg, max) = (597.854, 780.216, 904.624), stdev = 166.433
[info]   CI (99.9%): [139.343, 1421.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   24449.603 ±(99.9%) 21752.326 B/op [Average]
[info]   (min, avg, max) = (18023.153, 24449.603, 29673.366), stdev = 5649.010
[info]   CI (99.9%): [2697.278, 46201.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   4.246 ±(99.9%) 14.100 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 4.246, 9.396), stdev = 3.662
[info]   CI (99.9%): [≈ 0, 18.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   135.120 ±(99.9%) 452.831 B/op [Average]
[info]   (min, avg, max) = (0.630, 135.120, 297.768), stdev = 117.599
[info]   CI (99.9%): [≈ 0, 587.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time":
[info]   85.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 17.000, 25.000), stdev = 8.031
[info]   CI (99.9%): [85.000, 85.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 7.53% complete, ETA 01:23:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2673.695 ops/s
[info] # Warmup Iteration   2: 23935.820 ops/s
[info] # Warmup Iteration   3: 39044.918 ops/s
[info] Iteration   1: 37600.084 ops/s
[info]                  ·gc.alloc.rate:                   1757.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              73532.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68204.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.085 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.572 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 36364.918 ops/s
[info]                  ·gc.alloc.rate:                   1636.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              70816.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71008.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.518 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108.956 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 38367.362 ops/s
[info]                  ·gc.alloc.rate:                   1630.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              66886.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67631.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.685 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 38609.560 ops/s
[info]                  ·gc.alloc.rate:                   1621.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              66102.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67560.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.849 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 38730.186 ops/s
[info]                  ·gc.alloc.rate:                   1641.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              66721.550 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1667.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67753.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.846 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson":
[info]   37934.422 ±(99.9%) 3778.547 ops/s [Average]
[info]   (min, avg, max) = (36364.918, 37934.422, 38730.186), stdev = 981.277
[info]   CI (99.9%): [34155.875, 41712.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1657.583 ±(99.9%) 216.818 MB/sec [Average]
[info]   (min, avg, max) = (1621.640, 1657.583, 1757.412), stdev = 56.307
[info]   CI (99.9%): [1440.765, 1874.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   68811.826 ±(99.9%) 12436.133 B/op [Average]
[info]   (min, avg, max) = (66102.398, 68811.826, 73532.426), stdev = 3229.624
[info]   CI (99.9%): [56375.693, 81247.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1648.871 ±(99.9%) 55.637 MB/sec [Average]
[info]   (min, avg, max) = (1630.067, 1648.871, 1667.352), stdev = 14.449
[info]   CI (99.9%): [1593.234, 1704.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   68431.737 ±(99.9%) 5629.313 B/op [Average]
[info]   (min, avg, max) = (67560.717, 68431.737, 71008.295), stdev = 1461.915
[info]   CI (99.9%): [62802.424, 74061.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.566 ±(99.9%) 4.208 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.566, 2.518), stdev = 1.093
[info]   CI (99.9%): [≈ 0, 4.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   24.382 ±(99.9%) 182.372 B/op [Average]
[info]   (min, avg, max) = (0.846, 24.382, 108.956), stdev = 47.361
[info]   CI (99.9%): [≈ 0, 206.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 10.000), stdev = 1.517
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 7.76% complete, ETA 01:23:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6500.306 ops/s
[info] # Warmup Iteration   2: 22790.835 ops/s
[info] # Warmup Iteration   3: 32854.077 ops/s
[info] Iteration   1: 34179.576 ops/s
[info]                  ·gc.alloc.rate:                   2243.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              103311.149 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1906.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87785.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.400 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 156.523 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 30003.746 ops/s
[info]                  ·gc.alloc.rate:                   2478.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              129933.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2551.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     133758.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 187.752 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 34961.914 ops/s
[info]                  ·gc.alloc.rate:                   2324.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              104652.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2261.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101789.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.719 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 167.421 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 35526.904 ops/s
[info]                  ·gc.alloc.rate:                   2344.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              103843.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2289.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101413.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.833 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 35556.957 ops/s
[info]                  ·gc.alloc.rate:                   2329.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              103099.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2319.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102684.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.843 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce":
[info]   34045.819 ±(99.9%) 8963.118 ops/s [Average]
[info]   (min, avg, max) = (30003.746, 34045.819, 35556.957), stdev = 2327.693
[info]   CI (99.9%): [25082.701, 43008.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2344.192 ±(99.9%) 325.705 MB/sec [Average]
[info]   (min, avg, max) = (2243.890, 2344.192, 2478.212), stdev = 84.584
[info]   CI (99.9%): [2018.487, 2669.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   108968.144 ±(99.9%) 45187.679 B/op [Average]
[info]   (min, avg, max) = (103099.971, 108968.144, 129933.135), stdev = 11735.097
[info]   CI (99.9%): [63780.465, 154155.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2265.768 ±(99.9%) 890.523 MB/sec [Average]
[info]   (min, avg, max) = (1906.670, 2265.768, 2551.166), stdev = 231.266
[info]   CI (99.9%): [1375.245, 3156.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   105486.301 ±(99.9%) 65311.482 B/op [Average]
[info]   (min, avg, max) = (87785.190, 105486.301, 133758.170), stdev = 16961.184
[info]   CI (99.9%): [40174.819, 170797.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2.211 ±(99.9%) 7.172 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.211, 3.719), stdev = 1.862
[info]   CI (99.9%): [≈ 0, 9.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   105.474 ±(99.9%) 346.293 B/op [Average]
[info]   (min, avg, max) = (1.843, 105.474, 187.752), stdev = 89.931
[info]   CI (99.9%): [≈ 0, 451.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 13.400, 17.000), stdev = 3.362
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.00% complete, ETA 01:23:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3294.454 ops/s
[info] # Warmup Iteration   2: 23995.011 ops/s
[info] # Warmup Iteration   3: 34664.329 ops/s
[info] Iteration   1: 32262.765 ops/s
[info]                  ·gc.alloc.rate:                   1823.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              88960.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1609.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78493.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.046 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 30964.360 ops/s
[info]                  ·gc.alloc.rate:                   1975.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              100399.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1953.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99308.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.755 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 31527.393 ops/s
[info]                  ·gc.alloc.rate:                   1981.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              98900.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1926.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96171.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.184 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 408.549 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   4: 34647.506 ops/s
[info]                  ·gc.alloc.rate:                   1893.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              86033.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1915.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87023.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.624 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.351 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 34139.177 ops/s
[info]                  ·gc.alloc.rate:                        1874.548 MB/sec
[info]                  ·gc.alloc.rate.norm:                   86416.800 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.030 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 1.383 B/op
[info]                  ·gc.churn.Metaspace:                   0.082 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              3.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1772.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          81696.662 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  5.743 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             264.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           3.343 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      154.128 B/op
[info]                  ·gc.count:                             7.000 counts
[info]                  ·gc.time:                              54.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala":
[info]   32708.240 ±(99.9%) 6221.591 ops/s [Average]
[info]   (min, avg, max) = (30964.360, 32708.240, 34647.506), stdev = 1615.727
[info]   CI (99.9%): [26486.650, 38929.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1909.760 ±(99.9%) 260.411 MB/sec [Average]
[info]   (min, avg, max) = (1823.722, 1909.760, 1981.192), stdev = 67.628
[info]   CI (99.9%): [1649.349, 2170.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   92142.057 ±(99.9%) 26822.580 B/op [Average]
[info]   (min, avg, max) = (86033.091, 92142.057, 100399.222), stdev = 6965.739
[info]   CI (99.9%): [65319.476, 118964.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.006 ±(99.9%) 0.052 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.030), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.277 ±(99.9%) 2.381 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.277, 1.383), stdev = 0.618
[info]   CI (99.9%): [≈ 0, 2.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.016 ±(99.9%) 0.141 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.082), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.756 ±(99.9%) 6.505 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.756, 3.778), stdev = 1.689
[info]   CI (99.9%): [≈ 0, 7.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1835.500 ±(99.9%) 557.970 MB/sec [Average]
[info]   (min, avg, max) = (1609.155, 1835.500, 1953.872), stdev = 144.903
[info]   CI (99.9%): [1277.530, 2393.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   88538.670 ±(99.9%) 34669.315 B/op [Average]
[info]   (min, avg, max) = (78493.719, 88538.670, 99308.128), stdev = 9003.511
[info]   CI (99.9%): [53869.355, 123207.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen":
[info]   1.149 ±(99.9%) 9.889 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.149, 5.743), stdev = 2.568
[info]   CI (99.9%): [≈ 0, 11.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   52.948 ±(99.9%) 455.902 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 52.948, 264.742), stdev = 118.396
[info]   CI (99.9%): [≈ 0, 508.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.497 ±(99.9%) 13.262 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 2.497, 8.184), stdev = 3.444
[info]   CI (99.9%): [≈ 0, 15.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   121.566 ±(99.9%) 660.749 B/op [Average]
[info]   (min, avg, max) = (3.046, 121.566, 408.549), stdev = 171.594
[info]   CI (99.9%): [≈ 0, 782.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time":
[info]   123.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 24.600, 54.000), stdev = 17.813
[info]   CI (99.9%): [123.000, 123.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.24% complete, ETA 01:22:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7805.176 ops/s
[info] # Warmup Iteration   2: 25162.707 ops/s
[info] # Warmup Iteration   3: 36489.394 ops/s
[info] Iteration   1: 38088.756 ops/s
[info]                  ·gc.alloc.rate:                   2174.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              89818.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2230.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92129.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.795 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 322.011 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 37408.377 ops/s
[info]                  ·gc.alloc.rate:                   2095.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              88138.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1907.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80237.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.423 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 438.315 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 38522.026 ops/s
[info]                  ·gc.alloc.rate:                   2174.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              88849.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2225.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90901.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.755 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 398.542 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 38983.143 ops/s
[info]                  ·gc.alloc.rate:                   2008.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              81068.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1914.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77291.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.564 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 39744.958 ops/s
[info]                  ·gc.alloc.rate:                   2045.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              80973.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1947.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77076.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.649 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala":
[info]   38549.452 ±(99.9%) 3407.530 ops/s [Average]
[info]   (min, avg, max) = (37408.377, 38549.452, 39744.958), stdev = 884.925
[info]   CI (99.9%): [35141.922, 41956.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   2099.732 ±(99.9%) 288.895 MB/sec [Average]
[info]   (min, avg, max) = (2008.068, 2099.732, 2174.810), stdev = 75.025
[info]   CI (99.9%): [1810.837, 2388.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   85769.661 ±(99.9%) 16850.038 B/op [Average]
[info]   (min, avg, max) = (80973.144, 85769.661, 89818.669), stdev = 4375.901
[info]   CI (99.9%): [68919.623, 102619.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2044.988 ±(99.9%) 644.480 MB/sec [Average]
[info]   (min, avg, max) = (1907.947, 2044.988, 2230.143), stdev = 167.369
[info]   CI (99.9%): [1400.508, 2689.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   83527.228 ±(99.9%) 28537.378 B/op [Average]
[info]   (min, avg, max) = (77076.350, 83527.228, 92129.571), stdev = 7411.066
[info]   CI (99.9%): [54989.850, 112064.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   5.640 ±(99.9%) 19.778 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 5.640, 10.423), stdev = 5.136
[info]   CI (99.9%): [≈ 0, 25.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   233.616 ±(99.9%) 820.975 B/op [Average]
[info]   (min, avg, max) = (1.649, 233.616, 438.315), stdev = 213.205
[info]   CI (99.9%): [≈ 0, 1054.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 14.200, 26.000), stdev = 7.190
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 8.47% complete, ETA 01:22:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9888.478 ops/s
[info] # Warmup Iteration   2: 23592.253 ops/s
[info] # Warmup Iteration   3: 39785.489 ops/s
[info] Iteration   1: 38563.274 ops/s
[info]                  ·gc.alloc.rate:                   2091.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              85349.175 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1957.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79902.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.348 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.820 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 37913.162 ops/s
[info]                  ·gc.alloc.rate:                   2112.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              87619.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2280.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94584.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 291.277 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 40998.657 ops/s
[info]                  ·gc.alloc.rate:                   2077.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              79734.710 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75091.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.196 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 41260.724 ops/s
[info]                  ·gc.alloc.rate:                   2075.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              79178.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75161.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.558 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 41129.292 ops/s
[info]                  ·gc.alloc.rate:                   2084.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              79759.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76130.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.593 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc":
[info]   39973.022 ±(99.9%) 6172.294 ops/s [Average]
[info]   (min, avg, max) = (37913.162, 39973.022, 41260.724), stdev = 1602.925
[info]   CI (99.9%): [33800.728, 46145.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2088.378 ±(99.9%) 57.343 MB/sec [Average]
[info]   (min, avg, max) = (2075.751, 2088.378, 2112.569), stdev = 14.892
[info]   CI (99.9%): [2031.035, 2145.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   82328.184 ±(99.9%) 14960.049 B/op [Average]
[info]   (min, avg, max) = (79178.018, 82328.184, 87619.702), stdev = 3885.077
[info]   CI (99.9%): [67368.135, 97288.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   2031.053 ±(99.9%) 539.476 MB/sec [Average]
[info]   (min, avg, max) = (1956.375, 2031.053, 2280.504), stdev = 140.100
[info]   CI (99.9%): [1491.577, 2570.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   80174.380 ±(99.9%) 31930.595 B/op [Average]
[info]   (min, avg, max) = (75091.902, 80174.380, 94584.911), stdev = 8292.274
[info]   CI (99.9%): [48243.785, 112104.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   1.928 ±(99.9%) 11.595 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.928, 7.023), stdev = 3.011
[info]   CI (99.9%): [≈ 0, 13.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   79.489 ±(99.9%) 481.234 B/op [Average]
[info]   (min, avg, max) = (1.593, 79.489, 291.277), stdev = 124.975
[info]   CI (99.9%): [≈ 0, 560.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.600, 24.000), stdev = 6.877
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 8.71% complete, ETA 01:22:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 879.349 ops/s
[info] # Warmup Iteration   2: 6361.620 ops/s
[info] # Warmup Iteration   3: 8523.941 ops/s
[info] Iteration   1: 9314.205 ops/s
[info]                  ·gc.alloc.rate:                   1273.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              215209.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219259.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.317 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 9335.705 ops/s
[info]                  ·gc.alloc.rate:                   1272.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              214456.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218518.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.448 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 749.634 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 9411.829 ops/s
[info]                  ·gc.alloc.rate:                   1278.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              213705.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     161747.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.736 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 9126.973 ops/s
[info]                  ·gc.alloc.rate:                   1245.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              214712.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1290.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     222487.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.610 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 9141.274 ops/s
[info]                  ·gc.alloc.rate:                   1245.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              214348.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     223236.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.584 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson":
[info]   9265.997 ±(99.9%) 484.530 ops/s [Average]
[info]   (min, avg, max) = (9126.973, 9265.997, 9411.829), stdev = 125.831
[info]   CI (99.9%): [8781.467, 9750.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1262.956 ±(99.9%) 62.419 MB/sec [Average]
[info]   (min, avg, max) = (1245.042, 1262.956, 1278.035), stdev = 16.210
[info]   CI (99.9%): [1200.537, 1325.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   214486.859 ±(99.9%) 2112.442 B/op [Average]
[info]   (min, avg, max) = (213705.981, 214486.859, 215209.996), stdev = 548.594
[info]   CI (99.9%): [212374.418, 216599.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1229.771 ±(99.9%) 565.069 MB/sec [Average]
[info]   (min, avg, max) = (967.308, 1229.771, 1297.618), stdev = 146.747
[info]   CI (99.9%): [664.703, 1794.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   209050.245 ±(99.9%) 102118.984 B/op [Average]
[info]   (min, avg, max) = (161747.833, 209050.245, 223236.704), stdev = 26519.976
[info]   CI (99.9%): [106931.261, 311169.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.029 ±(99.9%) 7.386 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 1.029, 4.448), stdev = 1.918
[info]   CI (99.9%): [≈ 0, 8.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   173.576 ±(99.9%) 1244.586 B/op [Average]
[info]   (min, avg, max) = (1.317, 173.576, 749.634), stdev = 323.215
[info]   CI (99.9%): [≈ 0, 1418.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.400, 20.000), stdev = 6.229
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 8.94% complete, ETA 01:22:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3985.045 ops/s
[info] # Warmup Iteration   2: 13425.183 ops/s
[info] # Warmup Iteration   3: 17032.706 ops/s
[info] Iteration   1: 21551.452 ops/s
[info]                  ·gc.alloc.rate:                   1721.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              125721.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120783.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      17.861 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1304.297 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   2: 22409.796 ops/s
[info]                  ·gc.alloc.rate:                   1804.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              126690.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138381.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.777 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 22591.010 ops/s
[info]                  ·gc.alloc.rate:                   1782.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              124211.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1775.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123675.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.450 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 20847.077 ops/s
[info]                  ·gc.alloc.rate:                   1959.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              147928.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1860.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     140388.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.896 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 143.095 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 21000.987 ops/s
[info]                  ·gc.alloc.rate:                   2035.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              152571.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1925.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144276.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 149.400 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce":
[info]   21680.065 ±(99.9%) 3064.762 ops/s [Average]
[info]   (min, avg, max) = (20847.077, 21680.065, 22591.010), stdev = 795.909
[info]   CI (99.9%): [18615.302, 24744.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1860.908 ±(99.9%) 506.286 MB/sec [Average]
[info]   (min, avg, max) = (1721.628, 1860.908, 2035.926), stdev = 131.481
[info]   CI (99.9%): [1354.623, 2367.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   135424.791 ±(99.9%) 52603.489 B/op [Average]
[info]   (min, avg, max) = (124211.951, 135424.791, 152571.130), stdev = 13660.959
[info]   CI (99.9%): [82821.302, 188028.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1837.024 ±(99.9%) 484.938 MB/sec [Average]
[info]   (min, avg, max) = (1654.005, 1837.024, 1970.514), stdev = 125.937
[info]   CI (99.9%): [1352.085, 2321.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   133501.260 ±(99.9%) 40643.650 B/op [Average]
[info]   (min, avg, max) = (120783.736, 133501.260, 144276.549), stdev = 10555.027
[info]   CI (99.9%): [92857.610, 174144.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   4.433 ±(99.9%) 29.101 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 4.433, 17.861), stdev = 7.558
[info]   CI (99.9%): [≈ 0, 33.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   325.204 ±(99.9%) 2123.074 B/op [Average]
[info]   (min, avg, max) = (1.450, 325.204, 1304.297), stdev = 551.356
[info]   CI (99.9%): [≈ 0, 2448.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 15.400, 31.000), stdev = 8.849
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.18% complete, ETA 01:22:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13608.223 ops/s
[info] # Warmup Iteration   2: 45029.001 ops/s
[info] # Warmup Iteration   3: 49815.647 ops/s
[info] Iteration   1: 45981.668 ops/s
[info]                  ·gc.alloc.rate:                   1730.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              59195.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1591.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54434.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.893 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.981 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   2: 52223.328 ops/s
[info]                  ·gc.alloc.rate:                   1711.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              51559.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1872.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56394.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.454 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 254.632 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   3: 45323.052 ops/s
[info]                  ·gc.alloc.rate:                   1378.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              47856.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1242.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43139.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 175.507 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   4: 48621.205 ops/s
[info]                  ·gc.alloc.rate:                   1369.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              44307.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1241.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40171.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.660 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 118.457 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   5: 46696.990 ops/s
[info]                  ·gc.alloc.rate:                   1322.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              44582.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1251.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42162.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.085 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.880 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala":
[info]   47769.248 ±(99.9%) 10701.347 ops/s [Average]
[info]   (min, avg, max) = (45323.052, 47769.248, 52223.328), stdev = 2779.106
[info]   CI (99.9%): [37067.902, 58470.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1502.411 ±(99.9%) 773.003 MB/sec [Average]
[info]   (min, avg, max) = (1322.836, 1502.411, 1730.257), stdev = 200.746
[info]   CI (99.9%): [729.408, 2275.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   49500.218 ±(99.9%) 23744.062 B/op [Average]
[info]   (min, avg, max) = (44307.244, 49500.218, 59195.578), stdev = 6166.257
[info]   CI (99.9%): [25756.157, 73244.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1439.593 ±(99.9%) 1095.861 MB/sec [Average]
[info]   (min, avg, max) = (1241.285, 1439.593, 1872.274), stdev = 284.592
[info]   CI (99.9%): [343.732, 2535.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   47260.383 ±(99.9%) 29079.913 B/op [Average]
[info]   (min, avg, max) = (40171.443, 47260.383, 56394.914), stdev = 7551.961
[info]   CI (99.9%): [18180.471, 76340.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   4.029 ±(99.9%) 11.807 MB/sec [Average]
[info]   (min, avg, max) = (0.085, 4.029, 8.454), stdev = 3.066
[info]   CI (99.9%): [≈ 0, 15.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   130.091 ±(99.9%) 359.467 B/op [Average]
[info]   (min, avg, max) = (2.880, 130.091, 254.632), stdev = 93.352
[info]   CI (99.9%): [≈ 0, 489.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time":
[info]   123.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 24.600, 34.000), stdev = 8.473
[info]   CI (99.9%): [123.000, 123.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.41% complete, ETA 01:21:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28394.737 ops/s
[info] # Warmup Iteration   2: 56544.279 ops/s
[info] # Warmup Iteration   3: 59070.438 ops/s
[info] Iteration   1: 66957.855 ops/s
[info]                  ·gc.alloc.rate:                   757.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              17812.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15125.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.363 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 67001.834 ops/s
[info]                  ·gc.alloc.rate:               763.234 MB/sec
[info]                  ·gc.alloc.rate.norm:          17926.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:      640.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15037.554 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   3: 65816.368 ops/s
[info]                  ·gc.alloc.rate:                   762.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              18225.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          958.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22905.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.199 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.471 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 67562.144 ops/s
[info]                  ·gc.alloc.rate:                   768.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              17889.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          639.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14897.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.108 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 67389.248 ops/s
[info]                  ·gc.alloc.rate:                   772.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              18040.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14950.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.251 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.855 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala":
[info]   66945.490 ±(99.9%) 2622.559 ops/s [Average]
[info]   (min, avg, max) = (65816.368, 66945.490, 67562.144), stdev = 681.070
[info]   CI (99.9%): [64322.931, 69568.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   764.937 ±(99.9%) 22.114 MB/sec [Average]
[info]   (min, avg, max) = (757.982, 764.937, 772.850), stdev = 5.743
[info]   CI (99.9%): [742.823, 787.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   17978.900 ±(99.9%) 618.747 B/op [Average]
[info]   (min, avg, max) = (17812.035, 17978.900, 18225.565), stdev = 160.687
[info]   CI (99.9%): [17360.153, 18597.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   704.445 ±(99.9%) 546.002 MB/sec [Average]
[info]   (min, avg, max) = (639.776, 704.445, 958.081), stdev = 141.795
[info]   CI (99.9%): [158.443, 1250.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   16583.321 ±(99.9%) 13613.280 B/op [Average]
[info]   (min, avg, max) = (14897.191, 16583.321, 22905.593), stdev = 3535.326
[info]   CI (99.9%): [2970.041, 30196.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.066 ±(99.9%) 4.997 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.066, 3.199), stdev = 1.298
[info]   CI (99.9%): [≈ 0, 6.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   25.291 ±(99.9%) 119.554 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 25.291, 76.471), stdev = 31.048
[info]   CI (99.9%): [≈ 0, 144.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.600, 17.000), stdev = 4.450
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 9.65% complete, ETA 01:21:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1577.217 ops/s
[info] # Warmup Iteration   2: 18350.747 ops/s
[info] # Warmup Iteration   3: 41069.543 ops/s
[info] Iteration   1: 40972.207 ops/s
[info]                  ·gc.alloc.rate:                   2549.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              97932.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2623.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100789.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104.749 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 41587.391 ops/s
[info]                  ·gc.alloc.rate:                   2498.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              94548.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87177.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.800 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 105.975 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 42386.041 ops/s
[info]                  ·gc.alloc.rate:                   2506.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              93083.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2654.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98559.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.319 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 40077.615 ops/s
[info]                  ·gc.alloc.rate:                   2545.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              99953.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2332.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91595.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.457 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.958 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 40801.428 ops/s
[info]                  ·gc.alloc.rate:                   2346.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              90503.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2315.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89317.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.912 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.181 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson":
[info]   41164.937 ±(99.9%) 3346.471 ops/s [Average]
[info]   (min, avg, max) = (40077.615, 41164.937, 42386.041), stdev = 869.068
[info]   CI (99.9%): [37818.466, 44511.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2489.276 ±(99.9%) 319.854 MB/sec [Average]
[info]   (min, avg, max) = (2346.342, 2489.276, 2549.574), stdev = 83.065
[info]   CI (99.9%): [2169.422, 2809.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   95204.360 ±(99.9%) 14538.715 B/op [Average]
[info]   (min, avg, max) = (90503.479, 95204.360, 99953.404), stdev = 3775.658
[info]   CI (99.9%): [80665.644, 109743.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2445.968 ±(99.9%) 681.238 MB/sec [Average]
[info]   (min, avg, max) = (2303.577, 2445.968, 2654.231), stdev = 176.915
[info]   CI (99.9%): [1764.730, 3127.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   93487.746 ±(99.9%) 22767.113 B/op [Average]
[info]   (min, avg, max) = (87177.549, 93487.746, 100789.187), stdev = 5912.547
[info]   CI (99.9%): [70720.632, 116254.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.392 ±(99.9%) 4.960 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.392, 2.800), stdev = 1.288
[info]   CI (99.9%): [≈ 0, 6.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   53.236 ±(99.9%) 188.623 B/op [Average]
[info]   (min, avg, max) = (2.319, 53.236, 105.975), stdev = 48.985
[info]   CI (99.9%): [≈ 0, 241.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.time":
[info]   76.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 15.200, 17.000), stdev = 2.490
[info]   CI (99.9%): [76.000, 76.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.88% complete, ETA 01:21:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5889.366 ops/s
[info] # Warmup Iteration   2: 29458.854 ops/s
[info] # Warmup Iteration   3: 39765.951 ops/s
[info] Iteration   1: 39165.074 ops/s
[info]                  ·gc.alloc.rate:                   1981.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              79576.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1949.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78297.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.342 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.732 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 41178.587 ops/s
[info]                  ·gc.alloc.rate:                   1897.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              72518.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62646.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.715 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 180.169 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 42833.928 ops/s
[info]                  ·gc.alloc.rate:                   1864.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              68506.172 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72740.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.530 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 43118.671 ops/s
[info]                  ·gc.alloc.rate:                   1858.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              67824.691 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60653.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.799 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 41682.165 ops/s
[info]                  ·gc.alloc.rate:                   1801.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              68031.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1673.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63170.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.786 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala":
[info]   41595.685 ±(99.9%) 6070.736 ops/s [Average]
[info]   (min, avg, max) = (39165.074, 41595.685, 43118.671), stdev = 1576.551
[info]   CI (99.9%): [35524.949, 47666.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1880.848 ±(99.9%) 253.405 MB/sec [Average]
[info]   (min, avg, max) = (1801.851, 1880.848, 1981.071), stdev = 65.809
[info]   CI (99.9%): [1627.443, 2134.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   71291.278 ±(99.9%) 19305.507 B/op [Average]
[info]   (min, avg, max) = (67824.691, 71291.278, 79576.005), stdev = 5013.579
[info]   CI (99.9%): [51985.770, 90596.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1780.802 ±(99.9%) 648.773 MB/sec [Average]
[info]   (min, avg, max) = (1639.522, 1780.802, 1979.767), stdev = 168.484
[info]   CI (99.9%): [1132.029, 2429.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   67501.687 ±(99.9%) 29404.322 B/op [Average]
[info]   (min, avg, max) = (60653.283, 67501.687, 78297.886), stdev = 7636.209
[info]   CI (99.9%): [38097.365, 96906.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.045 ±(99.9%) 7.916 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.045, 4.715), stdev = 2.056
[info]   CI (99.9%): [≈ 0, 8.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   40.003 ±(99.9%) 302.377 B/op [Average]
[info]   (min, avg, max) = (0.786, 40.003, 180.169), stdev = 78.526
[info]   CI (99.9%): [≈ 0, 342.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 13.000), stdev = 2.387
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 10.12% complete, ETA 01:21:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15060.619 ops/s
[info] # Warmup Iteration   2: 47445.311 ops/s
[info] # Warmup Iteration   3: 48854.161 ops/s
[info] Iteration   1: 53511.076 ops/s
[info]                  ·gc.alloc.rate:                   1780.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              52331.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48296.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.420 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 159.358 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 54232.128 ops/s
[info]                  ·gc.alloc.rate:                   1701.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              49371.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47379.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.833 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 55393.331 ops/s
[info]                  ·gc.alloc.rate:                   1725.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              49023.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46550.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.591 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 56606.965 ops/s
[info]                  ·gc.alloc.rate:                   1779.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              49482.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55074.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.579 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 56117.909 ops/s
[info]                  ·gc.alloc.rate:               1778.398 MB/sec
[info]                  ·gc.alloc.rate.norm:          49874.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1664.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46669.806 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala":
[info]   55172.282 ±(99.9%) 4963.032 ops/s [Average]
[info]   (min, avg, max) = (53511.076, 55172.282, 56606.965), stdev = 1288.884
[info]   CI (99.9%): [50209.250, 60135.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1753.025 ±(99.9%) 143.237 MB/sec [Average]
[info]   (min, avg, max) = (1701.347, 1753.025, 1780.024), stdev = 37.198
[info]   CI (99.9%): [1609.788, 1896.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   50016.805 ±(99.9%) 5117.600 B/op [Average]
[info]   (min, avg, max) = (49023.649, 50016.805, 52331.369), stdev = 1329.024
[info]   CI (99.9%): [44899.205, 55134.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1711.812 ±(99.9%) 581.551 MB/sec [Average]
[info]   (min, avg, max) = (1632.697, 1711.812, 1981.139), stdev = 151.027
[info]   CI (99.9%): [1130.261, 2293.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   48794.176 ±(99.9%) 13782.035 B/op [Average]
[info]   (min, avg, max) = (46550.173, 48794.176, 55074.643), stdev = 3579.151
[info]   CI (99.9%): [35012.141, 62576.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.126 ±(99.9%) 9.248 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.126, 5.420), stdev = 2.402
[info]   CI (99.9%): [≈ 0, 10.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   33.072 ±(99.9%) 271.942 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 33.072, 159.358), stdev = 70.623
[info]   CI (99.9%): [≈ 0, 305.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 13.000), stdev = 2.915
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 10.35% complete, ETA 01:21:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12644.813 ops/s
[info] # Warmup Iteration   2: 44353.080 ops/s
[info] # Warmup Iteration   3: 52309.189 ops/s
[info] Iteration   1: 51773.853 ops/s
[info]                  ·gc.alloc.rate:                   1601.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              48673.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49308.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.829 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 146.792 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 55592.295 ops/s
[info]                  ·gc.alloc.rate:                   1647.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              46619.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1613.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45657.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.584 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 56424.020 ops/s
[info]                  ·gc.alloc.rate:                   1665.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              46448.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44985.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.742 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 55764.043 ops/s
[info]                  ·gc.alloc.rate:               1656.168 MB/sec
[info]                  ·gc.alloc.rate.norm:          46742.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1625.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45884.953 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 54859.086 ops/s
[info]                  ·gc.alloc.rate:                   1623.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              46584.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37646.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.597 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   54882.660 ±(99.9%) 7027.147 ops/s [Average]
[info]   (min, avg, max) = (51773.853, 54882.660, 56424.020), stdev = 1824.928
[info]   CI (99.9%): [47855.513, 61909.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1638.749 ±(99.9%) 100.148 MB/sec [Average]
[info]   (min, avg, max) = (1601.275, 1638.749, 1665.339), stdev = 26.008
[info]   CI (99.9%): [1538.600, 1738.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   47013.751 ±(99.9%) 3595.865 B/op [Average]
[info]   (min, avg, max) = (46448.436, 47013.751, 48673.709), stdev = 933.835
[info]   CI (99.9%): [43417.886, 50609.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1557.242 ±(99.9%) 527.725 MB/sec [Average]
[info]   (min, avg, max) = (1312.290, 1557.242, 1625.785), stdev = 137.048
[info]   CI (99.9%): [1029.518, 2084.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   44696.459 ±(99.9%) 16494.081 B/op [Average]
[info]   (min, avg, max) = (37646.384, 44696.459, 49308.303), stdev = 4283.460
[info]   CI (99.9%): [28202.379, 61190.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   1.382 ±(99.9%) 8.116 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.382, 4.829), stdev = 2.108
[info]   CI (99.9%): [≈ 0, 9.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   41.143 ±(99.9%) 245.727 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41.143, 146.792), stdev = 63.815
[info]   CI (99.9%): [≈ 0, 286.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 17.000), stdev = 4.980
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 10.59% complete, ETA 01:20:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86311.818 ops/s
[info] # Warmup Iteration   2: 340472.407 ops/s
[info] # Warmup Iteration   3: 399561.368 ops/s
[info] Iteration   1: 420275.544 ops/s
[info]                  ·gc.alloc.rate:                   2284.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              8553.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2280.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8536.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.132 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 420630.096 ops/s
[info]                  ·gc.alloc.rate:                   2275.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              8505.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2282.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8534.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 420713.395 ops/s
[info]                  ·gc.alloc.rate:                   2301.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              8606.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7406.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 419974.954 ops/s
[info]                  ·gc.alloc.rate:                   2310.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              8660.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2333.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8745.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.312 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 418838.586 ops/s
[info]                  ·gc.alloc.rate:                   2314.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              8691.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2351.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8830.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce":
[info]   420086.515 ±(99.9%) 2916.061 ops/s [Average]
[info]   (min, avg, max) = (418838.586, 420086.515, 420713.395), stdev = 757.292
[info]   CI (99.9%): [417170.454, 423002.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2297.332 ±(99.9%) 65.630 MB/sec [Average]
[info]   (min, avg, max) = (2275.206, 2297.332, 2314.849), stdev = 17.044
[info]   CI (99.9%): [2231.702, 2362.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   8603.326 ±(99.9%) 292.392 B/op [Average]
[info]   (min, avg, max) = (8505.480, 8603.326, 8691.570), stdev = 75.933
[info]   CI (99.9%): [8310.934, 8895.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2245.786 ±(99.9%) 583.748 MB/sec [Average]
[info]   (min, avg, max) = (1980.462, 2245.786, 2351.794), stdev = 151.597
[info]   CI (99.9%): [1662.039, 2829.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8410.701 ±(99.9%) 2219.092 B/op [Average]
[info]   (min, avg, max) = (7406.275, 8410.701, 8830.290), stdev = 576.291
[info]   CI (99.9%): [6191.609, 10629.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.250 ±(99.9%) 1.841 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.250, 1.104), stdev = 0.478
[info]   CI (99.9%): [≈ 0, 2.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.936 ±(99.9%) 6.891 B/op [Average]
[info]   (min, avg, max) = (0.078, 0.936, 4.132), stdev = 1.790
[info]   CI (99.9%): [≈ 0, 7.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.400, 11.000), stdev = 1.140
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 10.82% complete, ETA 01:20:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.821 ops/s
[info] # Warmup Iteration   2: 1674686.466 ops/s
[info] # Warmup Iteration   3: 1816069.253 ops/s
[info] Iteration   1: 1888820.405 ops/s
[info]                  ·gc.alloc.rate:                   607.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              505.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     539.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1893513.008 ops/s
[info]                  ·gc.alloc.rate:               611.455 MB/sec
[info]                  ·gc.alloc.rate.norm:          508.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 270.200 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 1865004.092 ops/s
[info]                  ·gc.alloc.rate:                   628.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              530.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     548.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1848744.395 ops/s
[info]                  ·gc.alloc.rate:                   599.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              510.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     554.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1888089.481 ops/s
[info]                  ·gc.alloc.rate:                   614.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     543.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava":
[info]   1876834.276 ±(99.9%) 74006.573 ops/s [Average]
[info]   (min, avg, max) = (1848744.395, 1876834.276, 1893513.008), stdev = 19219.272
[info]   CI (99.9%): [1802827.703, 1950840.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   612.560 ±(99.9%) 40.913 MB/sec [Average]
[info]   (min, avg, max) = (599.913, 612.560, 628.800), stdev = 10.625
[info]   CI (99.9%): [571.647, 653.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   513.525 ±(99.9%) 38.060 B/op [Average]
[info]   (min, avg, max) = (505.874, 513.525, 530.651), stdev = 9.884
[info]   CI (99.9%): [475.465, 551.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   585.606 ±(99.9%) 560.742 MB/sec [Average]
[info]   (min, avg, max) = (325.117, 585.606, 652.171), stdev = 145.623
[info]   CI (99.9%): [24.865, 1146.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   491.412 ±(99.9%) 476.635 B/op [Average]
[info]   (min, avg, max) = (270.200, 491.412, 554.324), stdev = 123.780
[info]   CI (99.9%): [14.777, 968.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.076 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.052), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.045), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 8.000), stdev = 1.517
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.06% complete, ETA 01:20:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 152752.521 ops/s
[info] # Warmup Iteration   2: 903107.264 ops/s
[info] # Warmup Iteration   3: 801561.145 ops/s
[info] Iteration   1: 789136.821 ops/s
[info]                  ·gc.alloc.rate:               293.348 MB/sec
[info]                  ·gc.alloc.rate.norm:          584.961 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 645.693 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 806930.949 ops/s
[info]                  ·gc.alloc.rate:               308.242 MB/sec
[info]                  ·gc.alloc.rate.norm:          601.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 631.434 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 814124.883 ops/s
[info]                  ·gc.alloc.rate:                   305.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              590.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     625.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 805189.479 ops/s
[info]                  ·gc.alloc.rate:                   305.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              596.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     632.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 817181.273 ops/s
[info]                  ·gc.alloc.rate:                   307.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              592.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     623.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala":
[info]   806512.681 ±(99.9%) 41988.390 ops/s [Average]
[info]   (min, avg, max) = (789136.821, 806512.681, 817181.273), stdev = 10904.251
[info]   CI (99.9%): [764524.291, 848501.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   303.981 ±(99.9%) 23.367 MB/sec [Average]
[info]   (min, avg, max) = (293.348, 303.981, 308.242), stdev = 6.068
[info]   CI (99.9%): [280.613, 327.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   593.133 ±(99.9%) 23.710 B/op [Average]
[info]   (min, avg, max) = (584.961, 593.133, 601.092), stdev = 6.157
[info]   CI (99.9%): [569.423, 616.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   323.768 ±(99.9%) 0.123 MB/sec [Average]
[info]   (min, avg, max) = (323.743, 323.768, 323.804), stdev = 0.032
[info]   CI (99.9%): [323.645, 323.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   631.864 ±(99.9%) 33.229 B/op [Average]
[info]   (min, avg, max) = (623.527, 631.864, 645.693), stdev = 8.630
[info]   CI (99.9%): [598.635, 665.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.047 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.029), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.090 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.055), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.29% complete, ETA 01:20:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 987834.360 ops/s
[info] # Warmup Iteration   2: 1898870.163 ops/s
[info] # Warmup Iteration   3: 2133479.316 ops/s
[info] Iteration   1: 2168805.340 ops/s
[info]                  ·gc.alloc.rate:               429.215 MB/sec
[info]                  ·gc.alloc.rate.norm:          311.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 238.083 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 2084411.191 ops/s
[info]                  ·gc.alloc.rate:                   424.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     495.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2070055.159 ops/s
[info]                  ·gc.alloc.rate:                   406.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              308.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     249.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2090437.942 ops/s
[info]                  ·gc.alloc.rate:               416.235 MB/sec
[info]                  ·gc.alloc.rate.norm:          313.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 247.764 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 2091342.467 ops/s
[info]                  ·gc.alloc.rate:                   412.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              310.097 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     247.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala":
[info]   2101010.420 ±(99.9%) 149571.130 ops/s [Average]
[info]   (min, avg, max) = (2070055.159, 2101010.420, 2168805.340), stdev = 38843.147
[info]   CI (99.9%): [1951439.290, 2250581.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   417.720 ±(99.9%) 35.419 MB/sec [Average]
[info]   (min, avg, max) = (406.541, 417.720, 429.215), stdev = 9.198
[info]   CI (99.9%): [382.301, 453.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   312.888 ±(99.9%) 17.692 B/op [Average]
[info]   (min, avg, max) = (308.977, 312.888, 320.565), stdev = 4.595
[info]   CI (99.9%): [295.195, 330.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   394.402 ±(99.9%) 564.941 MB/sec [Average]
[info]   (min, avg, max) = (328.143, 394.402, 656.850), stdev = 146.713
[info]   CI (99.9%): [≈ 0, 959.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   295.878 ±(99.9%) 431.024 B/op [Average]
[info]   (min, avg, max) = (238.083, 295.878, 495.947), stdev = 111.936
[info]   CI (99.9%): [≈ 0, 726.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.018 ±(99.9%) 0.074 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.032), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 11.53% complete, ETA 01:20:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5879.731 ops/s
[info] # Warmup Iteration   2: 103513.295 ops/s
[info] # Warmup Iteration   3: 149437.643 ops/s
[info] Iteration   1: 167436.606 ops/s
[info]                  ·gc.alloc.rate:                   4365.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              41029.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4317.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40575.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.152 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 168061.140 ops/s
[info]                  ·gc.alloc.rate:                   4365.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              40885.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4038.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37815.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.585 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 169966.317 ops/s
[info]                  ·gc.alloc.rate:                   4457.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              41277.827 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4405.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40796.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.964 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 169359.253 ops/s
[info]                  ·gc.alloc.rate:                   4464.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              41477.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4418.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41056.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.580 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   5: 169926.812 ops/s
[info]                  ·gc.alloc.rate:                   4464.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              41350.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4084.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37833.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.964 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson":
[info]   168950.026 ±(99.9%) 4405.154 ops/s [Average]
[info]   (min, avg, max) = (167436.606, 168950.026, 169966.317), stdev = 1144.004
[info]   CI (99.9%): [164544.872, 173355.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4423.664 ±(99.9%) 203.768 MB/sec [Average]
[info]   (min, avg, max) = (4365.552, 4423.664, 4464.602), stdev = 52.918
[info]   CI (99.9%): [4219.896, 4627.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   41203.980 ±(99.9%) 930.804 B/op [Average]
[info]   (min, avg, max) = (40885.437, 41203.980, 41477.604), stdev = 241.727
[info]   CI (99.9%): [40273.176, 42134.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4253.053 ±(99.9%) 692.718 MB/sec [Average]
[info]   (min, avg, max) = (4038.200, 4253.053, 4418.932), stdev = 179.897
[info]   CI (99.9%): [3560.335, 4945.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   39615.523 ±(99.9%) 6329.565 B/op [Average]
[info]   (min, avg, max) = (37815.859, 39615.523, 41056.293), stdev = 1643.768
[info]   CI (99.9%): [33285.958, 45945.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.112 ±(99.9%) 0.263 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.112, 0.229), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.049 ±(99.9%) 2.486 B/op [Average]
[info]   (min, avg, max) = (0.580, 1.049, 2.152), stdev = 0.646
[info]   CI (99.9%): [≈ 0, 3.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   63.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (12.000, 12.600, 13.000), stdev = 0.548
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   88.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (16.000, 17.600, 19.000), stdev = 1.517
[info]   CI (99.9%): [88.000, 88.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 11.76% complete, ETA 01:19:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 102986.248 ops/s
[info] # Warmup Iteration   2: 403634.444 ops/s
[info] # Warmup Iteration   3: 426828.489 ops/s
[info] Iteration   1: 456383.858 ops/s
[info]                  ·gc.alloc.rate:                   1498.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              5166.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4530.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.508 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 461314.178 ops/s
[info]                  ·gc.alloc.rate:                   1528.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              5213.540 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5563.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.338 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 463272.489 ops/s
[info]                  ·gc.alloc.rate:                   1510.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              5129.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4419.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.283 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 465056.279 ops/s
[info]                  ·gc.alloc.rate:                   1534.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              5192.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5532.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 463505.802 ops/s
[info]                  ·gc.alloc.rate:               1530.355 MB/sec
[info]                  ·gc.alloc.rate.norm:          5194.296 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1318.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4474.125 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce":
[info]   461906.521 ±(99.9%) 12943.437 ops/s [Average]
[info]   (min, avg, max) = (456383.858, 461906.521, 465056.279), stdev = 3361.370
[info]   CI (99.9%): [448963.084, 474849.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1520.390 ±(99.9%) 58.822 MB/sec [Average]
[info]   (min, avg, max) = (1498.591, 1520.390, 1534.422), stdev = 15.276
[info]   CI (99.9%): [1461.567, 1579.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5179.395 ±(99.9%) 124.648 B/op [Average]
[info]   (min, avg, max) = (5129.663, 5179.395, 5213.540), stdev = 32.371
[info]   CI (99.9%): [5054.747, 5304.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1439.801 ±(99.9%) 678.752 MB/sec [Average]
[info]   (min, avg, max) = (1301.375, 1439.801, 1634.747), stdev = 176.270
[info]   CI (99.9%): [761.049, 2118.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4903.943 ±(99.9%) 2268.530 B/op [Average]
[info]   (min, avg, max) = (4419.893, 4903.943, 5563.461), stdev = 589.130
[info]   CI (99.9%): [2635.413, 7172.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.918 ±(99.9%) 5.795 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.918, 3.508), stdev = 1.505
[info]   CI (99.9%): [≈ 0, 6.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.158 ±(99.9%) 19.981 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.158, 12.096), stdev = 5.189
[info]   CI (99.9%): [≈ 0, 23.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 14.000), stdev = 3.536
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 12.00% complete, ETA 01:19:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.828 ops/s
[info] # Warmup Iteration   2: 2366706.454 ops/s
[info] # Warmup Iteration   3: 2546361.527 ops/s
[info] Iteration   1: 2651267.984 ops/s
[info]                  ·gc.alloc.rate:                   1277.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              758.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     772.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 2687031.557 ops/s
[info]                  ·gc.alloc.rate:                   1276.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     763.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.945 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 2628231.160 ops/s
[info]                  ·gc.alloc.rate:                   1249.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.982 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     775.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2601832.216 ops/s
[info]                  ·gc.alloc.rate:                   1229.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              743.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     586.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2622388.511 ops/s
[info]                  ·gc.alloc.rate:                   1264.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              758.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     778.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava":
[info]   2638150.286 ±(99.9%) 125179.652 ops/s [Average]
[info]   (min, avg, max) = (2601832.216, 2638150.286, 2687031.557), stdev = 32508.758
[info]   CI (99.9%): [2512970.633, 2763329.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   1259.477 ±(99.9%) 78.863 MB/sec [Average]
[info]   (min, avg, max) = (1229.369, 1259.477, 1277.987), stdev = 20.480
[info]   CI (99.9%): [1180.614, 1338.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   751.365 ±(99.9%) 26.524 B/op [Average]
[info]   (min, avg, max) = (743.664, 751.365, 758.700), stdev = 6.888
[info]   CI (99.9%): [724.842, 777.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1233.153 ±(99.9%) 568.239 MB/sec [Average]
[info]   (min, avg, max) = (969.223, 1233.153, 1303.029), stdev = 147.570
[info]   CI (99.9%): [664.914, 1801.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   735.201 ±(99.9%) 321.295 B/op [Average]
[info]   (min, avg, max) = (586.298, 735.201, 778.435), stdev = 83.439
[info]   CI (99.9%): [413.906, 1056.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.038 ±(99.9%) 8.589 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.038, 5.028), stdev = 2.231
[info]   CI (99.9%): [≈ 0, 9.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.608 ±(99.9%) 5.030 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.608, 2.945), stdev = 1.306
[info]   CI (99.9%): [≈ 0, 5.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.000, 14.000), stdev = 4.301
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.24% complete, ETA 01:19:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 438624.313 ops/s
[info] # Warmup Iteration   2: 1023282.936 ops/s
[info] # Warmup Iteration   3: 1206717.444 ops/s
[info] Iteration   1: 1204370.468 ops/s
[info]                  ·gc.alloc.rate:                   567.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              740.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     421.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1201707.978 ops/s
[info]                  ·gc.alloc.rate:               573.313 MB/sec
[info]                  ·gc.alloc.rate.norm:          750.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 845.410 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 1203344.942 ops/s
[info]                  ·gc.alloc.rate:                   579.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              757.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     846.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1200848.155 ops/s
[info]                  ·gc.alloc.rate:                   570.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     851.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1211184.335 ops/s
[info]                  ·gc.alloc.rate:               568.382 MB/sec
[info]                  ·gc.alloc.rate.norm:          738.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 422.865 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala":
[info]   1204291.176 ±(99.9%) 15752.922 ops/s [Average]
[info]   (min, avg, max) = (1200848.155, 1204291.176, 1211184.335), stdev = 4090.984
[info]   CI (99.9%): [1188538.253, 1220044.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   571.767 ±(99.9%) 18.513 MB/sec [Average]
[info]   (min, avg, max) = (567.012, 571.767, 579.203), stdev = 4.808
[info]   CI (99.9%): [553.254, 590.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   747.212 ±(99.9%) 29.700 B/op [Average]
[info]   (min, avg, max) = (738.390, 747.212, 757.561), stdev = 7.713
[info]   CI (99.9%): [717.512, 776.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   518.006 ±(99.9%) 682.154 MB/sec [Average]
[info]   (min, avg, max) = (322.404, 518.006, 649.469), stdev = 177.153
[info]   CI (99.9%): [≈ 0, 1200.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   677.446 ±(99.9%) 897.627 B/op [Average]
[info]   (min, avg, max) = (421.331, 677.446, 851.205), stdev = 233.111
[info]   CI (99.9%): [≈ 0, 1575.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.027), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.47% complete, ETA 01:19:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1209725.701 ops/s
[info] # Warmup Iteration   2: 2716931.236 ops/s
[info] # Warmup Iteration   3: 3020720.944 ops/s
[info] Iteration   1: 3011862.587 ops/s
[info]                  ·gc.alloc.rate:                   1427.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     680.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2975655.452 ops/s
[info]                  ·gc.alloc.rate:                   1415.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     693.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3027762.364 ops/s
[info]                  ·gc.alloc.rate:                   1433.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     686.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2946821.698 ops/s
[info]                  ·gc.alloc.rate:                   1408.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.406 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     709.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3020948.274 ops/s
[info]                  ·gc.alloc.rate:                   1464.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              762.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     871.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala":
[info]   2996610.075 ±(99.9%) 132181.884 ops/s [Average]
[info]   (min, avg, max) = (2946821.698, 2996610.075, 3027762.364), stdev = 34327.216
[info]   CI (99.9%): [2864428.191, 3128791.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1429.795 ±(99.9%) 82.945 MB/sec [Average]
[info]   (min, avg, max) = (1408.759, 1429.795, 1464.149), stdev = 21.541
[info]   CI (99.9%): [1346.849, 1512.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   750.912 ±(99.9%) 27.841 B/op [Average]
[info]   (min, avg, max) = (745.035, 750.912, 762.774), stdev = 7.230
[info]   CI (99.9%): [723.070, 778.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1387.176 ±(99.9%) 615.142 MB/sec [Average]
[info]   (min, avg, max) = (1302.928, 1387.176, 1672.408), stdev = 159.750
[info]   CI (99.9%): [772.034, 2002.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   728.323 ±(99.9%) 310.540 B/op [Average]
[info]   (min, avg, max) = (680.880, 728.323, 871.271), stdev = 80.646
[info]   CI (99.9%): [417.783, 1038.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.013, 0.022), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 12.71% complete, ETA 01:19:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1922753.743 ops/s
[info] # Warmup Iteration   2: 3113679.383 ops/s
[info] # Warmup Iteration   3: 3232382.675 ops/s
[info] Iteration   1: 3238058.382 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3234592.161 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3233971.034 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3236756.036 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3238659.626 ops/s
[info]                  ·gc.alloc.rate:      0.811 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.394 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   3236407.448 ±(99.9%) 7973.433 ops/s [Average]
[info]   (min, avg, max) = (3233971.034, 3236407.448, 3238659.626), stdev = 2070.675
[info]   CI (99.9%): [3228434.014, 3244380.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.162 ±(99.9%) 1.396 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.162, 0.811), stdev = 0.363
[info]   CI (99.9%): [≈ 0, 1.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.079 ±(99.9%) 0.678 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.079, 0.394), stdev = 0.176
[info]   CI (99.9%): [≈ 0, 0.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 12.94% complete, ETA 01:18:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43568.006 ops/s
[info] # Warmup Iteration   2: 551047.280 ops/s
[info] # Warmup Iteration   3: 579860.921 ops/s
[info] Iteration   1: 1011753.743 ops/s
[info]                  ·gc.alloc.rate:                   1073.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              1669.934 B/op
[info]                  ·gc.churn.PS_Eden_Space:          961.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1496.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.715 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1000310.518 ops/s
[info]                  ·gc.alloc.rate:                   1076.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              1692.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:          961.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1512.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.114 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1011762.565 ops/s
[info]                  ·gc.alloc.rate:                   1092.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              1699.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1284.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1997.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.718 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.228 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 972720.004 ops/s
[info]                  ·gc.alloc.rate:                   1037.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              1679.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:          960.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1554.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.472 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1004126.145 ops/s
[info]                  ·gc.alloc.rate:                   1095.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              1716.539 B/op
[info]                  ·gc.churn.PS_Eden_Space:          959.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1503.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson":
[info]   1000134.595 ±(99.9%) 62022.195 ops/s [Average]
[info]   (min, avg, max) = (972720.004, 1000134.595, 1011762.565), stdev = 16106.967
[info]   CI (99.9%): [938112.400, 1062156.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1075.060 ±(99.9%) 87.992 MB/sec [Average]
[info]   (min, avg, max) = (1037.921, 1075.060, 1095.134), stdev = 22.851
[info]   CI (99.9%): [987.067, 1163.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1691.613 ±(99.9%) 69.501 B/op [Average]
[info]   (min, avg, max) = (1669.934, 1691.613, 1716.539), stdev = 18.049
[info]   CI (99.9%): [1622.113, 1761.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1025.525 ±(99.9%) 557.171 MB/sec [Average]
[info]   (min, avg, max) = (959.261, 1025.525, 1284.358), stdev = 144.695
[info]   CI (99.9%): [468.355, 1582.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1612.870 ±(99.9%) 833.132 B/op [Average]
[info]   (min, avg, max) = (1496.331, 1612.870, 1997.821), stdev = 216.362
[info]   CI (99.9%): [779.738, 2446.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.337 ±(99.9%) 3.930 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.337, 2.718), stdev = 1.021
[info]   CI (99.9%): [≈ 0, 5.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.101 ±(99.9%) 6.119 B/op [Average]
[info]   (min, avg, max) = (0.065, 2.101, 4.228), stdev = 1.589
[info]   CI (99.9%): [≈ 0, 8.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.600, 12.000), stdev = 3.782
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 13.18% complete, ETA 01:18:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16995.374 ops/s
[info] # Warmup Iteration   2: 140387.662 ops/s
[info] # Warmup Iteration   3: 197202.661 ops/s
[info] Iteration   1: 225142.286 ops/s
[info]                  ·gc.alloc.rate:                   3075.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              21493.178 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2921.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20420.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.998 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 224467.047 ops/s
[info]                  ·gc.alloc.rate:                   2785.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              19527.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2618.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18360.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.067 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 221928.620 ops/s
[info]                  ·gc.alloc.rate:                   2753.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              19530.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2647.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18772.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 218767.293 ops/s
[info]                  ·gc.alloc.rate:                   2736.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              19689.958 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2677.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19260.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.449 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 223205.469 ops/s
[info]                  ·gc.alloc.rate:                   2802.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              19755.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2697.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19018.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce":
[info]   222702.143 ±(99.9%) 9704.063 ops/s [Average]
[info]   (min, avg, max) = (218767.293, 222702.143, 225142.286), stdev = 2520.114
[info]   CI (99.9%): [212998.080, 232406.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate":
[info]   2830.759 ±(99.9%) 535.599 MB/sec [Average]
[info]   (min, avg, max) = (2736.949, 2830.759, 3075.310), stdev = 139.093
[info]   CI (99.9%): [2295.161, 3366.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   19999.411 ±(99.9%) 3238.316 B/op [Average]
[info]   (min, avg, max) = (19527.800, 19999.411, 21493.178), stdev = 840.980
[info]   CI (99.9%): [16761.096, 23237.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2712.567 ±(99.9%) 465.076 MB/sec [Average]
[info]   (min, avg, max) = (2618.723, 2712.567, 2921.857), stdev = 120.779
[info]   CI (99.9%): [2247.491, 3177.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19166.713 ±(99.9%) 2987.852 B/op [Average]
[info]   (min, avg, max) = (18360.507, 19166.713, 20420.697), stdev = 775.936
[info]   CI (99.9%): [16178.862, 22154.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.660 ±(99.9%) 3.245 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.660, 1.717), stdev = 0.843
[info]   CI (99.9%): [≈ 0, 3.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.621 ±(99.9%) 22.693 B/op [Average]
[info]   (min, avg, max) = (0.294, 4.621, 11.998), stdev = 5.893
[info]   CI (99.9%): [≈ 0, 27.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.000, 17.000), stdev = 2.828
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.41% complete, ETA 01:18:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89719.720 ops/s
[info] # Warmup Iteration   2: 390182.457 ops/s
[info] # Warmup Iteration   3: 403564.567 ops/s
[info] Iteration   1: 442365.782 ops/s
[info]                  ·gc.alloc.rate:                   305.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              1086.459 B/op
[info]                  ·gc.churn.PS_Eden_Space:          319.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1135.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.113 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.517 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 419811.137 ops/s
[info]                  ·gc.alloc.rate:               294.719 MB/sec
[info]                  ·gc.alloc.rate.norm:          1104.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1196.266 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 444023.451 ops/s
[info]                  ·gc.alloc.rate:                   307.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              1091.303 B/op
[info]                  ·gc.churn.PS_Eden_Space:          317.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1123.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 435690.983 ops/s
[info]                  ·gc.alloc.rate:                   303.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              1097.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          317.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1145.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 444133.419 ops/s
[info]                  ·gc.alloc.rate:               311.748 MB/sec
[info]                  ·gc.alloc.rate.norm:          1104.739 B/op
[info]                  ·gc.churn.PS_Eden_Space:      317.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1123.645 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala":
[info]   437204.955 ±(99.9%) 39736.642 ops/s [Average]
[info]   (min, avg, max) = (419811.137, 437204.955, 444133.419), stdev = 10319.480
[info]   CI (99.9%): [397468.313, 476941.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   304.697 ±(99.9%) 24.407 MB/sec [Average]
[info]   (min, avg, max) = (294.719, 304.697, 311.748), stdev = 6.338
[info]   CI (99.9%): [280.290, 329.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1096.952 ±(99.9%) 31.399 B/op [Average]
[info]   (min, avg, max) = (1086.459, 1096.952, 1104.899), stdev = 8.154
[info]   CI (99.9%): [1065.553, 1128.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   317.881 ±(99.9%) 4.206 MB/sec [Average]
[info]   (min, avg, max) = (317.073, 317.881, 319.090), stdev = 1.092
[info]   CI (99.9%): [313.676, 322.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1144.898 ±(99.9%) 115.883 B/op [Average]
[info]   (min, avg, max) = (1123.645, 1144.898, 1196.266), stdev = 30.094
[info]   CI (99.9%): [1029.015, 1260.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.431 ±(99.9%) 3.621 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.431, 2.113), stdev = 0.940
[info]   CI (99.9%): [≈ 0, 4.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.533 ±(99.9%) 12.882 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.533, 7.517), stdev = 3.345
[info]   CI (99.9%): [≈ 0, 14.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.65% complete, ETA 01:18:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 610731.744 ops/s
[info] # Warmup Iteration   2: 1228505.929 ops/s
[info] # Warmup Iteration   3: 1252383.544 ops/s
[info] Iteration   1: 1251444.715 ops/s
[info]                  ·gc.alloc.rate:                   246.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              310.291 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     321.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1262819.243 ops/s
[info]                  ·gc.alloc.rate:      243.935 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1313007.979 ops/s
[info]                  ·gc.alloc.rate:               260.313 MB/sec
[info]                  ·gc.alloc.rate.norm:          311.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 392.857 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1319526.628 ops/s
[info]                  ·gc.alloc.rate:               262.844 MB/sec
[info]                  ·gc.alloc.rate.norm:          313.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 390.913 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1318502.469 ops/s
[info]                  ·gc.alloc.rate:                   264.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              315.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     392.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala":
[info]   1293060.207 ±(99.9%) 127596.112 ops/s [Average]
[info]   (min, avg, max) = (1251444.715, 1293060.207, 1319526.628), stdev = 33136.305
[info]   CI (99.9%): [1165464.094, 1420656.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   255.661 ±(99.9%) 36.948 MB/sec [Average]
[info]   (min, avg, max) = (243.935, 255.661, 264.482), stdev = 9.595
[info]   CI (99.9%): [218.713, 292.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   311.095 ±(99.9%) 17.074 B/op [Average]
[info]   (min, avg, max) = (304.000, 311.095, 315.682), stdev = 4.434
[info]   CI (99.9%): [294.020, 328.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   247.955 ±(99.9%) 547.138 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 247.955, 328.431), stdev = 142.090
[info]   CI (99.9%): [≈ 0, 795.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   299.500 ±(99.9%) 655.243 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 299.500, 392.857), stdev = 170.165
[info]   CI (99.9%): [≈ 0, 954.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.003 ±(99.9%) 0.017 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.013), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 4.000), stdev = 1.643
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 13.88% complete, ETA 01:17:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6787.343 ops/s
[info] # Warmup Iteration   2: 75619.889 ops/s
[info] # Warmup Iteration   3: 116663.852 ops/s
[info] Iteration   1: 124932.862 ops/s
[info]                  ·gc.alloc.rate:                   4084.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              51459.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3962.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49917.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.147 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 123867.360 ops/s
[info]                  ·gc.alloc.rate:                   4098.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              52059.926 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4020.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51061.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.529 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 124682.653 ops/s
[info]                  ·gc.alloc.rate:                   4118.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              51986.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3717.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46925.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.788 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 121028.553 ops/s
[info]                  ·gc.alloc.rate:                   4016.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              52231.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4073.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52972.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.083 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 125078.596 ops/s
[info]                  ·gc.alloc.rate:                   4132.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              51996.178 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3740.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47066.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.524 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson":
[info]   123918.005 ±(99.9%) 6475.808 ops/s [Average]
[info]   (min, avg, max) = (121028.553, 123918.005, 125078.596), stdev = 1681.747
[info]   CI (99.9%): [117442.197, 130393.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4090.281 ±(99.9%) 173.113 MB/sec [Average]
[info]   (min, avg, max) = (4016.664, 4090.281, 4132.262), stdev = 44.957
[info]   CI (99.9%): [3917.168, 4263.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51946.562 ±(99.9%) 1114.848 B/op [Average]
[info]   (min, avg, max) = (51459.360, 51946.562, 52231.259), stdev = 289.523
[info]   CI (99.9%): [50831.713, 53061.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3902.952 ±(99.9%) 630.477 MB/sec [Average]
[info]   (min, avg, max) = (3717.627, 3902.952, 4073.691), stdev = 163.733
[info]   CI (99.9%): [3272.475, 4533.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   49588.839 ±(99.9%) 10038.164 B/op [Average]
[info]   (min, avg, max) = (46925.624, 49588.839, 52972.822), stdev = 2606.879
[info]   CI (99.9%): [39550.674, 59627.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.338 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.096, 0.250), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.214 ±(99.9%) 4.253 B/op [Average]
[info]   (min, avg, max) = (0.524, 1.214, 3.147), stdev = 1.105
[info]   CI (99.9%): [≈ 0, 5.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.count":
[info]   58.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.600, 12.000), stdev = 0.548
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.time":
[info]   81.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 16.200, 18.000), stdev = 1.304
[info]   CI (99.9%): [81.000, 81.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 14.12% complete, ETA 01:17:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74186.454 ops/s
[info] # Warmup Iteration   2: 314383.989 ops/s
[info] # Warmup Iteration   3: 331405.275 ops/s
[info] Iteration   1: 343333.795 ops/s
[info]                  ·gc.alloc.rate:                   1880.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              8618.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1944.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8910.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.478 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.775 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 347223.418 ops/s
[info]                  ·gc.alloc.rate:                   1882.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              8531.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1938.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8785.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.913 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.139 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 345613.346 ops/s
[info]                  ·gc.alloc.rate:                   1875.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              8539.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7394.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.267 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.771 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 338455.257 ops/s
[info]                  ·gc.alloc.rate:                   1871.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              8701.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9118.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 345985.794 ops/s
[info]                  ·gc.alloc.rate:                   1897.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              8631.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7500.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce":
[info]   344122.322 ±(99.9%) 13345.949 ops/s [Average]
[info]   (min, avg, max) = (338455.257, 344122.322, 347223.418), stdev = 3465.901
[info]   CI (99.9%): [330776.373, 357468.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1881.428 ±(99.9%) 38.714 MB/sec [Average]
[info]   (min, avg, max) = (1871.206, 1881.428, 1897.531), stdev = 10.054
[info]   CI (99.9%): [1842.714, 1920.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   8604.664 ±(99.9%) 270.876 B/op [Average]
[info]   (min, avg, max) = (8531.846, 8604.664, 8701.541), stdev = 70.346
[info]   CI (99.9%): [8333.788, 8875.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1823.248 ±(99.9%) 658.771 MB/sec [Average]
[info]   (min, avg, max) = (1623.735, 1823.248, 1960.811), stdev = 171.081
[info]   CI (99.9%): [1164.477, 2482.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8341.834 ±(99.9%) 3180.808 B/op [Average]
[info]   (min, avg, max) = (7394.315, 8341.834, 9118.227), stdev = 826.046
[info]   CI (99.9%): [5161.027, 11522.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.748 ±(99.9%) 2.603 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.748, 1.478), stdev = 0.676
[info]   CI (99.9%): [≈ 0, 3.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.414 ±(99.9%) 11.892 B/op [Average]
[info]   (min, avg, max) = (0.189, 3.414, 6.775), stdev = 3.088
[info]   CI (99.9%): [≈ 0, 15.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.600, 18.000), stdev = 4.561
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.35% complete, ETA 01:17:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 540163.966 ops/s
[info] # Warmup Iteration   2: 2067253.772 ops/s
[info] # Warmup Iteration   3: 2285579.978 ops/s
[info] Iteration   1: 2288564.272 ops/s
[info]                  ·gc.alloc.rate:                   631.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              434.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     447.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2283260.722 ops/s
[info]                  ·gc.alloc.rate:                   641.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              441.923 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     449.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2230147.800 ops/s
[info]                  ·gc.alloc.rate:               629.975 MB/sec
[info]                  ·gc.alloc.rate.norm:          444.461 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 460.260 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 2278039.666 ops/s
[info]                  ·gc.alloc.rate:                   632.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     451.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2226819.566 ops/s
[info]                  ·gc.alloc.rate:                   616.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              435.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     462.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.747 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.648 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala":
[info]   2261366.405 ±(99.9%) 116560.208 ops/s [Average]
[info]   (min, avg, max) = (2226819.566, 2261366.405, 2288564.272), stdev = 30270.316
[info]   CI (99.9%): [2144806.197, 2377926.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   630.209 ±(99.9%) 34.272 MB/sec [Average]
[info]   (min, avg, max) = (616.346, 630.209, 641.117), stdev = 8.900
[info]   CI (99.9%): [595.937, 664.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   438.566 ±(99.9%) 16.992 B/op [Average]
[info]   (min, avg, max) = (434.134, 438.566, 444.461), stdev = 4.413
[info]   CI (99.9%): [421.574, 455.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   652.391 ±(99.9%) 6.366 MB/sec [Average]
[info]   (min, avg, max) = (650.150, 652.391, 654.217), stdev = 1.653
[info]   CI (99.9%): [646.025, 658.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   454.061 ±(99.9%) 26.341 B/op [Average]
[info]   (min, avg, max) = (447.114, 454.061, 462.368), stdev = 6.841
[info]   CI (99.9%): [427.720, 480.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.765 ±(99.9%) 6.420 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.765, 3.747), stdev = 1.667
[info]   CI (99.9%): [≈ 0, 7.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.540 ±(99.9%) 4.538 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.540, 2.648), stdev = 1.179
[info]   CI (99.9%): [≈ 0, 5.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 9.000), stdev = 1.095
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.59% complete, ETA 01:17:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1104138.396 ops/s
[info] # Warmup Iteration   2: 3151333.719 ops/s
[info] # Warmup Iteration   3: 3499158.201 ops/s
[info] Iteration   1: 3465782.665 ops/s
[info]                  ·gc.alloc.rate:                   963.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              437.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     447.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 3429530.270 ops/s
[info]                  ·gc.alloc.rate:                   951.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     453.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 3379531.679 ops/s
[info]                  ·gc.alloc.rate:                   953.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              443.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     460.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.658 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 3499826.979 ops/s
[info]                  ·gc.alloc.rate:                   970.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     442.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3516059.448 ops/s
[info]                  ·gc.alloc.rate:                   969.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              433.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     439.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala":
[info]   3458146.208 ±(99.9%) 212210.849 ops/s [Average]
[info]   (min, avg, max) = (3379531.679, 3458146.208, 3516059.448), stdev = 55110.484
[info]   CI (99.9%): [3245935.359, 3670357.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   961.545 ±(99.9%) 33.610 MB/sec [Average]
[info]   (min, avg, max) = (951.924, 961.545, 970.153), stdev = 8.728
[info]   CI (99.9%): [927.935, 995.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   437.581 ±(99.9%) 14.234 B/op [Average]
[info]   (min, avg, max) = (433.873, 437.581, 443.780), stdev = 3.697
[info]   CI (99.9%): [423.347, 451.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   985.551 ±(99.9%) 11.410 MB/sec [Average]
[info]   (min, avg, max) = (981.517, 985.551, 989.038), stdev = 2.963
[info]   CI (99.9%): [974.141, 996.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   448.571 ±(99.9%) 32.822 B/op [Average]
[info]   (min, avg, max) = (439.235, 448.571, 460.532), stdev = 8.524
[info]   CI (99.9%): [415.749, 481.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.794 ±(99.9%) 5.981 MB/sec [Average]
[info]   (min, avg, max) = (0.013, 0.794, 3.560), stdev = 1.553
[info]   CI (99.9%): [≈ 0, 6.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.368 ±(99.9%) 2.787 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.368, 1.658), stdev = 0.724
[info]   CI (99.9%): [≈ 0, 3.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 10.000), stdev = 3.286
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 14.82% complete, ETA 01:17:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1655834.409 ops/s
[info] # Warmup Iteration   2: 3150476.364 ops/s
[info] # Warmup Iteration   3: 3651320.641 ops/s
[info] Iteration   1: 3632799.226 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3637847.548 ops/s
[info]                  ·gc.alloc.rate:      2.415 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.045 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3648947.364 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3661964.560 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3629749.387 ops/s
[info]                  ·gc.alloc.rate:      22.283 MB/sec
[info]                  ·gc.alloc.rate.norm: 9.660 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc":
[info]   3642261.617 ±(99.9%) 50883.966 ops/s [Average]
[info]   (min, avg, max) = (3629749.387, 3642261.617, 3661964.560), stdev = 13214.404
[info]   CI (99.9%): [3591377.651, 3693145.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   4.940 ±(99.9%) 37.550 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 4.940, 22.283), stdev = 9.752
[info]   CI (99.9%): [≈ 0, 42.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2.141 ±(99.9%) 16.278 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.141, 9.660), stdev = 4.227
[info]   CI (99.9%): [≈ 0, 18.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 15.06% complete, ETA 01:16:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7086.214 ops/s
[info] # Warmup Iteration   2: 25787.255 ops/s
[info] # Warmup Iteration   3: 53012.142 ops/s
[info] Iteration   1: 51123.628 ops/s
[info]                  ·gc.alloc.rate:                   2174.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              66953.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2270.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69911.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.915 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.182 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 59392.168 ops/s
[info]                  ·gc.alloc.rate:                   2100.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              55645.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1949.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51652.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.682 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 150.557 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 59451.749 ops/s
[info]                  ·gc.alloc.rate:                   2105.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              55744.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1944.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51475.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.511 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 57509.849 ops/s
[info]                  ·gc.alloc.rate:                   2058.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              56319.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53652.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.139 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 58869.930 ops/s
[info]                  ·gc.alloc.rate:                   2097.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              56035.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2314.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61841.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.111 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson":
[info]   57269.465 ±(99.9%) 13567.554 ops/s [Average]
[info]   (min, avg, max) = (51123.628, 57269.465, 59451.749), stdev = 3523.451
[info]   CI (99.9%): [43701.911, 70837.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2107.177 ±(99.9%) 162.800 MB/sec [Average]
[info]   (min, avg, max) = (2058.002, 2107.177, 2174.872), stdev = 42.279
[info]   CI (99.9%): [1944.377, 2269.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   58139.494 ±(99.9%) 19000.097 B/op [Average]
[info]   (min, avg, max) = (55645.103, 58139.494, 66953.575), stdev = 4934.265
[info]   CI (99.9%): [39139.397, 77139.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2087.982 ±(99.9%) 722.911 MB/sec [Average]
[info]   (min, avg, max) = (1944.315, 2087.982, 2314.708), stdev = 187.738
[info]   CI (99.9%): [1365.071, 2810.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   57706.631 ±(99.9%) 30924.524 B/op [Average]
[info]   (min, avg, max) = (51475.645, 57706.631, 69911.903), stdev = 8031.001
[info]   CI (99.9%): [26782.106, 88631.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.378 ±(99.9%) 9.369 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.378, 5.682), stdev = 2.433
[info]   CI (99.9%): [≈ 0, 10.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   37.300 ±(99.9%) 247.597 B/op [Average]
[info]   (min, avg, max) = (1.111, 37.300, 150.557), stdev = 64.300
[info]   CI (99.9%): [≈ 0, 284.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 13.600, 28.000), stdev = 8.264
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 15.29% complete, ETA 01:16:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53311.310 ops/s
[info] # Warmup Iteration   2: 235732.202 ops/s
[info] # Warmup Iteration   3: 301673.206 ops/s
[info] Iteration   1: 275303.451 ops/s
[info]                  ·gc.alloc.rate:                   3102.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              17736.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2934.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16775.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.793 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.250 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 291774.339 ops/s
[info]                  ·gc.alloc.rate:                   3126.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              16864.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3295.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17777.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.786 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 292223.621 ops/s
[info]                  ·gc.alloc.rate:                   3143.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              16926.630 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3006.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16186.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.336 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 289832.013 ops/s
[info]                  ·gc.alloc.rate:                   3137.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              17035.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3033.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16471.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 294334.298 ops/s
[info]                  ·gc.alloc.rate:                   3178.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              16991.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3049.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16301.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce":
[info]   288693.544 ±(99.9%) 29474.507 ops/s [Average]
[info]   (min, avg, max) = (275303.451, 288693.544, 294334.298), stdev = 7654.436
[info]   CI (99.9%): [259219.037, 318168.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   3137.672 ±(99.9%) 106.281 MB/sec [Average]
[info]   (min, avg, max) = (3102.479, 3137.672, 3178.294), stdev = 27.601
[info]   CI (99.9%): [3031.391, 3243.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   17110.879 ±(99.9%) 1368.952 B/op [Average]
[info]   (min, avg, max) = (16864.945, 17110.879, 17736.276), stdev = 355.513
[info]   CI (99.9%): [15741.927, 18479.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3063.838 ±(99.9%) 527.431 MB/sec [Average]
[info]   (min, avg, max) = (2934.382, 3063.838, 3295.862), stdev = 136.972
[info]   CI (99.9%): [2536.407, 3591.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   16702.521 ±(99.9%) 2466.964 B/op [Average]
[info]   (min, avg, max) = (16186.556, 16702.521, 17777.743), stdev = 640.663
[info]   CI (99.9%): [14235.558, 19169.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.409 ±(99.9%) 2.986 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.409, 1.793), stdev = 0.776
[info]   CI (99.9%): [≈ 0, 3.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.319 ±(99.9%) 17.104 B/op [Average]
[info]   (min, avg, max) = (0.111, 2.319, 10.250), stdev = 4.442
[info]   CI (99.9%): [≈ 0, 19.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.600, 15.000), stdev = 1.517
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.53% complete, ETA 01:16:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80025.093 ops/s
[info] # Warmup Iteration   2: 461852.528 ops/s
[info] # Warmup Iteration   3: 561641.121 ops/s
[info] Iteration   1: 685410.341 ops/s
[info]                  ·gc.alloc.rate:                   1880.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              4317.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3738.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.792 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.818 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 691484.570 ops/s
[info]                  ·gc.alloc.rate:                   1898.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              4320.462 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4482.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.237 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 683730.843 ops/s
[info]                  ·gc.alloc.rate:                   1867.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              4298.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3808.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 674668.655 ops/s
[info]                  ·gc.alloc.rate:                   1883.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              4393.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4668.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 681868.771 ops/s
[info]                  ·gc.alloc.rate:                   1889.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              4362.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1677.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3872.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala":
[info]   683432.636 ±(99.9%) 23429.429 ops/s [Average]
[info]   (min, avg, max) = (674668.655, 683432.636, 691484.570), stdev = 6084.548
[info]   CI (99.9%): [660003.207, 706862.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1883.881 ±(99.9%) 44.008 MB/sec [Average]
[info]   (min, avg, max) = (1867.555, 1883.881, 1898.250), stdev = 11.429
[info]   CI (99.9%): [1839.873, 1927.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   4338.538 ±(99.9%) 148.200 B/op [Average]
[info]   (min, avg, max) = (4298.936, 4338.538, 4393.578), stdev = 38.487
[info]   CI (99.9%): [4190.339, 4486.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1786.090 ±(99.9%) 704.231 MB/sec [Average]
[info]   (min, avg, max) = (1628.122, 1786.090, 2001.031), stdev = 182.887
[info]   CI (99.9%): [1081.859, 2490.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4113.816 ±(99.9%) 1650.910 B/op [Average]
[info]   (min, avg, max) = (3738.484, 4113.816, 4668.011), stdev = 428.736
[info]   CI (99.9%): [2462.906, 5764.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.196 ±(99.9%) 1.290 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.196, 0.792), stdev = 0.335
[info]   CI (99.9%): [≈ 0, 1.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.450 ±(99.9%) 2.961 B/op [Average]
[info]   (min, avg, max) = (0.048, 0.450, 1.818), stdev = 0.769
[info]   CI (99.9%): [≈ 0, 3.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 10.000), stdev = 1.304
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.76% complete, ETA 01:16:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1055499.802 ops/s
[info] # Warmup Iteration   2: 2389393.611 ops/s
[info] # Warmup Iteration   3: 2876486.058 ops/s
[info] Iteration   1: 2915023.916 ops/s
[info]                  ·gc.alloc.rate:               1035.204 MB/sec
[info]                  ·gc.alloc.rate.norm:          558.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:      988.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 533.751 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 2876371.411 ops/s
[info]                  ·gc.alloc.rate:               1022.664 MB/sec
[info]                  ·gc.alloc.rate.norm:          559.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 541.627 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 2904350.777 ops/s
[info]                  ·gc.alloc.rate:                   1032.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              559.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     536.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.906 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.117 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2822565.191 ops/s
[info]                  ·gc.alloc.rate:                   1008.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              562.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     548.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2855237.343 ops/s
[info]                  ·gc.alloc.rate:                   1013.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              558.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     541.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala":
[info]   2874709.727 ±(99.9%) 144139.807 ops/s [Average]
[info]   (min, avg, max) = (2822565.191, 2874709.727, 2915023.916), stdev = 37432.650
[info]   CI (99.9%): [2730569.921, 3018849.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1022.496 ±(99.9%) 44.968 MB/sec [Average]
[info]   (min, avg, max) = (1008.587, 1022.496, 1035.204), stdev = 11.678
[info]   CI (99.9%): [977.528, 1067.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   559.687 ±(99.9%) 6.029 B/op [Average]
[info]   (min, avg, max) = (558.396, 559.687, 562.369), stdev = 1.566
[info]   CI (99.9%): [553.658, 565.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   987.185 ±(99.9%) 13.999 MB/sec [Average]
[info]   (min, avg, max) = (982.142, 987.185, 990.372), stdev = 3.635
[info]   CI (99.9%): [973.187, 1001.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   540.408 ±(99.9%) 22.467 B/op [Average]
[info]   (min, avg, max) = (533.751, 540.408, 548.997), stdev = 5.835
[info]   CI (99.9%): [517.941, 562.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.806 ±(99.9%) 6.674 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.806, 3.906), stdev = 1.733
[info]   CI (99.9%): [≈ 0, 7.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.437 ±(99.9%) 3.616 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.437, 2.117), stdev = 0.939
[info]   CI (99.9%): [≈ 0, 4.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 11.000), stdev = 3.564
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 16.00% complete, ETA 01:16:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3175.787 ops/s
[info] # Warmup Iteration   2: 86697.226 ops/s
[info] # Warmup Iteration   3: 110713.907 ops/s
[info] Iteration   1: 127348.942 ops/s
[info]                  ·gc.alloc.rate:                   4441.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              54864.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4287.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52969.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.887 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60.376 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 132417.780 ops/s
[info]                  ·gc.alloc.rate:                   4267.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              50707.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4313.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51257.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.521 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.186 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 133014.831 ops/s
[info]                  ·gc.alloc.rate:                   4279.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              50633.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4028.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47666.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.232 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 133207.131 ops/s
[info]                  ·gc.alloc.rate:                   4339.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              51277.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4400.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51989.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.492 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   5: 132181.385 ops/s
[info]                  ·gc.alloc.rate:                   4296.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              51142.597 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4077.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48536.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.248 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson":
[info]   131634.014 ±(99.9%) 9364.489 ops/s [Average]
[info]   (min, avg, max) = (127348.942, 131634.014, 133207.131), stdev = 2431.928
[info]   CI (99.9%): [122269.525, 140998.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4324.779 ±(99.9%) 272.180 MB/sec [Average]
[info]   (min, avg, max) = (4267.148, 4324.779, 4441.214), stdev = 70.684
[info]   CI (99.9%): [4052.599, 4596.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51725.170 ±(99.9%) 6839.798 B/op [Average]
[info]   (min, avg, max) = (50633.409, 51725.170, 54864.266), stdev = 1776.274
[info]   CI (99.9%): [44885.372, 58564.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4221.464 ±(99.9%) 617.196 MB/sec [Average]
[info]   (min, avg, max) = (4028.396, 4221.464, 4400.089), stdev = 160.284
[info]   CI (99.9%): [3604.268, 4838.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50483.887 ±(99.9%) 8776.397 B/op [Average]
[info]   (min, avg, max) = (47666.128, 50483.887, 52969.736), stdev = 2279.202
[info]   CI (99.9%): [41707.490, 59260.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.115 ±(99.9%) 8.158 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.115, 4.887), stdev = 2.119
[info]   CI (99.9%): [≈ 0, 9.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   13.707 ±(99.9%) 100.891 B/op [Average]
[info]   (min, avg, max) = (0.248, 13.707, 60.376), stdev = 26.201
[info]   CI (99.9%): [≈ 0, 114.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.count":
[info]   63.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (12.000, 12.600, 13.000), stdev = 0.548
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.time":
[info]   102.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (18.000, 20.400, 25.000), stdev = 2.702
[info]   CI (99.9%): [102.000, 102.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 16.24% complete, ETA 01:15:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 48565.158 ops/s
[info] # Warmup Iteration   2: 289545.264 ops/s
[info] # Warmup Iteration   3: 297500.290 ops/s
[info] Iteration   1: 317324.044 ops/s
[info]                  ·gc.alloc.rate:                   2490.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              12352.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2271.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11266.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.929 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 314247.734 ops/s
[info]                  ·gc.alloc.rate:                   2460.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              12324.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2284.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11443.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.383 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.929 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 315832.231 ops/s
[info]                  ·gc.alloc.rate:                   2511.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              12513.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2633.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13122.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 318281.149 ops/s
[info]                  ·gc.alloc.rate:                   2537.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              12546.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2329.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11519.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 317771.583 ops/s
[info]                  ·gc.alloc.rate:                   2533.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              12550.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2348.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11633.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce":
[info]   316691.348 ±(99.9%) 6328.429 ops/s [Average]
[info]   (min, avg, max) = (314247.734, 316691.348, 318281.149), stdev = 1643.473
[info]   CI (99.9%): [310362.920, 323019.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2506.730 ±(99.9%) 122.828 MB/sec [Average]
[info]   (min, avg, max) = (2460.785, 2506.730, 2537.392), stdev = 31.898
[info]   CI (99.9%): [2383.902, 2629.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12457.311 ±(99.9%) 424.078 B/op [Average]
[info]   (min, avg, max) = (12324.137, 12457.311, 12550.207), stdev = 110.132
[info]   CI (99.9%): [12033.234, 12881.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2373.639 ±(99.9%) 571.930 MB/sec [Average]
[info]   (min, avg, max) = (2271.665, 2373.639, 2633.279), stdev = 148.528
[info]   CI (99.9%): [1801.709, 2945.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11796.962 ±(99.9%) 2898.656 B/op [Average]
[info]   (min, avg, max) = (11266.768, 11796.962, 13122.304), stdev = 752.772
[info]   CI (99.9%): [8898.306, 14695.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.339 ±(99.9%) 2.262 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.339, 1.383), stdev = 0.587
[info]   CI (99.9%): [≈ 0, 2.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.696 ±(99.9%) 11.332 B/op [Average]
[info]   (min, avg, max) = (0.103, 1.696, 6.929), stdev = 2.943
[info]   CI (99.9%): [≈ 0, 13.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.600, 17.000), stdev = 2.966
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.47% complete, ETA 01:15:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 361885.229 ops/s
[info] # Warmup Iteration   2: 1832886.875 ops/s
[info] # Warmup Iteration   3: 2072584.452 ops/s
[info] Iteration   1: 2118846.835 ops/s
[info]                  ·gc.alloc.rate:                   739.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.319 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     481.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2105433.413 ops/s
[info]                  ·gc.alloc.rate:               760.047 MB/sec
[info]                  ·gc.alloc.rate.norm:          568.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:      975.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 729.520 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   3: 2073340.951 ops/s
[info]                  ·gc.alloc.rate:                   747.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              567.728 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     495.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2064620.758 ops/s
[info]                  ·gc.alloc.rate:                   725.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              553.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     497.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.594 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.739 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2132842.841 ops/s
[info]                  ·gc.alloc.rate:                   745.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     481.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.584 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala":
[info]   2099016.959 ±(99.9%) 112609.796 ops/s [Average]
[info]   (min, avg, max) = (2064620.758, 2099016.959, 2132842.841), stdev = 29244.406
[info]   CI (99.9%): [1986407.163, 2211626.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   743.688 ±(99.9%) 48.507 MB/sec [Average]
[info]   (min, avg, max) = (725.519, 743.688, 760.047), stdev = 12.597
[info]   CI (99.9%): [695.181, 792.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   557.662 ±(99.9%) 36.557 B/op [Average]
[info]   (min, avg, max) = (549.319, 557.662, 568.163), stdev = 9.494
[info]   CI (99.9%): [521.105, 594.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   716.383 ±(99.9%) 558.659 MB/sec [Average]
[info]   (min, avg, max) = (648.901, 716.383, 975.898), stdev = 145.082
[info]   CI (99.9%): [157.724, 1275.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   537.082 ±(99.9%) 415.262 B/op [Average]
[info]   (min, avg, max) = (481.005, 537.082, 729.520), stdev = 107.842
[info]   CI (99.9%): [121.821, 952.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.902 ±(99.9%) 5.928 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.902, 3.594), stdev = 1.540
[info]   CI (99.9%): [≈ 0, 6.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.683 ±(99.9%) 4.521 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.683, 2.739), stdev = 1.174
[info]   CI (99.9%): [≈ 0, 5.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 13.000), stdev = 3.209
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.71% complete, ETA 01:15:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1494063.350 ops/s
[info] # Warmup Iteration   2: 2625177.254 ops/s
[info] # Warmup Iteration   3: 2790937.527 ops/s
[info] Iteration   1: 2775565.453 ops/s
[info]                  ·gc.alloc.rate:                   976.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              553.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     559.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2743505.734 ops/s
[info]                  ·gc.alloc.rate:                   959.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     566.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2773127.507 ops/s
[info]                  ·gc.alloc.rate:                   966.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              548.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     560.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.760 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.134 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2806920.461 ops/s
[info]                  ·gc.alloc.rate:                   982.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     550.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2793428.524 ops/s
[info]                  ·gc.alloc.rate:                   983.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     552.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala":
[info]   2778509.536 ±(99.9%) 92187.684 ops/s [Average]
[info]   (min, avg, max) = (2743505.734, 2778509.536, 2806920.461), stdev = 23940.849
[info]   CI (99.9%): [2686321.852, 2870697.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   973.805 ±(99.9%) 41.224 MB/sec [Average]
[info]   (min, avg, max) = (959.359, 973.805, 983.879), stdev = 10.706
[info]   CI (99.9%): [932.581, 1015.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   551.554 ±(99.9%) 9.877 B/op [Average]
[info]   (min, avg, max) = (548.306, 551.554, 554.339), stdev = 2.565
[info]   CI (99.9%): [541.677, 561.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   985.036 ±(99.9%) 13.523 MB/sec [Average]
[info]   (min, avg, max) = (979.903, 985.036, 987.914), stdev = 3.512
[info]   CI (99.9%): [971.513, 998.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   557.965 ±(99.9%) 25.115 B/op [Average]
[info]   (min, avg, max) = (550.923, 557.965, 566.726), stdev = 6.522
[info]   CI (99.9%): [532.850, 583.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.852 ±(99.9%) 6.281 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.852, 3.760), stdev = 1.631
[info]   CI (99.9%): [≈ 0, 7.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.483 ±(99.9%) 3.565 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.483, 2.134), stdev = 0.926
[info]   CI (99.9%): [≈ 0, 4.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.507
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 16.94% complete, ETA 01:15:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1483190.719 ops/s
[info] # Warmup Iteration   2: 2685796.159 ops/s
[info] # Warmup Iteration   3: 2959987.311 ops/s
[info] Iteration   1: 2949977.718 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2895072.241 ops/s
[info]                  ·gc.alloc.rate:      0.801 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.435 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2898642.921 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2938076.180 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2908916.279 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   2918137.068 ±(99.9%) 94486.558 ops/s [Average]
[info]   (min, avg, max) = (2895072.241, 2918137.068, 2949977.718), stdev = 24537.859
[info]   CI (99.9%): [2823650.509, 3012623.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.160 ±(99.9%) 1.378 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.160, 0.801), stdev = 0.358
[info]   CI (99.9%): [≈ 0, 1.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.087 ±(99.9%) 0.749 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.087, 0.435), stdev = 0.195
[info]   CI (99.9%): [≈ 0, 0.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 17.18% complete, ETA 01:15:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53209.521 ops/s
[info] # Warmup Iteration   2: 487247.920 ops/s
[info] # Warmup Iteration   3: 702499.542 ops/s
[info] Iteration   1: 750963.094 ops/s
[info]                  ·gc.alloc.rate:                   4543.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              9519.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4319.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9050.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 752641.171 ops/s
[info]                  ·gc.alloc.rate:                   4606.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              9633.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4379.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9158.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 748922.011 ops/s
[info]                  ·gc.alloc.rate:                   4553.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              9569.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4408.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9264.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.219 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   4: 756782.457 ops/s
[info]                  ·gc.alloc.rate:               4626.858 MB/sec
[info]                  ·gc.alloc.rate.norm:          9622.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:      4419.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9190.136 B/op
[info]                  ·gc.count:                    13.000 counts
[info]                  ·gc.time:                     19.000 ms
[info] Iteration   5: 750783.509 ops/s
[info]                  ·gc.alloc.rate:                   4593.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              9625.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4427.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9276.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.218 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson":
[info]   752018.448 ±(99.9%) 11440.744 ops/s [Average]
[info]   (min, avg, max) = (748922.011, 752018.448, 756782.457), stdev = 2971.125
[info]   CI (99.9%): [740577.704, 763459.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   4584.999 ±(99.9%) 136.322 MB/sec [Average]
[info]   (min, avg, max) = (4543.767, 4584.999, 4626.858), stdev = 35.402
[info]   CI (99.9%): [4448.676, 4721.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   9594.171 ±(99.9%) 187.697 B/op [Average]
[info]   (min, avg, max) = (9519.920, 9594.171, 9633.593), stdev = 48.744
[info]   CI (99.9%): [9406.474, 9781.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   4390.780 ±(99.9%) 168.202 MB/sec [Average]
[info]   (min, avg, max) = (4319.567, 4390.780, 4427.180), stdev = 43.681
[info]   CI (99.9%): [4222.578, 4558.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9187.891 ±(99.9%) 352.757 B/op [Average]
[info]   (min, avg, max) = (9050.184, 9187.891, 9276.542), stdev = 91.610
[info]   CI (99.9%): [8835.135, 9540.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.105 ±(99.9%) 0.405 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.105, 0.219), stdev = 0.105
[info]   CI (99.9%): [≈ 0, 0.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.count":
[info]   65.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.000, 13.000), stdev = 0.001
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.time":
[info]   99.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (19.000, 19.800, 22.000), stdev = 1.304
[info]   CI (99.9%): [99.000, 99.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 17.41% complete, ETA 01:14:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4352.282 ops/s
[info] # Warmup Iteration   2: 22274.718 ops/s
[info] # Warmup Iteration   3: 29938.907 ops/s
[info] Iteration   1: 29315.752 ops/s
[info]                  ·gc.alloc.rate:                   1774.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              95260.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104335.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.942 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104.249 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 28739.221 ops/s
[info]                  ·gc.alloc.rate:                   1818.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              99590.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88828.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.260 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 123.776 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 28277.290 ops/s
[info]                  ·gc.alloc.rate:                   1811.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              100821.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108183.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.844 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 325.261 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 29372.907 ops/s
[info]                  ·gc.alloc.rate:                   1769.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              94828.749 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87003.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.346 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 28776.315 ops/s
[info]                  ·gc.alloc.rate:                   1731.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              94636.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89427.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.831 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce":
[info]   28896.297 ±(99.9%) 1749.119 ops/s [Average]
[info]   (min, avg, max) = (28277.290, 28896.297, 29372.907), stdev = 454.241
[info]   CI (99.9%): [27147.178, 30645.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate":
[info]   1781.079 ±(99.9%) 136.176 MB/sec [Average]
[info]   (min, avg, max) = (1731.093, 1781.079, 1818.556), stdev = 35.364
[info]   CI (99.9%): [1644.903, 1917.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   97027.659 ±(99.9%) 11331.477 B/op [Average]
[info]   (min, avg, max) = (94636.685, 97027.659, 100821.730), stdev = 2942.749
[info]   CI (99.9%): [85696.182, 108359.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1753.772 ±(99.9%) 667.702 MB/sec [Average]
[info]   (min, avg, max) = (1622.033, 1753.772, 1943.805), stdev = 173.400
[info]   CI (99.9%): [1086.070, 2421.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   95555.662 ±(99.9%) 38143.034 B/op [Average]
[info]   (min, avg, max) = (87003.574, 95555.662, 108183.176), stdev = 9905.625
[info]   CI (99.9%): [57412.628, 133698.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.047 ±(99.9%) 9.053 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 2.047, 5.844), stdev = 2.351
[info]   CI (99.9%): [≈ 0, 11.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   112.693 ±(99.9%) 504.062 B/op [Average]
[info]   (min, avg, max) = (3.346, 112.693, 325.261), stdev = 130.903
[info]   CI (99.9%): [≈ 0, 616.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 13.800, 26.000), stdev = 7.759
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 17.65% complete, ETA 01:14:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.625 ops/s
[info] # Warmup Iteration   2: 58604.638 ops/s
[info] # Warmup Iteration   3: 95002.841 ops/s
[info] Iteration   1: 94986.930 ops/s
[info]                  ·gc.alloc.rate:                   972.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              16118.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          861.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14271.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 100.577 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   2: 95797.079 ops/s
[info]                  ·gc.alloc.rate:                   771.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              12671.245 B/op
[info]                  ·gc.churn.PS_Eden_Space:          851.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13987.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.116 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.770 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   3: 94184.423 ops/s
[info]                  ·gc.alloc.rate:                   903.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              15104.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          859.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14370.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.202 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   4: 99937.422 ops/s
[info]                  ·gc.alloc.rate:                   808.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              12722.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:          863.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13591.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.637 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 135.981 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   5: 101216.673 ops/s
[info]                  ·gc.alloc.rate:                   810.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              12603.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          577.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8985.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.091 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava":
[info]   97224.505 ±(99.9%) 12113.275 ops/s [Average]
[info]   (min, avg, max) = (94184.423, 97224.505, 101216.673), stdev = 3145.779
[info]   CI (99.9%): [85111.230, 109337.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   853.329 ±(99.9%) 318.822 MB/sec [Average]
[info]   (min, avg, max) = (771.289, 853.329, 972.755), stdev = 82.797
[info]   CI (99.9%): [534.507, 1172.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   13843.964 ±(99.9%) 6365.903 B/op [Average]
[info]   (min, avg, max) = (12603.554, 13843.964, 16118.342), stdev = 1653.205
[info]   CI (99.9%): [7478.062, 20209.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   802.777 ±(99.9%) 484.409 MB/sec [Average]
[info]   (min, avg, max) = (577.888, 802.777, 863.306), stdev = 125.800
[info]   CI (99.9%): [318.368, 1287.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   13041.225 ±(99.9%) 8807.461 B/op [Average]
[info]   (min, avg, max) = (8985.604, 13041.225, 14370.459), stdev = 2287.270
[info]   CI (99.9%): [4233.764, 21848.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   4.895 ±(99.9%) 9.906 MB/sec [Average]
[info]   (min, avg, max) = (2.116, 4.895, 8.637), stdev = 2.573
[info]   CI (99.9%): [≈ 0, 14.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   79.120 ±(99.9%) 156.806 B/op [Average]
[info]   (min, avg, max) = (34.770, 79.120, 135.981), stdev = 40.722
[info]   CI (99.9%): [≈ 0, 235.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time":
[info]   136.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 27.200, 34.000), stdev = 9.445
[info]   CI (99.9%): [136.000, 136.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.88% complete, ETA 01:14:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11608.608 ops/s
[info] # Warmup Iteration   2: 45315.700 ops/s
[info] # Warmup Iteration   3: 66085.336 ops/s
[info] Iteration   1: 73551.605 ops/s
[info]                  ·gc.alloc.rate:                   1555.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              33280.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1614.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34543.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.204 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 132.743 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 82598.399 ops/s
[info]                  ·gc.alloc.rate:                   1488.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              28348.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1619.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30837.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.084 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 85857.625 ops/s
[info]                  ·gc.alloc.rate:                   1295.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              23748.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17828.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.192 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.852 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 86458.189 ops/s
[info]                  ·gc.alloc.rate:                   1266.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              23049.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23651.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.274 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 86698.942 ops/s
[info]                  ·gc.alloc.rate:                   1274.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              23128.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23720.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.512 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala":
[info]   83032.952 ±(99.9%) 21373.267 ops/s [Average]
[info]   (min, avg, max) = (73551.605, 83032.952, 86698.942), stdev = 5550.569
[info]   CI (99.9%): [61659.686, 104406.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1375.923 ±(99.9%) 522.815 MB/sec [Average]
[info]   (min, avg, max) = (1266.224, 1375.923, 1555.330), stdev = 135.774
[info]   CI (99.9%): [853.108, 1898.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   26311.066 ±(99.9%) 17227.136 B/op [Average]
[info]   (min, avg, max) = (23049.912, 26311.066, 33280.646), stdev = 4473.833
[info]   CI (99.9%): [9083.929, 43538.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1362.420 ±(99.9%) 1034.072 MB/sec [Average]
[info]   (min, avg, max) = (972.595, 1362.420, 1619.188), stdev = 268.545
[info]   CI (99.9%): [328.348, 2396.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   26116.415 ±(99.9%) 25383.280 B/op [Average]
[info]   (min, avg, max) = (17828.564, 26116.415, 34543.926), stdev = 6591.957
[info]   CI (99.9%): [733.135, 51499.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.930 ±(99.9%) 10.463 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 2.930, 6.204), stdev = 2.717
[info]   CI (99.9%): [≈ 0, 13.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   58.093 ±(99.9%) 216.137 B/op [Average]
[info]   (min, avg, max) = (1.512, 58.093, 132.743), stdev = 56.130
[info]   CI (99.9%): [≈ 0, 274.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.400, 18.000), stdev = 5.595
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.12% complete, ETA 01:14:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43175.428 ops/s
[info] # Warmup Iteration   2: 94543.844 ops/s
[info] # Warmup Iteration   3: 129192.809 ops/s
[info] Iteration   1: 124039.462 ops/s
[info]                  ·gc.alloc.rate:                   979.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              12426.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:          905.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11482.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.517 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 131015.301 ops/s
[info]                  ·gc.alloc.rate:                   1260.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              15137.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1193.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14332.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      11.286 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 135.512 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   3: 132095.856 ops/s
[info]                  ·gc.alloc.rate:                   1267.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              15097.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1196.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14243.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      17.213 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 204.987 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   4: 139630.283 ops/s
[info]                  ·gc.alloc.rate:                   861.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              9705.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:          889.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10024.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.866 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.303 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 136706.436 ops/s
[info]                  ·gc.alloc.rate:                   837.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              9643.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          890.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10253.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.919 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.575 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala":
[info]   132697.468 ±(99.9%) 22966.148 ops/s [Average]
[info]   (min, avg, max) = (124039.462, 132697.468, 139630.283), stdev = 5964.236
[info]   CI (99.9%): [109731.319, 155663.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1041.334 ±(99.9%) 810.408 MB/sec [Average]
[info]   (min, avg, max) = (837.683, 1041.334, 1267.744), stdev = 210.460
[info]   CI (99.9%): [230.925, 1851.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   12402.063 ±(99.9%) 10480.377 B/op [Average]
[info]   (min, avg, max) = (9643.417, 12402.063, 15137.376), stdev = 2721.721
[info]   CI (99.9%): [1921.686, 22882.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1014.947 ±(99.9%) 632.684 MB/sec [Average]
[info]   (min, avg, max) = (889.302, 1014.947, 1196.015), stdev = 164.306
[info]   CI (99.9%): [382.264, 1647.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   12067.123 ±(99.9%) 8093.067 B/op [Average]
[info]   (min, avg, max) = (10024.125, 12067.123, 14332.046), stdev = 2101.744
[info]   CI (99.9%): [3974.055, 20160.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   7.679 ±(99.9%) 25.487 MB/sec [Average]
[info]   (min, avg, max) = (0.919, 7.679, 17.213), stdev = 6.619
[info]   CI (99.9%): [≈ 0, 33.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   92.179 ±(99.9%) 304.801 B/op [Average]
[info]   (min, avg, max) = (10.575, 92.179, 204.987), stdev = 79.156
[info]   CI (99.9%): [≈ 0, 396.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time":
[info]   108.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 21.600, 31.000), stdev = 10.691
[info]   CI (99.9%): [108.000, 108.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 18.35% complete, ETA 01:14:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3191.222 ops/s
[info] # Warmup Iteration   2: 26914.233 ops/s
[info] # Warmup Iteration   3: 48315.614 ops/s
[info] Iteration   1: 46260.077 ops/s
[info]                  ·gc.alloc.rate:                   2082.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              70858.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1917.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65248.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.416 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 48158.317 ops/s
[info]                  ·gc.alloc.rate:                   2108.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              68911.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2260.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73867.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.655 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217.510 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 49361.762 ops/s
[info]                  ·gc.alloc.rate:                   2083.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              66428.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62178.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.982 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 49280.969 ops/s
[info]                  ·gc.alloc.rate:                   2074.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              66254.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62989.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.994 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 48211.943 ops/s
[info]                  ·gc.alloc.rate:                   2057.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              67150.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1992.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65053.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.680 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson":
[info]   48254.614 ±(99.9%) 4820.405 ops/s [Average]
[info]   (min, avg, max) = (46260.077, 48254.614, 49361.762), stdev = 1251.844
[info]   CI (99.9%): [43434.209, 53075.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2081.284 ±(99.9%) 71.487 MB/sec [Average]
[info]   (min, avg, max) = (2057.111, 2081.284, 2108.547), stdev = 18.565
[info]   CI (99.9%): [2009.798, 2152.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   67920.555 ±(99.9%) 7508.738 B/op [Average]
[info]   (min, avg, max) = (66254.747, 67920.555, 70858.559), stdev = 1949.995
[info]   CI (99.9%): [60411.817, 75429.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2018.688 ±(99.9%) 530.787 MB/sec [Average]
[info]   (min, avg, max) = (1917.795, 2018.688, 2260.186), stdev = 137.844
[info]   CI (99.9%): [1487.900, 2549.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   65867.590 ±(99.9%) 17950.948 B/op [Average]
[info]   (min, avg, max) = (62178.822, 65867.590, 73867.297), stdev = 4661.804
[info]   CI (99.9%): [47916.642, 83818.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.381 ±(99.9%) 11.354 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.381, 6.655), stdev = 2.949
[info]   CI (99.9%): [≈ 0, 12.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   45.117 ±(99.9%) 371.121 B/op [Average]
[info]   (min, avg, max) = (0.680, 45.117, 217.510), stdev = 96.379
[info]   CI (99.9%): [≈ 0, 416.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.000, 15.000), stdev = 3.240
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 18.59% complete, ETA 01:13:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10172.829 ops/s
[info] # Warmup Iteration   2: 24620.168 ops/s
[info] # Warmup Iteration   3: 38447.700 ops/s
[info] Iteration   1: 39827.261 ops/s
[info]                  ·gc.alloc.rate:                   997.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              39436.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38197.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.212 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87.419 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 41003.075 ops/s
[info]                  ·gc.alloc.rate:                   919.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              35300.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          965.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37050.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.871 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 110.182 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 44346.024 ops/s
[info]                  ·gc.alloc.rate:                   724.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              25729.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22791.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.219 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 114.240 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 41969.933 ops/s
[info]                  ·gc.alloc.rate:                   959.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              35977.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          958.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35945.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.778 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 254.177 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 43816.935 ops/s
[info]                  ·gc.alloc.rate:                   709.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              25480.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          637.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22874.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.964 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce":
[info]   42192.645 ±(99.9%) 7289.595 ops/s [Average]
[info]   (min, avg, max) = (39827.261, 42192.645, 44346.024), stdev = 1893.085
[info]   CI (99.9%): [34903.051, 49482.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate":
[info]   862.327 ±(99.9%) 521.348 MB/sec [Average]
[info]   (min, avg, max) = (709.582, 862.327, 997.985), stdev = 135.392
[info]   CI (99.9%): [340.979, 1383.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   32384.900 ±(99.9%) 24589.047 B/op [Average]
[info]   (min, avg, max) = (25480.032, 32384.900, 39436.928), stdev = 6385.697
[info]   CI (99.9%): [7795.853, 56973.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   833.932 ±(99.9%) 683.270 MB/sec [Average]
[info]   (min, avg, max) = (637.027, 833.932, 966.621), stdev = 177.443
[info]   CI (99.9%): [150.662, 1517.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   31371.856 ±(99.9%) 30172.220 B/op [Average]
[info]   (min, avg, max) = (22791.019, 31371.856, 38197.524), stdev = 7835.630
[info]   CI (99.9%): [1199.636, 61544.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   3.083 ±(99.9%) 9.038 MB/sec [Average]
[info]   (min, avg, max) = (0.333, 3.083, 6.778), stdev = 2.347
[info]   CI (99.9%): [≈ 0, 12.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   115.596 ±(99.9%) 337.725 B/op [Average]
[info]   (min, avg, max) = (11.964, 115.596, 254.177), stdev = 87.706
[info]   CI (99.9%): [≈ 0, 453.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 12.800, 20.000), stdev = 6.686
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.82% complete, ETA 01:13:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6527.547 ops/s
[info] # Warmup Iteration   2: 34260.694 ops/s
[info] # Warmup Iteration   3: 41341.423 ops/s
[info] Iteration   1: 40496.895 ops/s
[info]                  ·gc.alloc.rate:                   936.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              36372.525 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37694.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.899 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73.790 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 44671.682 ops/s
[info]                  ·gc.alloc.rate:               590.436 MB/sec
[info]                  ·gc.alloc.rate.norm:          20802.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22824.723 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 43635.043 ops/s
[info]                  ·gc.alloc.rate:                   567.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              20450.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23389.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.455 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 44927.123 ops/s
[info]                  ·gc.alloc.rate:                   468.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              16417.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11364.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.364 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 42052.867 ops/s
[info]                  ·gc.alloc.rate:                   634.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              23760.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24332.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.866 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69.830 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala":
[info]   43156.722 ±(99.9%) 7191.379 ops/s [Average]
[info]   (min, avg, max) = (40496.895, 43156.722, 44927.123), stdev = 1867.578
[info]   CI (99.9%): [35965.343, 50348.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   639.437 ±(99.9%) 680.285 MB/sec [Average]
[info]   (min, avg, max) = (468.664, 639.437, 936.110), stdev = 176.668
[info]   CI (99.9%): [≈ 0, 1319.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   23560.550 ±(99.9%) 29356.700 B/op [Average]
[info]   (min, avg, max) = (16417.590, 23560.550, 36372.525), stdev = 7623.842
[info]   CI (99.9%): [≈ 0, 52917.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   648.226 ±(99.9%) 879.092 MB/sec [Average]
[info]   (min, avg, max) = (324.412, 648.226, 970.125), stdev = 228.297
[info]   CI (99.9%): [≈ 0, 1527.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23920.978 ±(99.9%) 35969.173 B/op [Average]
[info]   (min, avg, max) = (11364.338, 23920.978, 37694.162), stdev = 9341.080
[info]   CI (99.9%): [≈ 0, 59890.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.957 ±(99.9%) 3.617 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.957, 1.899), stdev = 0.939
[info]   CI (99.9%): [≈ 0, 4.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   36.088 ±(99.9%) 138.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 36.088, 73.790), stdev = 35.842
[info]   CI (99.9%): [≈ 0, 174.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.000, 15.000), stdev = 3.536
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.06% complete, ETA 01:13:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14409.945 ops/s
[info] # Warmup Iteration   2: 37180.151 ops/s
[info] # Warmup Iteration   3: 46718.453 ops/s
[info] Iteration   1: 46423.875 ops/s
[info]                  ·gc.alloc.rate:                   617.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              20920.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22030.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.130 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.325 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 48424.882 ops/s
[info]                  ·gc.alloc.rate:               491.733 MB/sec
[info]                  ·gc.alloc.rate.norm:          15981.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10554.826 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 47832.807 ops/s
[info]                  ·gc.alloc.rate:               494.354 MB/sec
[info]                  ·gc.alloc.rate.norm:          16265.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21413.824 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 48787.867 ops/s
[info]                  ·gc.alloc.rate:                   512.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              16517.527 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20892.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.668 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 49168.329 ops/s
[info]                  ·gc.alloc.rate:                   503.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              16123.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10448.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89.290 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala":
[info]   48127.552 ±(99.9%) 4128.021 ops/s [Average]
[info]   (min, avg, max) = (46423.875, 48127.552, 49168.329), stdev = 1072.034
[info]   CI (99.9%): [43999.531, 52255.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   523.976 ±(99.9%) 203.001 MB/sec [Average]
[info]   (min, avg, max) = (491.733, 523.976, 617.083), stdev = 52.719
[info]   CI (99.9%): [320.975, 726.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   17161.747 ±(99.9%) 8126.213 B/op [Average]
[info]   (min, avg, max) = (15981.945, 17161.747, 20920.243), stdev = 2110.352
[info]   CI (99.9%): [9035.534, 25287.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   520.139 ±(99.9%) 683.914 MB/sec [Average]
[info]   (min, avg, max) = (324.751, 520.139, 650.838), stdev = 177.610
[info]   CI (99.9%): [≈ 0, 1204.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   17067.919 ±(99.9%) 23134.278 B/op [Average]
[info]   (min, avg, max) = (10448.232, 17067.919, 22030.236), stdev = 6007.898
[info]   CI (99.9%): [≈ 0, 40202.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.788 ±(99.9%) 4.698 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.788, 2.789), stdev = 1.220
[info]   CI (99.9%): [≈ 0, 5.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   25.656 ±(99.9%) 150.995 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 25.656, 89.290), stdev = 39.213
[info]   CI (99.9%): [≈ 0, 176.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 11.000), stdev = 3.286
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 19.29% complete, ETA 01:13:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15739.834 ops/s
[info] # Warmup Iteration   2: 37433.558 ops/s
[info] # Warmup Iteration   3: 47023.515 ops/s
[info] Iteration   1: 46817.655 ops/s
[info]                  ·gc.alloc.rate:                   643.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              21623.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21923.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.595 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 50249.951 ops/s
[info]                  ·gc.alloc.rate:               540.749 MB/sec
[info]                  ·gc.alloc.rate.norm:          16929.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10202.226 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 48707.097 ops/s
[info]                  ·gc.alloc.rate:                   544.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              17602.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21050.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.965 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.164 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 50548.738 ops/s
[info]                  ·gc.alloc.rate:                   558.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              17376.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20326.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 49661.238 ops/s
[info]                  ·gc.alloc.rate:                   574.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              18212.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10344.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 128.968 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc":
[info]   49196.936 ±(99.9%) 5792.853 ops/s [Average]
[info]   (min, avg, max) = (46817.655, 49196.936, 50548.738), stdev = 1504.386
[info]   CI (99.9%): [43404.083, 54989.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   572.370 ±(99.9%) 160.810 MB/sec [Average]
[info]   (min, avg, max) = (540.749, 572.370, 643.204), stdev = 41.762
[info]   CI (99.9%): [411.559, 733.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   18348.539 ±(99.9%) 7270.146 B/op [Average]
[info]   (min, avg, max) = (16929.078, 18348.539, 21623.109), stdev = 1888.034
[info]   CI (99.9%): [11078.393, 25618.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   521.823 ±(99.9%) 687.708 MB/sec [Average]
[info]   (min, avg, max) = (325.880, 521.823, 652.858), stdev = 178.596
[info]   CI (99.9%): [≈ 0, 1209.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   16769.358 ±(99.9%) 22938.701 B/op [Average]
[info]   (min, avg, max) = (10202.226, 16769.358, 21923.244), stdev = 5957.108
[info]   CI (99.9%): [≈ 0, 39708.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   1.128 ±(99.9%) 6.528 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.128, 4.070), stdev = 1.695
[info]   CI (99.9%): [≈ 0, 7.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   36.078 ±(99.9%) 206.438 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 36.078, 128.968), stdev = 53.611
[info]   CI (99.9%): [≈ 0, 242.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 9.000), stdev = 2.490
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 19.53% complete, ETA 01:12:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3902.871 ops/s
[info] # Warmup Iteration   2: 8805.295 ops/s
[info] # Warmup Iteration   3: 13840.499 ops/s
[info] Iteration   1: 16660.937 ops/s
[info]                  ·gc.alloc.rate:                   1200.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              113438.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1232.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116442.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.866 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 17419.626 ops/s
[info]                  ·gc.alloc.rate:                   1254.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              113363.416 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1241.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112188.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.902 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 16372.542 ops/s
[info]                  ·gc.alloc.rate:                   1222.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              117510.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          938.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90188.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.609 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 250.711 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   4: 17197.818 ops/s
[info]                  ·gc.alloc.rate:                   1229.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              112544.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1252.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114605.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.025 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 642.908 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 16069.671 ops/s
[info]                  ·gc.alloc.rate:                   1438.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              140868.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1546.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151492.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.039 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce":
[info]   16744.119 ±(99.9%) 2162.900 ops/s [Average]
[info]   (min, avg, max) = (16069.671, 16744.119, 17419.626), stdev = 561.698
[info]   CI (99.9%): [14581.219, 18907.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate":
[info]   1269.370 ±(99.9%) 371.222 MB/sec [Average]
[info]   (min, avg, max) = (1200.923, 1269.370, 1438.351), stdev = 96.405
[info]   CI (99.9%): [898.148, 1640.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   119545.042 ±(99.9%) 46500.918 B/op [Average]
[info]   (min, avg, max) = (112544.810, 119545.042, 140868.392), stdev = 12076.141
[info]   CI (99.9%): [73044.124, 166045.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1242.463 ±(99.9%) 828.585 MB/sec [Average]
[info]   (min, avg, max) = (938.527, 1242.463, 1546.833), stdev = 215.181
[info]   CI (99.9%): [413.878, 2071.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   116983.286 ±(99.9%) 84754.346 B/op [Average]
[info]   (min, avg, max) = (90188.037, 116983.286, 151492.874), stdev = 22010.434
[info]   CI (99.9%): [32228.940, 201737.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.056 ±(99.9%) 11.444 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.056, 7.025), stdev = 2.972
[info]   CI (99.9%): [≈ 0, 13.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   190.485 ±(99.9%) 1049.647 B/op [Average]
[info]   (min, avg, max) = (2.039, 190.485, 642.908), stdev = 272.590
[info]   CI (99.9%): [≈ 0, 1240.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.time":
[info]   103.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 20.600, 28.000), stdev = 7.266
[info]   CI (99.9%): [103.000, 103.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.76% complete, ETA 01:12:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2028.273 ops/s
[info] # Warmup Iteration   2: 12954.980 ops/s
[info] # Warmup Iteration   3: 16715.447 ops/s
[info] Iteration   1: 17043.964 ops/s
[info]                  ·gc.alloc.rate:                   1081.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              99875.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1232.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113795.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.767 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 16944.813 ops/s
[info]                  ·gc.alloc.rate:                   1361.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              126359.451 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1246.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115765.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 16890.233 ops/s
[info]                  ·gc.alloc.rate:                   1139.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              106161.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1238.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115391.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.551 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 237.680 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   4: 17132.310 ops/s
[info]                  ·gc.alloc.rate:                   1075.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              98841.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:          916.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84229.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.313 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 488.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 16065.881 ops/s
[info]                  ·gc.alloc.rate:                   1525.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              149335.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1543.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151097.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.090 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.825 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala":
[info]   16815.440 ±(99.9%) 1652.640 ops/s [Average]
[info]   (min, avg, max) = (16065.881, 16815.440, 17132.310), stdev = 429.185
[info]   CI (99.9%): [15162.800, 18468.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1236.635 ±(99.9%) 765.442 MB/sec [Average]
[info]   (min, avg, max) = (1075.981, 1236.635, 1525.210), stdev = 198.783
[info]   CI (99.9%): [471.193, 2002.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   116114.732 ±(99.9%) 83250.737 B/op [Average]
[info]   (min, avg, max) = (98841.592, 116114.732, 149335.235), stdev = 21619.952
[info]   CI (99.9%): [32863.994, 199365.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1235.560 ±(99.9%) 853.079 MB/sec [Average]
[info]   (min, avg, max) = (916.920, 1235.560, 1543.203), stdev = 221.542
[info]   CI (99.9%): [382.481, 2088.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   116055.845 ±(99.9%) 91253.058 B/op [Average]
[info]   (min, avg, max) = (84229.976, 116055.845, 151097.002), stdev = 23698.129
[info]   CI (99.9%): [24802.787, 207308.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.614 ±(99.9%) 8.973 MB/sec [Average]
[info]   (min, avg, max) = (0.054, 1.614, 5.313), stdev = 2.330
[info]   CI (99.9%): [≈ 0, 10.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   149.061 ±(99.9%) 825.198 B/op [Average]
[info]   (min, avg, max) = (5.010, 149.061, 488.025), stdev = 214.301
[info]   CI (99.9%): [≈ 0, 974.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.time":
[info]   110.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 22.000, 33.000), stdev = 8.775
[info]   CI (99.9%): [110.000, 110.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.00% complete, ETA 01:12:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68251.046 ops/s
[info] # Warmup Iteration   2: 146796.231 ops/s
[info] # Warmup Iteration   3: 157816.755 ops/s
[info] Iteration   1: 158647.387 ops/s
[info]                  ·gc.alloc.rate:                   419.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              4155.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3238.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.417 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.130 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 159061.555 ops/s
[info]                  ·gc.alloc.rate:               426.829 MB/sec
[info]                  ·gc.alloc.rate.norm:          4222.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3229.714 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 160318.659 ops/s
[info]                  ·gc.alloc.rate:               427.365 MB/sec
[info]                  ·gc.alloc.rate.norm:          4194.494 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3191.375 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 160633.254 ops/s
[info]                  ·gc.alloc.rate:                   438.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              4297.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6369.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.408 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 158037.867 ops/s
[info]                  ·gc.alloc.rate:                   421.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              4196.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3237.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala":
[info]   159339.744 ±(99.9%) 4254.514 ops/s [Average]
[info]   (min, avg, max) = (158037.867, 159339.744, 160633.254), stdev = 1104.884
[info]   CI (99.9%): [155085.230, 163594.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   426.663 ±(99.9%) 29.137 MB/sec [Average]
[info]   (min, avg, max) = (419.091, 426.663, 438.638), stdev = 7.567
[info]   CI (99.9%): [397.527, 455.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4213.366 ±(99.9%) 203.101 B/op [Average]
[info]   (min, avg, max) = (4155.850, 4213.366, 4297.613), stdev = 52.745
[info]   CI (99.9%): [4010.265, 4416.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   390.681 ±(99.9%) 558.504 MB/sec [Average]
[info]   (min, avg, max) = (325.082, 390.681, 650.136), stdev = 145.042
[info]   CI (99.9%): [≈ 0, 949.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3853.271 ±(99.9%) 5417.520 B/op [Average]
[info]   (min, avg, max) = (3191.375, 3853.271, 6369.799), stdev = 1406.913
[info]   CI (99.9%): [≈ 0, 9270.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.694 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.096, 0.417), stdev = 0.180
[info]   CI (99.9%): [≈ 0, 0.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.949 ±(99.9%) 6.879 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.949, 4.130), stdev = 1.786
[info]   CI (99.9%): [≈ 0, 7.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 20.24% complete, ETA 01:12:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1598.268 ops/s
[info] # Warmup Iteration   2: 9641.479 ops/s
[info] # Warmup Iteration   3: 12596.984 ops/s
[info] Iteration   1: 15498.464 ops/s
[info]                  ·gc.alloc.rate:                   1361.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              138261.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1249.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126903.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.932 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 500.803 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 15780.119 ops/s
[info]                  ·gc.alloc.rate:                   1401.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              139798.630 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1245.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124270.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.076 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 16320.396 ops/s
[info]                  ·gc.alloc.rate:                   1453.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              140117.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1572.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151636.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.007 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 15630.876 ops/s
[info]                  ·gc.alloc.rate:               1389.592 MB/sec
[info]                  ·gc.alloc.rate.norm:          139910.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1277.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128648.933 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 15697.303 ops/s
[info]                  ·gc.alloc.rate:                   1637.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              164051.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162596.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.087 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson":
[info]   15785.431 ±(99.9%) 1218.015 ops/s [Average]
[info]   (min, avg, max) = (15498.464, 15785.431, 16320.396), stdev = 316.314
[info]   CI (99.9%): [14567.417, 17003.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1448.603 ±(99.9%) 425.352 MB/sec [Average]
[info]   (min, avg, max) = (1361.532, 1448.603, 1637.073), stdev = 110.463
[info]   CI (99.9%): [1023.251, 1873.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   144428.022 ±(99.9%) 42337.039 B/op [Average]
[info]   (min, avg, max) = (138261.822, 144428.022, 164051.929), stdev = 10994.794
[info]   CI (99.9%): [102090.983, 186765.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1393.712 ±(99.9%) 721.391 MB/sec [Average]
[info]   (min, avg, max) = (1245.981, 1393.712, 1622.545), stdev = 187.343
[info]   CI (99.9%): [672.322, 2115.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   138811.081 ±(99.9%) 66324.775 B/op [Average]
[info]   (min, avg, max) = (124270.507, 138811.081, 162596.068), stdev = 17224.333
[info]   CI (99.9%): [72486.306, 205135.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.999 ±(99.9%) 8.466 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.999, 4.932), stdev = 2.199
[info]   CI (99.9%): [≈ 0, 9.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   101.395 ±(99.9%) 859.764 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 101.395, 500.803), stdev = 223.278
[info]   CI (99.9%): [≈ 0, 961.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 1.000
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 20.47% complete, ETA 01:12:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15360.571 ops/s
[info] # Warmup Iteration   2: 57280.310 ops/s
[info] # Warmup Iteration   3: 65324.083 ops/s
[info] Iteration   1: 64255.908 ops/s
[info]                  ·gc.alloc.rate:                   1640.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              40184.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39975.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.776 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 165.977 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 66890.505 ops/s
[info]                  ·gc.alloc.rate:                   1563.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              36792.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38133.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.245 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 67661.516 ops/s
[info]                  ·gc.alloc.rate:                   1568.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              36482.993 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37698.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.421 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 68027.147 ops/s
[info]                  ·gc.alloc.rate:                   1571.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              36354.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30182.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.482 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 67916.328 ops/s
[info]                  ·gc.alloc.rate:                   1582.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              36655.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38121.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.482 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce":
[info]   66950.281 ±(99.9%) 6046.234 ops/s [Average]
[info]   (min, avg, max) = (64255.908, 66950.281, 68027.147), stdev = 1570.188
[info]   CI (99.9%): [60904.047, 72996.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1585.336 ±(99.9%) 121.617 MB/sec [Average]
[info]   (min, avg, max) = (1563.721, 1585.336, 1640.528), stdev = 31.584
[info]   CI (99.9%): [1463.719, 1706.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   37294.098 ±(99.9%) 6254.505 B/op [Average]
[info]   (min, avg, max) = (36354.900, 37294.098, 40184.394), stdev = 1624.275
[info]   CI (99.9%): [31039.594, 43548.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1564.760 ±(99.9%) 560.509 MB/sec [Average]
[info]   (min, avg, max) = (1305.004, 1564.760, 1645.376), stdev = 145.562
[info]   CI (99.9%): [1004.251, 2125.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   36822.331 ±(99.9%) 14688.013 B/op [Average]
[info]   (min, avg, max) = (30182.776, 36822.331, 39975.277), stdev = 3814.430
[info]   CI (99.9%): [22134.318, 51510.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.488 ±(99.9%) 11.410 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.488, 6.776), stdev = 2.963
[info]   CI (99.9%): [≈ 0, 12.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   36.322 ±(99.9%) 279.726 B/op [Average]
[info]   (min, avg, max) = (0.482, 36.322, 165.977), stdev = 72.644
[info]   CI (99.9%): [≈ 0, 316.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 18.000), stdev = 5.119
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.71% complete, ETA 01:11:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24897.662 ops/s
[info] # Warmup Iteration   2: 83840.007 ops/s
[info] # Warmup Iteration   3: 96576.059 ops/s
[info] Iteration   1: 105066.331 ops/s
[info]                  ·gc.alloc.rate:                   1400.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              20975.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19538.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.306 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.497 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 107582.799 ops/s
[info]                  ·gc.alloc.rate:                   1440.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              21078.106 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23759.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.664 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 108087.636 ops/s
[info]                  ·gc.alloc.rate:                   1426.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              20772.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18856.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.122 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 108063.732 ops/s
[info]                  ·gc.alloc.rate:                   1432.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              20849.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18928.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 105841.444 ops/s
[info]                  ·gc.alloc.rate:               1423.959 MB/sec
[info]                  ·gc.alloc.rate.norm:          21173.496 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19474.205 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala":
[info]   106928.388 ±(99.9%) 5345.956 ops/s [Average]
[info]   (min, avg, max) = (105066.331, 106928.388, 108087.636), stdev = 1388.328
[info]   CI (99.9%): [101582.432, 112274.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1424.876 ±(99.9%) 57.454 MB/sec [Average]
[info]   (min, avg, max) = (1400.853, 1424.876, 1440.907), stdev = 14.921
[info]   CI (99.9%): [1367.422, 1482.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   20969.918 ±(99.9%) 628.576 B/op [Average]
[info]   (min, avg, max) = (20772.971, 20969.918, 21173.496), stdev = 163.239
[info]   CI (99.9%): [20341.343, 21598.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1366.765 ±(99.9%) 554.568 MB/sec [Average]
[info]   (min, avg, max) = (1294.906, 1366.765, 1624.209), stdev = 144.020
[info]   CI (99.9%): [812.197, 1921.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20111.319 ±(99.9%) 7942.517 B/op [Average]
[info]   (min, avg, max) = (18856.559, 20111.319, 23759.510), stdev = 2062.646
[info]   CI (99.9%): [12168.802, 28053.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.936 ±(99.9%) 5.455 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.936, 3.306), stdev = 1.417
[info]   CI (99.9%): [≈ 0, 6.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   13.917 ±(99.9%) 81.643 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.917, 49.497), stdev = 21.202
[info]   CI (99.9%): [≈ 0, 95.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.000, 18.000), stdev = 5.385
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.94% complete, ETA 01:11:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 78140.393 ops/s
[info] # Warmup Iteration   2: 234751.731 ops/s
[info] # Warmup Iteration   3: 255765.045 ops/s
[info] Iteration   1: 272955.891 ops/s
[info]                  ·gc.alloc.rate:               441.004 MB/sec
[info]                  ·gc.alloc.rate.norm:          2542.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1891.745 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 270510.878 ops/s
[info]                  ·gc.alloc.rate:               442.337 MB/sec
[info]                  ·gc.alloc.rate.norm:          2573.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3819.578 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 273137.191 ops/s
[info]                  ·gc.alloc.rate:                   444.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              2558.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1892.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.240 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 272575.160 ops/s
[info]                  ·gc.alloc.rate:               445.086 MB/sec
[info]                  ·gc.alloc.rate.norm:          2570.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1900.152 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 270384.318 ops/s
[info]                  ·gc.alloc.rate:                   447.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              2605.758 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3830.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala":
[info]   271912.688 ±(99.9%) 5211.735 ops/s [Average]
[info]   (min, avg, max) = (270384.318, 271912.688, 273137.191), stdev = 1353.471
[info]   CI (99.9%): [266700.953, 277124.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   444.053 ±(99.9%) 9.885 MB/sec [Average]
[info]   (min, avg, max) = (441.004, 444.053, 447.664), stdev = 2.567
[info]   CI (99.9%): [434.168, 453.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2570.119 ±(99.9%) 89.606 B/op [Average]
[info]   (min, avg, max) = (2542.788, 2570.119, 2605.758), stdev = 23.270
[info]   CI (99.9%): [2480.513, 2659.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   460.070 ±(99.9%) 693.360 MB/sec [Average]
[info]   (min, avg, max) = (328.092, 460.070, 658.152), stdev = 180.063
[info]   CI (99.9%): [≈ 0, 1153.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2666.968 ±(99.9%) 4071.654 B/op [Average]
[info]   (min, avg, max) = (1891.745, 2666.968, 3830.967), stdev = 1057.396
[info]   CI (99.9%): [≈ 0, 6738.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.072 ±(99.9%) 0.414 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.072, 0.240), stdev = 0.107
[info]   CI (99.9%): [≈ 0, 0.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 8.000), stdev = 2.408
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 21.18% complete, ETA 01:11:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73192.280 ops/s
[info] # Warmup Iteration   2: 258735.146 ops/s
[info] # Warmup Iteration   3: 275619.639 ops/s
[info] Iteration   1: 286513.427 ops/s
[info]                  ·gc.alloc.rate:      3.637 MB/sec
[info]                  ·gc.alloc.rate.norm: 19.977 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 286618.456 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 286125.356 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 286027.846 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 285249.950 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc":
[info]   286107.007 ±(99.9%) 2080.691 ops/s [Average]
[info]   (min, avg, max) = (285249.950, 286107.007, 286618.456), stdev = 540.349
[info]   CI (99.9%): [284026.316, 288187.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.728 ±(99.9%) 6.262 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.728, 3.637), stdev = 1.626
[info]   CI (99.9%): [≈ 0, 6.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   3.997 ±(99.9%) 34.399 B/op [Average]
[info]   (min, avg, max) = (0.002, 3.997, 19.977), stdev = 8.933
[info]   CI (99.9%): [≈ 0, 38.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 21.41% complete, ETA 01:11:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16946.167 ops/s
[info] # Warmup Iteration   2: 59912.975 ops/s
[info] # Warmup Iteration   3: 74026.555 ops/s
[info] Iteration   1: 85822.939 ops/s
[info]                  ·gc.alloc.rate:                   2024.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              37101.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1954.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35817.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      22.093 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 404.964 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         38.000 ms
[info] Iteration   2: 72878.457 ops/s
[info]                  ·gc.alloc.rate:                   1952.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              42147.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1902.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41057.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      43.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 943.401 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         60.000 ms
[info] Iteration   3: 90568.013 ops/s
[info]                  ·gc.alloc.rate:                   2105.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              36578.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2079.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36128.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.297 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         38.000 ms
[info] Iteration   4: 91107.668 ops/s
[info]                  ·gc.alloc.rate:                   1608.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              27721.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1813.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31256.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      18.947 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 326.582 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         66.000 ms
[info] Iteration   5: 97637.930 ops/s
[info]                  ·gc.alloc.rate:                   1662.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              26772.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1615.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26030.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.514 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.285 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         37.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson":
[info]   87603.001 ±(99.9%) 35592.668 ops/s [Average]
[info]   (min, avg, max) = (72878.457, 87603.001, 97637.930), stdev = 9243.303
[info]   CI (99.9%): [52010.333, 123195.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1870.588 ±(99.9%) 856.687 MB/sec [Average]
[info]   (min, avg, max) = (1608.273, 1870.588, 2105.931), stdev = 222.479
[info]   CI (99.9%): [1013.901, 2727.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   34064.377 ±(99.9%) 25418.091 B/op [Average]
[info]   (min, avg, max) = (26772.812, 34064.377, 42147.870), stdev = 6600.997
[info]   CI (99.9%): [8646.286, 59482.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1873.089 ±(99.9%) 666.703 MB/sec [Average]
[info]   (min, avg, max) = (1615.904, 1873.089, 2079.984), stdev = 173.141
[info]   CI (99.9%): [1206.385, 2539.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   34057.943 ±(99.9%) 21839.635 B/op [Average]
[info]   (min, avg, max) = (26030.003, 34057.943, 41057.442), stdev = 5671.684
[info]   CI (99.9%): [12218.308, 55897.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   17.194 ±(99.9%) 68.882 MB/sec [Average]
[info]   (min, avg, max) = (0.514, 17.194, 43.707), stdev = 17.889
[info]   CI (99.9%): [≈ 0, 86.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   339.106 ±(99.9%) 1473.738 B/op [Average]
[info]   (min, avg, max) = (8.285, 339.106, 943.401), stdev = 382.725
[info]   CI (99.9%): [≈ 0, 1812.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.400, 8.000), stdev = 0.894
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.time":
[info]   239.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (37.000, 47.800, 66.000), stdev = 14.043
[info]   CI (99.9%): [239.000, 239.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 21.65% complete, ETA 01:11:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10005.558 ops/s
[info] # Warmup Iteration   2: 76309.362 ops/s
[info] # Warmup Iteration   3: 112223.807 ops/s
[info] Iteration   1: 121988.964 ops/s
[info]                  ·gc.alloc.rate:                   1871.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              24140.758 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1947.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25122.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.184 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.281 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 128222.536 ops/s
[info]                  ·gc.alloc.rate:                   1597.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              19603.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16001.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.156 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.450 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 128306.465 ops/s
[info]                  ·gc.alloc.rate:                   1612.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              19774.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20010.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.769 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.946 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 126483.588 ops/s
[info]                  ·gc.alloc.rate:                   1580.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              19670.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20275.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.518 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 128566.334 ops/s
[info]                  ·gc.alloc.rate:                   1616.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              19786.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20048.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.510 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce":
[info]   126713.577 ±(99.9%) 10654.152 ops/s [Average]
[info]   (min, avg, max) = (121988.964, 126713.577, 128566.334), stdev = 2766.849
[info]   CI (99.9%): [116059.425, 137367.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1655.806 ±(99.9%) 466.784 MB/sec [Average]
[info]   (min, avg, max) = (1580.778, 1655.806, 1871.182), stdev = 121.222
[info]   CI (99.9%): [1189.022, 2122.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20595.073 ±(99.9%) 7637.932 B/op [Average]
[info]   (min, avg, max) = (19603.436, 20595.073, 24140.758), stdev = 1983.547
[info]   CI (99.9%): [12957.141, 28233.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1630.183 ±(99.9%) 875.697 MB/sec [Average]
[info]   (min, avg, max) = (1304.221, 1630.183, 1947.290), stdev = 227.416
[info]   CI (99.9%): [754.486, 2505.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   20291.847 ±(99.9%) 12459.524 B/op [Average]
[info]   (min, avg, max) = (16001.866, 20291.847, 25122.644), stdev = 3235.699
[info]   CI (99.9%): [7832.323, 32751.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.238 ±(99.9%) 4.736 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.238, 2.769), stdev = 1.230
[info]   CI (99.9%): [≈ 0, 5.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   15.341 ±(99.9%) 58.056 B/op [Average]
[info]   (min, avg, max) = (0.510, 15.341, 33.946), stdev = 15.077
[info]   CI (99.9%): [≈ 0, 73.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.400, 19.000), stdev = 5.128
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.88% complete, ETA 01:10:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24138.485 ops/s
[info] # Warmup Iteration   2: 100355.750 ops/s
[info] # Warmup Iteration   3: 133758.720 ops/s
[info] Iteration   1: 149353.547 ops/s
[info]                  ·gc.alloc.rate:                   883.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              9309.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6746.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.219 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 153589.070 ops/s
[info]                  ·gc.alloc.rate:                   924.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              9469.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          965.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9894.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 150788.995 ops/s
[info]                  ·gc.alloc.rate:                   906.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              9457.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10119.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.167 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 155802.482 ops/s
[info]                  ·gc.alloc.rate:                   929.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              9390.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9831.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.939 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 156638.568 ops/s
[info]                  ·gc.alloc.rate:                   923.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              9279.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6512.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.452 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.689 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala":
[info]   153234.532 ±(99.9%) 12077.498 ops/s [Average]
[info]   (min, avg, max) = (149353.547, 153234.532, 156638.568), stdev = 3136.488
[info]   CI (99.9%): [141157.035, 165312.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   913.369 ±(99.9%) 72.877 MB/sec [Average]
[info]   (min, avg, max) = (883.420, 913.369, 929.578), stdev = 18.926
[info]   CI (99.9%): [840.492, 986.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9381.333 ±(99.9%) 329.398 B/op [Average]
[info]   (min, avg, max) = (9279.788, 9381.333, 9469.909), stdev = 85.544
[info]   CI (99.9%): [9051.935, 9710.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   839.358 ±(99.9%) 686.290 MB/sec [Average]
[info]   (min, avg, max) = (640.195, 839.358, 973.243), stdev = 178.227
[info]   CI (99.9%): [153.068, 1525.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   8620.906 ±(99.9%) 7019.975 B/op [Average]
[info]   (min, avg, max) = (6512.562, 8620.906, 10119.632), stdev = 1823.065
[info]   CI (99.9%): [1600.931, 15640.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.069 ±(99.9%) 5.457 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.069, 3.452), stdev = 1.417
[info]   CI (99.9%): [≈ 0, 6.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   10.846 ±(99.9%) 54.846 B/op [Average]
[info]   (min, avg, max) = (0.213, 10.846, 34.689), stdev = 14.243
[info]   CI (99.9%): [≈ 0, 65.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 12.000), stdev = 2.950
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.12% complete, ETA 01:10:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42435.135 ops/s
[info] # Warmup Iteration   2: 195705.878 ops/s
[info] # Warmup Iteration   3: 206881.767 ops/s
[info] Iteration   1: 222075.687 ops/s
[info]                  ·gc.alloc.rate:                   168.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              1190.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1812.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.763 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.406 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 224134.337 ops/s
[info]                  ·gc.alloc.rate:      146.633 MB/sec
[info]                  ·gc.alloc.rate.norm: 1029.453 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 223446.404 ops/s
[info]                  ·gc.alloc.rate:               152.184 MB/sec
[info]                  ·gc.alloc.rate.norm:          1071.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2289.744 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 215473.920 ops/s
[info]                  ·gc.alloc.rate:      140.188 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 215927.953 ops/s
[info]                  ·gc.alloc.rate:      140.513 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala":
[info]   220211.660 ±(99.9%) 16122.417 ops/s [Average]
[info]   (min, avg, max) = (215473.920, 220211.660, 224134.337), stdev = 4186.941
[info]   CI (99.9%): [204089.243, 236334.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   149.506 ±(99.9%) 44.144 MB/sec [Average]
[info]   (min, avg, max) = (140.188, 149.506, 168.014), stdev = 11.464
[info]   CI (99.9%): [105.363, 193.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1068.042 ±(99.9%) 275.316 B/op [Average]
[info]   (min, avg, max) = (1024.002, 1068.042, 1190.780), stdev = 71.499
[info]   CI (99.9%): [792.726, 1343.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   116.172 ±(99.9%) 619.761 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 116.172, 325.066), stdev = 160.950
[info]   CI (99.9%): [≈ 0, 735.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   820.533 ±(99.9%) 4374.862 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 820.533, 2289.744), stdev = 1136.138
[info]   CI (99.9%): [≈ 0, 5195.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.153 ±(99.9%) 1.314 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.153, 0.763), stdev = 0.341
[info]   CI (99.9%): [≈ 0, 1.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.081 ±(99.9%) 9.310 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.081, 5.406), stdev = 2.418
[info]   CI (99.9%): [≈ 0, 10.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 5.000), stdev = 2.490
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 22.35% complete, ETA 01:10:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1271.396 ops/s
[info] # Warmup Iteration   2: 40463.918 ops/s
[info] # Warmup Iteration   3: 81604.272 ops/s
[info] Iteration   1: 79356.450 ops/s
[info]                  ·gc.alloc.rate:                   2572.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              51010.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2622.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51998.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.311 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 81966.516 ops/s
[info]                  ·gc.alloc.rate:                   2581.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              49571.293 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2634.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50574.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.599 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 82596.634 ops/s
[info]                  ·gc.alloc.rate:                   2586.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              49280.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2329.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44380.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.793 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 82679.255 ops/s
[info]                  ·gc.alloc.rate:                   2636.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              50172.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2686.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51120.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.585 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 83125.924 ops/s
[info]                  ·gc.alloc.rate:               2637.714 MB/sec
[info]                  ·gc.alloc.rate.norm:          49925.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2364.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44760.599 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson":
[info]   81944.956 ±(99.9%) 5794.993 ops/s [Average]
[info]   (min, avg, max) = (79356.450, 81944.956, 83125.924), stdev = 1504.941
[info]   CI (99.9%): [76149.963, 87739.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2602.946 ±(99.9%) 122.184 MB/sec [Average]
[info]   (min, avg, max) = (2572.160, 2602.946, 2637.714), stdev = 31.731
[info]   CI (99.9%): [2480.762, 2725.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   49991.960 ±(99.9%) 2552.348 B/op [Average]
[info]   (min, avg, max) = (49280.180, 49991.960, 51010.256), stdev = 662.837
[info]   CI (99.9%): [47439.612, 52544.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2527.316 ±(99.9%) 642.603 MB/sec [Average]
[info]   (min, avg, max) = (2329.143, 2527.316, 2686.606), stdev = 166.882
[info]   CI (99.9%): [1884.714, 3169.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   48566.810 ±(99.9%) 14192.865 B/op [Average]
[info]   (min, avg, max) = (44380.308, 48566.810, 51998.780), stdev = 3685.842
[info]   CI (99.9%): [34373.945, 62759.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.640 ±(99.9%) 5.062 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.640, 2.991), stdev = 1.315
[info]   CI (99.9%): [≈ 0, 5.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   12.658 ±(99.9%) 100.457 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.658, 59.311), stdev = 26.088
[info]   CI (99.9%): [≈ 0, 113.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.time":
[info]   62.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.400, 15.000), stdev = 1.949
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 22.59% complete, ETA 01:10:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49892.950 ops/s
[info] # Warmup Iteration   2: 179676.199 ops/s
[info] # Warmup Iteration   3: 210379.276 ops/s
[info] Iteration   1: 226915.569 ops/s
[info]                  ·gc.alloc.rate:                   1467.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              10186.334 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9058.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.171 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 228539.899 ops/s
[info]                  ·gc.alloc.rate:                   1492.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              10278.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11196.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.745 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 231299.214 ops/s
[info]                  ·gc.alloc.rate:                   1501.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              10215.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8820.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.283 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 232198.025 ops/s
[info]                  ·gc.alloc.rate:                   1512.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              10251.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11041.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 231768.314 ops/s
[info]                  ·gc.alloc.rate:                   1510.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              10254.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8924.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.283 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce":
[info]   230144.204 ±(99.9%) 8862.305 ops/s [Average]
[info]   (min, avg, max) = (226915.569, 230144.204, 232198.025), stdev = 2301.512
[info]   CI (99.9%): [221281.899, 239006.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1496.870 ±(99.9%) 70.032 MB/sec [Average]
[info]   (min, avg, max) = (1467.615, 1496.870, 1512.808), stdev = 18.187
[info]   CI (99.9%): [1426.838, 1566.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10237.142 ±(99.9%) 139.991 B/op [Average]
[info]   (min, avg, max) = (10186.334, 10237.142, 10278.518), stdev = 36.355
[info]   CI (99.9%): [10097.152, 10377.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1434.198 ±(99.9%) 680.355 MB/sec [Average]
[info]   (min, avg, max) = (1296.353, 1434.198, 1629.422), stdev = 176.686
[info]   CI (99.9%): [753.844, 2114.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9808.343 ±(99.9%) 4622.624 B/op [Average]
[info]   (min, avg, max) = (8820.972, 9808.343, 11196.059), stdev = 1200.481
[info]   CI (99.9%): [5185.719, 14430.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.885 ±(99.9%) 5.096 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.885, 3.050), stdev = 1.323
[info]   CI (99.9%): [≈ 0, 5.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.125 ±(99.9%) 35.360 B/op [Average]
[info]   (min, avg, max) = (0.141, 6.125, 21.171), stdev = 9.183
[info]   CI (99.9%): [≈ 0, 41.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.800, 17.000), stdev = 5.357
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.82% complete, ETA 01:10:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 152925.792 ops/s
[info] # Warmup Iteration   2: 664144.006 ops/s
[info] # Warmup Iteration   3: 774359.082 ops/s
[info] Iteration   1: 775291.837 ops/s
[info]                  ·gc.alloc.rate:                   612.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              1243.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1303.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 774006.500 ops/s
[info]                  ·gc.alloc.rate:                   609.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              1238.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1308.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 774566.538 ops/s
[info]                  ·gc.alloc.rate:               615.798 MB/sec
[info]                  ·gc.alloc.rate.norm:          1251.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1311.568 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 764026.906 ops/s
[info]                  ·gc.alloc.rate:               597.114 MB/sec
[info]                  ·gc.alloc.rate.norm:          1229.998 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 667.599 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 763878.971 ops/s
[info]                  ·gc.alloc.rate:                   606.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              1249.587 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1338.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala":
[info]   770354.150 ±(99.9%) 22570.373 ops/s [Average]
[info]   (min, avg, max) = (763878.971, 770354.150, 775291.837), stdev = 5861.454
[info]   CI (99.9%): [747783.778, 792924.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   608.238 ±(99.9%) 27.435 MB/sec [Average]
[info]   (min, avg, max) = (597.114, 608.238, 615.798), stdev = 7.125
[info]   CI (99.9%): [580.803, 635.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1242.590 ±(99.9%) 32.945 B/op [Average]
[info]   (min, avg, max) = (1229.998, 1242.590, 1251.034), stdev = 8.556
[info]   CI (99.9%): [1209.645, 1275.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   580.968 ±(99.9%) 553.048 MB/sec [Average]
[info]   (min, avg, max) = (324.092, 580.968, 649.522), stdev = 143.625
[info]   CI (99.9%): [27.919, 1134.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1185.893 ±(99.9%) 1116.869 B/op [Average]
[info]   (min, avg, max) = (667.599, 1185.893, 1338.227), stdev = 290.047
[info]   CI (99.9%): [69.025, 2302.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.043 ±(99.9%) 0.202 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.043, 0.129), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.06% complete, ETA 01:09:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 426525.575 ops/s
[info] # Warmup Iteration   2: 527067.263 ops/s
[info] # Warmup Iteration   3: 681168.759 ops/s
[info] Iteration   1: 690759.833 ops/s
[info]                  ·gc.alloc.rate:                   540.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     747.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 672602.300 ops/s
[info]                  ·gc.alloc.rate:               534.596 MB/sec
[info]                  ·gc.alloc.rate.norm:          1250.856 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1536.978 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 659760.523 ops/s
[info]                  ·gc.alloc.rate:                   526.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              1257.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1570.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 669622.426 ops/s
[info]                  ·gc.alloc.rate:                   526.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              1236.829 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     773.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 665423.966 ops/s
[info]                  ·gc.alloc.rate:                   532.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              1259.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1558.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala":
[info]   671633.810 ±(99.9%) 45166.161 ops/s [Average]
[info]   (min, avg, max) = (659760.523, 671633.810, 690759.833), stdev = 11729.509
[info]   CI (99.9%): [626467.649, 716799.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   532.251 ±(99.9%) 22.995 MB/sec [Average]
[info]   (min, avg, max) = (526.221, 532.251, 540.772), stdev = 5.972
[info]   CI (99.9%): [509.257, 555.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1247.259 ±(99.9%) 47.053 B/op [Average]
[info]   (min, avg, max) = (1232.078, 1247.259, 1259.430), stdev = 12.219
[info]   CI (99.9%): [1200.207, 1294.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   526.263 ±(99.9%) 694.855 MB/sec [Average]
[info]   (min, avg, max) = (328.105, 526.263, 659.113), stdev = 180.452
[info]   CI (99.9%): [≈ 0, 1221.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1237.260 ±(99.9%) 1676.868 B/op [Average]
[info]   (min, avg, max) = (747.545, 1237.260, 1570.036), stdev = 435.477
[info]   CI (99.9%): [≈ 0, 2914.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.020 ±(99.9%) 0.062 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.039), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.048 ±(99.9%) 0.147 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.048, 0.092), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 7.000), stdev = 1.949
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 23.29% complete, ETA 01:09:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 256706.389 ops/s
[info] # Warmup Iteration   2: 684585.985 ops/s
[info] # Warmup Iteration   3: 650872.420 ops/s
[info] Iteration   1: 677745.733 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 673433.944 ops/s
[info]                  ·gc.alloc.rate:      0.849 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.984 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 650752.967 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 682096.364 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 658813.680 ops/s
[info]                  ·gc.alloc.rate:      3.332 MB/sec
[info]                  ·gc.alloc.rate.norm: 7.955 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   668568.537 ±(99.9%) 51064.496 ops/s [Average]
[info]   (min, avg, max) = (650752.967, 668568.537, 682096.364), stdev = 13261.287
[info]   CI (99.9%): [617504.042, 719633.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.836 ±(99.9%) 5.554 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.836, 3.332), stdev = 1.442
[info]   CI (99.9%): [≈ 0, 6.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1.988 ±(99.9%) 13.264 B/op [Average]
[info]   (min, avg, max) = (0.001, 1.988, 7.955), stdev = 3.445
[info]   CI (99.9%): [≈ 0, 15.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 23.53% complete, ETA 01:09:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 50531.988 ops/s
[info] # Warmup Iteration   2: 368987.221 ops/s
[info] # Warmup Iteration   3: 595347.117 ops/s
[info] Iteration   1: 554702.951 ops/s
[info]                  ·gc.alloc.rate:                   1472.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              4178.172 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4629.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.480 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.360 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 617075.234 ops/s
[info]                  ·gc.alloc.rate:                   1524.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              3887.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3347.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.988 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 616567.748 ops/s
[info]                  ·gc.alloc.rate:               1517.833 MB/sec
[info]                  ·gc.alloc.rate.norm:          3874.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1644.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4196.528 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 605907.793 ops/s
[info]                  ·gc.alloc.rate:               1490.472 MB/sec
[info]                  ·gc.alloc.rate.norm:          3869.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3432.984 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 598895.599 ops/s
[info]                  ·gc.alloc.rate:               1486.325 MB/sec
[info]                  ·gc.alloc.rate.norm:          3905.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1329.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3492.540 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson":
[info]   598629.865 ±(99.9%) 99011.204 ops/s [Average]
[info]   (min, avg, max) = (554702.951, 598629.865, 617075.234), stdev = 25712.895
[info]   CI (99.9%): [499618.661, 697641.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1498.378 ±(99.9%) 84.296 MB/sec [Average]
[info]   (min, avg, max) = (1472.838, 1498.378, 1524.423), stdev = 21.892
[info]   CI (99.9%): [1414.082, 1582.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3943.231 ±(99.9%) 508.592 B/op [Average]
[info]   (min, avg, max) = (3869.839, 3943.231, 4178.172), stdev = 132.080
[info]   CI (99.9%): [3434.639, 4451.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1448.005 ±(99.9%) 668.571 MB/sec [Average]
[info]   (min, avg, max) = (1312.668, 1448.005, 1644.041), stdev = 173.626
[info]   CI (99.9%): [779.434, 2116.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3819.948 ±(99.9%) 2176.060 B/op [Average]
[info]   (min, avg, max) = (3347.898, 3819.948, 4629.790), stdev = 565.116
[info]   CI (99.9%): [1643.888, 5996.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.494 ±(99.9%) 3.315 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.494, 1.988), stdev = 0.861
[info]   CI (99.9%): [≈ 0, 3.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.286 ±(99.9%) 8.457 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.286, 5.071), stdev = 2.196
[info]   CI (99.9%): [≈ 0, 9.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 12.000), stdev = 2.510
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 23.76% complete, ETA 01:09:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4538.806 ops/s
[info] # Warmup Iteration   2: 28984.344 ops/s
[info] # Warmup Iteration   3: 39882.810 ops/s
[info] Iteration   1: 39546.172 ops/s
[info]                  ·gc.alloc.rate:                   2173.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              86448.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2160.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85960.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.657 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   2: 38980.562 ops/s
[info]                  ·gc.alloc.rate:                   2093.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              84528.471 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2200.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88835.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.072 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 325.891 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 42814.681 ops/s
[info]                  ·gc.alloc.rate:                   1989.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              73141.210 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1906.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70074.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.061 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 41896.073 ops/s
[info]                  ·gc.alloc.rate:                   1927.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              72402.691 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1931.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72569.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.384 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 42909.403 ops/s
[info]                  ·gc.alloc.rate:                   1973.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              72385.684 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71955.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.054 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce":
[info]   41229.378 ±(99.9%) 7118.618 ops/s [Average]
[info]   (min, avg, max) = (38980.562, 41229.378, 42909.403), stdev = 1848.683
[info]   CI (99.9%): [34110.760, 48347.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate":
[info]   2031.475 ±(99.9%) 384.566 MB/sec [Average]
[info]   (min, avg, max) = (1927.390, 2031.475, 2173.203), stdev = 99.871
[info]   CI (99.9%): [1646.908, 2416.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   77781.267 ±(99.9%) 27242.686 B/op [Average]
[info]   (min, avg, max) = (72385.684, 77781.267, 86448.279), stdev = 7074.839
[info]   CI (99.9%): [50538.581, 105023.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2032.218 ±(99.9%) 529.928 MB/sec [Average]
[info]   (min, avg, max) = (1906.179, 2032.218, 2200.334), stdev = 137.621
[info]   CI (99.9%): [1502.290, 2562.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   77879.176 ±(99.9%) 33874.972 B/op [Average]
[info]   (min, avg, max) = (70074.038, 77879.176, 88835.933), stdev = 8797.223
[info]   CI (99.9%): [44004.204, 111754.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.706 ±(99.9%) 13.706 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.706, 8.072), stdev = 3.560
[info]   CI (99.9%): [≈ 0, 15.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   68.609 ±(99.9%) 553.938 B/op [Average]
[info]   (min, avg, max) = (1.657, 68.609, 325.891), stdev = 143.856
[info]   CI (99.9%): [≈ 0, 622.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 15.000, 29.000), stdev = 9.301
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 24.00% complete, ETA 01:08:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.656 ops/s
[info] # Warmup Iteration   2: 263747.465 ops/s
[info] # Warmup Iteration   3: 288927.337 ops/s
[info] Iteration   1: 302530.020 ops/s
[info]                  ·gc.alloc.rate:                   320.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1694.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 302799.684 ops/s
[info]                  ·gc.alloc.rate:                   320.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              1665.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1689.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 303248.493 ops/s
[info]                  ·gc.alloc.rate:               320.384 MB/sec
[info]                  ·gc.alloc.rate.norm:          1662.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1687.153 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 303389.226 ops/s
[info]                  ·gc.alloc.rate:               321.657 MB/sec
[info]                  ·gc.alloc.rate.norm:          1668.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1686.364 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 305109.197 ops/s
[info]                  ·gc.alloc.rate:      316.535 MB/sec
[info]                  ·gc.alloc.rate.norm: 1632.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava":
[info]   303415.324 ±(99.9%) 3879.653 ops/s [Average]
[info]   (min, avg, max) = (302530.020, 303415.324, 305109.197), stdev = 1007.534
[info]   CI (99.9%): [299535.671, 307294.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   319.819 ±(99.9%) 7.447 MB/sec [Average]
[info]   (min, avg, max) = (316.535, 319.819, 321.657), stdev = 1.934
[info]   CI (99.9%): [312.372, 327.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1658.678 ±(99.9%) 57.861 B/op [Average]
[info]   (min, avg, max) = (1632.002, 1658.678, 1668.067), stdev = 15.026
[info]   CI (99.9%): [1600.817, 1716.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   260.226 ±(99.9%) 560.157 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 260.226, 325.747), stdev = 145.471
[info]   CI (99.9%): [≈ 0, 820.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1351.572 ±(99.9%) 2909.387 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1351.572, 1694.639), stdev = 755.559
[info]   CI (99.9%): [≈ 0, 4260.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.048 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.028), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.247 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.146), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.200, 5.000), stdev = 1.924
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.24% complete, ETA 01:08:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21606.529 ops/s
[info] # Warmup Iteration   2: 79613.278 ops/s
[info] # Warmup Iteration   3: 129428.710 ops/s
[info] Iteration   1: 123161.513 ops/s
[info]                  ·gc.alloc.rate:                   1142.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              14600.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12360.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.144 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.396 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 122563.134 ops/s
[info]                  ·gc.alloc.rate:                   1158.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              14871.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16595.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.802 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 118844.748 ops/s
[info]                  ·gc.alloc.rate:                   1103.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              14620.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12901.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.251 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 121102.399 ops/s
[info]                  ·gc.alloc.rate:                   1120.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              14567.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12704.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.271 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 123261.676 ops/s
[info]                  ·gc.alloc.rate:                   1144.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              14613.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16756.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala":
[info]   121786.694 ±(99.9%) 7150.145 ops/s [Average]
[info]   (min, avg, max) = (118844.748, 121786.694, 123261.676), stdev = 1856.870
[info]   CI (99.9%): [114636.549, 128936.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1134.067 ±(99.9%) 82.682 MB/sec [Average]
[info]   (min, avg, max) = (1103.990, 1134.067, 1158.171), stdev = 21.472
[info]   CI (99.9%): [1051.385, 1216.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   14654.500 ±(99.9%) 473.880 B/op [Average]
[info]   (min, avg, max) = (14567.528, 14654.500, 14871.672), stdev = 123.065
[info]   CI (99.9%): [14180.620, 15128.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1104.791 ±(99.9%) 695.136 MB/sec [Average]
[info]   (min, avg, max) = (967.472, 1104.791, 1312.325), stdev = 180.525
[info]   CI (99.9%): [409.654, 1799.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   14263.515 ±(99.9%) 8514.346 B/op [Average]
[info]   (min, avg, max) = (12360.224, 14263.515, 16756.122), stdev = 2211.149
[info]   CI (99.9%): [5749.168, 22777.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.574 ±(99.9%) 3.520 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.574, 2.144), stdev = 0.914
[info]   CI (99.9%): [≈ 0, 4.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.397 ±(99.9%) 44.981 B/op [Average]
[info]   (min, avg, max) = (0.266, 7.397, 27.396), stdev = 11.681
[info]   CI (99.9%): [≈ 0, 52.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.140
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.47% complete, ETA 01:08:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 205782.340 ops/s
[info] # Warmup Iteration   2: 510598.476 ops/s
[info] # Warmup Iteration   3: 561660.149 ops/s
[info] Iteration   1: 562650.109 ops/s
[info]                  ·gc.alloc.rate:               374.764 MB/sec
[info]                  ·gc.alloc.rate.norm:          1047.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 915.892 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 543617.548 ops/s
[info]                  ·gc.alloc.rate:               364.871 MB/sec
[info]                  ·gc.alloc.rate.norm:          1056.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 947.938 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 562317.628 ops/s
[info]                  ·gc.alloc.rate:                   376.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              1053.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     918.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 551682.767 ops/s
[info]                  ·gc.alloc.rate:               370.982 MB/sec
[info]                  ·gc.alloc.rate.norm:          1057.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 935.959 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 564647.972 ops/s
[info]                  ·gc.alloc.rate:               378.957 MB/sec
[info]                  ·gc.alloc.rate.norm:          1056.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 915.419 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala":
[info]   556983.205 ±(99.9%) 34765.470 ops/s [Average]
[info]   (min, avg, max) = (543617.548, 556983.205, 564647.972), stdev = 9028.482
[info]   CI (99.9%): [522217.735, 591748.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   373.172 ±(99.9%) 21.038 MB/sec [Average]
[info]   (min, avg, max) = (364.871, 373.172, 378.957), stdev = 5.463
[info]   CI (99.9%): [352.134, 394.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1054.265 ±(99.9%) 15.217 B/op [Average]
[info]   (min, avg, max) = (1047.876, 1054.265, 1057.873), stdev = 3.952
[info]   CI (99.9%): [1039.049, 1069.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   327.956 ±(99.9%) 1.737 MB/sec [Average]
[info]   (min, avg, max) = (327.427, 327.956, 328.495), stdev = 0.451
[info]   CI (99.9%): [326.219, 329.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   926.691 ±(99.9%) 56.210 B/op [Average]
[info]   (min, avg, max) = (915.419, 926.691, 947.938), stdev = 14.598
[info]   CI (99.9%): [870.480, 982.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.007 ±(99.9%) 0.058 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.034), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.163 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.095), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 24.71% complete, ETA 01:08:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1237.521 ops/s
[info] # Warmup Iteration   2: 22247.603 ops/s
[info] # Warmup Iteration   3: 52187.507 ops/s
[info] Iteration   1: 51033.740 ops/s
[info]                  ·gc.alloc.rate:                   2470.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              76178.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2287.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70528.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.418 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 105.398 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 51365.558 ops/s
[info]                  ·gc.alloc.rate:                   2210.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              67722.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70560.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.103 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 53385.271 ops/s
[info]                  ·gc.alloc.rate:                   2284.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              67355.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1989.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58643.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.227 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 53281.356 ops/s
[info]                  ·gc.alloc.rate:                   2294.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              67776.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2339.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69097.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.845 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 53302.030 ops/s
[info]                  ·gc.alloc.rate:                   2318.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              68448.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2355.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69541.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.615 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson":
[info]   52473.591 ±(99.9%) 4503.305 ops/s [Average]
[info]   (min, avg, max) = (51033.740, 52473.591, 53385.271), stdev = 1169.494
[info]   CI (99.9%): [47970.286, 56976.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2315.719 ±(99.9%) 367.629 MB/sec [Average]
[info]   (min, avg, max) = (2210.342, 2315.719, 2470.487), stdev = 95.472
[info]   CI (99.9%): [1948.090, 2683.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   69496.082 ±(99.9%) 14464.545 B/op [Average]
[info]   (min, avg, max) = (67355.302, 69496.082, 76178.599), stdev = 3756.396
[info]   CI (99.9%): [55031.537, 83960.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2254.852 ±(99.9%) 581.241 MB/sec [Average]
[info]   (min, avg, max) = (1989.278, 2254.852, 2355.232), stdev = 150.946
[info]   CI (99.9%): [1673.611, 2836.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   67674.347 ±(99.9%) 19591.020 B/op [Average]
[info]   (min, avg, max) = (58643.740, 67674.347, 70560.941), stdev = 5087.726
[info]   CI (99.9%): [48083.327, 87265.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.742 ±(99.9%) 5.765 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.742, 3.418), stdev = 1.497
[info]   CI (99.9%): [≈ 0, 6.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   22.838 ±(99.9%) 177.843 B/op [Average]
[info]   (min, avg, max) = (0.615, 22.838, 105.398), stdev = 46.185
[info]   CI (99.9%): [≈ 0, 200.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.800, 14.000), stdev = 1.924
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 24.94% complete, ETA 01:08:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17136.784 ops/s
[info] # Warmup Iteration   2: 83206.310 ops/s
[info] # Warmup Iteration   3: 84336.636 ops/s
[info] Iteration   1: 93540.368 ops/s
[info]                  ·gc.alloc.rate:                   741.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              12468.371 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10855.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.218 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.492 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 92363.173 ops/s
[info]                  ·gc.alloc.rate:                   742.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              12647.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16487.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.355 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 93388.334 ops/s
[info]                  ·gc.alloc.rate:               747.525 MB/sec
[info]                  ·gc.alloc.rate.norm:          12594.331 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10889.572 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 94183.702 ops/s
[info]                  ·gc.alloc.rate:                   753.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              12589.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10819.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.927 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.616 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 92810.289 ops/s
[info]                  ·gc.alloc.rate:                   736.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              12495.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10934.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.295 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce":
[info]   93257.173 ±(99.9%) 2691.873 ops/s [Average]
[info]   (min, avg, max) = (92363.173, 93257.173, 94183.702), stdev = 699.071
[info]   CI (99.9%): [90565.300, 95949.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate":
[info]   744.225 ±(99.9%) 24.463 MB/sec [Average]
[info]   (min, avg, max) = (736.932, 744.225, 753.359), stdev = 6.353
[info]   CI (99.9%): [719.762, 768.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12559.093 ±(99.9%) 286.807 B/op [Average]
[info]   (min, avg, max) = (12468.371, 12559.093, 12647.458), stdev = 74.483
[info]   CI (99.9%): [12272.286, 12845.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   710.295 ±(99.9%) 553.899 MB/sec [Average]
[info]   (min, avg, max) = (644.873, 710.295, 967.607), stdev = 143.846
[info]   CI (99.9%): [156.395, 1264.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11997.399 ±(99.9%) 9666.454 B/op [Average]
[info]   (min, avg, max) = (10819.931, 11997.399, 16487.401), stdev = 2510.348
[info]   CI (99.9%): [2330.944, 21663.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.096 ±(99.9%) 6.385 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.096, 3.927), stdev = 1.658
[info]   CI (99.9%): [≈ 0, 7.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   18.351 ±(99.9%) 106.671 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18.351, 65.616), stdev = 27.702
[info]   CI (99.9%): [≈ 0, 125.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.200, 16.000), stdev = 4.087
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 25.18% complete, ETA 01:07:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.805 ops/s
[info] # Warmup Iteration   2: 104848.169 ops/s
[info] # Warmup Iteration   3: 116707.559 ops/s
[info] Iteration   1: 122760.393 ops/s
[info]                  ·gc.alloc.rate:                   462.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              5932.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4159.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.267 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 123214.545 ops/s
[info]                  ·gc.alloc.rate:               465.478 MB/sec
[info]                  ·gc.alloc.rate.norm:          5945.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4148.218 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 122540.998 ops/s
[info]                  ·gc.alloc.rate:                   474.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              6096.449 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8350.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.267 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 123184.628 ops/s
[info]                  ·gc.alloc.rate:               465.501 MB/sec
[info]                  ·gc.alloc.rate.norm:          5947.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4157.740 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 120324.605 ops/s
[info]                  ·gc.alloc.rate:                   465.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              6086.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8521.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.355 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava":
[info]   122405.034 ±(99.9%) 4611.146 ops/s [Average]
[info]   (min, avg, max) = (120324.605, 122405.034, 123214.545), stdev = 1197.500
[info]   CI (99.9%): [117793.888, 127016.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   466.774 ±(99.9%) 17.629 MB/sec [Average]
[info]   (min, avg, max) = (462.686, 466.774, 474.667), stdev = 4.578
[info]   CI (99.9%): [449.145, 484.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   6001.727 ±(99.9%) 316.962 B/op [Average]
[info]   (min, avg, max) = (5932.122, 6001.727, 6096.449), stdev = 82.314
[info]   CI (99.9%): [5684.766, 6318.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   455.302 ±(99.9%) 687.790 MB/sec [Average]
[info]   (min, avg, max) = (324.411, 455.302, 651.786), stdev = 178.617
[info]   CI (99.9%): [≈ 0, 1143.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   5867.455 ±(99.9%) 9031.888 B/op [Average]
[info]   (min, avg, max) = (4148.218, 5867.455, 8521.820), stdev = 2345.553
[info]   CI (99.9%): [≈ 0, 14899.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.014 ±(99.9%) 0.049 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.027), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.178 ±(99.9%) 0.640 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.178, 0.355), stdev = 0.166
[info]   CI (99.9%): [≈ 0, 0.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 2.588
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.41% complete, ETA 01:07:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28137.634 ops/s
[info] # Warmup Iteration   2: 83811.752 ops/s
[info] # Warmup Iteration   3: 98066.940 ops/s
[info] Iteration   1: 103172.779 ops/s
[info]                  ·gc.alloc.rate:               386.955 MB/sec
[info]                  ·gc.alloc.rate.norm:          5902.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4943.717 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 103582.831 ops/s
[info]                  ·gc.alloc.rate:               390.520 MB/sec
[info]                  ·gc.alloc.rate.norm:          5932.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4933.939 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 106047.762 ops/s
[info]                  ·gc.alloc.rate:                   399.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              5922.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4819.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 106523.178 ops/s
[info]                  ·gc.alloc.rate:               404.348 MB/sec
[info]                  ·gc.alloc.rate.norm:          5974.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4807.905 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 101680.971 ops/s
[info]                  ·gc.alloc.rate:                   391.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              6052.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10078.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.578 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala":
[info]   104201.504 ±(99.9%) 7842.694 ops/s [Average]
[info]   (min, avg, max) = (101680.971, 104201.504, 106523.178), stdev = 2036.723
[info]   CI (99.9%): [96358.810, 112044.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   394.381 ±(99.9%) 27.377 MB/sec [Average]
[info]   (min, avg, max) = (386.955, 394.381, 404.348), stdev = 7.110
[info]   CI (99.9%): [367.004, 421.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   5956.681 ±(99.9%) 230.233 B/op [Average]
[info]   (min, avg, max) = (5902.022, 5956.681, 6052.731), stdev = 59.791
[info]   CI (99.9%): [5726.448, 6186.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   390.048 ±(99.9%) 562.069 MB/sec [Average]
[info]   (min, avg, max) = (324.125, 390.048, 651.161), stdev = 145.967
[info]   CI (99.9%): [≈ 0, 952.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5916.801 ±(99.9%) 8962.477 B/op [Average]
[info]   (min, avg, max) = (4807.905, 5916.801, 10078.892), stdev = 2327.527
[info]   CI (99.9%): [≈ 0, 14879.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.280 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.167), stdev = 0.073
[info]   CI (99.9%): [≈ 0, 0.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.577 ±(99.9%) 4.337 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.577, 2.578), stdev = 1.126
[info]   CI (99.9%): [≈ 0, 4.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 9.000), stdev = 1.949
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.65% complete, ETA 01:07:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39053.148 ops/s
[info] # Warmup Iteration   2: 113548.130 ops/s
[info] # Warmup Iteration   3: 117957.445 ops/s
[info] Iteration   1: 120610.521 ops/s
[info]                  ·gc.alloc.rate:                   454.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              5933.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4272.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.548 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.149 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 124118.993 ops/s
[info]                  ·gc.alloc.rate:               485.368 MB/sec
[info]                  ·gc.alloc.rate.norm:          6154.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8320.356 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 124817.491 ops/s
[info]                  ·gc.alloc.rate:                   471.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              5944.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4141.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 123374.037 ops/s
[info]                  ·gc.alloc.rate:                   474.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              6052.769 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8383.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 124372.574 ops/s
[info]                  ·gc.alloc.rate:               469.063 MB/sec
[info]                  ·gc.alloc.rate.norm:          5933.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4160.046 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala":
[info]   123458.723 ±(99.9%) 6453.924 ops/s [Average]
[info]   (min, avg, max) = (120610.521, 123458.723, 124817.491), stdev = 1676.064
[info]   CI (99.9%): [117004.799, 129912.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   471.066 ±(99.9%) 42.269 MB/sec [Average]
[info]   (min, avg, max) = (454.892, 471.066, 485.368), stdev = 10.977
[info]   CI (99.9%): [428.797, 513.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   6003.685 ±(99.9%) 378.608 B/op [Average]
[info]   (min, avg, max) = (5933.109, 6003.685, 6154.768), stdev = 98.323
[info]   CI (99.9%): [5625.077, 6382.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.647 ±(99.9%) 692.523 MB/sec [Average]
[info]   (min, avg, max) = (327.540, 459.647, 657.168), stdev = 179.846
[info]   CI (99.9%): [≈ 0, 1152.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5855.438 ±(99.9%) 8777.779 B/op [Average]
[info]   (min, avg, max) = (4141.050, 5855.438, 8383.339), stdev = 2279.561
[info]   CI (99.9%): [≈ 0, 14633.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.115 ±(99.9%) 0.932 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.115, 0.548), stdev = 0.242
[info]   CI (99.9%): [≈ 0, 1.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.503 ±(99.9%) 12.162 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.503, 7.149), stdev = 3.158
[info]   CI (99.9%): [≈ 0, 13.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 8.000), stdev = 2.191
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 25.88% complete, ETA 01:07:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 55372.048 ops/s
[info] # Warmup Iteration   2: 115173.129 ops/s
[info] # Warmup Iteration   3: 114999.074 ops/s
[info] Iteration   1: 122561.738 ops/s
[info]                  ·gc.alloc.rate:               364.743 MB/sec
[info]                  ·gc.alloc.rate.norm:          4683.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4191.396 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 122802.221 ops/s
[info]                  ·gc.alloc.rate:               365.016 MB/sec
[info]                  ·gc.alloc.rate.norm:          4678.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4191.913 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 122922.584 ops/s
[info]                  ·gc.alloc.rate:                   370.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              4737.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4187.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 122755.209 ops/s
[info]                  ·gc.alloc.rate:               366.052 MB/sec
[info]                  ·gc.alloc.rate.norm:          4693.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4202.093 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 123295.827 ops/s
[info]                  ·gc.alloc.rate:                   367.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              4684.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4183.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.531 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc":
[info]   122867.516 ±(99.9%) 1049.008 ops/s [Average]
[info]   (min, avg, max) = (122561.738, 122867.516, 123295.827), stdev = 272.424
[info]   CI (99.9%): [121818.508, 123916.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   366.569 ±(99.9%) 8.209 MB/sec [Average]
[info]   (min, avg, max) = (364.743, 366.569, 370.029), stdev = 2.132
[info]   CI (99.9%): [358.360, 374.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4695.348 ±(99.9%) 93.621 B/op [Average]
[info]   (min, avg, max) = (4678.050, 4695.348, 4737.729), stdev = 24.313
[info]   CI (99.9%): [4601.727, 4788.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   327.217 ±(99.9%) 2.091 MB/sec [Average]
[info]   (min, avg, max) = (326.447, 327.217, 327.746), stdev = 0.543
[info]   CI (99.9%): [325.127, 329.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   4191.309 ±(99.9%) 26.684 B/op [Average]
[info]   (min, avg, max) = (4183.386, 4191.309, 4202.093), stdev = 6.930
[info]   CI (99.9%): [4164.625, 4217.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.070 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.042), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.140 ±(99.9%) 0.888 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.140, 0.531), stdev = 0.231
[info]   CI (99.9%): [≈ 0, 1.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 26.12% complete, ETA 01:07:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 851.473 ops/s
[info] # Warmup Iteration   2: 6921.670 ops/s
[info] # Warmup Iteration   3: 7495.251 ops/s
[info] Iteration   1: 10344.317 ops/s
[info]                  ·gc.alloc.rate:                   2722.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              414123.978 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2636.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     401096.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      15.381 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2339.959 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         92.000 ms
[info] Iteration   2: 13013.301 ops/s
[info]                  ·gc.alloc.rate:                   1967.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              237931.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     246152.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.261 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1240.891 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 13192.206 ops/s
[info]                  ·gc.alloc.rate:                   1988.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              237250.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1772.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211463.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.483 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 12756.515 ops/s
[info]                  ·gc.alloc.rate:                   2009.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              247857.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2153.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     265657.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.151 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 13626.732 ops/s
[info]                  ·gc.alloc.rate:                   2051.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              236947.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1912.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220848.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.809 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce":
[info]   12586.614 ±(99.9%) 4978.889 ops/s [Average]
[info]   (min, avg, max) = (10344.317, 12586.614, 13626.732), stdev = 1293.002
[info]   CI (99.9%): [7607.725, 17565.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate":
[info]   2147.766 ±(99.9%) 1242.086 MB/sec [Average]
[info]   (min, avg, max) = (1967.376, 2147.766, 2722.106), stdev = 322.566
[info]   CI (99.9%): [905.680, 3389.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   274822.117 ±(99.9%) 300369.692 B/op [Average]
[info]   (min, avg, max) = (236947.621, 274822.117, 414123.978), stdev = 78005.055
[info]   CI (99.9%): [≈ 0, 575191.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2101.980 ±(99.9%) 1273.142 MB/sec [Average]
[info]   (min, avg, max) = (1772.598, 2101.980, 2636.471), stdev = 330.631
[info]   CI (99.9%): [828.838, 3375.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   269043.517 ±(99.9%) 295846.176 B/op [Average]
[info]   (min, avg, max) = (211463.489, 269043.517, 401096.029), stdev = 76830.312
[info]   CI (99.9%): [≈ 0, 564889.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   5.237 ±(99.9%) 27.564 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 5.237, 15.381), stdev = 7.158
[info]   CI (99.9%): [≈ 0, 32.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   729.459 ±(99.9%) 4019.360 B/op [Average]
[info]   (min, avg, max) = (2.483, 729.459, 2339.959), stdev = 1043.815
[info]   CI (99.9%): [≈ 0, 4748.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 9.000), stdev = 1.225
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.time":
[info]   136.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 27.200, 92.000), stdev = 36.341
[info]   CI (99.9%): [136.000, 136.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.35% complete, ETA 01:06:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 781.569 ops/s
[info] # Warmup Iteration   2: 8679.249 ops/s
[info] # Warmup Iteration   3: 12664.026 ops/s
[info] Iteration   1: 13165.054 ops/s
[info]                  ·gc.alloc.rate:                   1859.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              222332.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1940.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     231981.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.262 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 13223.887 ops/s
[info]                  ·gc.alloc.rate:                   1854.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              220593.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     193669.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.657 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 316.077 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 13245.417 ops/s
[info]                  ·gc.alloc.rate:               1870.255 MB/sec
[info]                  ·gc.alloc.rate.norm:          222218.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1955.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 232383.691 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 12296.987 ops/s
[info]                  ·gc.alloc.rate:                   1947.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              249177.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     252019.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.372 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 431.454 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 13222.550 ops/s
[info]                  ·gc.alloc.rate:                   1877.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              223469.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196275.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.955 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala":
[info]   13030.779 ±(99.9%) 1583.707 ops/s [Average]
[info]   (min, avg, max) = (12296.987, 13030.779, 13245.417), stdev = 411.284
[info]   CI (99.9%): [11447.073, 14614.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1881.809 ±(99.9%) 144.982 MB/sec [Average]
[info]   (min, avg, max) = (1854.235, 1881.809, 1947.199), stdev = 37.651
[info]   CI (99.9%): [1736.827, 2026.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   227558.288 ±(99.9%) 46704.946 B/op [Average]
[info]   (min, avg, max) = (220593.240, 227558.288, 249177.911), stdev = 12129.126
[info]   CI (99.9%): [180853.342, 274263.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1828.548 ±(99.9%) 669.881 MB/sec [Average]
[info]   (min, avg, max) = (1627.926, 1828.548, 1969.406), stdev = 173.966
[info]   CI (99.9%): [1158.668, 2498.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   221266.174 ±(99.9%) 97609.597 B/op [Average]
[info]   (min, avg, max) = (193669.855, 221266.174, 252019.730), stdev = 25348.902
[info]   CI (99.9%): [123656.577, 318875.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.224 ±(99.9%) 6.366 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.224, 3.372), stdev = 1.653
[info]   CI (99.9%): [≈ 0, 7.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   151.750 ±(99.9%) 796.118 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 151.750, 431.454), stdev = 206.749
[info]   CI (99.9%): [≈ 0, 947.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.400, 13.000), stdev = 2.608
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.59% complete, ETA 01:06:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86724.078 ops/s
[info] # Warmup Iteration   2: 193491.943 ops/s
[info] # Warmup Iteration   3: 225347.906 ops/s
[info] Iteration   1: 215435.840 ops/s
[info]                  ·gc.alloc.rate:               630.606 MB/sec
[info]                  ·gc.alloc.rate.norm:          4606.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4720.334 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 217443.217 ops/s
[info]                  ·gc.alloc.rate:                   581.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              4209.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4681.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.301 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 224276.104 ops/s
[info]                  ·gc.alloc.rate:               602.367 MB/sec
[info]                  ·gc.alloc.rate.norm:          4226.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4548.478 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 226459.134 ops/s
[info]                  ·gc.alloc.rate:                   611.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              4251.331 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4514.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.235 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 222035.150 ops/s
[info]                  ·gc.alloc.rate:                   587.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              4163.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2306.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.917 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.678 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala":
[info]   221129.889 ±(99.9%) 17764.449 ops/s [Average]
[info]   (min, avg, max) = (215435.840, 221129.889, 226459.134), stdev = 4613.371
[info]   CI (99.9%): [203365.440, 238894.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   602.723 ±(99.9%) 75.636 MB/sec [Average]
[info]   (min, avg, max) = (581.536, 602.723, 630.606), stdev = 19.642
[info]   CI (99.9%): [527.088, 678.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4291.340 ±(99.9%) 689.255 B/op [Average]
[info]   (min, avg, max) = (4163.395, 4291.340, 4606.344), stdev = 178.997
[info]   CI (99.9%): [3602.085, 4980.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   583.255 ±(99.9%) 554.996 MB/sec [Average]
[info]   (min, avg, max) = (325.437, 583.255, 649.536), stdev = 144.131
[info]   CI (99.9%): [28.259, 1138.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4154.273 ±(99.9%) 3990.972 B/op [Average]
[info]   (min, avg, max) = (2306.747, 4154.273, 4720.334), stdev = 1036.443
[info]   CI (99.9%): [163.301, 8145.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.599 ±(99.9%) 4.992 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.599, 2.917), stdev = 1.296
[info]   CI (99.9%): [≈ 0, 5.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.243 ±(99.9%) 35.381 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.243, 20.678), stdev = 9.188
[info]   CI (99.9%): [≈ 0, 39.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 8.000), stdev = 1.732
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 26.82% complete, ETA 01:06:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 203.598 ops/s
[info] # Warmup Iteration   2: 3443.558 ops/s
[info] # Warmup Iteration   3: 6018.109 ops/s
[info] Iteration   1: 6955.235 ops/s
[info]                  ·gc.alloc.rate:                   1793.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              405905.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     443877.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.490 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 563.514 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 6996.397 ops/s
[info]                  ·gc.alloc.rate:                   1783.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              401226.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     369578.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 131.109 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 6983.661 ops/s
[info]                  ·gc.alloc.rate:                   1770.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              398970.540 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     371767.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60.986 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6951.843 ops/s
[info]                  ·gc.alloc.rate:                   1780.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              403145.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     450919.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.713 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 6980.428 ops/s
[info]                  ·gc.alloc.rate:                   1808.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              407657.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1670.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     376733.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.693 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson":
[info]   6973.513 ±(99.9%) 74.023 ops/s [Average]
[info]   (min, avg, max) = (6951.843, 6973.513, 6996.397), stdev = 19.224
[info]   CI (99.9%): [6899.489, 7047.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1787.389 ±(99.9%) 54.865 MB/sec [Average]
[info]   (min, avg, max) = (1770.515, 1787.389, 1808.095), stdev = 14.248
[info]   CI (99.9%): [1732.524, 1842.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   403381.043 ±(99.9%) 13451.358 B/op [Average]
[info]   (min, avg, max) = (398970.540, 403381.043, 407657.820), stdev = 3493.275
[info]   CI (99.9%): [389929.685, 416832.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1783.442 ±(99.9%) 681.770 MB/sec [Average]
[info]   (min, avg, max) = (1643.050, 1783.442, 1991.790), stdev = 177.054
[info]   CI (99.9%): [1101.672, 2465.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   402575.413 ±(99.9%) 158166.017 B/op [Average]
[info]   (min, avg, max) = (369578.837, 402575.413, 450919.350), stdev = 41075.212
[info]   CI (99.9%): [244409.396, 560741.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.677 ±(99.9%) 4.003 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.677, 2.490), stdev = 1.040
[info]   CI (99.9%): [≈ 0, 4.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   153.003 ±(99.9%) 906.031 B/op [Average]
[info]   (min, avg, max) = (4.693, 153.003, 563.514), stdev = 235.293
[info]   CI (99.9%): [≈ 0, 1059.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 13.000), stdev = 2.280
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 27.06% complete, ETA 01:06:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4708.432 ops/s
[info] # Warmup Iteration   2: 17948.978 ops/s
[info] # Warmup Iteration   3: 31471.904 ops/s
[info] Iteration   1: 35565.998 ops/s
[info]                  ·gc.alloc.rate:                   2140.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              94733.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2197.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97263.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.582 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.011 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 33429.013 ops/s
[info]                  ·gc.alloc.rate:                   2457.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              115655.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2227.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104810.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.230 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.810 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 30409.015 ops/s
[info]                  ·gc.alloc.rate:                   2357.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              121957.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2497.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     129184.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      15.157 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 784.104 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         112.000 ms
[info] Iteration   4: 31726.122 ops/s
[info]                  ·gc.alloc.rate:                   2063.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              102386.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2061.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102276.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      27.113 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1344.987 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         69.000 ms
[info] Iteration   5: 34460.689 ops/s
[info]                  ·gc.alloc.rate:                   2041.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              93256.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1897.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86676.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.507 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce":
[info]   33118.167 ±(99.9%) 7977.470 ops/s [Average]
[info]   (min, avg, max) = (30409.015, 33118.167, 35565.998), stdev = 2071.724
[info]   CI (99.9%): [25140.697, 41095.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2212.380 ±(99.9%) 713.734 MB/sec [Average]
[info]   (min, avg, max) = (2041.967, 2212.380, 2457.749), stdev = 185.355
[info]   CI (99.9%): [1498.646, 2926.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   105598.157 ±(99.9%) 49065.203 B/op [Average]
[info]   (min, avg, max) = (93256.924, 105598.157, 121957.668), stdev = 12742.077
[info]   CI (99.9%): [56532.954, 154663.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2176.400 ±(99.9%) 853.710 MB/sec [Average]
[info]   (min, avg, max) = (1897.881, 2176.400, 2497.103), stdev = 221.706
[info]   CI (99.9%): [1322.691, 3030.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   104042.433 ±(99.9%) 60374.996 B/op [Average]
[info]   (min, avg, max) = (86676.522, 104042.433, 129184.398), stdev = 15679.195
[info]   CI (99.9%): [43667.437, 164417.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   8.858 ±(99.9%) 46.173 MB/sec [Average]
[info]   (min, avg, max) = (0.208, 8.858, 27.113), stdev = 11.991
[info]   CI (99.9%): [≈ 0, 55.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   443.884 ±(99.9%) 2313.395 B/op [Average]
[info]   (min, avg, max) = (9.507, 443.884, 1344.987), stdev = 600.781
[info]   CI (99.9%): [≈ 0, 2757.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 9.000), stdev = 0.894
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.time":
[info]   242.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 48.400, 112.000), stdev = 42.294
[info]   CI (99.9%): [242.000, 242.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.29% complete, ETA 01:06:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6477.470 ops/s
[info] # Warmup Iteration   2: 22561.370 ops/s
[info] # Warmup Iteration   3: 28111.500 ops/s
[info] Iteration   1: 37356.314 ops/s
[info]                  ·gc.alloc.rate:                   1787.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              75295.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82935.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      18.903 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 796.446 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         57.000 ms
[info] Iteration   2: 35095.380 ops/s
[info]                  ·gc.alloc.rate:                   2177.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              97603.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1964.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88041.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.383 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 555.077 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 39454.145 ops/s
[info]                  ·gc.alloc.rate:                   1878.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              74953.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80518.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.133 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.180 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 39545.578 ops/s
[info]                  ·gc.alloc.rate:                   1877.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              74704.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1805.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71860.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.628 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 37483.283 ops/s
[info]                  ·gc.alloc.rate:                   2234.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              93791.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2180.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91530.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.238 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 261.815 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala":
[info]   37786.940 ±(99.9%) 7046.394 ops/s [Average]
[info]   (min, avg, max) = (35095.380, 37786.940, 39545.578), stdev = 1829.926
[info]   CI (99.9%): [30740.546, 44833.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1991.099 ±(99.9%) 773.211 MB/sec [Average]
[info]   (min, avg, max) = (1787.078, 1991.099, 2234.816), stdev = 200.800
[info]   CI (99.9%): [1217.888, 2764.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   83269.668 ±(99.9%) 44000.613 B/op [Average]
[info]   (min, avg, max) = (74704.378, 83269.668, 97603.810), stdev = 11426.819
[info]   CI (99.9%): [39269.055, 127270.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1987.532 ±(99.9%) 517.711 MB/sec [Average]
[info]   (min, avg, max) = (1805.792, 1987.532, 2180.936), stdev = 134.448
[info]   CI (99.9%): [1469.821, 2505.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   82977.165 ±(99.9%) 29098.288 B/op [Average]
[info]   (min, avg, max) = (71860.768, 82977.165, 91530.140), stdev = 7556.733
[info]   CI (99.9%): [53878.877, 112075.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   7.765 ±(99.9%) 30.408 MB/sec [Average]
[info]   (min, avg, max) = (0.167, 7.765, 18.903), stdev = 7.897
[info]   CI (99.9%): [≈ 0, 38.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   333.029 ±(99.9%) 1303.724 B/op [Average]
[info]   (min, avg, max) = (6.628, 333.029, 796.446), stdev = 338.573
[info]   CI (99.9%): [≈ 0, 1636.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time":
[info]   125.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 25.000, 57.000), stdev = 18.828
[info]   CI (99.9%): [125.000, 125.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.53% complete, ETA 01:05:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 168826.820 ops/s
[info] # Warmup Iteration   2: 276152.355 ops/s
[info] # Warmup Iteration   3: 318676.190 ops/s
[info] Iteration   1: 317714.293 ops/s
[info]                  ·gc.alloc.rate:               728.281 MB/sec
[info]                  ·gc.alloc.rate.norm:          3606.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3253.762 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 310752.042 ops/s
[info]                  ·gc.alloc.rate:               717.961 MB/sec
[info]                  ·gc.alloc.rate.norm:          3636.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3330.055 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 317650.498 ops/s
[info]                  ·gc.alloc.rate:                   723.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              3582.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3260.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 317731.609 ops/s
[info]                  ·gc.alloc.rate:                   732.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              3625.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4900.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 318269.627 ops/s
[info]                  ·gc.alloc.rate:                   717.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              3548.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3254.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.632 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala":
[info]   316423.614 ±(99.9%) 12246.083 ops/s [Average]
[info]   (min, avg, max) = (310752.042, 316423.614, 318269.627), stdev = 3180.269
[info]   CI (99.9%): [304177.531, 328669.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   723.814 ±(99.9%) 24.556 MB/sec [Average]
[info]   (min, avg, max) = (717.588, 723.814, 732.133), stdev = 6.377
[info]   CI (99.9%): [699.258, 748.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3599.737 ±(99.9%) 135.425 B/op [Average]
[info]   (min, avg, max) = (3548.354, 3599.737, 3636.241), stdev = 35.170
[info]   CI (99.9%): [3464.312, 3735.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   724.114 ±(99.9%) 571.539 MB/sec [Average]
[info]   (min, avg, max) = (657.090, 724.114, 989.627), stdev = 148.427
[info]   CI (99.9%): [152.575, 1295.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3599.882 ±(99.9%) 2801.402 B/op [Average]
[info]   (min, avg, max) = (3253.762, 3599.882, 4900.042), stdev = 727.515
[info]   CI (99.9%): [798.480, 6401.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.803 ±(99.9%) 5.092 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.803, 3.056), stdev = 1.322
[info]   CI (99.9%): [≈ 0, 5.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.973 ±(99.9%) 25.211 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.973, 15.130), stdev = 6.547
[info]   CI (99.9%): [≈ 0, 29.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 2.510
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 27.76% complete, ETA 01:05:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 183223.521 ops/s
[info] # Warmup Iteration   2: 321591.584 ops/s
[info] # Warmup Iteration   3: 355995.959 ops/s
[info] Iteration   1: 356021.811 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 346974.237 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 355940.848 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 355616.532 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 352778.609 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc":
[info]   353466.407 ±(99.9%) 14900.713 ops/s [Average]
[info]   (min, avg, max) = (346974.237, 353466.407, 356021.811), stdev = 3869.668
[info]   CI (99.9%): [338565.694, 368367.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 28.00% complete, ETA 01:05:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6381.158 ops/s
[info] # Warmup Iteration   2: 19447.456 ops/s
[info] # Warmup Iteration   3: 34070.359 ops/s
[info] Iteration   1: 39501.508 ops/s
[info]                  ·gc.alloc.rate:               2359.740 MB/sec
[info]                  ·gc.alloc.rate.norm:          93976.393 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2609.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 103933.978 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     59.000 ms
[info] Iteration   2: 39314.620 ops/s
[info]                  ·gc.alloc.rate:                   2715.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              108640.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2510.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100444.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      27.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1111.169 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         47.000 ms
[info] Iteration   3: 39566.582 ops/s
[info]                  ·gc.alloc.rate:                   2532.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              100668.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2662.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105843.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.747 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         39.000 ms
[info] Iteration   4: 38139.549 ops/s
[info]                  ·gc.alloc.rate:                   2642.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              108973.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2417.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99733.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      28.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1167.355 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         97.000 ms
[info] Iteration   5: 31069.020 ops/s
[info]                  ·gc.alloc.rate:                   2744.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              138953.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2914.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147569.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      80.665 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4084.327 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         121.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson":
[info]   37518.256 ±(99.9%) 14060.718 ops/s [Average]
[info]   (min, avg, max) = (31069.020, 37518.256, 39566.582), stdev = 3651.524
[info]   CI (99.9%): [23457.538, 51578.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2598.634 ±(99.9%) 603.237 MB/sec [Average]
[info]   (min, avg, max) = (2359.740, 2598.634, 2744.301), stdev = 156.659
[info]   CI (99.9%): [1995.396, 3201.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   110242.287 ±(99.9%) 66269.503 B/op [Average]
[info]   (min, avg, max) = (93976.393, 110242.287, 138953.257), stdev = 17209.979
[info]   CI (99.9%): [43972.785, 176511.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2622.937 ±(99.9%) 723.992 MB/sec [Average]
[info]   (min, avg, max) = (2417.990, 2622.937, 2914.468), stdev = 188.018
[info]   CI (99.9%): [1898.945, 3346.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   111504.841 ±(99.9%) 78228.894 B/op [Average]
[info]   (min, avg, max) = (99733.477, 111504.841, 147569.364), stdev = 20315.795
[info]   CI (99.9%): [33275.947, 189733.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   27.522 ±(99.9%) 126.140 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 27.522, 80.665), stdev = 32.758
[info]   CI (99.9%): [≈ 0, 153.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1279.520 ±(99.9%) 6412.940 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1279.520, 4084.327), stdev = 1665.420
[info]   CI (99.9%): [≈ 0, 7692.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 12.000), stdev = 1.342
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.time":
[info]   363.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (39.000, 72.600, 121.000), stdev = 35.026
[info]   CI (99.9%): [363.000, 363.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 28.24% complete, ETA 01:05:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22768.061 ops/s
[info] # Warmup Iteration   2: 146173.842 ops/s
[info] # Warmup Iteration   3: 159167.584 ops/s
[info] Iteration   1: 174817.146 ops/s
[info]                  ·gc.alloc.rate:                   2450.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              22060.428 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2270.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20439.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.248 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 178478.581 ops/s
[info]                  ·gc.alloc.rate:                   2487.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              21931.156 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2605.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22979.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.652 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 180972.488 ops/s
[info]                  ·gc.alloc.rate:                   2544.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              22127.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20100.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.362 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 181017.829 ops/s
[info]                  ·gc.alloc.rate:                   2579.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              22425.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2671.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23228.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.543 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 180955.496 ops/s
[info]                  ·gc.alloc.rate:                   2559.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              22260.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2357.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20504.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.362 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce":
[info]   179248.308 ±(99.9%) 10412.088 ops/s [Average]
[info]   (min, avg, max) = (174817.146, 179248.308, 181017.829), stdev = 2703.986
[info]   CI (99.9%): [168836.220, 189660.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2524.097 ±(99.9%) 206.694 MB/sec [Average]
[info]   (min, avg, max) = (2450.254, 2524.097, 2579.167), stdev = 53.678
[info]   CI (99.9%): [2317.403, 2730.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   22160.999 ±(99.9%) 729.885 B/op [Average]
[info]   (min, avg, max) = (21931.156, 22160.999, 22425.073), stdev = 189.549
[info]   CI (99.9%): [21431.115, 22890.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2443.347 ±(99.9%) 702.782 MB/sec [Average]
[info]   (min, avg, max) = (2270.261, 2443.347, 2671.559), stdev = 182.510
[info]   CI (99.9%): [1740.564, 3146.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   21450.545 ±(99.9%) 5851.393 B/op [Average]
[info]   (min, avg, max) = (20100.304, 21450.545, 23228.389), stdev = 1519.588
[info]   CI (99.9%): [15599.152, 27301.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.183 ±(99.9%) 0.892 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.183, 0.583), stdev = 0.232
[info]   CI (99.9%): [≈ 0, 1.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.633 ±(99.9%) 8.051 B/op [Average]
[info]   (min, avg, max) = (0.362, 1.633, 5.248), stdev = 2.091
[info]   CI (99.9%): [≈ 0, 9.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.400, 17.000), stdev = 3.435
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 28.47% complete, ETA 01:04:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.636 ops/s
[info] # Warmup Iteration   2: 450308.129 ops/s
[info] # Warmup Iteration   3: 522965.776 ops/s
[info] Iteration   1: 534956.155 ops/s
[info]                  ·gc.alloc.rate:                   570.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              1678.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1912.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 538433.919 ops/s
[info]                  ·gc.alloc.rate:               564.810 MB/sec
[info]                  ·gc.alloc.rate.norm:          1650.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 950.254 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 544819.283 ops/s
[info]                  ·gc.alloc.rate:               585.065 MB/sec
[info]                  ·gc.alloc.rate.norm:          1690.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1878.217 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 563684.066 ops/s
[info]                  ·gc.alloc.rate:                   604.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              1688.454 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1815.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 560125.344 ops/s
[info]                  ·gc.alloc.rate:                   600.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              1685.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1828.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava":
[info]   548403.754 ±(99.9%) 49610.864 ops/s [Average]
[info]   (min, avg, max) = (534956.155, 548403.754, 563684.066), stdev = 12883.784
[info]   CI (99.9%): [498792.889, 598014.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   585.107 ±(99.9%) 67.457 MB/sec [Average]
[info]   (min, avg, max) = (564.810, 585.107, 604.722), stdev = 17.518
[info]   CI (99.9%): [517.650, 652.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1678.822 ±(99.9%) 62.329 B/op [Average]
[info]   (min, avg, max) = (1650.877, 1678.822, 1690.103), stdev = 16.187
[info]   CI (99.9%): [1616.493, 1741.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   585.369 ±(99.9%) 560.234 MB/sec [Average]
[info]   (min, avg, max) = (325.108, 585.369, 651.086), stdev = 145.491
[info]   CI (99.9%): [25.135, 1145.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1677.088 ±(99.9%) 1571.772 B/op [Average]
[info]   (min, avg, max) = (950.254, 1677.088, 1912.895), stdev = 408.184
[info]   CI (99.9%): [105.317, 3248.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.023 ±(99.9%) 0.107 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.068), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.066 ±(99.9%) 0.303 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.190), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 8.000), stdev = 2.236
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.71% complete, ETA 01:04:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82554.511 ops/s
[info] # Warmup Iteration   2: 290701.684 ops/s
[info] # Warmup Iteration   3: 358758.838 ops/s
[info] Iteration   1: 522490.003 ops/s
[info]                  ·gc.alloc.rate:                   507.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              1528.206 B/op
[info]                  ·gc.churn.PS_Eden_Space:          636.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1916.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.738 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.235 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 518722.016 ops/s
[info]                  ·gc.alloc.rate:               507.519 MB/sec
[info]                  ·gc.alloc.rate.norm:          1539.141 B/op
[info]                  ·gc.churn.PS_Eden_Space:      317.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 962.096 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 522533.579 ops/s
[info]                  ·gc.alloc.rate:                   515.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              1553.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:          634.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1910.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 520647.864 ops/s
[info]                  ·gc.alloc.rate:                   509.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              1539.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          634.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1917.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 512367.459 ops/s
[info]                  ·gc.alloc.rate:               495.696 MB/sec
[info]                  ·gc.alloc.rate.norm:          1522.661 B/op
[info]                  ·gc.churn.PS_Eden_Space:      318.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 977.097 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala":
[info]   519352.184 ±(99.9%) 16203.555 ops/s [Average]
[info]   (min, avg, max) = (512367.459, 519352.184, 522533.579), stdev = 4208.012
[info]   CI (99.9%): [503148.629, 535555.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   507.129 ±(99.9%) 27.844 MB/sec [Average]
[info]   (min, avg, max) = (495.696, 507.129, 515.680), stdev = 7.231
[info]   CI (99.9%): [479.285, 534.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1536.621 ±(99.9%) 45.523 B/op [Average]
[info]   (min, avg, max) = (1522.661, 1536.621, 1553.254), stdev = 11.822
[info]   CI (99.9%): [1491.098, 1582.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   507.974 ±(99.9%) 668.966 MB/sec [Average]
[info]   (min, avg, max) = (317.244, 507.974, 636.209), stdev = 173.728
[info]   CI (99.9%): [≈ 0, 1176.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1536.531 ±(99.9%) 1992.985 B/op [Average]
[info]   (min, avg, max) = (962.096, 1536.531, 1917.061), stdev = 517.572
[info]   CI (99.9%): [≈ 0, 3529.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.360 ±(99.9%) 2.967 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.360, 1.738), stdev = 0.770
[info]   CI (99.9%): [≈ 0, 3.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.085 ±(99.9%) 8.936 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.085, 5.235), stdev = 2.321
[info]   CI (99.9%): [≈ 0, 10.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.94% complete, ETA 01:04:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 170960.583 ops/s
[info] # Warmup Iteration   2: 573104.669 ops/s
[info] # Warmup Iteration   3: 687779.370 ops/s
[info] Iteration   1: 686204.795 ops/s
[info]                  ·gc.alloc.rate:                   462.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              1061.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1503.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 690234.211 ops/s
[info]                  ·gc.alloc.rate:               460.105 MB/sec
[info]                  ·gc.alloc.rate.norm:          1049.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 748.877 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 689805.946 ops/s
[info]                  ·gc.alloc.rate:                   458.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              1046.311 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     749.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 662686.981 ops/s
[info]                  ·gc.alloc.rate:               449.866 MB/sec
[info]                  ·gc.alloc.rate.norm:          1068.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1559.969 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 655968.176 ops/s
[info]                  ·gc.alloc.rate:               455.674 MB/sec
[info]                  ·gc.alloc.rate.norm:          1093.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 789.570 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala":
[info]   676980.022 ±(99.9%) 63010.203 ops/s [Average]
[info]   (min, avg, max) = (655968.176, 676980.022, 690234.211), stdev = 16363.550
[info]   CI (99.9%): [613969.819, 739990.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   457.416 ±(99.9%) 19.067 MB/sec [Average]
[info]   (min, avg, max) = (449.866, 457.416, 462.839), stdev = 4.952
[info]   CI (99.9%): [438.349, 476.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1063.636 ±(99.9%) 72.559 B/op [Average]
[info]   (min, avg, max) = (1046.311, 1063.636, 1093.275), stdev = 18.843
[info]   CI (99.9%): [991.077, 1136.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.720 ±(99.9%) 691.064 MB/sec [Average]
[info]   (min, avg, max) = (328.430, 459.720, 656.838), stdev = 179.467
[info]   CI (99.9%): [≈ 0, 1150.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1070.246 ±(99.9%) 1625.246 B/op [Average]
[info]   (min, avg, max) = (748.877, 1070.246, 1559.969), stdev = 422.071
[info]   CI (99.9%): [≈ 0, 2695.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.019 ±(99.9%) 0.109 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.248 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.142), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 9.000), stdev = 2.345
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 29.18% complete, ETA 01:04:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3630.516 ops/s
[info] # Warmup Iteration   2: 62299.239 ops/s
[info] # Warmup Iteration   3: 109922.494 ops/s
[info] Iteration   1: 106338.594 ops/s
[info]                  ·gc.alloc.rate:                   3452.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              51087.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3626.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53660.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.350 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.564 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 105935.192 ops/s
[info]                  ·gc.alloc.rate:                   3452.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              51292.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3334.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49544.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.619 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 106720.225 ops/s
[info]                  ·gc.alloc.rate:                   3505.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              51690.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3369.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49680.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.921 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 105934.718 ops/s
[info]                  ·gc.alloc.rate:                   3480.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              51717.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3387.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50326.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.619 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 105683.335 ops/s
[info]                  ·gc.alloc.rate:               3460.364 MB/sec
[info]                  ·gc.alloc.rate.norm:          51528.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3057.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45524.269 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson":
[info]   106122.413 ±(99.9%) 1572.629 ops/s [Average]
[info]   (min, avg, max) = (105683.335, 106122.413, 106720.225), stdev = 408.407
[info]   CI (99.9%): [104549.784, 107695.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3470.455 ±(99.9%) 88.531 MB/sec [Average]
[info]   (min, avg, max) = (3452.447, 3470.455, 3505.909), stdev = 22.991
[info]   CI (99.9%): [3381.923, 3558.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51463.053 ±(99.9%) 1038.930 B/op [Average]
[info]   (min, avg, max) = (51087.029, 51463.053, 51717.237), stdev = 269.807
[info]   CI (99.9%): [50424.123, 52501.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3355.073 ±(99.9%) 779.704 MB/sec [Average]
[info]   (min, avg, max) = (3057.152, 3355.073, 3626.345), stdev = 202.487
[info]   CI (99.9%): [2575.369, 4134.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   49747.107 ±(99.9%) 11147.898 B/op [Average]
[info]   (min, avg, max) = (45524.269, 49747.107, 53660.250), stdev = 2895.074
[info]   CI (99.9%): [38599.209, 60895.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.699 ±(99.9%) 5.706 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.699, 3.350), stdev = 1.482
[info]   CI (99.9%): [≈ 0, 6.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   10.344 ±(99.9%) 84.433 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.344, 49.564), stdev = 21.927
[info]   CI (99.9%): [≈ 0, 94.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.count":
[info]   50.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 10.000, 11.000), stdev = 0.707
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 14.200, 17.000), stdev = 1.789
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 29.41% complete, ETA 01:04:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68918.081 ops/s
[info] # Warmup Iteration   2: 225445.969 ops/s
[info] # Warmup Iteration   3: 226546.430 ops/s
[info] Iteration   1: 241322.141 ops/s
[info]                  ·gc.alloc.rate:                   1721.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              11224.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10630.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.825 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 237340.067 ops/s
[info]                  ·gc.alloc.rate:                   1688.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              11196.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10791.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.380 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 242775.363 ops/s
[info]                  ·gc.alloc.rate:                   1731.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              11227.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10588.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.308 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.481 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 245389.753 ops/s
[info]                  ·gc.alloc.rate:               1756.577 MB/sec
[info]                  ·gc.alloc.rate.norm:          11266.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1639.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10518.829 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 240580.124 ops/s
[info]                  ·gc.alloc.rate:                   1735.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              11351.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10801.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.272 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce":
[info]   241481.490 ±(99.9%) 11380.244 ops/s [Average]
[info]   (min, avg, max) = (237340.067, 241481.490, 245389.753), stdev = 2955.413
[info]   CI (99.9%): [230101.246, 252861.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1726.797 ±(99.9%) 95.940 MB/sec [Average]
[info]   (min, avg, max) = (1688.393, 1726.797, 1756.577), stdev = 24.915
[info]   CI (99.9%): [1630.856, 1822.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11253.154 ±(99.9%) 232.655 B/op [Average]
[info]   (min, avg, max) = (11196.008, 11253.154, 11351.463), stdev = 60.420
[info]   CI (99.9%): [11020.499, 11485.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1636.561 ±(99.9%) 36.136 MB/sec [Average]
[info]   (min, avg, max) = (1627.431, 1636.561, 1651.190), stdev = 9.384
[info]   CI (99.9%): [1600.426, 1672.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10666.331 ±(99.9%) 483.065 B/op [Average]
[info]   (min, avg, max) = (10518.829, 10666.331, 10801.278), stdev = 125.451
[info]   CI (99.9%): [10183.266, 11149.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.582 ±(99.9%) 2.649 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.582, 1.354), stdev = 0.688
[info]   CI (99.9%): [≈ 0, 3.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.792 ±(99.9%) 17.209 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.792, 8.825), stdev = 4.469
[info]   CI (99.9%): [≈ 0, 21.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 12.000), stdev = 2.408
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 29.65% complete, ETA 01:03:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.785 ops/s
[info] # Warmup Iteration   2: 1064853.323 ops/s
[info] # Warmup Iteration   3: 1154698.473 ops/s
[info] Iteration   1: 1226869.720 ops/s
[info]                  ·gc.alloc.rate:                   684.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              878.284 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     831.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1177408.553 ops/s
[info]                  ·gc.alloc.rate:               668.963 MB/sec
[info]                  ·gc.alloc.rate.norm:          894.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 867.290 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 1210221.103 ops/s
[info]                  ·gc.alloc.rate:                   681.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              886.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     845.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1191853.617 ops/s
[info]                  ·gc.alloc.rate:                   665.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              878.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     859.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1148104.279 ops/s
[info]                  ·gc.alloc.rate:                   639.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              876.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     894.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.280 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.868 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava":
[info]   1190891.454 ±(99.9%) 116820.053 ops/s [Average]
[info]   (min, avg, max) = (1148104.279, 1190891.454, 1226869.720), stdev = 30337.797
[info]   CI (99.9%): [1074071.402, 1307711.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   667.930 ±(99.9%) 68.870 MB/sec [Average]
[info]   (min, avg, max) = (639.487, 667.930, 684.650), stdev = 17.885
[info]   CI (99.9%): [599.060, 736.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   882.689 ±(99.9%) 28.435 B/op [Average]
[info]   (min, avg, max) = (876.654, 882.689, 894.185), stdev = 7.384
[info]   CI (99.9%): [854.254, 911.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   650.050 ±(99.9%) 6.128 MB/sec [Average]
[info]   (min, avg, max) = (648.152, 650.050, 652.152), stdev = 1.591
[info]   CI (99.9%): [643.922, 656.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   859.541 ±(99.9%) 90.992 B/op [Average]
[info]   (min, avg, max) = (831.464, 859.541, 894.016), stdev = 23.630
[info]   CI (99.9%): [768.549, 950.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.872 ±(99.9%) 7.336 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.872, 4.280), stdev = 1.905
[info]   CI (99.9%): [≈ 0, 8.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.195 ±(99.9%) 10.059 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.195, 5.868), stdev = 2.612
[info]   CI (99.9%): [≈ 0, 11.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.88% complete, ETA 01:03:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 235653.785 ops/s
[info] # Warmup Iteration   2: 1042084.127 ops/s
[info] # Warmup Iteration   3: 1245228.351 ops/s
[info] Iteration   1: 1227412.299 ops/s
[info]                  ·gc.alloc.rate:                   684.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              877.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     830.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1223763.447 ops/s
[info]                  ·gc.alloc.rate:                   686.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              883.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     834.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1222888.153 ops/s
[info]                  ·gc.alloc.rate:                   683.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              879.548 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     836.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1231600.462 ops/s
[info]                  ·gc.alloc.rate:                   690.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              882.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     832.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1217150.353 ops/s
[info]                  ·gc.alloc.rate:                   676.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              875.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     844.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.357 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala":
[info]   1224562.943 ±(99.9%) 20739.580 ops/s [Average]
[info]   (min, avg, max) = (1217150.353, 1224562.943, 1231600.462), stdev = 5386.003
[info]   CI (99.9%): [1203823.363, 1245302.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   684.455 ±(99.9%) 19.685 MB/sec [Average]
[info]   (min, avg, max) = (676.950, 684.455, 690.933), stdev = 5.112
[info]   CI (99.9%): [664.770, 704.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   879.611 ±(99.9%) 13.353 B/op [Average]
[info]   (min, avg, max) = (875.324, 879.611, 883.138), stdev = 3.468
[info]   CI (99.9%): [866.258, 892.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   650.205 ±(99.9%) 7.850 MB/sec [Average]
[info]   (min, avg, max) = (647.756, 650.205, 652.859), stdev = 2.039
[info]   CI (99.9%): [642.354, 658.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   835.619 ±(99.9%) 20.588 B/op [Average]
[info]   (min, avg, max) = (830.256, 835.619, 844.173), stdev = 5.347
[info]   CI (99.9%): [815.031, 856.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.844 ±(99.9%) 7.102 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 0.844, 4.143), stdev = 1.844
[info]   CI (99.9%): [≈ 0, 7.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.091 ±(99.9%) 9.183 B/op [Average]
[info]   (min, avg, max) = (0.010, 1.091, 5.357), stdev = 2.385
[info]   CI (99.9%): [≈ 0, 10.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 8.000), stdev = 0.894
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.12% complete, ETA 01:03:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 683592.956 ops/s
[info] # Warmup Iteration   2: 983759.297 ops/s
[info] # Warmup Iteration   3: 1124351.233 ops/s
[info] Iteration   1: 1129056.800 ops/s
[info]                  ·gc.alloc.rate:                   634.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              884.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     915.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1134922.554 ops/s
[info]                  ·gc.alloc.rate:               634.858 MB/sec
[info]                  ·gc.alloc.rate.norm:          880.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 911.276 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 1144906.985 ops/s
[info]                  ·gc.alloc.rate:               634.911 MB/sec
[info]                  ·gc.alloc.rate.norm:          872.750 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 452.356 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1098747.386 ops/s
[info]                  ·gc.alloc.rate:               617.411 MB/sec
[info]                  ·gc.alloc.rate.norm:          884.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 943.711 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 1109832.791 ops/s
[info]                  ·gc.alloc.rate:                   624.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              884.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     935.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala":
[info]   1123493.303 ±(99.9%) 72528.594 ops/s [Average]
[info]   (min, avg, max) = (1098747.386, 1123493.303, 1144906.985), stdev = 18835.446
[info]   CI (99.9%): [1050964.709, 1196021.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   629.225 ±(99.9%) 30.996 MB/sec [Average]
[info]   (min, avg, max) = (617.411, 629.225, 634.911), stdev = 8.050
[info]   CI (99.9%): [598.229, 660.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   881.381 ±(99.9%) 20.000 B/op [Average]
[info]   (min, avg, max) = (872.750, 881.381, 884.823), stdev = 5.194
[info]   CI (99.9%): [861.381, 901.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   592.371 ±(99.9%) 566.772 MB/sec [Average]
[info]   (min, avg, max) = (329.081, 592.371, 659.855), stdev = 147.189
[info]   CI (99.9%): [25.599, 1159.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   831.645 ±(99.9%) 818.090 B/op [Average]
[info]   (min, avg, max) = (452.356, 831.645, 943.711), stdev = 212.455
[info]   CI (99.9%): [13.555, 1649.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.587 ±(99.9%) 4.968 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.587, 2.895), stdev = 1.290
[info]   CI (99.9%): [≈ 0, 5.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.832 ±(99.9%) 7.042 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.832, 4.104), stdev = 1.829
[info]   CI (99.9%): [≈ 0, 7.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 8.000), stdev = 1.789
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 30.35% complete, ETA 01:03:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 623406.466 ops/s
[info] # Warmup Iteration   2: 965921.639 ops/s
[info] # Warmup Iteration   3: 1135246.389 ops/s
[info] Iteration   1: 1134127.794 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1140637.575 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1141286.255 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1153026.385 ops/s
[info]                  ·gc.alloc.rate:      8.267 MB/sec
[info]                  ·gc.alloc.rate.norm: 11.283 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1097537.437 ops/s
[info]                  ·gc.alloc.rate:      39.958 MB/sec
[info]                  ·gc.alloc.rate.norm: 57.273 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   1133323.089 ±(99.9%) 81375.186 ops/s [Average]
[info]   (min, avg, max) = (1097537.437, 1133323.089, 1153026.385), stdev = 21132.877
[info]   CI (99.9%): [1051947.903, 1214698.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   9.645 ±(99.9%) 66.690 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 9.645, 39.958), stdev = 17.319
[info]   CI (99.9%): [≈ 0, 76.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   13.712 ±(99.9%) 95.638 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 13.712, 57.273), stdev = 24.837
[info]   CI (99.9%): [≈ 0, 109.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 30.59% complete, ETA 01:03:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6331.600 ops/s
[info] # Warmup Iteration   2: 20001.186 ops/s
[info] # Warmup Iteration   3: 36762.079 ops/s
[info] Iteration   1: 38011.664 ops/s
[info]                  ·gc.alloc.rate:                   1796.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              74394.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1942.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80424.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.636 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 191.932 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 36022.287 ops/s
[info]                  ·gc.alloc.rate:                   1959.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              85596.300 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1930.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84342.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.557 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 155.425 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 38809.653 ops/s
[info]                  ·gc.alloc.rate:                   1867.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              75719.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78396.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.909 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 38608.195 ops/s
[info]                  ·gc.alloc.rate:                   1854.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              75592.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66270.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.486 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 39925.509 ops/s
[info]                  ·gc.alloc.rate:                   1925.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              75852.474 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77751.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.821 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson":
[info]   38275.462 ±(99.9%) 5535.129 ops/s [Average]
[info]   (min, avg, max) = (36022.287, 38275.462, 39925.509), stdev = 1437.455
[info]   CI (99.9%): [32740.333, 43810.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1880.547 ±(99.9%) 243.850 MB/sec [Average]
[info]   (min, avg, max) = (1796.814, 1880.547, 1959.190), stdev = 63.327
[info]   CI (99.9%): [1636.697, 2124.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   77431.122 ±(99.9%) 17718.549 B/op [Average]
[info]   (min, avg, max) = (74394.077, 77431.122, 85596.300), stdev = 4601.451
[info]   CI (99.9%): [59712.572, 95149.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1881.038 ±(99.9%) 553.447 MB/sec [Average]
[info]   (min, avg, max) = (1625.732, 1881.038, 1973.283), stdev = 143.728
[info]   CI (99.9%): [1327.590, 2434.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   77437.052 ±(99.9%) 25996.147 B/op [Average]
[info]   (min, avg, max) = (66270.872, 77437.052, 84342.425), stdev = 6751.117
[info]   CI (99.9%): [51440.905, 103433.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.714 ±(99.9%) 8.508 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.714, 4.636), stdev = 2.210
[info]   CI (99.9%): [≈ 0, 10.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   72.514 ±(99.9%) 359.218 B/op [Average]
[info]   (min, avg, max) = (0.821, 72.514, 191.932), stdev = 93.288
[info]   CI (99.9%): [≈ 0, 431.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 13.000, 28.000), stdev = 8.746
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 30.82% complete, ETA 01:02:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20845.064 ops/s
[info] # Warmup Iteration   2: 92950.038 ops/s
[info] # Warmup Iteration   3: 140324.286 ops/s
[info] Iteration   1: 136916.238 ops/s
[info]                  ·gc.alloc.rate:                   1906.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              21912.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1885.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21678.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.677 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Iteration   2: 140110.937 ops/s
[info]                  ·gc.alloc.rate:                   1761.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              19783.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1561.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17532.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.449 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 141923.799 ops/s
[info]                  ·gc.alloc.rate:                   1787.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              19822.245 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1877.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20817.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.737 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.438 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 141653.380 ops/s
[info]                  ·gc.alloc.rate:                   1777.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              19746.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1560.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17333.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.899 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.208 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 141589.025 ops/s
[info]                  ·gc.alloc.rate:                   1800.854 MB/sec
[info]                  ·gc.alloc.rate.norm:              20018.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1882.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20925.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.926 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce":
[info]   140438.676 ±(99.9%) 8058.658 ops/s [Average]
[info]   (min, avg, max) = (136916.238, 140438.676, 141923.799), stdev = 2092.808
[info]   CI (99.9%): [132380.018, 148497.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1806.709 ±(99.9%) 221.542 MB/sec [Average]
[info]   (min, avg, max) = (1761.699, 1806.709, 1906.388), stdev = 57.534
[info]   CI (99.9%): [1585.167, 2028.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20256.557 ±(99.9%) 3588.189 B/op [Average]
[info]   (min, avg, max) = (19746.107, 20256.557, 21912.886), stdev = 931.841
[info]   CI (99.9%): [16668.368, 23844.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1753.397 ±(99.9%) 677.705 MB/sec [Average]
[info]   (min, avg, max) = (1560.041, 1753.397, 1885.991), stdev = 175.998
[info]   CI (99.9%): [1075.691, 2431.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19657.568 ±(99.9%) 7927.928 B/op [Average]
[info]   (min, avg, max) = (17333.792, 19657.568, 21678.437), stdev = 2058.858
[info]   CI (99.9%): [11729.640, 27585.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.565 ±(99.9%) 6.117 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 2.565, 4.047), stdev = 1.589
[info]   CI (99.9%): [≈ 0, 8.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   28.740 ±(99.9%) 68.118 B/op [Average]
[info]   (min, avg, max) = (0.926, 28.740, 45.449), stdev = 17.690
[info]   CI (99.9%): [≈ 0, 96.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.time":
[info]   100.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 20.000, 36.000), stdev = 12.104
[info]   CI (99.9%): [100.000, 100.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.06% complete, ETA 01:02:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34382.004 ops/s
[info] # Warmup Iteration   2: 149414.316 ops/s
[info] # Warmup Iteration   3: 189097.143 ops/s
[info] Iteration   1: 205379.827 ops/s
[info]                  ·gc.alloc.rate:                   1224.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              9380.285 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1269.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9727.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.767 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.204 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 195830.002 ops/s
[info]                  ·gc.alloc.rate:                   1174.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              9442.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1282.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10306.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.685 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 208249.650 ops/s
[info]                  ·gc.alloc.rate:                   1235.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              9337.959 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7312.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.709 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 205147.650 ops/s
[info]                  ·gc.alloc.rate:                   1232.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              9453.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1288.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9883.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.364 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.466 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 208676.073 ops/s
[info]                  ·gc.alloc.rate:                   1241.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              9365.993 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1281.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9666.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala":
[info]   204656.641 ±(99.9%) 19984.359 ops/s [Average]
[info]   (min, avg, max) = (195830.002, 204656.641, 208676.073), stdev = 5189.875
[info]   CI (99.9%): [184672.282, 224641.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1221.884 ±(99.9%) 103.995 MB/sec [Average]
[info]   (min, avg, max) = (1174.919, 1221.884, 1241.905), stdev = 27.007
[info]   CI (99.9%): [1117.888, 1325.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9396.033 ±(99.9%) 192.322 B/op [Average]
[info]   (min, avg, max) = (9337.959, 9396.033, 9453.505), stdev = 49.945
[info]   CI (99.9%): [9203.712, 9588.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1218.015 ±(99.9%) 539.785 MB/sec [Average]
[info]   (min, avg, max) = (967.562, 1218.015, 1288.808), stdev = 140.180
[info]   CI (99.9%): [678.230, 1757.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9379.163 ±(99.9%) 4551.748 B/op [Average]
[info]   (min, avg, max) = (7312.333, 9379.163, 10306.086), stdev = 1182.074
[info]   CI (99.9%): [4827.415, 13930.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.751 ±(99.9%) 6.876 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.751, 4.364), stdev = 1.786
[info]   CI (99.9%): [≈ 0, 8.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   13.444 ±(99.9%) 52.631 B/op [Average]
[info]   (min, avg, max) = (0.157, 13.444, 33.466), stdev = 13.668
[info]   CI (99.9%): [≈ 0, 66.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 12.200, 18.000), stdev = 5.357
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.29% complete, ETA 01:02:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86544.629 ops/s
[info] # Warmup Iteration   2: 187106.240 ops/s
[info] # Warmup Iteration   3: 249030.526 ops/s
[info] Iteration   1: 243792.463 ops/s
[info]                  ·gc.alloc.rate:                   1309.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              8454.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8364.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.740 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.688 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 245308.171 ops/s
[info]                  ·gc.alloc.rate:                   1311.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              8417.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8308.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.877 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 250094.532 ops/s
[info]                  ·gc.alloc.rate:                   1335.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              8401.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1288.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8111.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.941 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.510 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 251392.051 ops/s
[info]                  ·gc.alloc.rate:               1340.601 MB/sec
[info]                  ·gc.alloc.rate.norm:          8393.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1284.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8044.860 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 243076.188 ops/s
[info]                  ·gc.alloc.rate:                   1310.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              8482.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1291.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8361.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala":
[info]   246732.681 ±(99.9%) 14542.977 ops/s [Average]
[info]   (min, avg, max) = (243076.188, 246732.681, 251392.051), stdev = 3776.765
[info]   CI (99.9%): [232189.703, 261275.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1321.522 ±(99.9%) 57.864 MB/sec [Average]
[info]   (min, avg, max) = (1309.521, 1321.522, 1340.601), stdev = 15.027
[info]   CI (99.9%): [1263.658, 1379.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   8429.746 ±(99.9%) 145.828 B/op [Average]
[info]   (min, avg, max) = (8393.051, 8429.746, 8482.997), stdev = 37.871
[info]   CI (99.9%): [8283.918, 8575.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1291.248 ±(99.9%) 16.944 MB/sec [Average]
[info]   (min, avg, max) = (1284.986, 1291.248, 1295.577), stdev = 4.400
[info]   CI (99.9%): [1274.304, 1308.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   8238.038 ±(99.9%) 575.297 B/op [Average]
[info]   (min, avg, max) = (8044.860, 8238.038, 8364.113), stdev = 149.403
[info]   CI (99.9%): [7662.741, 8813.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.324 ±(99.9%) 5.526 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.324, 2.941), stdev = 1.435
[info]   CI (99.9%): [≈ 0, 6.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.442 ±(99.9%) 35.171 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.442, 18.510), stdev = 9.134
[info]   CI (99.9%): [≈ 0, 43.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.600, 20.000), stdev = 6.427
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 31.53% complete, ETA 01:02:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2297.967 ops/s
[info] # Warmup Iteration   2: 45788.313 ops/s
[info] # Warmup Iteration   3: 89512.881 ops/s
[info] Iteration   1: 92018.514 ops/s
[info]                  ·gc.alloc.rate:                   3288.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              56252.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3289.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56271.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.697 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63.233 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 100604.731 ops/s
[info]                  ·gc.alloc.rate:                   3339.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              52243.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3313.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51832.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.376 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.175 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 100269.617 ops/s
[info]                  ·gc.alloc.rate:                   3336.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              52352.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3344.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52482.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.307 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 99219.644 ops/s
[info]                  ·gc.alloc.rate:                   3309.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              52496.608 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3033.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48125.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.330 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 100627.071 ops/s
[info]                  ·gc.alloc.rate:                   3373.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              52749.740 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52990.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.651 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson":
[info]   98547.915 ±(99.9%) 14226.806 ops/s [Average]
[info]   (min, avg, max) = (92018.514, 98547.915, 100627.071), stdev = 3694.656
[info]   CI (99.9%): [84321.109, 112774.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3329.457 ±(99.9%) 123.116 MB/sec [Average]
[info]   (min, avg, max) = (3288.869, 3329.457, 3373.029), stdev = 31.973
[info]   CI (99.9%): [3206.341, 3452.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   53218.997 ±(99.9%) 6571.599 B/op [Average]
[info]   (min, avg, max) = (52243.036, 53218.997, 56252.985), stdev = 1706.623
[info]   CI (99.9%): [46647.397, 59790.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3274.039 ±(99.9%) 535.924 MB/sec [Average]
[info]   (min, avg, max) = (3033.974, 3274.039, 3388.416), stdev = 139.178
[info]   CI (99.9%): [2738.115, 3809.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   52340.405 ±(99.9%) 11214.086 B/op [Average]
[info]   (min, avg, max) = (48125.069, 52340.405, 56271.779), stdev = 2912.262
[info]   CI (99.9%): [41126.319, 63554.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.244 ±(99.9%) 6.554 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.244, 3.697), stdev = 1.702
[info]   CI (99.9%): [≈ 0, 7.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   20.539 ±(99.9%) 110.154 B/op [Average]
[info]   (min, avg, max) = (0.330, 20.539, 63.233), stdev = 28.607
[info]   CI (99.9%): [≈ 0, 130.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time":
[info]   79.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 15.800, 19.000), stdev = 2.168
[info]   CI (99.9%): [79.000, 79.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 31.76% complete, ETA 01:01:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51185.416 ops/s
[info] # Warmup Iteration   2: 188170.515 ops/s
[info] # Warmup Iteration   3: 216617.381 ops/s
[info] Iteration   1: 245010.956 ops/s
[info]                  ·gc.alloc.rate:                   1597.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              10264.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10515.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.494 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.869 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 244775.848 ops/s
[info]                  ·gc.alloc.rate:                   1598.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              10279.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10464.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.630 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 247416.970 ops/s
[info]                  ·gc.alloc.rate:                   1603.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              10197.857 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10334.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 243966.730 ops/s
[info]                  ·gc.alloc.rate:                   1582.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              10209.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8431.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 247150.577 ops/s
[info]                  ·gc.alloc.rate:               1625.249 MB/sec
[info]                  ·gc.alloc.rate.norm:          10345.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1649.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10499.080 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce":
[info]   245664.216 ±(99.9%) 5896.272 ops/s [Average]
[info]   (min, avg, max) = (243966.730, 245664.216, 247416.970), stdev = 1531.243
[info]   CI (99.9%): [239767.944, 251560.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1601.750 ±(99.9%) 58.753 MB/sec [Average]
[info]   (min, avg, max) = (1582.983, 1601.750, 1625.249), stdev = 15.258
[info]   CI (99.9%): [1542.997, 1660.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10259.283 ±(99.9%) 227.922 B/op [Average]
[info]   (min, avg, max) = (10197.857, 10259.283, 10345.127), stdev = 59.191
[info]   CI (99.9%): [10031.360, 10487.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1569.332 ±(99.9%) 565.249 MB/sec [Average]
[info]   (min, avg, max) = (1307.292, 1569.332, 1649.435), stdev = 146.793
[info]   CI (99.9%): [1004.083, 2134.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10049.072 ±(99.9%) 3492.302 B/op [Average]
[info]   (min, avg, max) = (8431.686, 10049.072, 10515.799), stdev = 906.940
[info]   CI (99.9%): [6556.770, 13541.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.145 ±(99.9%) 7.471 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.145, 4.494), stdev = 1.940
[info]   CI (99.9%): [≈ 0, 8.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7.353 ±(99.9%) 47.992 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.353, 28.869), stdev = 12.463
[info]   CI (99.9%): [≈ 0, 55.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.600, 20.000), stdev = 5.857
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.00% complete, ETA 01:01:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 254299.287 ops/s
[info] # Warmup Iteration   2: 779877.859 ops/s
[info] # Warmup Iteration   3: 860899.510 ops/s
[info] Iteration   1: 862708.716 ops/s
[info]                  ·gc.alloc.rate:                   682.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              1245.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1173.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 862911.299 ops/s
[info]                  ·gc.alloc.rate:               695.517 MB/sec
[info]                  ·gc.alloc.rate.norm:          1268.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1177.351 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 860648.608 ops/s
[info]                  ·gc.alloc.rate:               678.943 MB/sec
[info]                  ·gc.alloc.rate.norm:          1241.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1185.235 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 860499.688 ops/s
[info]                  ·gc.alloc.rate:                   675.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              1236.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1190.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 853039.971 ops/s
[info]                  ·gc.alloc.rate:                   669.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              1235.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1205.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala":
[info]   859961.656 ±(99.9%) 15512.628 ops/s [Average]
[info]   (min, avg, max) = (853039.971, 859961.656, 862911.299), stdev = 4028.580
[info]   CI (99.9%): [844449.028, 875474.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   680.530 ±(99.9%) 37.016 MB/sec [Average]
[info]   (min, avg, max) = (669.760, 680.530, 695.517), stdev = 9.613
[info]   CI (99.9%): [643.514, 717.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1245.414 ±(99.9%) 52.175 B/op [Average]
[info]   (min, avg, max) = (1235.573, 1245.414, 1268.544), stdev = 13.550
[info]   CI (99.9%): [1193.239, 1297.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   648.304 ±(99.9%) 15.531 MB/sec [Average]
[info]   (min, avg, max) = (643.473, 648.304, 653.561), stdev = 4.033
[info]   CI (99.9%): [632.773, 663.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1186.511 ±(99.9%) 48.158 B/op [Average]
[info]   (min, avg, max) = (1173.952, 1186.511, 1205.689), stdev = 12.506
[info]   CI (99.9%): [1138.353, 1234.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.123 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.031, 0.076), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.24% complete, ETA 01:01:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 407435.391 ops/s
[info] # Warmup Iteration   2: 586839.828 ops/s
[info] # Warmup Iteration   3: 674412.416 ops/s
[info] Iteration   1: 684072.038 ops/s
[info]                  ·gc.alloc.rate:               532.993 MB/sec
[info]                  ·gc.alloc.rate.norm:          1226.299 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 754.034 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 683232.152 ops/s
[info]                  ·gc.alloc.rate:                   541.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              1247.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1513.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 666909.552 ops/s
[info]                  ·gc.alloc.rate:                   529.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              1249.655 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1551.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 663641.535 ops/s
[info]                  ·gc.alloc.rate:                   520.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              1233.563 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     780.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 668850.030 ops/s
[info]                  ·gc.alloc.rate:               556.071 MB/sec
[info]                  ·gc.alloc.rate.norm:          1308.470 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1549.474 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala":
[info]   673341.061 ±(99.9%) 36964.278 ops/s [Average]
[info]   (min, avg, max) = (663641.535, 673341.061, 684072.038), stdev = 9599.506
[info]   CI (99.9%): [636376.784, 710305.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   536.109 ±(99.9%) 51.982 MB/sec [Average]
[info]   (min, avg, max) = (520.362, 536.109, 556.071), stdev = 13.500
[info]   CI (99.9%): [484.127, 588.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1253.106 ±(99.9%) 124.902 B/op [Average]
[info]   (min, avg, max) = (1226.299, 1253.106, 1308.470), stdev = 32.437
[info]   CI (99.9%): [1128.204, 1378.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   525.953 ±(99.9%) 694.209 MB/sec [Average]
[info]   (min, avg, max) = (327.730, 525.953, 658.492), stdev = 180.284
[info]   CI (99.9%): [≈ 0, 1220.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1229.717 ±(99.9%) 1627.236 B/op [Average]
[info]   (min, avg, max) = (754.034, 1229.717, 1551.664), stdev = 422.588
[info]   CI (99.9%): [≈ 0, 2856.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.103 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.049), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 7.000), stdev = 2.191
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 32.47% complete, ETA 01:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 452585.608 ops/s
[info] # Warmup Iteration   2: 629514.275 ops/s
[info] # Warmup Iteration   3: 689112.786 ops/s
[info] Iteration   1: 682049.062 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 688258.756 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 687747.202 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 664993.478 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 687210.723 ops/s
[info]                  ·gc.alloc.rate:      0.841 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.925 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   682051.844 ±(99.9%) 37952.034 ops/s [Average]
[info]   (min, avg, max) = (664993.478, 682051.844, 688258.756), stdev = 9856.023
[info]   CI (99.9%): [644099.810, 720003.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.168 ±(99.9%) 1.447 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.168, 0.841), stdev = 0.376
[info]   CI (99.9%): [≈ 0, 1.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.386 ±(99.9%) 3.314 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.386, 1.925), stdev = 0.861
[info]   CI (99.9%): [≈ 0, 3.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 32.71% complete, ETA 01:01:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 60406.684 ops/s
[info] # Warmup Iteration   2: 521724.681 ops/s
[info] # Warmup Iteration   3: 548398.833 ops/s
[info] Iteration   1: 621724.704 ops/s
[info]                  ·gc.alloc.rate:                   1532.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              3879.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3311.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 615758.904 ops/s
[info]                  ·gc.alloc.rate:                   1519.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              3884.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4203.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.884 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.816 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 617262.966 ops/s
[info]                  ·gc.alloc.rate:                   1517.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              3868.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3359.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 611103.791 ops/s
[info]                  ·gc.alloc.rate:                   1535.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              3954.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4266.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 623264.658 ops/s
[info]                  ·gc.alloc.rate:               1532.430 MB/sec
[info]                  ·gc.alloc.rate.norm:          3869.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1333.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3366.746 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson":
[info]   617823.004 ±(99.9%) 18721.896 ops/s [Average]
[info]   (min, avg, max) = (611103.791, 617823.004, 623264.658), stdev = 4862.017
[info]   CI (99.9%): [599101.108, 636544.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1527.682 ±(99.9%) 32.008 MB/sec [Average]
[info]   (min, avg, max) = (1517.725, 1527.682, 1535.956), stdev = 8.312
[info]   CI (99.9%): [1495.674, 1559.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3891.309 ±(99.9%) 138.791 B/op [Average]
[info]   (min, avg, max) = (3868.407, 3891.309, 3954.654), stdev = 36.043
[info]   CI (99.9%): [3752.519, 4030.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1452.259 ±(99.9%) 698.971 MB/sec [Average]
[info]   (min, avg, max) = (1308.301, 1452.259, 1657.170), stdev = 181.521
[info]   CI (99.9%): [753.287, 2151.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3701.595 ±(99.9%) 1878.303 B/op [Average]
[info]   (min, avg, max) = (3311.949, 3701.595, 4266.744), stdev = 487.789
[info]   CI (99.9%): [1823.292, 5579.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.406 ±(99.9%) 3.184 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.406, 1.884), stdev = 0.827
[info]   CI (99.9%): [≈ 0, 3.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.037 ±(99.9%) 8.140 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.037, 4.816), stdev = 2.114
[info]   CI (99.9%): [≈ 0, 9.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 10.000), stdev = 1.949
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 32.94% complete, ETA 01:00:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1346.257 ops/s
[info] # Warmup Iteration   2: 8091.689 ops/s
[info] # Warmup Iteration   3: 6592.652 ops/s
[info] Iteration   1: 11515.159 ops/s
[info]                  ·gc.alloc.rate:                   1438.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              196595.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177721.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 648.902 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 11772.239 ops/s
[info]                  ·gc.alloc.rate:                   1482.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              198107.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1617.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216215.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 192.016 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 11825.339 ops/s
[info]                  ·gc.alloc.rate:                   1471.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              195898.267 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1289.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171644.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.789 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 11602.453 ops/s
[info]                  ·gc.alloc.rate:                   1601.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              217125.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1619.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219680.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.647 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 11860.775 ops/s
[info]                  ·gc.alloc.rate:                   1483.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              196862.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173510.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.359 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 180.364 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce":
[info]   11715.193 ±(99.9%) 575.359 ops/s [Average]
[info]   (min, avg, max) = (11515.159, 11715.193, 11860.775), stdev = 149.419
[info]   CI (99.9%): [11139.834, 12290.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1495.502 ±(99.9%) 237.984 MB/sec [Average]
[info]   (min, avg, max) = (1438.370, 1495.502, 1601.084), stdev = 61.804
[info]   CI (99.9%): [1257.519, 1733.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   200917.918 ±(99.9%) 35024.374 B/op [Average]
[info]   (min, avg, max) = (195898.267, 200917.918, 217125.991), stdev = 9095.719
[info]   CI (99.9%): [165893.544, 235942.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1427.105 ±(99.9%) 674.660 MB/sec [Average]
[info]   (min, avg, max) = (1289.650, 1427.105, 1619.921), stdev = 175.207
[info]   CI (99.9%): [752.445, 2101.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   191754.684 ±(99.9%) 92583.588 B/op [Average]
[info]   (min, avg, max) = (171644.807, 191754.684, 219680.557), stdev = 24043.664
[info]   CI (99.9%): [99171.096, 284338.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.575 ±(99.9%) 7.237 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.575, 4.748), stdev = 1.879
[info]   CI (99.9%): [≈ 0, 8.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   213.144 ±(99.9%) 990.860 B/op [Average]
[info]   (min, avg, max) = (5.647, 213.144, 648.902), stdev = 257.323
[info]   CI (99.9%): [≈ 0, 1204.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.000, 21.000), stdev = 6.442
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.18% complete, ETA 01:00:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 898.132 ops/s
[info] # Warmup Iteration   2: 5844.047 ops/s
[info] # Warmup Iteration   3: 10419.707 ops/s
[info] Iteration   1: 11981.438 ops/s
[info]                  ·gc.alloc.rate:                   1407.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              184818.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1284.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168696.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.469 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 11636.501 ops/s
[info]                  ·gc.alloc.rate:                   1359.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              183907.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1286.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173966.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.446 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 11877.487 ops/s
[info]                  ·gc.alloc.rate:                   1379.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              182798.942 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171776.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63.445 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 11758.420 ops/s
[info]                  ·gc.alloc.rate:                   1370.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              183430.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174926.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.786 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 12031.475 ops/s
[info]                  ·gc.alloc.rate:               1415.299 MB/sec
[info]                  ·gc.alloc.rate.norm:          185125.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1316.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 172264.812 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala":
[info]   11857.064 ±(99.9%) 622.936 ops/s [Average]
[info]   (min, avg, max) = (11636.501, 11857.064, 12031.475), stdev = 161.775
[info]   CI (99.9%): [11234.128, 12480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1386.560 ±(99.9%) 91.384 MB/sec [Average]
[info]   (min, avg, max) = (1359.941, 1386.560, 1415.299), stdev = 23.732
[info]   CI (99.9%): [1295.175, 1477.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   184016.023 ±(99.9%) 3708.462 B/op [Average]
[info]   (min, avg, max) = (182798.942, 184016.023, 185125.185), stdev = 963.076
[info]   CI (99.9%): [180307.562, 187724.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1298.296 ±(99.9%) 53.274 MB/sec [Average]
[info]   (min, avg, max) = (1284.320, 1298.296, 1316.981), stdev = 13.835
[info]   CI (99.9%): [1245.022, 1351.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   172326.016 ±(99.9%) 9220.466 B/op [Average]
[info]   (min, avg, max) = (168696.139, 172326.016, 174926.121), stdev = 2394.526
[info]   CI (99.9%): [163105.550, 181546.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.121 ±(99.9%) 0.776 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.121, 0.479), stdev = 0.202
[info]   CI (99.9%): [≈ 0, 0.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.029 ±(99.9%) 102.777 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.029, 63.445), stdev = 26.691
[info]   CI (99.9%): [≈ 0, 118.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.41% complete, ETA 01:00:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 88387.741 ops/s
[info] # Warmup Iteration   2: 254173.111 ops/s
[info] # Warmup Iteration   3: 308949.759 ops/s
[info] Iteration   1: 318230.228 ops/s
[info]                  ·gc.alloc.rate:                   2127.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              10519.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2283.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11293.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.940 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.481 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 321908.612 ops/s
[info]                  ·gc.alloc.rate:                   2146.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              10493.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1946.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9516.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.799 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.905 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 317764.469 ops/s
[info]                  ·gc.alloc.rate:               2145.130 MB/sec
[info]                  ·gc.alloc.rate.norm:          10624.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1952.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9670.666 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 321834.961 ops/s
[info]                  ·gc.alloc.rate:                   2186.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              10690.465 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11266.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.305 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 317705.472 ops/s
[info]                  ·gc.alloc.rate:                   2146.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              10632.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9895.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala":
[info]   319488.748 ±(99.9%) 8413.799 ops/s [Average]
[info]   (min, avg, max) = (317705.472, 319488.748, 321908.612), stdev = 2185.037
[info]   CI (99.9%): [311074.949, 327902.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2150.251 ±(99.9%) 83.170 MB/sec [Average]
[info]   (min, avg, max) = (2127.386, 2150.251, 2186.113), stdev = 21.599
[info]   CI (99.9%): [2067.081, 2233.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10592.085 ±(99.9%) 318.708 B/op [Average]
[info]   (min, avg, max) = (10493.122, 10592.085, 10690.465), stdev = 82.767
[info]   CI (99.9%): [10273.377, 10910.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2096.886 ±(99.9%) 697.263 MB/sec [Average]
[info]   (min, avg, max) = (1946.513, 2096.886, 2303.932), stdev = 181.077
[info]   CI (99.9%): [1399.623, 2794.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10328.569 ±(99.9%) 3384.969 B/op [Average]
[info]   (min, avg, max) = (9516.639, 10328.569, 11293.609), stdev = 879.066
[info]   CI (99.9%): [6943.600, 13713.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.964 ±(99.9%) 6.533 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.964, 3.940), stdev = 1.697
[info]   CI (99.9%): [≈ 0, 7.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.759 ±(99.9%) 32.311 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.759, 19.481), stdev = 8.391
[info]   CI (99.9%): [≈ 0, 37.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.600, 20.000), stdev = 5.367
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 33.65% complete, ETA 01:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 415.614 ops/s
[info] # Warmup Iteration   2: 6606.138 ops/s
[info] # Warmup Iteration   3: 8931.882 ops/s
[info] Iteration   1: 10228.181 ops/s
[info]                  ·gc.alloc.rate:                   1759.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              270801.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     250305.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.823 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 126.635 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 9912.597 ops/s
[info]                  ·gc.alloc.rate:                   1715.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              272378.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     259367.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 10239.023 ops/s
[info]                  ·gc.alloc.rate:                   1758.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              270307.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     252544.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.799 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 10267.654 ops/s
[info]                  ·gc.alloc.rate:               1782.613 MB/sec
[info]                  ·gc.alloc.rate.norm:          273234.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1987.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 304566.914 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 9219.740 ops/s
[info]                  ·gc.alloc.rate:                   1720.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              293608.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1669.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     284884.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 124.476 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson":
[info]   9973.439 ±(99.9%) 1715.326 ops/s [Average]
[info]   (min, avg, max) = (9219.740, 9973.439, 10267.654), stdev = 445.465
[info]   CI (99.9%): [8258.113, 11688.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1747.413 ±(99.9%) 109.890 MB/sec [Average]
[info]   (min, avg, max) = (1715.851, 1747.413, 1782.613), stdev = 28.538
[info]   CI (99.9%): [1637.523, 1857.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   276065.971 ±(99.9%) 38032.600 B/op [Average]
[info]   (min, avg, max) = (270307.343, 276065.971, 293608.069), stdev = 9876.945
[info]   CI (99.9%): [238033.371, 314098.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1711.931 ±(99.9%) 595.375 MB/sec [Average]
[info]   (min, avg, max) = (1626.735, 1711.931, 1987.030), stdev = 154.617
[info]   CI (99.9%): [1116.556, 2307.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   270333.946 ±(99.9%) 90745.273 B/op [Average]
[info]   (min, avg, max) = (250305.239, 270333.946, 304566.914), stdev = 23566.259
[info]   CI (99.9%): [179588.673, 361079.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.423 ±(99.9%) 1.430 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.423, 0.823), stdev = 0.371
[info]   CI (99.9%): [≈ 0, 1.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   67.984 ±(99.9%) 230.741 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 67.984, 126.635), stdev = 59.923
[info]   CI (99.9%): [≈ 0, 298.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 10.000), stdev = 0.894
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 33.88% complete, ETA 01:00:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3928.164 ops/s
[info] # Warmup Iteration   2: 15092.812 ops/s
[info] # Warmup Iteration   3: 26296.522 ops/s
[info] Iteration   1: 28821.547 ops/s
[info]                  ·gc.alloc.rate:                   1414.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              77244.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1280.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69951.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.967 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 28632.105 ops/s
[info]                  ·gc.alloc.rate:                   1601.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              87998.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88592.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.486 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.718 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 27224.429 ops/s
[info]                  ·gc.alloc.rate:                   1659.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              95958.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1618.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93574.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.720 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 99.449 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   4: 26016.944 ops/s
[info]                  ·gc.alloc.rate:                   1688.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              102113.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1574.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95226.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.076 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 186.016 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   5: 26974.135 ops/s
[info]                  ·gc.alloc.rate:                   1338.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              78067.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1561.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91086.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 245.426 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce":
[info]   27533.832 ±(99.9%) 4545.698 ops/s [Average]
[info]   (min, avg, max) = (26016.944, 27533.832, 28821.547), stdev = 1180.503
[info]   CI (99.9%): [22988.134, 32079.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1540.600 ±(99.9%) 599.249 MB/sec [Average]
[info]   (min, avg, max) = (1338.023, 1540.600, 1688.782), stdev = 155.623
[info]   CI (99.9%): [941.350, 2139.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   88276.329 ±(99.9%) 42027.008 B/op [Average]
[info]   (min, avg, max) = (77244.605, 88276.329, 102113.499), stdev = 10914.280
[info]   CI (99.9%): [46249.321, 130303.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1529.654 ±(99.9%) 543.510 MB/sec [Average]
[info]   (min, avg, max) = (1280.960, 1529.654, 1618.734), stdev = 141.148
[info]   CI (99.9%): [986.144, 2073.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   87686.298 ±(99.9%) 39384.180 B/op [Average]
[info]   (min, avg, max) = (69951.143, 87686.298, 95226.176), stdev = 10227.947
[info]   CI (99.9%): [48302.118, 127070.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.912 ±(99.9%) 6.690 MB/sec [Average]
[info]   (min, avg, max) = (0.073, 1.912, 4.206), stdev = 1.737
[info]   CI (99.9%): [≈ 0, 8.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   112.315 ±(99.9%) 396.364 B/op [Average]
[info]   (min, avg, max) = (3.967, 112.315, 245.426), stdev = 102.934
[info]   CI (99.9%): [≈ 0, 508.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time":
[info]   130.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (19.000, 26.000, 36.000), stdev = 6.205
[info]   CI (99.9%): [130.000, 130.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.12% complete, ETA 00:59:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3746.927 ops/s
[info] # Warmup Iteration   2: 21404.145 ops/s
[info] # Warmup Iteration   3: 31183.741 ops/s
[info] Iteration   1: 30858.118 ops/s
[info]                  ·gc.alloc.rate:               1215.302 MB/sec
[info]                  ·gc.alloc.rate.norm:          61982.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1284.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 65536.000 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 29953.076 ops/s
[info]                  ·gc.alloc.rate:                   1402.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              73654.645 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1290.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67815.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.188 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 28067.389 ops/s
[info]                  ·gc.alloc.rate:                   1387.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              77786.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91265.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.598 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 145.666 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 32867.941 ops/s
[info]                  ·gc.alloc.rate:                   1236.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              59224.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          968.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46363.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.990 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 33003.920 ops/s
[info]                  ·gc.alloc.rate:                   1259.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              60026.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61930.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.978 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala":
[info]   30950.089 ±(99.9%) 7986.914 ops/s [Average]
[info]   (min, avg, max) = (28067.389, 30950.089, 33003.920), stdev = 2074.176
[info]   CI (99.9%): [22963.174, 38937.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1300.142 ±(99.9%) 338.362 MB/sec [Average]
[info]   (min, avg, max) = (1215.302, 1300.142, 1402.143), stdev = 87.871
[info]   CI (99.9%): [961.780, 1638.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   66534.845 ±(99.9%) 33001.411 B/op [Average]
[info]   (min, avg, max) = (59224.489, 66534.845, 77786.079), stdev = 8570.362
[info]   CI (99.9%): [33533.433, 99536.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1294.199 ±(99.9%) 898.140 MB/sec [Average]
[info]   (min, avg, max) = (968.192, 1294.199, 1627.681), stdev = 233.244
[info]   CI (99.9%): [396.059, 2192.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   66582.219 ±(99.9%) 62159.345 B/op [Average]
[info]   (min, avg, max) = (46363.436, 66582.219, 91265.778), stdev = 16142.584
[info]   CI (99.9%): [4422.874, 128741.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.553 ±(99.9%) 4.403 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.553, 2.598), stdev = 1.143
[info]   CI (99.9%): [≈ 0, 4.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   30.764 ±(99.9%) 247.379 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 30.764, 145.666), stdev = 64.243
[info]   CI (99.9%): [≈ 0, 278.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.800, 17.000), stdev = 3.033
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.35% complete, ETA 00:59:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 368106.056 ops/s
[info] # Warmup Iteration   2: 728612.656 ops/s
[info] # Warmup Iteration   3: 769936.869 ops/s
[info] Iteration   1: 778399.389 ops/s
[info]                  ·gc.alloc.rate:                   1442.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              2915.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2666.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.121 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.311 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 743049.343 ops/s
[info]                  ·gc.alloc.rate:                   1394.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              2953.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3478.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.984 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 779543.284 ops/s
[info]                  ·gc.alloc.rate:                   1438.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              2905.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2641.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 779377.567 ops/s
[info]                  ·gc.alloc.rate:                   1458.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              2944.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2650.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 779706.285 ops/s
[info]                  ·gc.alloc.rate:               1459.927 MB/sec
[info]                  ·gc.alloc.rate.norm:          2946.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2663.743 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala":
[info]   772015.174 ±(99.9%) 62381.859 ops/s [Average]
[info]   (min, avg, max) = (743049.343, 772015.174, 779706.285), stdev = 16200.371
[info]   CI (99.9%): [709633.315, 834397.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1438.719 ±(99.9%) 102.140 MB/sec [Average]
[info]   (min, avg, max) = (1394.325, 1438.719, 1459.927), stdev = 26.525
[info]   CI (99.9%): [1336.579, 1540.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2933.238 ±(99.9%) 81.950 B/op [Average]
[info]   (min, avg, max) = (2905.258, 2933.238, 2953.358), stdev = 21.282
[info]   CI (99.9%): [2851.288, 3015.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1380.308 ±(99.9%) 564.425 MB/sec [Average]
[info]   (min, avg, max) = (1308.295, 1380.308, 1642.381), stdev = 146.579
[info]   CI (99.9%): [815.883, 1944.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2820.154 ±(99.9%) 1418.282 B/op [Average]
[info]   (min, avg, max) = (2641.412, 2820.154, 3478.773), stdev = 368.323
[info]   CI (99.9%): [1401.872, 4238.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.841 ±(99.9%) 5.131 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.841, 3.121), stdev = 1.332
[info]   CI (99.9%): [≈ 0, 5.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.718 ±(99.9%) 10.382 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.718, 6.311), stdev = 2.696
[info]   CI (99.9%): [≈ 0, 12.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 16.000), stdev = 4.764
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 34.59% complete, ETA 00:59:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 454630.752 ops/s
[info] # Warmup Iteration   2: 835877.730 ops/s
[info] # Warmup Iteration   3: 932224.839 ops/s
[info] Iteration   1: 929096.244 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 928569.972 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 929015.346 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 930031.644 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 926668.115 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   928676.264 ±(99.9%) 4783.321 ops/s [Average]
[info]   (min, avg, max) = (926668.115, 928676.264, 930031.644), stdev = 1242.213
[info]   CI (99.9%): [923892.943, 933459.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 34.82% complete, ETA 00:59:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3874.129 ops/s
[info] # Warmup Iteration   2: 20643.294 ops/s
[info] # Warmup Iteration   3: 23543.903 ops/s
[info] Iteration   1: 31290.893 ops/s
[info]                  ·gc.alloc.rate:                   1421.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              71487.626 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1548.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77899.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.420 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 222.315 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         37.000 ms
[info] Iteration   2: 30918.957 ops/s
[info]                  ·gc.alloc.rate:                   1741.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              88580.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1564.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79616.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.067 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 257.808 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   3: 28609.743 ops/s
[info]                  ·gc.alloc.rate:                   1565.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              86141.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1546.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85054.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.474 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 301.143 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Iteration   4: 29792.522 ops/s
[info]                  ·gc.alloc.rate:                   1366.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              72111.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1484.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78370.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.183 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.667 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   5: 31151.161 ops/s
[info]                  ·gc.alloc.rate:                   1404.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              70949.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1180.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59639.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.428 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.606 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson":
[info]   30352.655 ±(99.9%) 4386.225 ops/s [Average]
[info]   (min, avg, max) = (28609.743, 30352.655, 31290.893), stdev = 1139.089
[info]   CI (99.9%): [25966.430, 34738.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1499.786 ±(99.9%) 595.566 MB/sec [Average]
[info]   (min, avg, max) = (1366.268, 1499.786, 1741.064), stdev = 154.667
[info]   CI (99.9%): [904.220, 2095.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   77853.845 ±(99.9%) 33619.456 B/op [Average]
[info]   (min, avg, max) = (70949.263, 77853.845, 88580.052), stdev = 8730.866
[info]   CI (99.9%): [44234.389, 111473.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1465.043 ±(99.9%) 623.667 MB/sec [Average]
[info]   (min, avg, max) = (1180.488, 1465.043, 1564.880), stdev = 161.964
[info]   CI (99.9%): [841.376, 2088.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   76116.161 ±(99.9%) 37128.191 B/op [Average]
[info]   (min, avg, max) = (59639.758, 76116.161, 85054.340), stdev = 9642.073
[info]   CI (99.9%): [38987.970, 113244.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   3.115 ±(99.9%) 9.986 MB/sec [Average]
[info]   (min, avg, max) = (0.183, 3.115, 5.474), stdev = 2.593
[info]   CI (99.9%): [≈ 0, 13.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   162.508 ±(99.9%) 527.596 B/op [Average]
[info]   (min, avg, max) = (9.667, 162.508, 301.143), stdev = 137.015
[info]   CI (99.9%): [≈ 0, 690.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time":
[info]   160.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (25.000, 32.000, 37.000), stdev = 4.690
[info]   CI (99.9%): [160.000, 160.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 35.06% complete, ETA 00:58:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2515.003 ops/s
[info] # Warmup Iteration   2: 23962.078 ops/s
[info] # Warmup Iteration   3: 33316.448 ops/s
[info] Iteration   1: 49130.573 ops/s
[info]                  ·gc.alloc.rate:                   2552.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              81742.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2463.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78872.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.130 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 260.345 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 48790.854 ops/s
[info]                  ·gc.alloc.rate:                   2457.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              79253.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2183.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70417.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.716 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 248.855 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 46405.731 ops/s
[info]                  ·gc.alloc.rate:                   2628.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              89120.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2553.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86551.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 306.700 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   4: 43593.211 ops/s
[info]                  ·gc.alloc.rate:                   1834.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              66229.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1930.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69698.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.900 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.582 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 44717.680 ops/s
[info]                  ·gc.alloc.rate:                   1881.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              66197.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1945.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68460.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.931 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce":
[info]   46527.610 ±(99.9%) 9392.550 ops/s [Average]
[info]   (min, avg, max) = (43593.211, 46527.610, 49130.573), stdev = 2439.216
[info]   CI (99.9%): [37135.059, 55920.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate":
[info]   2270.927 ±(99.9%) 1472.065 MB/sec [Average]
[info]   (min, avg, max) = (1834.492, 2270.927, 2628.975), stdev = 382.291
[info]   CI (99.9%): [798.862, 3742.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   76508.895 ±(99.9%) 38792.581 B/op [Average]
[info]   (min, avg, max) = (66197.861, 76508.895, 89120.872), stdev = 10074.310
[info]   CI (99.9%): [37716.314, 115301.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2215.126 ±(99.9%) 1106.614 MB/sec [Average]
[info]   (min, avg, max) = (1930.567, 2215.126, 2553.168), stdev = 287.384
[info]   CI (99.9%): [1108.512, 3321.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   74800.024 ±(99.9%) 29832.245 B/op [Average]
[info]   (min, avg, max) = (68460.825, 74800.024, 86551.067), stdev = 7747.339
[info]   CI (99.9%): [44967.779, 104632.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   5.375 ±(99.9%) 15.717 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 5.375, 9.047), stdev = 4.082
[info]   CI (99.9%): [≈ 0, 21.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   177.483 ±(99.9%) 512.965 B/op [Average]
[info]   (min, avg, max) = (2.931, 177.483, 306.700), stdev = 133.215
[info]   CI (99.9%): [≈ 0, 690.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 9.000), stdev = 1.304
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.time":
[info]   97.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 19.400, 27.000), stdev = 6.580
[info]   CI (99.9%): [97.000, 97.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.29% complete, ETA 00:58:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2946.529 ops/s
[info] # Warmup Iteration   2: 26356.711 ops/s
[info] # Warmup Iteration   3: 40808.963 ops/s
[info] Iteration   1: 48924.608 ops/s
[info]                  ·gc.alloc.rate:                        1984.858 MB/sec
[info]                  ·gc.alloc.rate.norm:                   63822.269 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.021 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.669 B/op
[info]                  ·gc.churn.Metaspace:                   0.058 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              1.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:               2176.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          69983.013 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  1.301 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             41.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           8.718 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      280.310 B/op
[info]                  ·gc.count:                             8.000 counts
[info]                  ·gc.time:                              85.000 ms
[info] Iteration   2: 37226.078 ops/s
[info]                  ·gc.alloc.rate:               1658.412 MB/sec
[info]                  ·gc.alloc.rate.norm:          70112.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1595.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67452.916 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     22.000 ms
[info] Iteration   3: 42619.269 ops/s
[info]                  ·gc.alloc.rate:                   1474.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              54440.310 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1276.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47134.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.527 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 167.145 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 41665.092 ops/s
[info]                  ·gc.alloc.rate:                   1454.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              54936.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1599.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60427.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.490 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 40930.434 ops/s
[info]                  ·gc.alloc.rate:                   1413.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              54335.765 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1284.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49370.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.762 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 183.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala":
[info]   42273.096 ±(99.9%) 16337.722 ops/s [Average]
[info]   (min, avg, max) = (37226.078, 42273.096, 48924.608), stdev = 4242.855
[info]   CI (99.9%): [25935.374, 58610.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1597.151 ±(99.9%) 909.535 MB/sec [Average]
[info]   (min, avg, max) = (1413.751, 1597.151, 1984.858), stdev = 236.203
[info]   CI (99.9%): [687.616, 2506.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   59529.556 ±(99.9%) 27526.449 B/op [Average]
[info]   (min, avg, max) = (54335.765, 59529.556, 70112.892), stdev = 7148.531
[info]   CI (99.9%): [32003.108, 87056.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.134 ±(99.9%) 1.152 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.134, 0.669), stdev = 0.299
[info]   CI (99.9%): [≈ 0, 1.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.012 ±(99.9%) 0.101 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.058), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.376 ±(99.9%) 3.238 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.376, 1.880), stdev = 0.841
[info]   CI (99.9%): [≈ 0, 3.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1586.555 ±(99.9%) 1408.999 MB/sec [Average]
[info]   (min, avg, max) = (1276.505, 1586.555, 2176.456), stdev = 365.913
[info]   CI (99.9%): [177.556, 2995.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   58873.838 ±(99.9%) 39810.380 B/op [Average]
[info]   (min, avg, max) = (47134.751, 58873.838, 69983.013), stdev = 10338.629
[info]   CI (99.9%): [19063.458, 98684.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.260 ±(99.9%) 2.240 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.260, 1.301), stdev = 0.582
[info]   CI (99.9%): [≈ 0, 2.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   8.365 ±(99.9%) 72.025 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.365, 41.825), stdev = 18.705
[info]   CI (99.9%): [≈ 0, 80.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   3.604 ±(99.9%) 14.178 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 3.604, 8.718), stdev = 3.682
[info]   CI (99.9%): [≈ 0, 17.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   126.194 ±(99.9%) 473.114 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 126.194, 280.310), stdev = 122.866
[info]   CI (99.9%): [≈ 0, 599.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 8.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time":
[info]   142.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 28.400, 85.000), stdev = 32.052
[info]   CI (99.9%): [142.000, 142.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.53% complete, ETA 00:58:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 196973.417 ops/s
[info] # Warmup Iteration   2: 489344.558 ops/s
[info] # Warmup Iteration   3: 512374.269 ops/s
[info] Iteration   1: 523205.946 ops/s
[info]                  ·gc.alloc.rate:                   1409.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              4240.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3942.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.904 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.735 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 520501.488 ops/s
[info]                  ·gc.alloc.rate:                   1398.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              4229.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4934.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.588 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 534554.734 ops/s
[info]                  ·gc.alloc.rate:                   1424.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              4192.606 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3836.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 535393.350 ops/s
[info]                  ·gc.alloc.rate:               1426.139 MB/sec
[info]                  ·gc.alloc.rate.norm:          4191.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3843.943 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 535586.725 ops/s
[info]                  ·gc.alloc.rate:                   1446.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              4249.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3866.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala":
[info]   529848.448 ±(99.9%) 28382.106 ops/s [Average]
[info]   (min, avg, max) = (520501.488, 529848.448, 535586.725), stdev = 7370.743
[info]   CI (99.9%): [501466.342, 558230.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1421.074 ±(99.9%) 69.612 MB/sec [Average]
[info]   (min, avg, max) = (1398.718, 1421.074, 1446.553), stdev = 18.078
[info]   CI (99.9%): [1351.462, 1490.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4220.748 ±(99.9%) 104.558 B/op [Average]
[info]   (min, avg, max) = (4191.528, 4220.748, 4249.574), stdev = 27.153
[info]   CI (99.9%): [4116.190, 4325.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1373.947 ±(99.9%) 555.967 MB/sec [Average]
[info]   (min, avg, max) = (1302.968, 1373.947, 1632.089), stdev = 144.383
[info]   CI (99.9%): [817.980, 1929.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4084.737 ±(99.9%) 1837.286 B/op [Average]
[info]   (min, avg, max) = (3836.203, 4084.737, 4934.940), stdev = 477.137
[info]   CI (99.9%): [2247.451, 5922.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.827 ±(99.9%) 4.882 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.827, 2.904), stdev = 1.268
[info]   CI (99.9%): [≈ 0, 5.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.489 ±(99.9%) 14.689 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.489, 8.735), stdev = 3.815
[info]   CI (99.9%): [≈ 0, 17.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 14.000), stdev = 4.087
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 35.76% complete, ETA 00:58:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 609.572 ops/s
[info] # Warmup Iteration   2: 11420.551 ops/s
[info] # Warmup Iteration   3: 20196.992 ops/s
[info] Iteration   1: 22414.464 ops/s
[info]                  ·gc.alloc.rate:                   2092.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              146937.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2235.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     156996.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.847 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 20297.383 ops/s
[info]                  ·gc.alloc.rate:                   2045.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              158599.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1937.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150254.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.350 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104.705 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 22192.825 ops/s
[info]                  ·gc.alloc.rate:               2095.072 MB/sec
[info]                  ·gc.alloc.rate.norm:          148564.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1964.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139309.394 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 20791.481 ops/s
[info]                  ·gc.alloc.rate:                   2290.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              173336.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2318.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     175493.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.840 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 139.245 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 21827.661 ops/s
[info]                  ·gc.alloc.rate:                   2023.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              145894.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2000.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144238.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.246 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89.815 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson":
[info]   21504.763 ±(99.9%) 3535.358 ops/s [Average]
[info]   (min, avg, max) = (20297.383, 21504.763, 22414.464), stdev = 918.121
[info]   CI (99.9%): [17969.405, 25040.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2109.373 ±(99.9%) 406.854 MB/sec [Average]
[info]   (min, avg, max) = (2023.434, 2109.373, 2290.202), stdev = 105.659
[info]   CI (99.9%): [1702.519, 2516.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   154666.338 ±(99.9%) 44655.413 B/op [Average]
[info]   (min, avg, max) = (145894.472, 154666.338, 173336.122), stdev = 11596.869
[info]   CI (99.9%): [110010.926, 199321.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2091.506 ±(99.9%) 668.415 MB/sec [Average]
[info]   (min, avg, max) = (1937.798, 2091.506, 2318.710), stdev = 173.585
[info]   CI (99.9%): [1423.091, 2759.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   153258.455 ±(99.9%) 54229.248 B/op [Average]
[info]   (min, avg, max) = (139309.394, 153258.455, 175493.786), stdev = 14083.163
[info]   CI (99.9%): [99029.207, 207487.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.904 ±(99.9%) 3.153 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.904, 1.840), stdev = 0.819
[info]   CI (99.9%): [≈ 0, 4.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   67.922 ±(99.9%) 238.818 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 67.922, 139.245), stdev = 62.020
[info]   CI (99.9%): [≈ 0, 306.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 12.000), stdev = 1.643
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 36.00% complete, ETA 00:58:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13985.043 ops/s
[info] # Warmup Iteration   2: 60527.649 ops/s
[info] # Warmup Iteration   3: 67663.122 ops/s
[info] Iteration   1: 64571.429 ops/s
[info]                  ·gc.alloc.rate:                   1807.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              44063.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1615.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39374.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.530 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 134.787 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 69614.062 ops/s
[info]                  ·gc.alloc.rate:                   1845.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              41720.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43930.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.642 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 69157.701 ops/s
[info]                  ·gc.alloc.rate:                   1813.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              41271.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36972.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.094 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.645 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 68858.416 ops/s
[info]                  ·gc.alloc.rate:                   1829.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              41813.792 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44715.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.952 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 70046.923 ops/s
[info]                  ·gc.alloc.rate:               1866.916 MB/sec
[info]                  ·gc.alloc.rate.norm:          41940.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1642.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36903.876 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce":
[info]   68449.706 ±(99.9%) 8527.276 ops/s [Average]
[info]   (min, avg, max) = (64571.429, 68449.706, 70046.923), stdev = 2214.507
[info]   CI (99.9%): [59922.430, 76976.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1832.674 ±(99.9%) 92.900 MB/sec [Average]
[info]   (min, avg, max) = (1807.786, 1832.674, 1866.916), stdev = 24.126
[info]   CI (99.9%): [1739.774, 1925.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   42161.754 ±(99.9%) 4206.136 B/op [Average]
[info]   (min, avg, max) = (41271.249, 42161.754, 44063.034), stdev = 1092.320
[info]   CI (99.9%): [37955.618, 46367.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1756.528 ±(99.9%) 681.050 MB/sec [Average]
[info]   (min, avg, max) = (1615.423, 1756.528, 1956.642), stdev = 176.866
[info]   CI (99.9%): [1075.479, 2437.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   40379.324 ±(99.9%) 14422.242 B/op [Average]
[info]   (min, avg, max) = (36903.876, 40379.324, 44715.816), stdev = 3745.410
[info]   CI (99.9%): [25957.082, 54801.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.742 ±(99.9%) 8.798 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.742, 5.530), stdev = 2.285
[info]   CI (99.9%): [≈ 0, 10.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   41.405 ±(99.9%) 214.616 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41.405, 134.787), stdev = 55.735
[info]   CI (99.9%): [≈ 0, 256.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.000, 20.000), stdev = 5.431
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.24% complete, ETA 00:57:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45840.687 ops/s
[info] # Warmup Iteration   2: 164483.721 ops/s
[info] # Warmup Iteration   3: 183259.448 ops/s
[info] Iteration   1: 201855.673 ops/s
[info]                  ·gc.alloc.rate:                   1570.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              12241.978 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10159.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.325 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 199190.091 ops/s
[info]                  ·gc.alloc.rate:                   1550.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              12243.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12795.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.329 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 201512.754 ops/s
[info]                  ·gc.alloc.rate:                   1566.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              12234.677 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12707.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.325 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 207838.201 ops/s
[info]                  ·gc.alloc.rate:                   1614.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              12224.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9937.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.788 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 205519.518 ops/s
[info]                  ·gc.alloc.rate:                   1623.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              12432.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12668.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.319 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala":
[info]   203183.248 ±(99.9%) 13286.822 ops/s [Average]
[info]   (min, avg, max) = (199190.091, 203183.248, 207838.201), stdev = 3450.545
[info]   CI (99.9%): [189896.426, 216470.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1584.933 ±(99.9%) 123.522 MB/sec [Average]
[info]   (min, avg, max) = (1550.158, 1584.933, 1623.506), stdev = 32.078
[info]   CI (99.9%): [1461.411, 1708.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   12275.305 ±(99.9%) 338.877 B/op [Average]
[info]   (min, avg, max) = (12224.599, 12275.305, 12432.179), stdev = 88.005
[info]   CI (99.9%): [11936.427, 12614.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1503.408 ±(99.9%) 689.829 MB/sec [Average]
[info]   (min, avg, max) = (1303.105, 1503.408, 1654.424), stdev = 179.146
[info]   CI (99.9%): [813.579, 2193.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   11653.928 ±(99.9%) 5653.472 B/op [Average]
[info]   (min, avg, max) = (9937.579, 11653.928, 12795.728), stdev = 1468.189
[info]   CI (99.9%): [6000.456, 17307.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.104), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.417 ±(99.9%) 0.799 B/op [Average]
[info]   (min, avg, max) = (0.319, 0.417, 0.788), stdev = 0.207
[info]   CI (99.9%): [≈ 0, 1.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 8.000), stdev = 1.140
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.47% complete, ETA 00:57:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 265445.385 ops/s
[info] # Warmup Iteration   2: 799785.545 ops/s
[info] # Warmup Iteration   3: 854274.320 ops/s
[info] Iteration   1: 859252.860 ops/s
[info]                  ·gc.alloc.rate:                   952.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              1745.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1807.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 837543.747 ops/s
[info]                  ·gc.alloc.rate:                   930.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              1747.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1857.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 852977.295 ops/s
[info]                  ·gc.alloc.rate:                   940.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              1735.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1216.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.221 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.943 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 873911.759 ops/s
[info]                  ·gc.alloc.rate:                   969.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              1746.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1776.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.575 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 863582.123 ops/s
[info]                  ·gc.alloc.rate:                   971.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              1769.540 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1788.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala":
[info]   857453.557 ±(99.9%) 51951.833 ops/s [Average]
[info]   (min, avg, max) = (837543.747, 857453.557, 873911.759), stdev = 13491.726
[info]   CI (99.9%): [805501.724, 909405.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   952.934 ±(99.9%) 69.642 MB/sec [Average]
[info]   (min, avg, max) = (930.011, 952.934, 971.344), stdev = 18.086
[info]   CI (99.9%): [883.292, 1022.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1748.920 ±(99.9%) 48.143 B/op [Average]
[info]   (min, avg, max) = (1735.507, 1748.920, 1769.540), stdev = 12.502
[info]   CI (99.9%): [1700.777, 1797.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   920.648 ±(99.9%) 562.307 MB/sec [Average]
[info]   (min, avg, max) = (659.464, 920.648, 988.560), stdev = 146.029
[info]   CI (99.9%): [358.341, 1482.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1689.453 ±(99.9%) 1024.226 B/op [Average]
[info]   (min, avg, max) = (1216.866, 1689.453, 1857.644), stdev = 265.988
[info]   CI (99.9%): [665.227, 2713.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.840 ±(99.9%) 5.313 MB/sec [Average]
[info]   (min, avg, max) = (0.013, 0.840, 3.221), stdev = 1.380
[info]   CI (99.9%): [≈ 0, 6.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.542 ±(99.9%) 9.805 B/op [Average]
[info]   (min, avg, max) = (0.024, 1.542, 5.943), stdev = 2.546
[info]   CI (99.9%): [≈ 0, 11.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.775
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 36.71% complete, ETA 00:57:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 857999.728 ops/s
[info] # Warmup Iteration   2: 899315.680 ops/s
[info] # Warmup Iteration   3: 918656.300 ops/s
[info] Iteration   1: 918679.350 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 916887.278 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 917507.510 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 920592.017 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 917905.889 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc":
[info]   918314.409 ±(99.9%) 5504.992 ops/s [Average]
[info]   (min, avg, max) = (916887.278, 918314.409, 920592.017), stdev = 1429.629
[info]   CI (99.9%): [912809.417, 923819.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 36.94% complete, ETA 00:57:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15717.938 ops/s
[info] # Warmup Iteration   2: 69815.393 ops/s
[info] # Warmup Iteration   3: 79987.660 ops/s
[info] Iteration   1: 91772.707 ops/s
[info]                  ·gc.alloc.rate:                   1906.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              32693.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27966.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.185 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88.911 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 93440.411 ops/s
[info]                  ·gc.alloc.rate:                   1942.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              32723.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32741.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.208 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 92740.037 ops/s
[info]                  ·gc.alloc.rate:                   1926.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              32696.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33184.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.060 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 92932.590 ops/s
[info]                  ·gc.alloc.rate:                   1966.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              33312.979 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33472.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.353 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 93737.477 ops/s
[info]                  ·gc.alloc.rate:                   1947.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              32704.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27922.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.350 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson":
[info]   92924.645 ±(99.9%) 2912.150 ops/s [Average]
[info]   (min, avg, max) = (91772.707, 92924.645, 93737.477), stdev = 756.276
[info]   CI (99.9%): [90012.495, 95836.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1938.144 ±(99.9%) 87.958 MB/sec [Average]
[info]   (min, avg, max) = (1906.421, 1938.144, 1966.979), stdev = 22.843
[info]   CI (99.9%): [1850.186, 2026.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   32826.187 ±(99.9%) 1048.779 B/op [Average]
[info]   (min, avg, max) = (32693.751, 32826.187, 33312.979), stdev = 272.365
[info]   CI (99.9%): [31777.407, 33874.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1833.889 ±(99.9%) 660.218 MB/sec [Average]
[info]   (min, avg, max) = (1630.774, 1833.889, 1976.370), stdev = 171.457
[info]   CI (99.9%): [1173.671, 2494.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   31057.283 ±(99.9%) 10988.098 B/op [Average]
[info]   (min, avg, max) = (27922.284, 31057.283, 33472.032), stdev = 2853.574
[info]   CI (99.9%): [20069.185, 42045.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.108 ±(99.9%) 8.783 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.108, 5.185), stdev = 2.281
[info]   CI (99.9%): [≈ 0, 9.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   18.976 ±(99.9%) 150.665 B/op [Average]
[info]   (min, avg, max) = (0.350, 18.976, 88.911), stdev = 39.127
[info]   CI (99.9%): [≈ 0, 169.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 12.000), stdev = 1.924
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 37.18% complete, ETA 00:57:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1913.094 ops/s
[info] # Warmup Iteration   2: 9233.679 ops/s
[info] # Warmup Iteration   3: 14843.976 ops/s
[info] Iteration   1: 18027.652 ops/s
[info]                  ·gc.alloc.rate:                   1581.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              138101.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1588.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138646.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.635 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 17828.675 ops/s
[info]                  ·gc.alloc.rate:                   1610.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              142165.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1602.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     141480.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 334.612 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   3: 15644.980 ops/s
[info]                  ·gc.alloc.rate:                   1926.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              193841.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1913.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     192520.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.325 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 837.444 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   4: 18279.094 ops/s
[info]                  ·gc.alloc.rate:                   1607.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              138411.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1588.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     136735.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.792 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   5: 17252.560 ops/s
[info]                  ·gc.alloc.rate:               1934.368 MB/sec
[info]                  ·gc.alloc.rate.norm:          176452.860 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1919.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 175066.496 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     34.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce":
[info]   17406.592 ±(99.9%) 4062.444 ops/s [Average]
[info]   (min, avg, max) = (15644.980, 17406.592, 18279.094), stdev = 1055.004
[info]   CI (99.9%): [13344.148, 21469.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1732.209 ±(99.9%) 698.947 MB/sec [Average]
[info]   (min, avg, max) = (1581.791, 1732.209, 1934.368), stdev = 181.514
[info]   CI (99.9%): [1033.262, 2431.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   157794.513 ±(99.9%) 99211.477 B/op [Average]
[info]   (min, avg, max) = (138101.396, 157794.513, 193841.593), stdev = 25764.905
[info]   CI (99.9%): [58583.036, 257005.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1722.348 ±(99.9%) 682.847 MB/sec [Average]
[info]   (min, avg, max) = (1588.041, 1722.348, 1919.170), stdev = 177.333
[info]   CI (99.9%): [1039.501, 2405.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   156889.974 ±(99.9%) 97725.386 B/op [Average]
[info]   (min, avg, max) = (136735.870, 156889.974, 192520.376), stdev = 25378.972
[info]   CI (99.9%): [59164.588, 254615.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.436 ±(99.9%) 14.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.436, 8.325), stdev = 3.675
[info]   CI (99.9%): [≈ 0, 16.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   235.497 ±(99.9%) 1409.569 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 235.497, 837.444), stdev = 366.060
[info]   CI (99.9%): [≈ 0, 1645.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.time":
[info]   130.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (21.000, 26.000, 34.000), stdev = 4.950
[info]   CI (99.9%): [130.000, 130.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.41% complete, ETA 00:56:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1053.507 ops/s
[info] # Warmup Iteration   2: 11894.141 ops/s
[info] # Warmup Iteration   3: 17858.093 ops/s
[info] Iteration   1: 17860.995 ops/s
[info]                  ·gc.alloc.rate:                   1437.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              126672.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114137.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.669 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 18160.965 ops/s
[info]                  ·gc.alloc.rate:                   1464.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              126885.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     140914.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.412 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 18925.166 ops/s
[info]                  ·gc.alloc.rate:                   1511.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              125670.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108740.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.959 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 329.120 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 18556.737 ops/s
[info]                  ·gc.alloc.rate:                   1691.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              143431.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137972.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.766 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 17499.130 ops/s
[info]                  ·gc.alloc.rate:                   1628.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              146438.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1615.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145209.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.721 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 334.484 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala":
[info]   18200.598 ±(99.9%) 2161.848 ops/s [Average]
[info]   (min, avg, max) = (17499.130, 18200.598, 18925.166), stdev = 561.425
[info]   CI (99.9%): [16038.751, 20362.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1546.917 ±(99.9%) 420.725 MB/sec [Average]
[info]   (min, avg, max) = (1437.552, 1546.917, 1691.949), stdev = 109.261
[info]   CI (99.9%): [1126.192, 1967.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   133819.661 ±(99.9%) 39325.701 B/op [Average]
[info]   (min, avg, max) = (125670.176, 133819.661, 146438.824), stdev = 10212.760
[info]   CI (99.9%): [94493.960, 173145.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1494.504 ±(99.9%) 678.146 MB/sec [Average]
[info]   (min, avg, max) = (1295.303, 1494.504, 1627.551), stdev = 176.112
[info]   CI (99.9%): [816.358, 2172.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   129394.952 ±(99.9%) 64311.203 B/op [Average]
[info]   (min, avg, max) = (108740.804, 129394.952, 145209.565), stdev = 16701.415
[info]   CI (99.9%): [65083.749, 193706.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.561 ±(99.9%) 8.018 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.561, 3.959), stdev = 2.082
[info]   CI (99.9%): [≈ 0, 9.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   134.890 ±(99.9%) 692.229 B/op [Average]
[info]   (min, avg, max) = (1.766, 134.890, 334.484), stdev = 179.770
[info]   CI (99.9%): [≈ 0, 827.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 12.200, 20.000), stdev = 4.764
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.65% complete, ETA 00:56:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 239630.310 ops/s
[info] # Warmup Iteration   2: 649419.686 ops/s
[info] # Warmup Iteration   3: 784258.542 ops/s
[info] Iteration   1: 789253.161 ops/s
[info]                  ·gc.alloc.rate:                   2156.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              4300.982 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3918.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.117 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 806293.961 ops/s
[info]                  ·gc.alloc.rate:                   2151.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              4199.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2291.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4471.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 787922.970 ops/s
[info]                  ·gc.alloc.rate:                   2103.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              4200.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1982.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3958.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 798961.974 ops/s
[info]                  ·gc.alloc.rate:                   2159.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              4252.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3938.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 807744.055 ops/s
[info]                  ·gc.alloc.rate:                   2182.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              4251.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3925.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala":
[info]   798035.224 ±(99.9%) 35642.349 ops/s [Average]
[info]   (min, avg, max) = (787922.970, 798035.224, 807744.055), stdev = 9256.205
[info]   CI (99.9%): [762392.875, 833677.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2150.789 ±(99.9%) 111.524 MB/sec [Average]
[info]   (min, avg, max) = (2103.386, 2150.789, 2182.222), stdev = 28.962
[info]   CI (99.9%): [2039.265, 2262.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4241.099 ±(99.9%) 163.823 B/op [Average]
[info]   (min, avg, max) = (4199.138, 4241.099, 4300.982), stdev = 42.544
[info]   CI (99.9%): [4077.276, 4404.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2050.659 ±(99.9%) 523.049 MB/sec [Average]
[info]   (min, avg, max) = (1965.179, 2050.659, 2291.370), stdev = 135.834
[info]   CI (99.9%): [1527.609, 2573.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4042.505 ±(99.9%) 926.337 B/op [Average]
[info]   (min, avg, max) = (3918.669, 4042.505, 4471.975), stdev = 240.567
[info]   CI (99.9%): [3116.169, 4968.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.241 ±(99.9%) 1.766 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.241, 1.062), stdev = 0.459
[info]   CI (99.9%): [≈ 0, 2.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.481 ±(99.9%) 3.523 B/op [Average]
[info]   (min, avg, max) = (0.042, 0.481, 2.117), stdev = 0.915
[info]   CI (99.9%): [≈ 0, 4.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 10.000), stdev = 1.140
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 37.88% complete, ETA 00:56:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1059.151 ops/s
[info] # Warmup Iteration   2: 9333.398 ops/s
[info] # Warmup Iteration   3: 12749.819 ops/s
[info] Iteration   1: 14391.843 ops/s
[info]                  ·gc.alloc.rate:                   1958.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              214161.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1945.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212789.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.830 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 14393.034 ops/s
[info]                  ·gc.alloc.rate:                   1946.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              212874.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1937.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211812.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.486 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 13898.642 ops/s
[info]                  ·gc.alloc.rate:                   2094.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              237118.626 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221542.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.169 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 245.566 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 14549.831 ops/s
[info]                  ·gc.alloc.rate:                   1985.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              214729.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     213721.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.036 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 14590.630 ops/s
[info]                  ·gc.alloc.rate:                   1970.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              212526.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179241.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.736 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson":
[info]   14364.796 ±(99.9%) 1061.667 ops/s [Average]
[info]   (min, avg, max) = (13898.642, 14364.796, 14590.630), stdev = 275.712
[info]   CI (99.9%): [13303.129, 15426.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1990.977 ±(99.9%) 228.438 MB/sec [Average]
[info]   (min, avg, max) = (1946.850, 1990.977, 2094.021), stdev = 59.325
[info]   CI (99.9%): [1762.539, 2219.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   218282.069 ±(99.9%) 40696.201 B/op [Average]
[info]   (min, avg, max) = (212526.235, 218282.069, 237118.626), stdev = 10568.674
[info]   CI (99.9%): [177585.868, 258978.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1895.429 ±(99.9%) 505.657 MB/sec [Average]
[info]   (min, avg, max) = (1661.936, 1895.429, 1975.726), stdev = 131.317
[info]   CI (99.9%): [1389.772, 2401.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   207821.681 ±(99.9%) 63287.445 B/op [Average]
[info]   (min, avg, max) = (179241.611, 207821.681, 221542.890), stdev = 16435.548
[info]   CI (99.9%): [144534.236, 271109.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.579 ±(99.9%) 3.466 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.579, 2.169), stdev = 0.900
[info]   CI (99.9%): [≈ 0, 4.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   64.931 ±(99.9%) 393.457 B/op [Average]
[info]   (min, avg, max) = (6.736, 64.931, 245.566), stdev = 102.180
[info]   CI (99.9%): [≈ 0, 458.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 10.000), stdev = 1.304
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 38.12% complete, ETA 00:56:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5651.569 ops/s
[info] # Warmup Iteration   2: 31509.811 ops/s
[info] # Warmup Iteration   3: 43541.744 ops/s
[info] Iteration   1: 46125.637 ops/s
[info]                  ·gc.alloc.rate:                   2010.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              68583.719 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1904.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64960.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.349 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.906 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   2: 44362.484 ops/s
[info]                  ·gc.alloc.rate:                   1997.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              70834.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2169.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76939.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.451 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 193.286 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         48.000 ms
[info] Iteration   3: 45078.355 ops/s
[info]                  ·gc.alloc.rate:                   1885.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              65839.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1800.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62865.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      11.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 384.583 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         52.000 ms
[info] Iteration   4: 45531.303 ops/s
[info]                  ·gc.alloc.rate:                   1611.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              55719.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57449.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.174 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 247.991 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         42.000 ms
[info] Iteration   5: 45760.261 ops/s
[info]                  ·gc.alloc.rate:                   1630.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              56088.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1430.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49200.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.624 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.852 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce":
[info]   45371.608 ±(99.9%) 2618.326 ops/s [Average]
[info]   (min, avg, max) = (44362.484, 45371.608, 46125.637), stdev = 679.971
[info]   CI (99.9%): [42753.281, 47989.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1827.432 ±(99.9%) 748.408 MB/sec [Average]
[info]   (min, avg, max) = (1611.932, 1827.432, 2010.948), stdev = 194.359
[info]   CI (99.9%): [1079.024, 2575.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   63413.305 ±(99.9%) 27264.210 B/op [Average]
[info]   (min, avg, max) = (55719.743, 63413.305, 70834.405), stdev = 7080.429
[info]   CI (99.9%): [36149.095, 90677.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1793.532 ±(99.9%) 1059.747 MB/sec [Average]
[info]   (min, avg, max) = (1430.608, 1793.532, 2169.744), stdev = 275.213
[info]   CI (99.9%): [733.785, 2853.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   62283.176 ±(99.9%) 39307.837 B/op [Average]
[info]   (min, avg, max) = (49200.685, 62283.176, 76939.217), stdev = 10208.120
[info]   CI (99.9%): [22975.339, 101591.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   5.123 ±(99.9%) 16.570 MB/sec [Average]
[info]   (min, avg, max) = (0.349, 5.123, 11.015), stdev = 4.303
[info]   CI (99.9%): [≈ 0, 21.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   178.724 ±(99.9%) 578.603 B/op [Average]
[info]   (min, avg, max) = (11.906, 178.724, 384.583), stdev = 150.261
[info]   CI (99.9%): [≈ 0, 757.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.time":
[info]   201.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (28.000, 40.200, 52.000), stdev = 10.450
[info]   CI (99.9%): [201.000, 201.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.35% complete, ETA 00:55:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6210.357 ops/s
[info] # Warmup Iteration   2: 29789.727 ops/s
[info] # Warmup Iteration   3: 42276.022 ops/s
[info] Iteration   1: 50660.664 ops/s
[info]                  ·gc.alloc.rate:                   1775.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              55156.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1757.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54615.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217.201 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         54.000 ms
[info] Iteration   2: 50422.532 ops/s
[info]                  ·gc.alloc.rate:                   1808.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              56434.840 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1749.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54591.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.549 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 298.063 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 52412.678 ops/s
[info]                  ·gc.alloc.rate:                   1414.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              42476.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1473.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44235.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 142.569 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 52358.939 ops/s
[info]                  ·gc.alloc.rate:                   1431.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              43033.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1502.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45173.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.754 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 54291.966 ops/s
[info]                  ·gc.alloc.rate:                   1456.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              42213.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1228.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35608.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.207 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala":
[info]   52029.356 ±(99.9%) 6036.481 ops/s [Average]
[info]   (min, avg, max) = (50422.532, 52029.356, 54291.966), stdev = 1567.655
[info]   CI (99.9%): [45992.875, 58065.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1577.153 ±(99.9%) 757.731 MB/sec [Average]
[info]   (min, avg, max) = (1414.468, 1577.153, 1808.087), stdev = 196.780
[info]   CI (99.9%): [819.422, 2334.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   47862.834 ±(99.9%) 27962.193 B/op [Average]
[info]   (min, avg, max) = (42213.411, 47862.834, 56434.840), stdev = 7261.693
[info]   CI (99.9%): [19900.641, 75825.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1542.244 ±(99.9%) 848.357 MB/sec [Average]
[info]   (min, avg, max) = (1228.353, 1542.244, 1757.955), stdev = 220.316
[info]   CI (99.9%): [693.887, 2390.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   46844.789 ±(99.9%) 30819.864 B/op [Average]
[info]   (min, avg, max) = (35608.444, 46844.789, 54615.274), stdev = 8003.821
[info]   CI (99.9%): [16024.925, 77664.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   4.291 ±(99.9%) 16.173 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 4.291, 9.549), stdev = 4.200
[info]   CI (99.9%): [≈ 0, 20.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   132.559 ±(99.9%) 503.905 B/op [Average]
[info]   (min, avg, max) = (1.207, 132.559, 298.063), stdev = 130.863
[info]   CI (99.9%): [≈ 0, 636.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time":
[info]   99.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 19.800, 54.000), stdev = 19.980
[info]   CI (99.9%): [99.000, 99.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.59% complete, ETA 00:55:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 561844.460 ops/s
[info] # Warmup Iteration   2: 955040.623 ops/s
[info] # Warmup Iteration   3: 1014300.873 ops/s
[info] Iteration   1: 960348.728 ops/s
[info]                  ·gc.alloc.rate:                   903.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.749 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1619.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 967062.338 ops/s
[info]                  ·gc.alloc.rate:                   916.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              1492.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1073.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 983726.843 ops/s
[info]                  ·gc.alloc.rate:                   922.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              1475.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1585.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.263 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.220 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1028519.167 ops/s
[info]                  ·gc.alloc.rate:                   970.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              1484.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1508.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.306 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 994657.818 ops/s
[info]                  ·gc.alloc.rate:                   925.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              1463.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1553.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala":
[info]   986862.979 ±(99.9%) 103697.915 ops/s [Average]
[info]   (min, avg, max) = (960348.728, 986862.979, 1028519.167), stdev = 26930.019
[info]   CI (99.9%): [883165.064, 1090560.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   927.658 ±(99.9%) 97.071 MB/sec [Average]
[info]   (min, avg, max) = (903.957, 927.658, 970.374), stdev = 25.209
[info]   CI (99.9%): [830.587, 1024.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1479.216 ±(99.9%) 40.786 B/op [Average]
[info]   (min, avg, max) = (1463.700, 1479.216, 1492.006), stdev = 10.592
[info]   CI (99.9%): [1438.430, 1520.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   921.455 ±(99.9%) 563.261 MB/sec [Average]
[info]   (min, avg, max) = (659.853, 921.455, 990.894), stdev = 146.277
[info]   CI (99.9%): [358.194, 1484.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1468.098 ±(99.9%) 862.961 B/op [Average]
[info]   (min, avg, max) = (1073.861, 1468.098, 1619.012), stdev = 224.108
[info]   CI (99.9%): [605.136, 2331.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.848 ±(99.9%) 5.372 MB/sec [Average]
[info]   (min, avg, max) = (0.029, 0.848, 3.263), stdev = 1.395
[info]   CI (99.9%): [≈ 0, 6.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.344 ±(99.9%) 8.595 B/op [Average]
[info]   (min, avg, max) = (0.047, 1.344, 5.220), stdev = 2.232
[info]   CI (99.9%): [≈ 0, 9.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 2.881
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 38.82% complete, ETA 00:55:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 797686.601 ops/s
[info] # Warmup Iteration   2: 1105552.619 ops/s
[info] # Warmup Iteration   3: 1120715.933 ops/s
[info] Iteration   1: 1095485.969 ops/s
[info]                  ·gc.alloc.rate:      0.124 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.178 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1096810.595 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1077040.517 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1120295.685 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1123426.902 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   1102611.934 ±(99.9%) 74176.391 ops/s [Average]
[info]   (min, avg, max) = (1077040.517, 1102611.934, 1123426.902), stdev = 19263.373
[info]   CI (99.9%): [1028435.542, 1176788.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.025 ±(99.9%) 0.212 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.025, 0.124), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.036 ±(99.9%) 0.305 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.036, 0.178), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 39.06% complete, ETA 00:55:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1278.130 ops/s
[info] # Warmup Iteration   2: 2888.486 ops/s
[info] # Warmup Iteration   3: 3206.336 ops/s
[info] Iteration   1: 3363.865 ops/s
[info]                  ·gc.alloc.rate:                   1466.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              685920.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1237.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     578664.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.611 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 285.701 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         51.000 ms
[info] Iteration   2: 3665.904 ops/s
[info]                  ·gc.alloc.rate:                   905.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              388387.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1079.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     463161.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         73.000 ms
[info] Iteration   3: 4082.215 ops/s
[info]                  ·gc.alloc.rate:                   561.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              216454.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          516.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199160.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      18.914 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7292.332 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   4: 3943.465 ops/s
[info]                  ·gc.alloc.rate:                   541.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              216026.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          514.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205462.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.170 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 467.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   5: 3835.007 ops/s
[info]                  ·gc.alloc.rate:                   522.820 MB/sec
[info]                  ·gc.alloc.rate.norm:              214537.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          527.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216494.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.790 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson":
[info]   3778.091 ±(99.9%) 1067.206 ops/s [Average]
[info]   (min, avg, max) = (3363.865, 3778.091, 4082.215), stdev = 277.150
[info]   CI (99.9%): [2710.884, 4845.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   799.544 ±(99.9%) 1559.951 MB/sec [Average]
[info]   (min, avg, max) = (522.820, 799.544, 1466.890), stdev = 405.114
[info]   CI (99.9%): [≈ 0, 2359.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   344265.325 ±(99.9%) 789816.224 B/op [Average]
[info]   (min, avg, max) = (214537.572, 344265.325, 685920.502), stdev = 205112.765
[info]   CI (99.9%): [≈ 0, 1134081.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   775.213 ±(99.9%) 1364.574 MB/sec [Average]
[info]   (min, avg, max) = (514.861, 775.213, 1237.515), stdev = 354.376
[info]   CI (99.9%): [≈ 0, 2139.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   332588.549 ±(99.9%) 680825.787 B/op [Average]
[info]   (min, avg, max) = (199160.100, 332588.549, 578664.378), stdev = 176808.295
[info]   CI (99.9%): [≈ 0, 1013414.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   4.142 ±(99.9%) 31.855 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 4.142, 18.914), stdev = 8.273
[info]   CI (99.9%): [≈ 0, 35.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1609.982 ±(99.9%) 12255.350 B/op [Average]
[info]   (min, avg, max) = (0.024, 1609.982, 7292.332), stdev = 3182.676
[info]   CI (99.9%): [≈ 0, 13865.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 1.095
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time":
[info]   210.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (26.000, 42.000, 73.000), stdev = 20.025
[info]   CI (99.9%): [210.000, 210.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 39.29% complete, ETA 00:55:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19615.506 ops/s
[info] # Warmup Iteration   2: 110250.075 ops/s
[info] # Warmup Iteration   3: 131966.747 ops/s
[info] Iteration   1: 136847.213 ops/s
[info]                  ·gc.alloc.rate:                   2422.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              27857.195 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2268.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26087.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.530 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 86.579 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 139791.144 ops/s
[info]                  ·gc.alloc.rate:                   2194.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              24700.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2264.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25485.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.846 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 143860.749 ops/s
[info]                  ·gc.alloc.rate:                   2235.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              24458.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2264.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24773.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.793 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.678 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 145078.947 ops/s
[info]                  ·gc.alloc.rate:                   2264.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              24553.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21267.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.452 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 143284.724 ops/s
[info]                  ·gc.alloc.rate:               2263.473 MB/sec
[info]                  ·gc.alloc.rate.norm:          24862.172 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2313.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25416.454 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce":
[info]   141772.555 ±(99.9%) 13024.687 ops/s [Average]
[info]   (min, avg, max) = (136847.213, 141772.555, 145078.947), stdev = 3382.470
[info]   CI (99.9%): [128747.868, 154797.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate":
[info]   2276.265 ±(99.9%) 333.853 MB/sec [Average]
[info]   (min, avg, max) = (2194.822, 2276.265, 2422.894), stdev = 86.701
[info]   CI (99.9%): [1942.412, 2610.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   25286.096 ±(99.9%) 5565.744 B/op [Average]
[info]   (min, avg, max) = (24458.004, 25286.096, 27857.195), stdev = 1445.406
[info]   CI (99.9%): [19720.351, 30851.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2214.711 ±(99.9%) 551.503 MB/sec [Average]
[info]   (min, avg, max) = (1961.213, 2214.711, 2313.935), stdev = 143.224
[info]   CI (99.9%): [1663.208, 2766.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   24606.161 ±(99.9%) 7406.598 B/op [Average]
[info]   (min, avg, max) = (21267.516, 24606.161, 26087.601), stdev = 1923.470
[info]   CI (99.9%): [17199.563, 32012.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.275 ±(99.9%) 12.255 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.275, 7.530), stdev = 3.183
[info]   CI (99.9%): [≈ 0, 14.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   25.911 ±(99.9%) 140.959 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 25.911, 86.579), stdev = 36.607
[info]   CI (99.9%): [≈ 0, 166.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 14.200, 28.000), stdev = 8.585
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 39.53% complete, ETA 00:54:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.827 ops/s
[info] # Warmup Iteration   2: 309147.878 ops/s
[info] # Warmup Iteration   3: 386296.937 ops/s
[info] Iteration   1: 388422.011 ops/s
[info]                  ·gc.alloc.rate:                   793.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              3215.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2628.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 377063.478 ops/s
[info]                  ·gc.alloc.rate:                   781.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              3259.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2710.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.025 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 382282.299 ops/s
[info]                  ·gc.alloc.rate:                   799.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              3292.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4017.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.171 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 383297.457 ops/s
[info]                  ·gc.alloc.rate:                   784.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              3219.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2674.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.647 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 385390.335 ops/s
[info]                  ·gc.alloc.rate:                   793.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              3238.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3977.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.721 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava":
[info]   383291.116 ±(99.9%) 16169.729 ops/s [Average]
[info]   (min, avg, max) = (377063.478, 383291.116, 388422.011), stdev = 4199.227
[info]   CI (99.9%): [367121.387, 399460.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   790.437 ±(99.9%) 28.986 MB/sec [Average]
[info]   (min, avg, max) = (781.323, 790.437, 799.859), stdev = 7.528
[info]   CI (99.9%): [761.451, 819.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   3245.092 ±(99.9%) 123.589 B/op [Average]
[info]   (min, avg, max) = (3215.413, 3245.092, 3292.975), stdev = 32.096
[info]   CI (99.9%): [3121.503, 3368.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   780.073 ±(99.9%) 685.108 MB/sec [Average]
[info]   (min, avg, max) = (648.923, 780.073, 975.871), stdev = 177.920
[info]   CI (99.9%): [94.965, 1465.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   3201.980 ±(99.9%) 2799.100 B/op [Average]
[info]   (min, avg, max) = (2628.971, 3201.980, 4017.606), stdev = 726.917
[info]   CI (99.9%): [402.880, 6001.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.960 ±(99.9%) 6.749 MB/sec [Average]
[info]   (min, avg, max) = (0.012, 0.960, 4.056), stdev = 1.753
[info]   CI (99.9%): [≈ 0, 7.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   3.938 ±(99.9%) 27.701 B/op [Average]
[info]   (min, avg, max) = (0.048, 3.938, 16.647), stdev = 7.194
[info]   CI (99.9%): [≈ 0, 31.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 11.000), stdev = 2.280
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.76% complete, ETA 00:54:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73197.467 ops/s
[info] # Warmup Iteration   2: 166684.226 ops/s
[info] # Warmup Iteration   3: 251949.797 ops/s
[info] Iteration   1: 280271.347 ops/s
[info]                  ·gc.alloc.rate:                   580.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              3258.337 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3621.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 281779.761 ops/s
[info]                  ·gc.alloc.rate:               588.186 MB/sec
[info]                  ·gc.alloc.rate.norm:          3285.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3601.679 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   3: 284597.327 ops/s
[info]                  ·gc.alloc.rate:                   581.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              3213.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1786.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.345 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 282405.135 ops/s
[info]                  ·gc.alloc.rate:               595.015 MB/sec
[info]                  ·gc.alloc.rate.norm:          3315.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3602.837 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 282891.976 ops/s
[info]                  ·gc.alloc.rate:                   593.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              3299.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3602.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.427 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala":
[info]   282389.109 ±(99.9%) 6084.012 ops/s [Average]
[info]   (min, avg, max) = (280271.347, 282389.109, 284597.327), stdev = 1579.999
[info]   CI (99.9%): [276305.098, 288473.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   587.526 ±(99.9%) 25.916 MB/sec [Average]
[info]   (min, avg, max) = (580.231, 587.526, 595.015), stdev = 6.730
[info]   CI (99.9%): [561.609, 613.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3274.394 ±(99.9%) 154.153 B/op [Average]
[info]   (min, avg, max) = (3213.481, 3274.394, 3315.603), stdev = 40.033
[info]   CI (99.9%): [3120.241, 3428.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   581.372 ±(99.9%) 555.961 MB/sec [Average]
[info]   (min, avg, max) = (323.103, 581.372, 647.485), stdev = 144.381
[info]   CI (99.9%): [25.411, 1137.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3242.913 ±(99.9%) 3134.885 B/op [Average]
[info]   (min, avg, max) = (1786.644, 3242.913, 3621.094), stdev = 814.120
[info]   CI (99.9%): [108.028, 6377.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.699 ±(99.9%) 5.872 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.699, 3.427), stdev = 1.525
[info]   CI (99.9%): [≈ 0, 6.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.891 ±(99.9%) 32.670 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.891, 19.066), stdev = 8.484
[info]   CI (99.9%): [≈ 0, 36.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 9.000), stdev = 1.789
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.00% complete, ETA 00:54:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 195896.789 ops/s
[info] # Warmup Iteration   2: 429790.572 ops/s
[info] # Warmup Iteration   3: 487935.636 ops/s
[info] Iteration   1: 492388.919 ops/s
[info]                  ·gc.alloc.rate:                   638.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              2038.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2098.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 487342.491 ops/s
[info]                  ·gc.alloc.rate:               627.970 MB/sec
[info]                  ·gc.alloc.rate.norm:          2027.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2123.403 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 492713.534 ops/s
[info]                  ·gc.alloc.rate:                   641.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              2048.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2103.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 489919.570 ops/s
[info]                  ·gc.alloc.rate:                   637.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              2047.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2117.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 484633.359 ops/s
[info]                  ·gc.alloc.rate:                   656.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              2132.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2142.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.710 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala":
[info]   489399.575 ±(99.9%) 13218.610 ops/s [Average]
[info]   (min, avg, max) = (484633.359, 489399.575, 492713.534), stdev = 3432.831
[info]   CI (99.9%): [476180.965, 502618.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   640.284 ±(99.9%) 39.960 MB/sec [Average]
[info]   (min, avg, max) = (627.970, 640.284, 656.591), stdev = 10.378
[info]   CI (99.9%): [600.324, 680.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   2058.736 ±(99.9%) 161.621 B/op [Average]
[info]   (min, avg, max) = (2027.064, 2058.736, 2132.270), stdev = 41.972
[info]   CI (99.9%): [1897.116, 2220.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   658.471 ±(99.9%) 4.919 MB/sec [Average]
[info]   (min, avg, max) = (656.663, 658.471, 659.827), stdev = 1.277
[info]   CI (99.9%): [653.552, 663.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2117.144 ±(99.9%) 67.576 B/op [Average]
[info]   (min, avg, max) = (2098.489, 2117.144, 2142.777), stdev = 17.549
[info]   CI (99.9%): [2049.567, 2184.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.616 ±(99.9%) 5.111 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.616, 2.990), stdev = 1.327
[info]   CI (99.9%): [≈ 0, 5.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.999 ±(99.9%) 16.601 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.999, 9.710), stdev = 4.311
[info]   CI (99.9%): [≈ 0, 18.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 40.24% complete, ETA 00:54:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2934.016 ops/s
[info] # Warmup Iteration   2: 64527.856 ops/s
[info] # Warmup Iteration   3: 97672.307 ops/s
[info] Iteration   1: 106817.386 ops/s
[info]                  ·gc.alloc.rate:                   3718.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              54777.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3631.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53487.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.756 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.599 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 104958.479 ops/s
[info]                  ·gc.alloc.rate:                   3664.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              54950.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3340.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50085.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.936 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 105964.426 ops/s
[info]                  ·gc.alloc.rate:                   3712.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              55125.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3710.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55098.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 104332.996 ops/s
[info]                  ·gc.alloc.rate:                   3673.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              55415.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3389.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51137.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.942 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 106797.442 ops/s
[info]                  ·gc.alloc.rate:                   3773.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              55598.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3737.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55074.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.307 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson":
[info]   105774.146 ±(99.9%) 4267.930 ops/s [Average]
[info]   (min, avg, max) = (104332.996, 105774.146, 106817.386), stdev = 1108.368
[info]   CI (99.9%): [101506.216, 110042.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3708.521 ±(99.9%) 166.286 MB/sec [Average]
[info]   (min, avg, max) = (3664.611, 3708.521, 3773.237), stdev = 43.184
[info]   CI (99.9%): [3542.235, 3874.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   55173.452 ±(99.9%) 1289.252 B/op [Average]
[info]   (min, avg, max) = (54777.481, 55173.452, 55598.698), stdev = 334.815
[info]   CI (99.9%): [53884.200, 56462.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3561.916 ±(99.9%) 711.277 MB/sec [Average]
[info]   (min, avg, max) = (3340.169, 3561.916, 3737.630), stdev = 184.716
[info]   CI (99.9%): [2850.639, 4273.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   52976.586 ±(99.9%) 8802.854 B/op [Average]
[info]   (min, avg, max) = (50085.357, 52976.586, 55098.645), stdev = 2286.073
[info]   CI (99.9%): [44173.732, 61779.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.585 ±(99.9%) 4.676 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.585, 2.756), stdev = 1.214
[info]   CI (99.9%): [≈ 0, 5.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.619 ±(99.9%) 68.851 B/op [Average]
[info]   (min, avg, max) = (0.307, 8.619, 40.599), stdev = 17.880
[info]   CI (99.9%): [≈ 0, 77.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.count":
[info]   53.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.600, 11.000), stdev = 0.548
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.time":
[info]   72.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.400, 15.000), stdev = 0.894
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 40.47% complete, ETA 00:54:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40015.713 ops/s
[info] # Warmup Iteration   2: 186689.546 ops/s
[info] # Warmup Iteration   3: 196315.251 ops/s
[info] Iteration   1: 212937.298 ops/s
[info]                  ·gc.alloc.rate:                   1837.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              13579.815 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14495.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.871 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 215733.949 ops/s
[info]                  ·gc.alloc.rate:                   1848.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              13485.898 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11848.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.519 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 215288.479 ops/s
[info]                  ·gc.alloc.rate:                   1854.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              13554.464 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14322.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 211830.246 ops/s
[info]                  ·gc.alloc.rate:                   1837.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              13646.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12252.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 215805.376 ops/s
[info]                  ·gc.alloc.rate:                   1872.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              13650.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12123.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce":
[info]   214319.070 ±(99.9%) 7009.411 ops/s [Average]
[info]   (min, avg, max) = (211830.246, 214319.070, 215805.376), stdev = 1820.322
[info]   CI (99.9%): [207309.659, 221328.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1849.903 ±(99.9%) 55.439 MB/sec [Average]
[info]   (min, avg, max) = (1837.286, 1849.903, 1872.123), stdev = 14.397
[info]   CI (99.9%): [1794.464, 1905.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   13583.381 ±(99.9%) 264.030 B/op [Average]
[info]   (min, avg, max) = (13485.898, 13583.381, 13650.409), stdev = 68.568
[info]   CI (99.9%): [13319.351, 13847.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1771.392 ±(99.9%) 665.862 MB/sec [Average]
[info]   (min, avg, max) = (1624.145, 1771.392, 1961.231), stdev = 172.922
[info]   CI (99.9%): [1105.530, 2437.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   13008.537 ±(99.9%) 4961.089 B/op [Average]
[info]   (min, avg, max) = (11848.426, 13008.537, 14495.921), stdev = 1288.379
[info]   CI (99.9%): [8047.448, 17969.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.921 ±(99.9%) 7.306 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.921, 4.312), stdev = 1.897
[info]   CI (99.9%): [≈ 0, 8.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.800 ±(99.9%) 54.012 B/op [Average]
[info]   (min, avg, max) = (0.152, 6.800, 31.871), stdev = 14.027
[info]   CI (99.9%): [≈ 0, 60.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 16.000), stdev = 3.834
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 40.71% complete, ETA 00:53:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.764 ops/s
[info] # Warmup Iteration   2: 686803.958 ops/s
[info] # Warmup Iteration   3: 884863.111 ops/s
[info] Iteration   1: 936307.131 ops/s
[info]                  ·gc.alloc.rate:                   749.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              1259.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1090.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 934014.437 ops/s
[info]                  ·gc.alloc.rate:               761.411 MB/sec
[info]                  ·gc.alloc.rate.norm:          1282.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:      975.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1643.981 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   3: 924629.177 ops/s
[info]                  ·gc.alloc.rate:                   745.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              1269.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1108.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 911157.892 ops/s
[info]                  ·gc.alloc.rate:                   730.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              1261.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1127.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 912322.549 ops/s
[info]                  ·gc.alloc.rate:                   729.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              1257.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1125.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.682 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.073 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava":
[info]   923686.237 ±(99.9%) 45273.348 ops/s [Average]
[info]   (min, avg, max) = (911157.892, 923686.237, 936307.131), stdev = 11757.345
[info]   CI (99.9%): [878412.889, 968959.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   743.257 ±(99.9%) 51.932 MB/sec [Average]
[info]   (min, avg, max) = (729.383, 743.257, 761.411), stdev = 13.486
[info]   CI (99.9%): [691.325, 795.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   1266.194 ±(99.9%) 39.756 B/op [Average]
[info]   (min, avg, max) = (1257.718, 1266.194, 1282.953), stdev = 10.324
[info]   CI (99.9%): [1226.438, 1305.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   716.236 ±(99.9%) 558.492 MB/sec [Average]
[info]   (min, avg, max) = (648.887, 716.236, 975.675), stdev = 145.039
[info]   CI (99.9%): [157.744, 1274.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1219.165 ±(99.9%) 916.192 B/op [Average]
[info]   (min, avg, max) = (1090.676, 1219.165, 1643.981), stdev = 237.932
[info]   CI (99.9%): [302.973, 2135.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.963 ±(99.9%) 8.005 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.963, 4.682), stdev = 2.079
[info]   CI (99.9%): [≈ 0, 8.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.660 ±(99.9%) 13.804 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.660, 8.073), stdev = 3.585
[info]   CI (99.9%): [≈ 0, 15.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 11.000), stdev = 2.191
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.94% complete, ETA 00:53:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 199201.185 ops/s
[info] # Warmup Iteration   2: 561388.201 ops/s
[info] # Warmup Iteration   3: 603308.435 ops/s
[info] Iteration   1: 607740.192 ops/s
[info]                  ·gc.alloc.rate:               487.359 MB/sec
[info]                  ·gc.alloc.rate.norm:          1261.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 837.536 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 608348.851 ops/s
[info]                  ·gc.alloc.rate:                   492.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              1275.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1676.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 617378.770 ops/s
[info]                  ·gc.alloc.rate:               494.899 MB/sec
[info]                  ·gc.alloc.rate.norm:          1261.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 828.702 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 609477.815 ops/s
[info]                  ·gc.alloc.rate:                   508.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              1313.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1680.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 620634.552 ops/s
[info]                  ·gc.alloc.rate:               496.973 MB/sec
[info]                  ·gc.alloc.rate.norm:          1259.748 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 826.076 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala":
[info]   612716.036 ±(99.9%) 22679.720 ops/s [Average]
[info]   (min, avg, max) = (607740.192, 612716.036, 620634.552), stdev = 5889.851
[info]   CI (99.9%): [590036.316, 635395.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   496.122 ±(99.9%) 29.923 MB/sec [Average]
[info]   (min, avg, max) = (487.359, 496.122, 508.461), stdev = 7.771
[info]   CI (99.9%): [466.199, 526.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1274.205 ±(99.9%) 86.936 B/op [Average]
[info]   (min, avg, max) = (1259.748, 1274.205, 1313.024), stdev = 22.577
[info]   CI (99.9%): [1187.268, 1361.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   454.711 ±(99.9%) 684.732 MB/sec [Average]
[info]   (min, avg, max) = (323.450, 454.711, 650.813), stdev = 177.823
[info]   CI (99.9%): [≈ 0, 1139.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1169.968 ±(99.9%) 1788.570 B/op [Average]
[info]   (min, avg, max) = (826.076, 1169.968, 1680.625), stdev = 464.486
[info]   CI (99.9%): [≈ 0, 2958.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.065 ±(99.9%) 0.340 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.065, 0.162), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 8.000), stdev = 2.408
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.18% complete, ETA 00:53:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 330052.805 ops/s
[info] # Warmup Iteration   2: 726887.522 ops/s
[info] # Warmup Iteration   3: 795826.990 ops/s
[info] Iteration   1: 777154.899 ops/s
[info]                  ·gc.alloc.rate:               623.273 MB/sec
[info]                  ·gc.alloc.rate.norm:          1262.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1329.475 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 787627.238 ops/s
[info]                  ·gc.alloc.rate:                   665.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              1329.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1313.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 689364.445 ops/s
[info]                  ·gc.alloc.rate:                   562.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              1285.071 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1501.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 774102.024 ops/s
[info]                  ·gc.alloc.rate:               628.306 MB/sec
[info]                  ·gc.alloc.rate.norm:          1277.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1339.456 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 803559.503 ops/s
[info]                  ·gc.alloc.rate:                   645.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1291.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.341 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala":
[info]   766361.622 ±(99.9%) 171568.579 ops/s [Average]
[info]   (min, avg, max) = (689364.445, 766361.622, 803559.503), stdev = 44555.815
[info]   CI (99.9%): [594793.043, 937930.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   625.085 ±(99.9%) 148.367 MB/sec [Average]
[info]   (min, avg, max) = (562.867, 625.085, 665.606), stdev = 38.530
[info]   CI (99.9%): [476.719, 773.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1283.695 ±(99.9%) 105.648 B/op [Average]
[info]   (min, avg, max) = (1262.230, 1283.695, 1329.756), stdev = 27.436
[info]   CI (99.9%): [1178.047, 1389.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   657.983 ±(99.9%) 4.656 MB/sec [Average]
[info]   (min, avg, max) = (656.477, 657.983, 659.514), stdev = 1.209
[info]   CI (99.9%): [653.327, 662.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1355.122 ±(99.9%) 323.395 B/op [Average]
[info]   (min, avg, max) = (1291.713, 1355.122, 1501.840), stdev = 83.985
[info]   CI (99.9%): [1031.727, 1678.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.554 ±(99.9%) 4.679 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.554, 2.727), stdev = 1.215
[info]   CI (99.9%): [≈ 0, 5.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.087 ±(99.9%) 9.159 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.087, 5.341), stdev = 2.379
[info]   CI (99.9%): [≈ 0, 10.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 41.41% complete, ETA 00:53:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 476847.834 ops/s
[info] # Warmup Iteration   2: 772798.713 ops/s
[info] # Warmup Iteration   3: 824138.829 ops/s
[info] Iteration   1: 825321.991 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 838560.786 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 838355.195 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 838226.236 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 838258.145 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc":
[info]   835744.471 ±(99.9%) 22440.808 ops/s [Average]
[info]   (min, avg, max) = (825321.991, 835744.471, 838560.786), stdev = 5827.806
[info]   CI (99.9%): [813303.663, 858185.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 41.65% complete, ETA 00:53:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5575.841 ops/s
[info] # Warmup Iteration   2: 19876.553 ops/s
[info] # Warmup Iteration   3: 34543.827 ops/s
[info] Iteration   1: 34935.984 ops/s
[info]                  ·gc.alloc.rate:                   1594.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              71807.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73614.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 183.929 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 33112.668 ops/s
[info]                  ·gc.alloc.rate:                   1898.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              90202.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77157.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 190.517 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 35429.875 ops/s
[info]                  ·gc.alloc.rate:                   1604.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              71267.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72070.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.205 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.548 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 35597.983 ops/s
[info]                  ·gc.alloc.rate:                   1612.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              71304.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72022.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.522 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 35424.121 ops/s
[info]                  ·gc.alloc.rate:                   1597.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              70949.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73027.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.474 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson":
[info]   34900.126 ±(99.9%) 3963.780 ops/s [Average]
[info]   (min, avg, max) = (33112.668, 34900.126, 35597.983), stdev = 1029.381
[info]   CI (99.9%): [30936.346, 38863.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1661.459 ±(99.9%) 511.476 MB/sec [Average]
[info]   (min, avg, max) = (1594.018, 1661.459, 1898.720), stdev = 132.829
[info]   CI (99.9%): [1149.983, 2172.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   75106.247 ±(99.9%) 32517.954 B/op [Average]
[info]   (min, avg, max) = (70949.609, 75106.247, 90202.798), stdev = 8444.809
[info]   CI (99.9%): [42588.292, 107624.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1630.783 ±(99.9%) 33.757 MB/sec [Average]
[info]   (min, avg, max) = (1622.418, 1630.783, 1644.160), stdev = 8.766
[info]   CI (99.9%): [1597.026, 1664.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   73578.400 ±(99.9%) 8125.264 B/op [Average]
[info]   (min, avg, max) = (72022.599, 73578.400, 77157.514), stdev = 2110.105
[info]   CI (99.9%): [65453.136, 81703.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.914 ±(99.9%) 7.684 MB/sec [Average]
[info]   (min, avg, max) = (0.125, 1.914, 4.083), stdev = 1.996
[info]   CI (99.9%): [≈ 0, 9.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   87.998 ±(99.9%) 356.824 B/op [Average]
[info]   (min, avg, max) = (5.522, 87.998, 190.517), stdev = 92.666
[info]   CI (99.9%): [≈ 0, 444.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.600, 19.000), stdev = 4.930
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 41.88% complete, ETA 00:52:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 586.649 ops/s
[info] # Warmup Iteration   2: 6127.191 ops/s
[info] # Warmup Iteration   3: 7585.098 ops/s
[info] Iteration   1: 9234.923 ops/s
[info]                  ·gc.alloc.rate:                   1299.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              221518.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     222497.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.668 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 284.300 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 9369.061 ops/s
[info]                  ·gc.alloc.rate:                   1323.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              222273.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218644.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.406 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 740.000 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 9497.999 ops/s
[info]                  ·gc.alloc.rate:                   1339.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              221813.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1291.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     213909.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.739 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 9472.986 ops/s
[info]                  ·gc.alloc.rate:                   1334.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              221722.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214805.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.917 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 9453.936 ops/s
[info]                  ·gc.alloc.rate:                   1330.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              221551.333 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216679.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.465 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce":
[info]   9405.781 ±(99.9%) 412.398 ops/s [Average]
[info]   (min, avg, max) = (9234.923, 9405.781, 9497.999), stdev = 107.099
[info]   CI (99.9%): [8993.383, 9818.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1325.599 ±(99.9%) 59.487 MB/sec [Average]
[info]   (min, avg, max) = (1299.980, 1325.599, 1339.144), stdev = 15.449
[info]   CI (99.9%): [1266.112, 1385.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   221775.792 ±(99.9%) 1168.514 B/op [Average]
[info]   (min, avg, max) = (221518.377, 221775.792, 222273.304), stdev = 303.459
[info]   CI (99.9%): [220607.278, 222944.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1298.703 ±(99.9%) 23.779 MB/sec [Average]
[info]   (min, avg, max) = (1291.428, 1298.703, 1305.726), stdev = 6.175
[info]   CI (99.9%): [1274.924, 1322.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   217307.290 ±(99.9%) 13188.434 B/op [Average]
[info]   (min, avg, max) = (213909.504, 217307.290, 222497.452), stdev = 3424.995
[info]   CI (99.9%): [204118.855, 230495.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.290 ±(99.9%) 7.198 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.290, 4.406), stdev = 1.869
[info]   CI (99.9%): [≈ 0, 8.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   217.284 ±(99.9%) 1210.202 B/op [Average]
[info]   (min, avg, max) = (3.465, 217.284, 740.000), stdev = 314.286
[info]   CI (99.9%): [≈ 0, 1427.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.200, 21.000), stdev = 6.380
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.12% complete, ETA 00:52:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 842.587 ops/s
[info] # Warmup Iteration   2: 6752.448 ops/s
[info] # Warmup Iteration   3: 8789.089 ops/s
[info] Iteration   1: 9279.544 ops/s
[info]                  ·gc.alloc.rate:                   1228.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              208210.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1291.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218957.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.531 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 9436.358 ops/s
[info]                  ·gc.alloc.rate:                   1236.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              206247.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     161208.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.472 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 9240.115 ops/s
[info]                  ·gc.alloc.rate:                   1210.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              206174.739 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220391.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.091 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 9082.627 ops/s
[info]                  ·gc.alloc.rate:                   1188.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              205852.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     225989.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.607 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 9229.129 ops/s
[info]                  ·gc.alloc.rate:                   1211.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              206628.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167947.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.550 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala":
[info]   9253.555 ±(99.9%) 487.400 ops/s [Average]
[info]   (min, avg, max) = (9082.627, 9253.555, 9436.358), stdev = 126.576
[info]   CI (99.9%): [8766.155, 9740.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1214.981 ±(99.9%) 71.992 MB/sec [Average]
[info]   (min, avg, max) = (1188.002, 1214.981, 1236.590), stdev = 18.696
[info]   CI (99.9%): [1142.989, 1286.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   206622.675 ±(99.9%) 3578.412 B/op [Average]
[info]   (min, avg, max) = (205852.488, 206622.675, 208210.169), stdev = 929.302
[info]   CI (99.9%): [203044.263, 210201.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1168.219 ±(99.9%) 677.368 MB/sec [Average]
[info]   (min, avg, max) = (966.548, 1168.219, 1304.213), stdev = 175.910
[info]   CI (99.9%): [490.851, 1845.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   198898.635 ±(99.9%) 121413.567 B/op [Average]
[info]   (min, avg, max) = (161208.283, 198898.635, 225989.192), stdev = 31530.718
[info]   CI (99.9%): [77485.068, 320312.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.250 ±(99.9%) 6.118 B/op [Average]
[info]   (min, avg, max) = (3.472, 4.250, 7.091), stdev = 1.589
[info]   CI (99.9%): [≈ 0, 10.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 12.000), stdev = 3.130
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.35% complete, ETA 00:52:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62833.530 ops/s
[info] # Warmup Iteration   2: 172322.140 ops/s
[info] # Warmup Iteration   3: 183560.744 ops/s
[info] Iteration   1: 197681.929 ops/s
[info]                  ·gc.alloc.rate:                   1714.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              13646.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1607.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12795.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.218 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.619 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 200147.384 ops/s
[info]                  ·gc.alloc.rate:                   1738.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              13667.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1611.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12668.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.963 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.301 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 203792.403 ops/s
[info]                  ·gc.alloc.rate:                   1763.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              13620.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1932.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14923.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.348 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.126 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 202881.952 ops/s
[info]                  ·gc.alloc.rate:                   1767.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              13710.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1613.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12513.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.323 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 199902.911 ops/s
[info]                  ·gc.alloc.rate:                   1755.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              13820.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12794.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.328 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala":
[info]   200881.316 ±(99.9%) 9473.089 ops/s [Average]
[info]   (min, avg, max) = (197681.929, 200881.316, 203792.403), stdev = 2460.131
[info]   CI (99.9%): [191408.226, 210354.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1747.881 ±(99.9%) 84.523 MB/sec [Average]
[info]   (min, avg, max) = (1714.216, 1747.881, 1767.468), stdev = 21.950
[info]   CI (99.9%): [1663.357, 1832.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   13693.165 ±(99.9%) 303.204 B/op [Average]
[info]   (min, avg, max) = (13620.025, 13693.165, 13820.820), stdev = 78.741
[info]   CI (99.9%): [13389.960, 13996.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1677.890 ±(99.9%) 549.329 MB/sec [Average]
[info]   (min, avg, max) = (1607.271, 1677.890, 1932.805), stdev = 142.659
[info]   CI (99.9%): [1128.562, 2227.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   13138.959 ±(99.9%) 3867.524 B/op [Average]
[info]   (min, avg, max) = (12513.130, 13138.959, 14923.658), stdev = 1004.384
[info]   CI (99.9%): [9271.435, 17006.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.722 ±(99.9%) 6.033 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.722, 3.218), stdev = 1.567
[info]   CI (99.9%): [≈ 0, 7.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   13.539 ±(99.9%) 47.608 B/op [Average]
[info]   (min, avg, max) = (0.323, 13.539, 25.619), stdev = 12.364
[info]   CI (99.9%): [≈ 0, 61.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 12.600, 24.000), stdev = 7.470
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 42.59% complete, ETA 00:52:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 541.980 ops/s
[info] # Warmup Iteration   2: 4960.437 ops/s
[info] # Warmup Iteration   3: 7578.173 ops/s
[info] Iteration   1: 8449.450 ops/s
[info]                  ·gc.alloc.rate:                   1326.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              247172.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     240771.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.160 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 402.281 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 8461.715 ops/s
[info]                  ·gc.alloc.rate:                   1323.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              246054.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     240554.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.616 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 8887.437 ops/s
[info]                  ·gc.alloc.rate:                   1388.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              245946.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230087.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 191.693 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 8809.403 ops/s
[info]                  ·gc.alloc.rate:                   1390.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              248307.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     291806.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.719 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 8839.417 ops/s
[info]                  ·gc.alloc.rate:                   1387.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              246995.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     234242.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.706 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson":
[info]   8689.484 ±(99.9%) 829.323 ops/s [Average]
[info]   (min, avg, max) = (8449.450, 8689.484, 8887.437), stdev = 215.372
[info]   CI (99.9%): [7860.162, 9518.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1363.491 ±(99.9%) 134.582 MB/sec [Average]
[info]   (min, avg, max) = (1323.516, 1363.491, 1390.475), stdev = 34.951
[info]   CI (99.9%): [1228.909, 1498.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   246895.254 ±(99.9%) 3698.235 B/op [Average]
[info]   (min, avg, max) = (245946.101, 246895.254, 248307.991), stdev = 960.420
[info]   CI (99.9%): [243197.019, 250593.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1367.178 ±(99.9%) 575.597 MB/sec [Average]
[info]   (min, avg, max) = (1292.611, 1367.178, 1634.059), stdev = 149.481
[info]   CI (99.9%): [791.581, 1942.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   247492.499 ±(99.9%) 96948.154 B/op [Average]
[info]   (min, avg, max) = (230087.466, 247492.499, 291806.645), stdev = 25177.128
[info]   CI (99.9%): [150544.345, 344440.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.669 ±(99.9%) 3.654 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.669, 2.160), stdev = 0.949
[info]   CI (99.9%): [≈ 0, 4.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   122.603 ±(99.9%) 676.831 B/op [Average]
[info]   (min, avg, max) = (3.706, 122.603, 402.281), stdev = 175.771
[info]   CI (99.9%): [≈ 0, 799.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 8.000), stdev = 0.837
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 42.82% complete, ETA 00:51:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3537.777 ops/s
[info] # Warmup Iteration   2: 12921.305 ops/s
[info] # Warmup Iteration   3: 20924.078 ops/s
[info] Iteration   1: 21987.802 ops/s
[info]                  ·gc.alloc.rate:                   1215.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              87028.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          942.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67493.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.490 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 22005.917 ops/s
[info]                  ·gc.alloc.rate:                   1180.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              84402.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1268.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90712.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.286 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 21154.447 ops/s
[info]                  ·gc.alloc.rate:                   1332.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              99074.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1274.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94806.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 125.447 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 20907.131 ops/s
[info]                  ·gc.alloc.rate:                   1428.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              107504.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1585.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119299.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79.609 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   5: 20202.136 ops/s
[info]                  ·gc.alloc.rate:                   1525.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              118872.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1232.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96035.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 475.487 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce":
[info]   21251.487 ±(99.9%) 2945.467 ops/s [Average]
[info]   (min, avg, max) = (20202.136, 21251.487, 22005.917), stdev = 764.928
[info]   CI (99.9%): [18306.020, 24196.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1336.568 ±(99.9%) 555.653 MB/sec [Average]
[info]   (min, avg, max) = (1180.378, 1336.568, 1525.923), stdev = 144.301
[info]   CI (99.9%): [780.915, 1892.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   99376.377 ±(99.9%) 55231.382 B/op [Average]
[info]   (min, avg, max) = (84402.744, 99376.377, 118872.018), stdev = 14343.414
[info]   CI (99.9%): [44144.996, 154607.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1260.875 ±(99.9%) 876.607 MB/sec [Average]
[info]   (min, avg, max) = (942.894, 1260.875, 1585.131), stdev = 227.652
[info]   CI (99.9%): [384.268, 2137.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   93669.679 ±(99.9%) 70942.698 B/op [Average]
[info]   (min, avg, max) = (67493.944, 93669.679, 119299.967), stdev = 18423.593
[info]   CI (99.9%): [22726.980, 164612.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2.040 ±(99.9%) 9.068 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.040, 6.104), stdev = 2.355
[info]   CI (99.9%): [≈ 0, 11.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   155.464 ±(99.9%) 711.065 B/op [Average]
[info]   (min, avg, max) = (1.490, 155.464, 475.487), stdev = 184.661
[info]   CI (99.9%): [≈ 0, 866.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time":
[info]   98.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (16.000, 19.600, 25.000), stdev = 3.507
[info]   CI (99.9%): [98.000, 98.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.06% complete, ETA 00:51:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4876.881 ops/s
[info] # Warmup Iteration   2: 14770.172 ops/s
[info] # Warmup Iteration   3: 24560.458 ops/s
[info] Iteration   1: 24500.511 ops/s
[info]                  ·gc.alloc.rate:               1057.908 MB/sec
[info]                  ·gc.alloc.rate.norm:          67955.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:      951.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61107.024 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   2: 24711.484 ops/s
[info]                  ·gc.alloc.rate:                   1019.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              64942.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1269.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80868.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.184 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 266.434 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 23819.656 ops/s
[info]                  ·gc.alloc.rate:                   1310.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              86539.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1267.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83713.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.505 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 23490.692 ops/s
[info]                  ·gc.alloc.rate:                   1303.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              87327.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1262.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84621.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.843 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 592.525 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 23806.373 ops/s
[info]                  ·gc.alloc.rate:                   965.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              63791.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          940.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62139.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 461.962 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala":
[info]   24065.743 ±(99.9%) 1986.461 ops/s [Average]
[info]   (min, avg, max) = (23490.692, 24065.743, 24711.484), stdev = 515.878
[info]   CI (99.9%): [22079.282, 26052.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1131.272 ±(99.9%) 629.529 MB/sec [Average]
[info]   (min, avg, max) = (965.334, 1131.272, 1310.014), stdev = 163.487
[info]   CI (99.9%): [501.743, 1760.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   74111.500 ±(99.9%) 45462.715 B/op [Average]
[info]   (min, avg, max) = (63791.948, 74111.500, 87327.995), stdev = 11806.523
[info]   CI (99.9%): [28648.785, 119574.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1138.329 ±(99.9%) 676.970 MB/sec [Average]
[info]   (min, avg, max) = (940.328, 1138.329, 1269.835), stdev = 175.807
[info]   CI (99.9%): [461.360, 1815.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   74490.044 ±(99.9%) 45563.434 B/op [Average]
[info]   (min, avg, max) = (61107.024, 74490.044, 84621.610), stdev = 11832.679
[info]   CI (99.9%): [28926.610, 120053.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   4.053 ±(99.9%) 15.219 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 4.053, 8.843), stdev = 3.952
[info]   CI (99.9%): [≈ 0, 19.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   267.485 ±(99.9%) 1015.162 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 267.485, 592.525), stdev = 263.634
[info]   CI (99.9%): [≈ 0, 1282.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.200, 14.000), stdev = 1.643
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.29% complete, ETA 00:51:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 277346.545 ops/s
[info] # Warmup Iteration   2: 479727.232 ops/s
[info] # Warmup Iteration   3: 514296.991 ops/s
[info] Iteration   1: 518873.116 ops/s
[info]                  ·gc.alloc.rate:                   1208.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              3664.568 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3000.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 510396.373 ops/s
[info]                  ·gc.alloc.rate:                   1196.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              3690.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4065.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.512 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.831 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 505312.517 ops/s
[info]                  ·gc.alloc.rate:                   1236.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              3850.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4083.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.204 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 512241.390 ops/s
[info]                  ·gc.alloc.rate:                   1216.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              3737.341 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3014.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 534612.672 ops/s
[info]                  ·gc.alloc.rate:                   1248.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              3674.568 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3861.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala":
[info]   516287.214 ±(99.9%) 43651.086 ops/s [Average]
[info]   (min, avg, max) = (505312.517, 516287.214, 534612.672), stdev = 11336.048
[info]   CI (99.9%): [472636.128, 559938.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1221.255 ±(99.9%) 80.675 MB/sec [Average]
[info]   (min, avg, max) = (1196.836, 1221.255, 1248.218), stdev = 20.951
[info]   CI (99.9%): [1140.579, 1301.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3723.587 ±(99.9%) 294.330 B/op [Average]
[info]   (min, avg, max) = (3664.568, 3723.587, 3850.886), stdev = 76.436
[info]   CI (99.9%): [3429.258, 4017.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1182.346 ±(99.9%) 692.981 MB/sec [Average]
[info]   (min, avg, max) = (981.232, 1182.346, 1318.288), stdev = 179.965
[info]   CI (99.9%): [489.364, 1875.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3605.015 ±(99.9%) 2126.192 B/op [Average]
[info]   (min, avg, max) = (3000.561, 3605.015, 4083.106), stdev = 552.165
[info]   CI (99.9%): [1478.823, 5731.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.880 ±(99.9%) 5.770 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.880, 3.512), stdev = 1.498
[info]   CI (99.9%): [≈ 0, 6.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.714 ±(99.9%) 17.799 B/op [Average]
[info]   (min, avg, max) = (0.064, 2.714, 10.831), stdev = 4.622
[info]   CI (99.9%): [≈ 0, 20.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 12.000), stdev = 3.362
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 43.53% complete, ETA 00:51:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 316988.338 ops/s
[info] # Warmup Iteration   2: 525324.809 ops/s
[info] # Warmup Iteration   3: 612696.023 ops/s
[info] Iteration   1: 613580.559 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 611967.588 ops/s
[info]                  ·gc.alloc.rate:      0.058 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.148 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 614488.851 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 614217.246 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 613699.610 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   613590.771 ±(99.9%) 3775.640 ops/s [Average]
[info]   (min, avg, max) = (611967.588, 613590.771, 614488.851), stdev = 980.522
[info]   CI (99.9%): [609815.131, 617366.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.012 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.012, 0.058), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.030 ±(99.9%) 0.253 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.030, 0.148), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 43.76% complete, ETA 00:51:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3797.481 ops/s
[info] # Warmup Iteration   2: 17190.346 ops/s
[info] # Warmup Iteration   3: 20415.242 ops/s
[info] Iteration   1: 24235.658 ops/s
[info]                  ·gc.alloc.rate:                   1236.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              80276.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1132.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73541.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      22.510 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1461.666 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         40.000 ms
[info] Iteration   2: 24954.071 ops/s
[info]                  ·gc.alloc.rate:                   1119.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              70583.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1137.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71759.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.284 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   3: 23784.618 ops/s
[info]                  ·gc.alloc.rate:                   1430.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              94635.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1458.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96447.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.743 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.157 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   4: 23913.109 ops/s
[info]                  ·gc.alloc.rate:                   1482.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              97504.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1470.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96712.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      18.136 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1192.984 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   5: 24866.995 ops/s
[info]                  ·gc.alloc.rate:                   1223.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              77436.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1160.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73446.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      21.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1380.149 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson":
[info]   24350.890 ±(99.9%) 2069.865 ops/s [Average]
[info]   (min, avg, max) = (23784.618, 24350.890, 24954.071), stdev = 537.537
[info]   CI (99.9%): [22281.025, 26420.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1298.475 ±(99.9%) 586.781 MB/sec [Average]
[info]   (min, avg, max) = (1119.194, 1298.475, 1482.276), stdev = 152.385
[info]   CI (99.9%): [711.694, 1885.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   84087.354 ±(99.9%) 44425.533 B/op [Average]
[info]   (min, avg, max) = (70583.044, 84087.354, 97504.892), stdev = 11537.170
[info]   CI (99.9%): [39661.821, 128512.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1271.918 ±(99.9%) 677.390 MB/sec [Average]
[info]   (min, avg, max) = (1132.539, 1271.918, 1470.223), stdev = 175.916
[info]   CI (99.9%): [594.528, 1949.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   82381.384 ±(99.9%) 49984.618 B/op [Average]
[info]   (min, avg, max) = (71759.268, 82381.384, 96712.043), stdev = 12980.847
[info]   CI (99.9%): [32396.765, 132366.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   12.651 ±(99.9%) 43.554 MB/sec [Average]
[info]   (min, avg, max) = (0.052, 12.651, 22.510), stdev = 11.311
[info]   CI (99.9%): [≈ 0, 56.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   817.448 ±(99.9%) 2807.150 B/op [Average]
[info]   (min, avg, max) = (3.284, 817.448, 1461.666), stdev = 729.008
[info]   CI (99.9%): [≈ 0, 3624.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time":
[info]   130.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 26.000, 40.000), stdev = 10.794
[info]   CI (99.9%): [130.000, 130.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.00% complete, ETA 00:50:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1494.236 ops/s
[info] # Warmup Iteration   2: 6359.991 ops/s
[info] # Warmup Iteration   3: 9873.628 ops/s
[info] Iteration   1: 12991.625 ops/s
[info]                  ·gc.alloc.rate:                   1244.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              150683.375 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1257.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     152303.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.884 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 349.192 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 13314.503 ops/s
[info]                  ·gc.alloc.rate:                   1272.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              150384.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1260.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148975.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.410 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.448 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   3: 12841.499 ops/s
[info]                  ·gc.alloc.rate:                   1236.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              151582.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1268.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155522.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.981 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 365.307 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   4: 13226.653 ops/s
[info]                  ·gc.alloc.rate:                   1308.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              155657.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1264.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150481.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.556 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 661.080 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 13369.965 ops/s
[info]                  ·gc.alloc.rate:                   1286.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              151408.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1253.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147528.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.450 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce":
[info]   13148.849 ±(99.9%) 864.403 ops/s [Average]
[info]   (min, avg, max) = (12841.499, 13148.849, 13369.965), stdev = 224.483
[info]   CI (99.9%): [12284.446, 14013.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1269.647 ±(99.9%) 113.797 MB/sec [Average]
[info]   (min, avg, max) = (1236.779, 1269.647, 1308.200), stdev = 29.553
[info]   CI (99.9%): [1155.850, 1383.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   151943.194 ±(99.9%) 8220.261 B/op [Average]
[info]   (min, avg, max) = (150384.065, 151943.194, 155657.365), stdev = 2134.776
[info]   CI (99.9%): [143722.933, 160163.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1261.077 ±(99.9%) 23.291 MB/sec [Average]
[info]   (min, avg, max) = (1253.323, 1261.077, 1268.927), stdev = 6.049
[info]   CI (99.9%): [1237.786, 1284.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   150962.417 ±(99.9%) 11957.246 B/op [Average]
[info]   (min, avg, max) = (147528.284, 150962.417, 155522.990), stdev = 3105.259
[info]   CI (99.9%): [139005.170, 162919.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.370 ±(99.9%) 8.642 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.370, 5.556), stdev = 2.244
[info]   CI (99.9%): [≈ 0, 11.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   285.295 ±(99.9%) 1032.871 B/op [Average]
[info]   (min, avg, max) = (2.450, 285.295, 661.080), stdev = 268.233
[info]   CI (99.9%): [≈ 0, 1318.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.time":
[info]   91.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 18.200, 26.000), stdev = 9.497
[info]   CI (99.9%): [91.000, 91.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.24% complete, ETA 00:50:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1101.429 ops/s
[info] # Warmup Iteration   2: 8552.576 ops/s
[info] # Warmup Iteration   3: 12954.460 ops/s
[info] Iteration   1: 13681.113 ops/s
[info]                  ·gc.alloc.rate:               1238.907 MB/sec
[info]                  ·gc.alloc.rate.norm:          142496.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1287.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 148083.391 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 13793.834 ops/s
[info]                  ·gc.alloc.rate:                   1227.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              140019.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          965.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110170.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.375 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 13691.212 ops/s
[info]                  ·gc.alloc.rate:                   1227.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              141073.591 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148702.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.393 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 13755.640 ops/s
[info]                  ·gc.alloc.rate:                   1230.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              140772.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149295.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.382 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 13755.651 ops/s
[info]                  ·gc.alloc.rate:               1223.977 MB/sec
[info]                  ·gc.alloc.rate.norm:          140019.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112989.818 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala":
[info]   13735.490 ±(99.9%) 184.006 ops/s [Average]
[info]   (min, avg, max) = (13681.113, 13735.490, 13793.834), stdev = 47.786
[info]   CI (99.9%): [13551.484, 13919.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1229.753 ±(99.9%) 21.860 MB/sec [Average]
[info]   (min, avg, max) = (1223.977, 1229.753, 1238.907), stdev = 5.677
[info]   CI (99.9%): [1207.894, 1251.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   140876.205 ±(99.9%) 3918.548 B/op [Average]
[info]   (min, avg, max) = (140019.159, 140876.205, 142496.130), stdev = 1017.634
[info]   CI (99.9%): [136957.657, 144794.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1168.068 ±(99.9%) 673.802 MB/sec [Average]
[info]   (min, avg, max) = (965.704, 1168.068, 1305.451), stdev = 174.984
[info]   CI (99.9%): [494.265, 1841.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   133848.413 ±(99.9%) 78387.649 B/op [Average]
[info]   (min, avg, max) = (110170.405, 133848.413, 149295.762), stdev = 20357.024
[info]   CI (99.9%): [55460.763, 212236.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.430 ±(99.9%) 5.026 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.430, 2.393), stdev = 1.305
[info]   CI (99.9%): [≈ 0, 6.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.47% complete, ETA 00:50:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85692.217 ops/s
[info] # Warmup Iteration   2: 196993.876 ops/s
[info] # Warmup Iteration   3: 239254.316 ops/s
[info] Iteration   1: 322995.837 ops/s
[info]                  ·gc.alloc.rate:                   1925.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              9367.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1888.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9188.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.913 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.441 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Iteration   2: 326899.888 ops/s
[info]                  ·gc.alloc.rate:                   1932.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              9305.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1583.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7621.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.282 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.246 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 328958.484 ops/s
[info]                  ·gc.alloc.rate:                   1965.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              9405.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2199.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10524.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.834 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.777 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 328923.871 ops/s
[info]                  ·gc.alloc.rate:                   1978.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              9466.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1903.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9106.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.398 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 321115.653 ops/s
[info]                  ·gc.alloc.rate:                   1921.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              9417.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7902.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala":
[info]   325778.747 ±(99.9%) 13715.608 ops/s [Average]
[info]   (min, avg, max) = (321115.653, 325778.747, 328958.484), stdev = 3561.900
[info]   CI (99.9%): [312063.139, 339494.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1944.802 ±(99.9%) 98.782 MB/sec [Average]
[info]   (min, avg, max) = (1921.542, 1944.802, 1978.455), stdev = 25.653
[info]   CI (99.9%): [1846.019, 2043.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   9392.446 ±(99.9%) 232.478 B/op [Average]
[info]   (min, avg, max) = (9305.131, 9392.446, 9466.766), stdev = 60.374
[info]   CI (99.9%): [9159.967, 9624.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1837.446 ±(99.9%) 969.577 MB/sec [Average]
[info]   (min, avg, max) = (1583.082, 1837.446, 2199.849), stdev = 251.796
[info]   CI (99.9%): [867.870, 2807.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   8868.887 ±(99.9%) 4469.640 B/op [Average]
[info]   (min, avg, max) = (7621.780, 8868.887, 10524.960), stdev = 1160.751
[info]   CI (99.9%): [4399.247, 13338.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.831 ±(99.9%) 9.988 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.831, 6.282), stdev = 2.594
[info]   CI (99.9%): [≈ 0, 11.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.813 ±(99.9%) 48.071 B/op [Average]
[info]   (min, avg, max) = (0.204, 8.813, 30.246), stdev = 12.484
[info]   CI (99.9%): [≈ 0, 56.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time":
[info]   82.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 16.400, 35.000), stdev = 11.589
[info]   CI (99.9%): [82.000, 82.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 44.71% complete, ETA 00:50:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 335.626 ops/s
[info] # Warmup Iteration   2: 6002.924 ops/s
[info] # Warmup Iteration   3: 10608.493 ops/s
[info] Iteration   1: 13392.986 ops/s
[info]                  ·gc.alloc.rate:                   1552.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              182379.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     190756.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.435 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 521.191 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 13634.194 ops/s
[info]                  ·gc.alloc.rate:                   1572.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              181493.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149565.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.270 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 13666.465 ops/s
[info]                  ·gc.alloc.rate:                   1592.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              183337.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     187125.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.353 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 13655.972 ops/s
[info]                  ·gc.alloc.rate:                   1571.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              181155.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     188517.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.597 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 13656.149 ops/s
[info]                  ·gc.alloc.rate:                   1563.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              180156.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     152077.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.399 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson":
[info]   13601.153 ±(99.9%) 450.379 ops/s [Average]
[info]   (min, avg, max) = (13392.986, 13601.153, 13666.465), stdev = 116.962
[info]   CI (99.9%): [13150.774, 14051.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1570.395 ±(99.9%) 57.185 MB/sec [Average]
[info]   (min, avg, max) = (1552.075, 1570.395, 1592.516), stdev = 14.851
[info]   CI (99.9%): [1513.209, 1627.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   181704.595 ±(99.9%) 4662.958 B/op [Average]
[info]   (min, avg, max) = (180156.495, 181704.595, 183337.628), stdev = 1210.955
[info]   CI (99.9%): [177041.637, 186367.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1499.962 ±(99.9%) 677.029 MB/sec [Average]
[info]   (min, avg, max) = (1295.715, 1499.962, 1635.732), stdev = 175.822
[info]   CI (99.9%): [822.933, 2176.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   173608.724 ±(99.9%) 80327.349 B/op [Average]
[info]   (min, avg, max) = (149565.879, 173608.724, 190756.921), stdev = 20860.757
[info]   CI (99.9%): [93281.376, 253936.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.070 ±(99.9%) 7.279 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.070, 4.435), stdev = 1.890
[info]   CI (99.9%): [≈ 0, 8.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   125.362 ±(99.9%) 856.033 B/op [Average]
[info]   (min, avg, max) = (2.399, 125.362, 521.191), stdev = 222.309
[info]   CI (99.9%): [≈ 0, 981.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 14.000), stdev = 2.950
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.94% complete, ETA 00:50:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4777.978 ops/s
[info] # Warmup Iteration   2: 24547.886 ops/s
[info] # Warmup Iteration   3: 34216.845 ops/s
[info] Iteration   1: 36361.361 ops/s
[info]                  ·gc.alloc.rate:                   1450.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              62776.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1284.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55588.829 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.119 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 32515.923 ops/s
[info]                  ·gc.alloc.rate:                   1772.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              85739.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1934.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93601.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.617 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.246 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 34406.132 ops/s
[info]                  ·gc.alloc.rate:                   1761.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              80527.221 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1611.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73666.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.254 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 285.956 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 34059.507 ops/s
[info]                  ·gc.alloc.rate:                   1532.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              70813.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1577.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72877.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.868 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 132.524 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   5: 35587.059 ops/s
[info]                  ·gc.alloc.rate:                   1408.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              62308.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1239.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54797.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.683 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce":
[info]   34585.996 ±(99.9%) 5694.785 ops/s [Average]
[info]   (min, avg, max) = (32515.923, 34585.996, 36361.361), stdev = 1478.918
[info]   CI (99.9%): [28891.211, 40280.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1585.018 ±(99.9%) 661.355 MB/sec [Average]
[info]   (min, avg, max) = (1408.897, 1585.018, 1772.254), stdev = 171.752
[info]   CI (99.9%): [923.663, 2246.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   72432.867 ±(99.9%) 40429.803 B/op [Average]
[info]   (min, avg, max) = (62308.248, 72432.867, 85739.069), stdev = 10499.492
[info]   CI (99.9%): [32003.064, 112862.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1529.269 ±(99.9%) 1085.133 MB/sec [Average]
[info]   (min, avg, max) = (1239.065, 1529.269, 1934.774), stdev = 281.806
[info]   CI (99.9%): [444.136, 2614.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   70106.364 ±(99.9%) 61414.407 B/op [Average]
[info]   (min, avg, max) = (54797.465, 70106.364, 93601.554), stdev = 15949.126
[info]   CI (99.9%): [8691.957, 131520.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2.244 ±(99.9%) 9.616 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 2.244, 6.254), stdev = 2.497
[info]   CI (99.9%): [≈ 0, 11.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   103.506 ±(99.9%) 439.866 B/op [Average]
[info]   (min, avg, max) = (3.683, 103.506, 285.956), stdev = 114.232
[info]   CI (99.9%): [≈ 0, 543.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time":
[info]   91.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 18.200, 29.000), stdev = 7.155
[info]   CI (99.9%): [91.000, 91.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.18% complete, ETA 00:49:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14839.021 ops/s
[info] # Warmup Iteration   2: 95640.547 ops/s
[info] # Warmup Iteration   3: 76412.831 ops/s
[info] Iteration   1: 124375.546 ops/s
[info]                  ·gc.alloc.rate:                   2335.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              29557.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2273.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28765.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.054 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 129149.959 ops/s
[info]                  ·gc.alloc.rate:                   2436.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              29689.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28067.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.776 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 131152.464 ops/s
[info]                  ·gc.alloc.rate:               2465.627 MB/sec
[info]                  ·gc.alloc.rate.norm:          29588.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2333.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27998.639 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 129110.574 ops/s
[info]                  ·gc.alloc.rate:                   2456.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              29932.434 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2686.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32728.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.013 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 131011.455 ops/s
[info]                  ·gc.alloc.rate:                   2484.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              29845.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2366.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28429.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala":
[info]   128959.999 ±(99.9%) 10561.464 ops/s [Average]
[info]   (min, avg, max) = (124375.546, 128959.999, 131152.464), stdev = 2742.779
[info]   CI (99.9%): [118398.535, 139521.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2435.852 ±(99.9%) 225.153 MB/sec [Average]
[info]   (min, avg, max) = (2335.920, 2435.852, 2484.394), stdev = 58.471
[info]   CI (99.9%): [2210.700, 2661.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   29722.644 ±(99.9%) 624.663 B/op [Average]
[info]   (min, avg, max) = (29557.899, 29722.644, 29932.434), stdev = 162.223
[info]   CI (99.9%): [29097.981, 30347.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2392.543 ±(99.9%) 646.624 MB/sec [Average]
[info]   (min, avg, max) = (2273.323, 2392.543, 2686.486), stdev = 167.926
[info]   CI (99.9%): [1745.919, 3039.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   29197.867 ±(99.9%) 7691.486 B/op [Average]
[info]   (min, avg, max) = (27998.639, 29197.867, 32728.488), stdev = 1997.455
[info]   CI (99.9%): [21506.381, 36889.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.222 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.146), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.819 ±(99.9%) 2.725 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.819, 1.776), stdev = 0.708
[info]   CI (99.9%): [≈ 0, 3.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.200, 12.000), stdev = 1.095
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.41% complete, ETA 00:49:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 290978.309 ops/s
[info] # Warmup Iteration   2: 750090.506 ops/s
[info] # Warmup Iteration   3: 851389.247 ops/s
[info] Iteration   1: 860001.479 ops/s
[info]                  ·gc.alloc.rate:                   1211.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              2217.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1811.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 863317.743 ops/s
[info]                  ·gc.alloc.rate:                   1228.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              2238.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2408.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.303 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 869694.501 ops/s
[info]                  ·gc.alloc.rate:                   1220.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              2208.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1785.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.206 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 863957.522 ops/s
[info]                  ·gc.alloc.rate:                   1224.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              2230.648 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2388.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 867983.782 ops/s
[info]                  ·gc.alloc.rate:               1236.986 MB/sec
[info]                  ·gc.alloc.rate.norm:          2242.926 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2381.944 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala":
[info]   864991.006 ±(99.9%) 14893.938 ops/s [Average]
[info]   (min, avg, max) = (860001.479, 864991.006, 869694.501), stdev = 3867.908
[info]   CI (99.9%): [850097.068, 879884.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1224.339 ±(99.9%) 36.089 MB/sec [Average]
[info]   (min, avg, max) = (1211.748, 1224.339, 1236.986), stdev = 9.372
[info]   CI (99.9%): [1188.249, 1260.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2227.542 ±(99.9%) 56.346 B/op [Average]
[info]   (min, avg, max) = (2208.180, 2227.542, 2242.926), stdev = 14.633
[info]   CI (99.9%): [2171.196, 2283.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1184.500 ±(99.9%) 689.803 MB/sec [Average]
[info]   (min, avg, max) = (986.528, 1184.500, 1321.203), stdev = 179.140
[info]   CI (99.9%): [494.697, 1874.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2155.061 ±(99.9%) 1254.559 B/op [Average]
[info]   (min, avg, max) = (1785.349, 2155.061, 2408.202), stdev = 325.805
[info]   CI (99.9%): [900.503, 3409.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.810 ±(99.9%) 5.470 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.810, 3.303), stdev = 1.420
[info]   CI (99.9%): [≈ 0, 6.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.475 ±(99.9%) 9.971 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.475, 6.020), stdev = 2.589
[info]   CI (99.9%): [≈ 0, 11.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 12.000), stdev = 3.362
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 45.65% complete, ETA 00:49:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 604244.101 ops/s
[info] # Warmup Iteration   2: 880930.729 ops/s
[info] # Warmup Iteration   3: 982311.549 ops/s
[info] Iteration   1: 982253.229 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 982118.760 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 945576.884 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 981998.345 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 982144.399 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   974818.323 ±(99.9%) 62945.370 ops/s [Average]
[info]   (min, avg, max) = (945576.884, 974818.323, 982253.229), stdev = 16346.713
[info]   CI (99.9%): [911872.953, 1037763.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 45.88% complete, ETA 00:49:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14028.648 ops/s
[info] # Warmup Iteration   2: 78259.209 ops/s
[info] # Warmup Iteration   3: 98890.189 ops/s
[info] Iteration   1: 121615.142 ops/s
[info]                  ·gc.alloc.rate:                   2727.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              35291.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2610.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33785.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.877 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.289 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 121145.452 ops/s
[info]                  ·gc.alloc.rate:                   2722.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              35362.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2626.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34119.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.811 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 122208.851 ops/s
[info]                  ·gc.alloc.rate:                   2764.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              35603.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2658.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34241.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.268 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 123947.575 ops/s
[info]                  ·gc.alloc.rate:                   2762.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              35067.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2686.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34103.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.529 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 122422.728 ops/s
[info]                  ·gc.alloc.rate:                   2773.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              35651.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2702.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34744.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.803 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson":
[info]   122267.950 ±(99.9%) 4099.964 ops/s [Average]
[info]   (min, avg, max) = (121145.452, 122267.950, 123947.575), stdev = 1064.748
[info]   CI (99.9%): [118167.985, 126367.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2749.984 ±(99.9%) 89.801 MB/sec [Average]
[info]   (min, avg, max) = (2722.723, 2749.984, 2773.191), stdev = 23.321
[info]   CI (99.9%): [2660.182, 2839.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   35395.398 ±(99.9%) 920.667 B/op [Average]
[info]   (min, avg, max) = (35067.306, 35395.398, 35651.576), stdev = 239.094
[info]   CI (99.9%): [34474.731, 36316.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2657.105 ±(99.9%) 149.094 MB/sec [Average]
[info]   (min, avg, max) = (2610.698, 2657.105, 2702.605), stdev = 38.719
[info]   CI (99.9%): [2508.011, 2806.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   34198.816 ±(99.9%) 1341.173 B/op [Average]
[info]   (min, avg, max) = (33785.820, 34198.816, 34744.143), stdev = 348.298
[info]   CI (99.9%): [32857.643, 35539.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.413 ±(99.9%) 3.152 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.413, 1.877), stdev = 0.819
[info]   CI (99.9%): [≈ 0, 3.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.340 ±(99.9%) 40.799 B/op [Average]
[info]   (min, avg, max) = (0.268, 5.340, 24.289), stdev = 10.595
[info]   CI (99.9%): [≈ 0, 46.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.800, 13.000), stdev = 1.095
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 46.12% complete, ETA 00:48:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4538.285 ops/s
[info] # Warmup Iteration   2: 10224.885 ops/s
[info] # Warmup Iteration   3: 18786.355 ops/s
[info] Iteration   1: 19055.853 ops/s
[info]                  ·gc.alloc.rate:                   972.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              80346.448 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80655.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.719 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 17776.574 ops/s
[info]                  ·gc.alloc.rate:                   1105.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              97829.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86693.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.843 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 18220.761 ops/s
[info]                  ·gc.alloc.rate:                   924.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              79810.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          964.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83310.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.378 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.639 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 17982.522 ops/s
[info]                  ·gc.alloc.rate:                   1094.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              95739.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          961.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84126.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87.678 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 17669.630 ops/s
[info]                  ·gc.alloc.rate:                   1255.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              111816.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1279.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113983.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.584 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 408.306 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce":
[info]   18141.068 ±(99.9%) 2129.575 ops/s [Average]
[info]   (min, avg, max) = (17669.630, 18141.068, 19055.853), stdev = 553.044
[info]   CI (99.9%): [16011.493, 20270.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate":
[info]   1070.294 ±(99.9%) 498.051 MB/sec [Average]
[info]   (min, avg, max) = (924.028, 1070.294, 1255.427), stdev = 129.342
[info]   CI (99.9%): [572.243, 1568.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   93108.369 ±(99.9%) 51622.996 B/op [Average]
[info]   (min, avg, max) = (79810.105, 93108.369, 111816.637), stdev = 13406.328
[info]   CI (99.9%): [41485.373, 144731.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1032.315 ±(99.9%) 533.447 MB/sec [Average]
[info]   (min, avg, max) = (961.321, 1032.315, 1279.754), stdev = 138.534
[info]   CI (99.9%): [498.868, 1565.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   89753.829 ±(99.9%) 52811.473 B/op [Average]
[info]   (min, avg, max) = (80655.460, 89753.829, 113983.392), stdev = 13714.972
[info]   CI (99.9%): [36942.356, 142565.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.201 ±(99.9%) 7.444 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.201, 4.584), stdev = 1.933
[info]   CI (99.9%): [≈ 0, 8.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   106.437 ±(99.9%) 663.689 B/op [Average]
[info]   (min, avg, max) = (1.719, 106.437, 408.306), stdev = 172.358
[info]   CI (99.9%): [≈ 0, 770.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.time":
[info]   85.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 17.000, 21.000), stdev = 3.082
[info]   CI (99.9%): [85.000, 85.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.35% complete, ETA 00:48:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4853.115 ops/s
[info] # Warmup Iteration   2: 11304.892 ops/s
[info] # Warmup Iteration   3: 18837.987 ops/s
[info] Iteration   1: 19115.998 ops/s
[info]                  ·gc.alloc.rate:                   799.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              65800.277 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79853.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.428 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 17843.239 ops/s
[info]                  ·gc.alloc.rate:               1101.297 MB/sec
[info]                  ·gc.alloc.rate.norm:          97140.299 B/op
[info]                  ·gc.churn.PS_Eden_Space:      971.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 85726.347 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   3: 19338.507 ops/s
[info]                  ·gc.alloc.rate:                   805.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              65560.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79208.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.072 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 168.627 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 18458.011 ops/s
[info]                  ·gc.alloc.rate:                   1111.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              94706.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83093.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.775 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 17179.935 ops/s
[info]                  ·gc.alloc.rate:                   1122.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              102761.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89095.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.619 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 514.511 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala":
[info]   18387.138 ±(99.9%) 3441.175 ops/s [Average]
[info]   (min, avg, max) = (17179.935, 18387.138, 19338.507), stdev = 893.662
[info]   CI (99.9%): [14945.963, 21828.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   987.951 ±(99.9%) 652.686 MB/sec [Average]
[info]   (min, avg, max) = (799.244, 987.951, 1122.313), stdev = 169.500
[info]   CI (99.9%): [335.265, 1640.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   85194.010 ±(99.9%) 69509.383 B/op [Average]
[info]   (min, avg, max) = (65560.980, 85194.010, 102761.945), stdev = 18051.366
[info]   CI (99.9%): [15684.627, 154703.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   972.649 ±(99.9%) 7.175 MB/sec [Average]
[info]   (min, avg, max) = (969.947, 972.649, 974.947), stdev = 1.863
[info]   CI (99.9%): [965.474, 979.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   83395.386 ±(99.9%) 15886.460 B/op [Average]
[info]   (min, avg, max) = (79208.393, 83395.386, 89095.092), stdev = 4125.663
[info]   CI (99.9%): [67508.926, 99281.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.551 ±(99.9%) 9.402 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.551, 5.619), stdev = 2.442
[info]   CI (99.9%): [≈ 0, 10.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   137.668 ±(99.9%) 857.598 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 137.668, 514.511), stdev = 222.716
[info]   CI (99.9%): [≈ 0, 995.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 12.000), stdev = 1.140
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.59% complete, ETA 00:48:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59491.378 ops/s
[info] # Warmup Iteration   2: 144004.664 ops/s
[info] # Warmup Iteration   3: 156307.866 ops/s
[info] Iteration   1: 164741.408 ops/s
[info]                  ·gc.alloc.rate:                   418.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              3996.291 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3073.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.443 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.789 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 163759.159 ops/s
[info]                  ·gc.alloc.rate:                   423.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              4065.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6184.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.400 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 161525.509 ops/s
[info]                  ·gc.alloc.rate:               413.318 MB/sec
[info]                  ·gc.alloc.rate.norm:          4025.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3135.193 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 162572.017 ops/s
[info]                  ·gc.alloc.rate:               416.021 MB/sec
[info]                  ·gc.alloc.rate.norm:          4027.539 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3114.889 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 164220.263 ops/s
[info]                  ·gc.alloc.rate:                   423.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              4060.639 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3083.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala":
[info]   163363.672 ±(99.9%) 5018.364 ops/s [Average]
[info]   (min, avg, max) = (161525.509, 163363.672, 164741.408), stdev = 1303.253
[info]   CI (99.9%): [158345.308, 168382.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   418.882 ±(99.9%) 17.219 MB/sec [Average]
[info]   (min, avg, max) = (413.318, 418.882, 423.699), stdev = 4.472
[info]   CI (99.9%): [401.663, 436.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4034.988 ±(99.9%) 109.018 B/op [Average]
[info]   (min, avg, max) = (3996.291, 4034.988, 4065.051), stdev = 28.312
[info]   CI (99.9%): [3925.970, 4144.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   386.165 ±(99.9%) 554.231 MB/sec [Average]
[info]   (min, avg, max) = (321.749, 386.165, 643.638), stdev = 143.932
[info]   CI (99.9%): [≈ 0, 940.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3718.468 ±(99.9%) 5309.674 B/op [Average]
[info]   (min, avg, max) = (3073.939, 3718.468, 6184.740), stdev = 1378.905
[info]   CI (99.9%): [≈ 0, 9028.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.298 ±(99.9%) 2.468 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.298, 1.443), stdev = 0.641
[info]   CI (99.9%): [≈ 0, 2.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.843 ±(99.9%) 23.572 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.843, 13.789), stdev = 6.121
[info]   CI (99.9%): [≈ 0, 26.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 8.000), stdev = 1.949
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 46.82% complete, ETA 00:48:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1655.896 ops/s
[info] # Warmup Iteration   2: 8904.941 ops/s
[info] # Warmup Iteration   3: 17255.626 ops/s
[info] Iteration   1: 16791.905 ops/s
[info]                  ·gc.alloc.rate:                        1121.417 MB/sec
[info]                  ·gc.alloc.rate.norm:                   105090.236 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.027 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 2.535 B/op
[info]                  ·gc.churn.Metaspace:                   0.074 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              6.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1201.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          112627.844 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  3.268 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             306.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           5.493 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      514.732 B/op
[info]                  ·gc.count:                             5.000 counts
[info]                  ·gc.time:                              44.000 ms
[info] Iteration   2: 17405.924 ops/s
[info]                  ·gc.alloc.rate:                   1419.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              128266.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1272.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115049.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.882 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 17921.271 ops/s
[info]                  ·gc.alloc.rate:                   1222.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              107360.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1275.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     111994.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 17089.246 ops/s
[info]                  ·gc.alloc.rate:                   1171.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              107892.512 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1286.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118464.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.917 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 16855.812 ops/s
[info]                  ·gc.alloc.rate:                   1330.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              124224.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121190.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 392.669 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson":
[info]   17212.832 ±(99.9%) 1784.521 ops/s [Average]
[info]   (min, avg, max) = (16791.905, 17212.832, 17921.271), stdev = 463.434
[info]   CI (99.9%): [15428.311, 18997.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1253.067 ±(99.9%) 465.524 MB/sec [Average]
[info]   (min, avg, max) = (1121.417, 1253.067, 1419.102), stdev = 120.895
[info]   CI (99.9%): [787.544, 1718.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   114566.957 ±(99.9%) 41617.039 B/op [Average]
[info]   (min, avg, max) = (105090.236, 114566.957, 128266.924), stdev = 10807.813
[info]   CI (99.9%): [72949.918, 156183.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space":
[info]   0.005 ±(99.9%) 0.047 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.027), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space.norm":
[info]   0.507 ±(99.9%) 4.365 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.507, 2.535), stdev = 1.133
[info]   CI (99.9%): [≈ 0, 4.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.Metaspace":
[info]   0.015 ±(99.9%) 0.128 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.074), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.Metaspace.norm":
[info]   1.388 ±(99.9%) 11.949 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.388, 6.939), stdev = 3.103
[info]   CI (99.9%): [≈ 0, 13.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1266.922 ±(99.9%) 145.189 MB/sec [Average]
[info]   (min, avg, max) = (1201.851, 1266.922, 1298.009), stdev = 37.705
[info]   CI (99.9%): [1121.733, 1412.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   115865.377 ±(99.9%) 15067.532 B/op [Average]
[info]   (min, avg, max) = (111994.352, 115865.377, 121190.482), stdev = 3912.990
[info]   CI (99.9%): [100797.845, 130932.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen":
[info]   0.654 ±(99.9%) 5.629 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.654, 3.268), stdev = 1.462
[info]   CI (99.9%): [≈ 0, 6.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen.norm":
[info]   61.259 ±(99.9%) 527.459 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 61.259, 306.295), stdev = 136.979
[info]   CI (99.9%): [≈ 0, 588.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.069 ±(99.9%) 9.972 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.069, 5.493), stdev = 2.590
[info]   CI (99.9%): [≈ 0, 12.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   192.843 ±(99.9%) 935.345 B/op [Average]
[info]   (min, avg, max) = (1.882, 192.843, 514.732), stdev = 242.906
[info]   CI (99.9%): [≈ 0, 1128.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 14.000, 44.000), stdev = 16.793
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 47.06% complete, ETA 00:48:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10457.381 ops/s
[info] # Warmup Iteration   2: 52363.983 ops/s
[info] # Warmup Iteration   3: 56702.972 ops/s
[info] Iteration   1: 60835.052 ops/s
[info]                  ·gc.alloc.rate:                   1864.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              48221.471 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42290.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.537 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 246.685 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 65715.074 ops/s
[info]                  ·gc.alloc.rate:                   1892.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              45319.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46539.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.490 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 65292.212 ops/s
[info]                  ·gc.alloc.rate:                   1877.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              45236.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46996.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.509 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 65072.045 ops/s
[info]                  ·gc.alloc.rate:                   1867.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              45162.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39723.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.007 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 64241.259 ops/s
[info]                  ·gc.alloc.rate:                   1871.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              45849.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1989.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48732.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.510 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce":
[info]   64231.129 ±(99.9%) 7596.748 ops/s [Average]
[info]   (min, avg, max) = (60835.052, 64231.129, 65715.074), stdev = 1972.851
[info]   CI (99.9%): [56634.381, 71827.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1874.475 ±(99.9%) 42.669 MB/sec [Average]
[info]   (min, avg, max) = (1864.247, 1874.475, 1892.306), stdev = 11.081
[info]   CI (99.9%): [1831.807, 1917.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   45958.021 ±(99.9%) 4981.665 B/op [Average]
[info]   (min, avg, max) = (45162.951, 45958.021, 48221.471), stdev = 1293.723
[info]   CI (99.9%): [40976.355, 50939.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1831.967 ±(99.9%) 682.871 MB/sec [Average]
[info]   (min, avg, max) = (1634.954, 1831.967, 1989.080), stdev = 177.339
[info]   CI (99.9%): [1149.096, 2514.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   44856.532 ±(99.9%) 14325.708 B/op [Average]
[info]   (min, avg, max) = (39723.792, 44856.532, 48732.264), stdev = 3720.341
[info]   CI (99.9%): [30530.824, 59182.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.970 ±(99.9%) 16.290 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.970, 9.537), stdev = 4.230
[info]   CI (99.9%): [≈ 0, 18.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   50.840 ±(99.9%) 421.595 B/op [Average]
[info]   (min, avg, max) = (0.510, 50.840, 246.685), stdev = 109.487
[info]   CI (99.9%): [≈ 0, 472.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.200, 18.000), stdev = 4.438
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.29% complete, ETA 00:47:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31148.060 ops/s
[info] # Warmup Iteration   2: 74846.418 ops/s
[info] # Warmup Iteration   3: 95755.172 ops/s
[info] Iteration   1: 99104.864 ops/s
[info]                  ·gc.alloc.rate:                   1900.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              30190.273 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25892.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.492 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.702 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 100944.525 ops/s
[info]                  ·gc.alloc.rate:                   1917.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              29904.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30681.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.570 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 99140.875 ops/s
[info]                  ·gc.alloc.rate:               1889.169 MB/sec
[info]                  ·gc.alloc.rate.norm:          29987.478 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1979.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31428.305 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 100234.297 ops/s
[info]                  ·gc.alloc.rate:                   1923.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              30199.759 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26112.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.327 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 97729.840 ops/s
[info]                  ·gc.alloc.rate:                   1889.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              30429.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32365.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.670 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala":
[info]   99430.880 ±(99.9%) 4724.117 ops/s [Average]
[info]   (min, avg, max) = (97729.840, 99430.880, 100944.525), stdev = 1226.838
[info]   CI (99.9%): [94706.764, 104154.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1904.198 ±(99.9%) 61.057 MB/sec [Average]
[info]   (min, avg, max) = (1889.169, 1904.198, 1923.439), stdev = 15.856
[info]   CI (99.9%): [1843.141, 1965.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   30142.286 ±(99.9%) 791.064 B/op [Average]
[info]   (min, avg, max) = (29904.254, 30142.286, 30429.665), stdev = 205.437
[info]   CI (99.9%): [29351.222, 30933.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1850.192 ±(99.9%) 719.685 MB/sec [Average]
[info]   (min, avg, max) = (1629.990, 1850.192, 2010.086), stdev = 186.900
[info]   CI (99.9%): [1130.507, 2569.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   29296.055 ±(99.9%) 11807.065 B/op [Average]
[info]   (min, avg, max) = (25892.529, 29296.055, 32365.708), stdev = 3066.257
[info]   CI (99.9%): [17488.990, 41103.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.357 ±(99.9%) 2.469 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.357, 1.492), stdev = 0.641
[info]   CI (99.9%): [≈ 0, 2.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.654 ±(99.9%) 39.234 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.654, 23.702), stdev = 10.189
[info]   CI (99.9%): [≈ 0, 44.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 10.000), stdev = 1.095
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.53% complete, ETA 00:47:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 161508.946 ops/s
[info] # Warmup Iteration   2: 305360.468 ops/s
[info] # Warmup Iteration   3: 343278.003 ops/s
[info] Iteration   1: 347531.065 ops/s
[info]                  ·gc.alloc.rate:                   683.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              3092.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2974.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 344897.750 ops/s
[info]                  ·gc.alloc.rate:                   676.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              3084.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3003.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 347340.277 ops/s
[info]                  ·gc.alloc.rate:               686.889 MB/sec
[info]                  ·gc.alloc.rate.norm:          3112.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2982.116 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 343287.996 ops/s
[info]                  ·gc.alloc.rate:               680.834 MB/sec
[info]                  ·gc.alloc.rate.norm:          3121.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3023.514 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 346628.860 ops/s
[info]                  ·gc.alloc.rate:                   685.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              3114.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2994.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.330 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala":
[info]   345937.190 ±(99.9%) 6964.814 ops/s [Average]
[info]   (min, avg, max) = (343287.996, 345937.190, 347531.065), stdev = 1808.740
[info]   CI (99.9%): [338972.376, 352902.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   682.553 ±(99.9%) 16.687 MB/sec [Average]
[info]   (min, avg, max) = (676.068, 682.553, 686.889), stdev = 4.334
[info]   CI (99.9%): [665.867, 699.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3105.026 ±(99.9%) 60.327 B/op [Average]
[info]   (min, avg, max) = (3084.251, 3105.026, 3121.369), stdev = 15.667
[info]   CI (99.9%): [3044.699, 3165.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   658.479 ±(99.9%) 4.141 MB/sec [Average]
[info]   (min, avg, max) = (656.943, 658.479, 659.522), stdev = 1.075
[info]   CI (99.9%): [654.338, 662.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2995.570 ±(99.9%) 73.735 B/op [Average]
[info]   (min, avg, max) = (2974.495, 2995.570, 3023.514), stdev = 19.149
[info]   CI (99.9%): [2921.835, 3069.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.683 ±(99.9%) 5.699 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.683, 3.330), stdev = 1.480
[info]   CI (99.9%): [≈ 0, 6.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.099 ±(99.9%) 25.875 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.099, 15.119), stdev = 6.720
[info]   CI (99.9%): [≈ 0, 28.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 8.000), stdev = 0.837
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 47.76% complete, ETA 00:47:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 100184.937 ops/s
[info] # Warmup Iteration   2: 356131.306 ops/s
[info] # Warmup Iteration   3: 385331.278 ops/s
[info] Iteration   1: 385702.202 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 385526.959 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 385658.120 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 386478.644 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 386686.051 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc":
[info]   386010.395 ±(99.9%) 2045.340 ops/s [Average]
[info]   (min, avg, max) = (385526.959, 386010.395, 386686.051), stdev = 531.168
[info]   CI (99.9%): [383965.055, 388055.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 48.00% complete, ETA 00:47:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13405.675 ops/s
[info] # Warmup Iteration   2: 56323.561 ops/s
[info] # Warmup Iteration   3: 64687.982 ops/s
[info] Iteration   1: 82224.692 ops/s
[info]                  ·gc.alloc.rate:                   1991.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              38126.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1937.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37078.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 159.521 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 88307.917 ops/s
[info]                  ·gc.alloc.rate:                   1847.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              32921.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1927.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34346.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.081 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 88734.932 ops/s
[info]                  ·gc.alloc.rate:                   1847.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              32760.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1940.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34418.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.477 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 89672.909 ops/s
[info]                  ·gc.alloc.rate:                   1862.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              32681.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28744.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.096 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 88943.978 ops/s
[info]                  ·gc.alloc.rate:                   1881.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              33278.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35173.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.368 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson":
[info]   87576.886 ±(99.9%) 11676.996 ops/s [Average]
[info]   (min, avg, max) = (82224.692, 87576.886, 89672.909), stdev = 3032.479
[info]   CI (99.9%): [75899.890, 99253.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1885.934 ±(99.9%) 234.506 MB/sec [Average]
[info]   (min, avg, max) = (1847.036, 1885.934, 1991.902), stdev = 60.901
[info]   CI (99.9%): [1651.428, 2120.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   33953.778 ±(99.9%) 9025.792 B/op [Average]
[info]   (min, avg, max) = (32681.435, 33953.778, 38126.631), stdev = 2343.969
[info]   CI (99.9%): [24927.986, 42979.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1886.239 ±(99.9%) 542.653 MB/sec [Average]
[info]   (min, avg, max) = (1637.759, 1886.239, 1988.646), stdev = 140.925
[info]   CI (99.9%): [1343.587, 2428.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   33952.462 ±(99.9%) 11986.796 B/op [Average]
[info]   (min, avg, max) = (28744.526, 33952.462, 37078.918), stdev = 3112.933
[info]   CI (99.9%): [21965.666, 45939.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.746 ±(99.9%) 14.185 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.746, 8.334), stdev = 3.684
[info]   CI (99.9%): [≈ 0, 15.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   33.309 ±(99.9%) 271.734 B/op [Average]
[info]   (min, avg, max) = (0.368, 33.309, 159.521), stdev = 70.568
[info]   CI (99.9%): [≈ 0, 305.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.600, 18.000), stdev = 4.159
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 48.24% complete, ETA 00:47:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25614.020 ops/s
[info] # Warmup Iteration   2: 169365.052 ops/s
[info] # Warmup Iteration   3: 176448.061 ops/s
[info] Iteration   1: 217902.941 ops/s
[info]                  ·gc.alloc.rate:                   2799.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              20224.269 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2588.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18696.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.909 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 215346.062 ops/s
[info]                  ·gc.alloc.rate:                   2749.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              20096.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2614.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19104.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 219347.050 ops/s
[info]                  ·gc.alloc.rate:                   2846.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              20420.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2653.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19033.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 218517.511 ops/s
[info]                  ·gc.alloc.rate:                   2857.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              20578.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3019.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21748.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.750 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 218448.594 ops/s
[info]                  ·gc.alloc.rate:                   2839.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              20453.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2703.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19471.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce":
[info]   217912.432 ±(99.9%) 5870.831 ops/s [Average]
[info]   (min, avg, max) = (215346.062, 217912.432, 219347.050), stdev = 1524.636
[info]   CI (99.9%): [212041.600, 223783.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate":
[info]   2818.636 ±(99.9%) 169.995 MB/sec [Average]
[info]   (min, avg, max) = (2749.802, 2818.636, 2857.255), stdev = 44.147
[info]   CI (99.9%): [2648.641, 2988.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20354.677 ±(99.9%) 740.763 B/op [Average]
[info]   (min, avg, max) = (20096.383, 20354.677, 20578.802), stdev = 192.374
[info]   CI (99.9%): [19613.914, 21095.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2715.735 ±(99.9%) 675.170 MB/sec [Average]
[info]   (min, avg, max) = (2588.522, 2715.735, 3019.672), stdev = 175.339
[info]   CI (99.9%): [2040.565, 3390.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19610.882 ±(99.9%) 4721.784 B/op [Average]
[info]   (min, avg, max) = (18696.992, 19610.882, 21748.577), stdev = 1226.232
[info]   CI (99.9%): [14889.098, 24332.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.142 ±(99.9%) 0.871 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.142, 0.541), stdev = 0.226
[info]   CI (99.9%): [≈ 0, 1.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.022 ±(99.9%) 6.295 B/op [Average]
[info]   (min, avg, max) = (0.149, 1.022, 3.909), stdev = 1.635
[info]   CI (99.9%): [≈ 0, 7.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.400, 13.000), stdev = 1.140
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 48.47% complete, ETA 00:46:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.827 ops/s
[info] # Warmup Iteration   2: 711578.216 ops/s
[info] # Warmup Iteration   3: 792717.342 ops/s
[info] Iteration   1: 833277.436 ops/s
[info]                  ·gc.alloc.rate:                   469.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              886.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     613.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 815691.631 ops/s
[info]                  ·gc.alloc.rate:                   465.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              897.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1254.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 826926.715 ops/s
[info]                  ·gc.alloc.rate:               467.904 MB/sec
[info]                  ·gc.alloc.rate.norm:          890.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 618.732 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 822836.469 ops/s
[info]                  ·gc.alloc.rate:                   476.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              911.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1244.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 826652.238 ops/s
[info]                  ·gc.alloc.rate:                   472.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              898.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     619.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava":
[info]   825076.898 ±(99.9%) 24825.091 ops/s [Average]
[info]   (min, avg, max) = (815691.631, 825076.898, 833277.436), stdev = 6446.997
[info]   CI (99.9%): [800251.807, 849901.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   470.238 ±(99.9%) 16.415 MB/sec [Average]
[info]   (min, avg, max) = (465.263, 470.238, 476.449), stdev = 4.263
[info]   CI (99.9%): [453.823, 486.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   896.945 ±(99.9%) 36.490 B/op [Average]
[info]   (min, avg, max) = (886.602, 896.945, 911.342), stdev = 9.476
[info]   CI (99.9%): [860.455, 933.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   455.280 ±(99.9%) 685.655 MB/sec [Average]
[info]   (min, avg, max) = (325.110, 455.280, 650.489), stdev = 178.062
[info]   CI (99.9%): [≈ 0, 1140.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   870.197 ±(99.9%) 1332.869 B/op [Average]
[info]   (min, avg, max) = (613.985, 870.197, 1254.456), stdev = 346.142
[info]   CI (99.9%): [≈ 0, 2203.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.016 ±(99.9%) 0.048 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.034), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.091 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.031, 0.064), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 9.000), stdev = 2.302
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.71% complete, ETA 00:46:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77318.937 ops/s
[info] # Warmup Iteration   2: 325876.798 ops/s
[info] # Warmup Iteration   3: 399416.499 ops/s
[info] Iteration   1: 380520.137 ops/s
[info]                  ·gc.alloc.rate:                   335.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              1389.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1330.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 380164.313 ops/s
[info]                  ·gc.alloc.rate:               340.237 MB/sec
[info]                  ·gc.alloc.rate.norm:          1408.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1332.028 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 381719.784 ops/s
[info]                  ·gc.alloc.rate:                   342.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              1412.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1326.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 382797.517 ops/s
[info]                  ·gc.alloc.rate:                   344.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              1414.758 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1325.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 402679.364 ops/s
[info]                  ·gc.alloc.rate:               369.424 MB/sec
[info]                  ·gc.alloc.rate.norm:          1443.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1260.186 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala":
[info]   385576.223 ±(99.9%) 37032.482 ops/s [Average]
[info]   (min, avg, max) = (380164.313, 385576.223, 402679.364), stdev = 9617.218
[info]   CI (99.9%): [348543.741, 422608.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   346.451 ±(99.9%) 50.883 MB/sec [Average]
[info]   (min, avg, max) = (335.874, 346.451, 369.424), stdev = 13.214
[info]   CI (99.9%): [295.568, 397.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1413.633 ±(99.9%) 75.630 B/op [Average]
[info]   (min, avg, max) = (1389.282, 1413.633, 1443.904), stdev = 19.641
[info]   CI (99.9%): [1338.003, 1489.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   322.057 ±(99.9%) 1.282 MB/sec [Average]
[info]   (min, avg, max) = (321.731, 322.057, 322.420), stdev = 0.333
[info]   CI (99.9%): [320.775, 323.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1315.032 ±(99.9%) 118.524 B/op [Average]
[info]   (min, avg, max) = (1260.186, 1315.032, 1332.028), stdev = 30.780
[info]   CI (99.9%): [1196.508, 1433.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.103 ±(99.9%) 0.432 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.103, 0.258), stdev = 0.112
[info]   CI (99.9%): [≈ 0, 0.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.94% complete, ETA 00:46:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 331985.531 ops/s
[info] # Warmup Iteration   2: 1040379.665 ops/s
[info] # Warmup Iteration   3: 1085521.046 ops/s
[info] Iteration   1: 1091536.881 ops/s
[info]                  ·gc.alloc.rate:               384.440 MB/sec
[info]                  ·gc.alloc.rate.norm:          554.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 472.562 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1098112.519 ops/s
[info]                  ·gc.alloc.rate:                   385.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     469.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1097888.333 ops/s
[info]                  ·gc.alloc.rate:                   389.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              557.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     470.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1094568.696 ops/s
[info]                  ·gc.alloc.rate:                   398.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              573.213 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     944.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1065344.165 ops/s
[info]                  ·gc.alloc.rate:               426.222 MB/sec
[info]                  ·gc.alloc.rate.norm:          629.671 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 485.661 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala":
[info]   1089490.119 ±(99.9%) 53003.525 ops/s [Average]
[info]   (min, avg, max) = (1065344.165, 1089490.119, 1098112.519), stdev = 13764.847
[info]   CI (99.9%): [1036486.594, 1142493.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   396.739 ±(99.9%) 67.038 MB/sec [Average]
[info]   (min, avg, max) = (384.440, 396.739, 426.222), stdev = 17.410
[info]   CI (99.9%): [329.700, 463.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   573.446 ±(99.9%) 125.087 B/op [Average]
[info]   (min, avg, max) = (552.314, 573.446, 629.671), stdev = 32.485
[info]   CI (99.9%): [448.358, 698.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   393.951 ±(99.9%) 566.447 MB/sec [Average]
[info]   (min, avg, max) = (327.723, 393.951, 657.098), stdev = 147.105
[info]   CI (99.9%): [≈ 0, 960.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   568.738 ±(99.9%) 810.167 B/op [Average]
[info]   (min, avg, max) = (469.739, 568.738, 944.934), stdev = 210.398
[info]   CI (99.9%): [≈ 0, 1378.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.037 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.018), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.026), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 7.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 49.18% complete, ETA 00:46:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6148.255 ops/s
[info] # Warmup Iteration   2: 76657.927 ops/s
[info] # Warmup Iteration   3: 103398.823 ops/s
[info] Iteration   1: 119557.586 ops/s
[info]                  ·gc.alloc.rate:                   3965.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              52192.171 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3953.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52028.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.646 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.495 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 116687.053 ops/s
[info]                  ·gc.alloc.rate:                   3893.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              52520.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3672.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49540.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.842 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 120588.090 ops/s
[info]                  ·gc.alloc.rate:                   4043.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              52767.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4049.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52844.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.543 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 119488.491 ops/s
[info]                  ·gc.alloc.rate:                   3992.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              52577.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3732.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49153.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.097 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   5: 120469.050 ops/s
[info]                  ·gc.alloc.rate:                   4025.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              52588.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3739.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48848.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.272 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson":
[info]   119358.054 ±(99.9%) 6069.613 ops/s [Average]
[info]   (min, avg, max) = (116687.053, 119358.054, 120588.090), stdev = 1576.259
[info]   CI (99.9%): [113288.441, 125427.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3984.109 ±(99.9%) 225.680 MB/sec [Average]
[info]   (min, avg, max) = (3893.899, 3984.109, 4043.183), stdev = 58.608
[info]   CI (99.9%): [3758.429, 4209.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52529.405 ±(99.9%) 808.711 B/op [Average]
[info]   (min, avg, max) = (52192.171, 52529.405, 52767.738), stdev = 210.020
[info]   CI (99.9%): [51720.694, 53338.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3829.343 ±(99.9%) 625.924 MB/sec [Average]
[info]   (min, avg, max) = (3672.932, 3829.343, 4049.054), stdev = 162.550
[info]   CI (99.9%): [3203.419, 4455.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50483.029 ±(99.9%) 7018.776 B/op [Average]
[info]   (min, avg, max) = (48848.897, 50483.029, 52844.357), stdev = 1822.754
[info]   CI (99.9%): [43464.252, 57501.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.171 ±(99.9%) 1.026 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.171, 0.646), stdev = 0.266
[info]   CI (99.9%): [≈ 0, 1.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.250 ±(99.9%) 13.496 B/op [Average]
[info]   (min, avg, max) = (0.272, 2.250, 8.495), stdev = 3.505
[info]   CI (99.9%): [≈ 0, 15.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.count":
[info]   57.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.400, 12.000), stdev = 0.548
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.time":
[info]   82.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 16.400, 18.000), stdev = 1.342
[info]   CI (99.9%): [82.000, 82.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 49.41% complete, ETA 00:45:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64345.983 ops/s
[info] # Warmup Iteration   2: 259950.000 ops/s
[info] # Warmup Iteration   3: 303817.976 ops/s
[info] Iteration   1: 304343.615 ops/s
[info]                  ·gc.alloc.rate:                   1788.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              9245.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8458.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.216 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.799 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 311520.023 ops/s
[info]                  ·gc.alloc.rate:                   1829.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              9242.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1948.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9840.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.325 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.696 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 305513.419 ops/s
[info]                  ·gc.alloc.rate:                   1806.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              9306.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8368.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 311442.036 ops/s
[info]                  ·gc.alloc.rate:                   1860.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              9402.550 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9930.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 308698.056 ops/s
[info]                  ·gc.alloc.rate:                   1833.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              9346.260 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8434.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce":
[info]   308303.430 ±(99.9%) 12744.605 ops/s [Average]
[info]   (min, avg, max) = (304343.615, 308303.430, 311520.023), stdev = 3309.734
[info]   CI (99.9%): [295558.825, 321048.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1823.834 ±(99.9%) 106.458 MB/sec [Average]
[info]   (min, avg, max) = (1788.236, 1823.834, 1860.995), stdev = 27.647
[info]   CI (99.9%): [1717.376, 1930.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   9308.713 ±(99.9%) 262.194 B/op [Average]
[info]   (min, avg, max) = (9242.642, 9308.713, 9402.550), stdev = 68.091
[info]   CI (99.9%): [9046.520, 9570.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1765.781 ±(99.9%) 673.121 MB/sec [Average]
[info]   (min, avg, max) = (1624.766, 1765.781, 1965.526), stdev = 174.807
[info]   CI (99.9%): [1092.660, 2438.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9006.593 ±(99.9%) 3094.963 B/op [Average]
[info]   (min, avg, max) = (8368.059, 9006.593, 9930.685), stdev = 803.752
[info]   CI (99.9%): [5911.630, 12101.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.133 ±(99.9%) 6.973 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.133, 4.216), stdev = 1.811
[info]   CI (99.9%): [≈ 0, 8.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.826 ±(99.9%) 36.044 B/op [Average]
[info]   (min, avg, max) = (0.106, 5.826, 21.799), stdev = 9.361
[info]   CI (99.9%): [≈ 0, 41.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 16.000), stdev = 3.962
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 49.65% complete, ETA 00:45:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.789 ops/s
[info] # Warmup Iteration   2: 1329473.483 ops/s
[info] # Warmup Iteration   3: 1962690.899 ops/s
[info] Iteration   1: 1804341.390 ops/s
[info]                  ·gc.alloc.rate:                   669.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              583.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     565.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2011019.869 ops/s
[info]                  ·gc.alloc.rate:                   701.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     508.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2014695.645 ops/s
[info]                  ·gc.alloc.rate:               707.636 MB/sec
[info]                  ·gc.alloc.rate.norm:          552.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 508.432 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 2024554.524 ops/s
[info]                  ·gc.alloc.rate:                   711.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     506.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2015020.765 ops/s
[info]                  ·gc.alloc.rate:                   702.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              548.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     509.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.181 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava":
[info]   1973926.439 ±(99.9%) 365553.120 ops/s [Average]
[info]   (min, avg, max) = (1804341.390, 1973926.439, 2024554.524), stdev = 94932.984
[info]   CI (99.9%): [1608373.319, 2339479.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   698.569 ±(99.9%) 63.961 MB/sec [Average]
[info]   (min, avg, max) = (669.623, 698.569, 711.041), stdev = 16.611
[info]   CI (99.9%): [634.608, 762.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   557.484 ±(99.9%) 57.474 B/op [Average]
[info]   (min, avg, max) = (548.802, 557.484, 583.966), stdev = 14.926
[info]   CI (99.9%): [500.010, 614.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   650.920 ±(99.9%) 5.732 MB/sec [Average]
[info]   (min, avg, max) = (648.978, 650.920, 652.994), stdev = 1.489
[info]   CI (99.9%): [645.188, 656.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   519.921 ±(99.9%) 99.224 B/op [Average]
[info]   (min, avg, max) = (506.452, 519.921, 565.962), stdev = 25.768
[info]   CI (99.9%): [420.697, 619.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.834 ±(99.9%) 6.972 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.834, 4.073), stdev = 1.811
[info]   CI (99.9%): [≈ 0, 7.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.652 ±(99.9%) 5.443 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.652, 3.181), stdev = 1.414
[info]   CI (99.9%): [≈ 0, 6.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.88% complete, ETA 00:45:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 391154.982 ops/s
[info] # Warmup Iteration   2: 1774750.545 ops/s
[info] # Warmup Iteration   3: 1848691.713 ops/s
[info] Iteration   1: 1855631.725 ops/s
[info]                  ·gc.alloc.rate:                   649.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     551.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1774656.850 ops/s
[info]                  ·gc.alloc.rate:               663.797 MB/sec
[info]                  ·gc.alloc.rate.norm:          588.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 577.795 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   3: 1778784.954 ops/s
[info]                  ·gc.alloc.rate:                   629.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              556.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     577.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1803999.677 ops/s
[info]                  ·gc.alloc.rate:                   638.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              556.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     568.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1793100.446 ops/s
[info]                  ·gc.alloc.rate:                   620.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              544.288 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     287.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.427 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala":
[info]   1801234.730 ±(99.9%) 125415.489 ops/s [Average]
[info]   (min, avg, max) = (1774656.850, 1801234.730, 1855631.725), stdev = 32570.004
[info]   CI (99.9%): [1675819.241, 1926650.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   640.119 ±(99.9%) 65.658 MB/sec [Average]
[info]   (min, avg, max) = (620.217, 640.119, 663.797), stdev = 17.051
[info]   CI (99.9%): [574.461, 705.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   559.208 ±(99.9%) 66.325 B/op [Average]
[info]   (min, avg, max) = (544.288, 559.208, 588.693), stdev = 17.224
[info]   CI (99.9%): [492.883, 625.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   586.865 ±(99.9%) 558.410 MB/sec [Average]
[info]   (min, avg, max) = (327.455, 586.865, 652.828), stdev = 145.017
[info]   CI (99.9%): [28.456, 1145.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   512.459 ±(99.9%) 486.283 B/op [Average]
[info]   (min, avg, max) = (287.367, 512.459, 577.795), stdev = 126.286
[info]   CI (99.9%): [26.177, 998.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.702 ±(99.9%) 5.867 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.702, 3.427), stdev = 1.524
[info]   CI (99.9%): [≈ 0, 6.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.616 ±(99.9%) 5.149 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.616, 3.008), stdev = 1.337
[info]   CI (99.9%): [≈ 0, 5.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 9.000), stdev = 1.949
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.12% complete, ETA 00:45:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1013667.103 ops/s
[info] # Warmup Iteration   2: 2081375.860 ops/s
[info] # Warmup Iteration   3: 2154487.898 ops/s
[info] Iteration   1: 2189041.669 ops/s
[info]                  ·gc.alloc.rate:                   775.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              557.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     708.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 2157387.146 ops/s
[info]                  ·gc.alloc.rate:                   759.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     480.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2081417.144 ops/s
[info]                  ·gc.alloc.rate:                   789.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              596.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     498.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2187192.248 ops/s
[info]                  ·gc.alloc.rate:                   807.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              580.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     712.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.344 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.406 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2275599.311 ops/s
[info]                  ·gc.alloc.rate:                   794.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.829 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     454.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.461 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala":
[info]   2178127.503 ±(99.9%) 268753.829 ops/s [Average]
[info]   (min, avg, max) = (2081417.144, 2178127.503, 2275599.311), stdev = 69794.516
[info]   CI (99.9%): [1909373.674, 2446881.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   785.329 ±(99.9%) 70.576 MB/sec [Average]
[info]   (min, avg, max) = (759.696, 785.329, 807.123), stdev = 18.328
[info]   CI (99.9%): [714.754, 855.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   567.803 ±(99.9%) 77.627 B/op [Average]
[info]   (min, avg, max) = (549.829, 567.803, 596.803), stdev = 20.159
[info]   CI (99.9%): [490.176, 645.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   790.127 ±(99.9%) 695.295 MB/sec [Average]
[info]   (min, avg, max) = (656.817, 790.127, 989.918), stdev = 180.566
[info]   CI (99.9%): [94.832, 1485.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   570.857 ±(99.9%) 494.899 B/op [Average]
[info]   (min, avg, max) = (454.288, 570.857, 712.308), stdev = 128.524
[info]   CI (99.9%): [75.958, 1065.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.812 ±(99.9%) 5.557 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 0.812, 3.344), stdev = 1.443
[info]   CI (99.9%): [≈ 0, 6.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.581 ±(99.9%) 4.000 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.581, 2.406), stdev = 1.039
[info]   CI (99.9%): [≈ 0, 4.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 9.000), stdev = 2.449
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 50.35% complete, ETA 00:45:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1187208.582 ops/s
[info] # Warmup Iteration   2: 2091469.172 ops/s
[info] # Warmup Iteration   3: 2419060.871 ops/s
[info] Iteration   1: 2397240.154 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2351324.189 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2328688.081 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2351832.263 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2356827.533 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc":
[info]   2357182.444 ±(99.9%) 95872.885 ops/s [Average]
[info]   (min, avg, max) = (2328688.081, 2357182.444, 2397240.154), stdev = 24897.884
[info]   CI (99.9%): [2261309.559, 2453055.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 50.59% complete, ETA 00:44:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3565.333 ops/s
[info] # Warmup Iteration   2: 25159.716 ops/s
[info] # Warmup Iteration   3: 43990.462 ops/s
[info] Iteration   1: 44764.796 ops/s
[info]                  ·gc.alloc.rate:                   1918.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              67443.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1945.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68400.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107.311 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 42046.653 ops/s
[info]                  ·gc.alloc.rate:                   2074.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              77642.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72759.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.881 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 145.255 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   3: 47479.385 ops/s
[info]                  ·gc.alloc.rate:                   1874.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              62139.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64100.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.920 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96.801 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   4: 47569.498 ops/s
[info]                  ·gc.alloc.rate:                   1857.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              61467.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1613.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53378.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.105 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 47603.051 ops/s
[info]                  ·gc.alloc.rate:                   1882.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              62239.470 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1939.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64112.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.540 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83.969 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson":
[info]   45892.677 ±(99.9%) 9494.545 ops/s [Average]
[info]   (min, avg, max) = (42046.653, 45892.677, 47603.051), stdev = 2465.703
[info]   CI (99.9%): [36398.131, 55387.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1921.506 ±(99.9%) 339.645 MB/sec [Average]
[info]   (min, avg, max) = (1857.805, 1921.506, 2074.265), stdev = 88.205
[info]   CI (99.9%): [1581.861, 2261.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   66186.353 ±(99.9%) 26331.013 B/op [Average]
[info]   (min, avg, max) = (61467.472, 66186.353, 77642.194), stdev = 6838.080
[info]   CI (99.9%): [39855.341, 92517.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1875.132 ±(99.9%) 563.826 MB/sec [Average]
[info]   (min, avg, max) = (1613.328, 1875.132, 1945.551), stdev = 146.424
[info]   CI (99.9%): [1311.307, 2438.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   64550.405 ±(99.9%) 27728.031 B/op [Average]
[info]   (min, avg, max) = (53378.685, 64550.405, 72759.251), stdev = 7200.882
[info]   CI (99.9%): [36822.374, 92278.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.624 ±(99.9%) 4.495 MB/sec [Average]
[info]   (min, avg, max) = (0.729, 2.624, 3.881), stdev = 1.167
[info]   CI (99.9%): [≈ 0, 7.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   91.488 ±(99.9%) 169.674 B/op [Average]
[info]   (min, avg, max) = (24.105, 91.488, 145.255), stdev = 44.064
[info]   CI (99.9%): [≈ 0, 261.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.time":
[info]   99.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 19.800, 28.000), stdev = 7.362
[info]   CI (99.9%): [99.000, 99.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 50.82% complete, ETA 00:44:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3710.519 ops/s
[info] # Warmup Iteration   2: 11560.859 ops/s
[info] # Warmup Iteration   3: 11481.375 ops/s
[info] Iteration   1: 17832.652 ops/s
[info]                  ·gc.alloc.rate:                   2053.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              181276.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172607.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      23.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2050.205 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 17786.806 ops/s
[info]                  ·gc.alloc.rate:                   2180.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              192971.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177532.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.210 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 18355.757 ops/s
[info]                  ·gc.alloc.rate:                   2072.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              177657.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2118.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     181625.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.330 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 18504.972 ops/s
[info]                  ·gc.alloc.rate:               2090.680 MB/sec
[info]                  ·gc.alloc.rate.norm:          177817.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1895.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 161184.284 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   5: 16993.570 ops/s
[info]                  ·gc.alloc.rate:               2278.766 MB/sec
[info]                  ·gc.alloc.rate.norm:          211035.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2272.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 210430.825 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce":
[info]   17894.752 ±(99.9%) 2288.245 ops/s [Average]
[info]   (min, avg, max) = (16993.570, 17894.752, 18504.972), stdev = 594.250
[info]   CI (99.9%): [15606.507, 20182.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate":
[info]   2135.247 ±(99.9%) 361.715 MB/sec [Average]
[info]   (min, avg, max) = (2053.841, 2135.247, 2278.766), stdev = 93.936
[info]   CI (99.9%): [1773.532, 2496.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   188151.614 ±(99.9%) 54832.920 B/op [Average]
[info]   (min, avg, max) = (177657.576, 188151.614, 211035.653), stdev = 14239.935
[info]   CI (99.9%): [133318.694, 242984.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2049.544 ±(99.9%) 573.877 MB/sec [Average]
[info]   (min, avg, max) = (1895.121, 2049.544, 2272.235), stdev = 149.034
[info]   CI (99.9%): [1475.668, 2623.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   180676.216 ±(99.9%) 70509.016 B/op [Average]
[info]   (min, avg, max) = (161184.284, 180676.216, 210430.825), stdev = 18310.968
[info]   CI (99.9%): [110167.200, 251185.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   4.796 ±(99.9%) 39.692 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 4.796, 23.229), stdev = 10.308
[info]   CI (99.9%): [≈ 0, 44.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   422.949 ±(99.9%) 3503.906 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 422.949, 2050.205), stdev = 909.953
[info]   CI (99.9%): [≈ 0, 3926.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 13.200, 17.000), stdev = 3.493
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.06% complete, ETA 00:44:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18640.365 ops/s
[info] # Warmup Iteration   2: 88390.390 ops/s
[info] # Warmup Iteration   3: 99179.597 ops/s
[info] Iteration   1: 108045.006 ops/s
[info]                  ·gc.alloc.rate:                   1192.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              17368.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14186.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.056 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 107932.163 ops/s
[info]                  ·gc.alloc.rate:                   1201.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              17519.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18999.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.114 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.245 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 108160.410 ops/s
[info]                  ·gc.alloc.rate:                   1188.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              17292.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14259.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.120 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 107806.569 ops/s
[info]                  ·gc.alloc.rate:                   1187.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              17338.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19148.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 105145.811 ops/s
[info]                  ·gc.alloc.rate:                   1151.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              17233.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14812.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.312 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala":
[info]   107417.992 ±(99.9%) 4917.117 ops/s [Average]
[info]   (min, avg, max) = (105145.811, 107417.992, 108160.410), stdev = 1276.960
[info]   CI (99.9%): [102500.875, 112335.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1184.244 ±(99.9%) 73.820 MB/sec [Average]
[info]   (min, avg, max) = (1151.385, 1184.244, 1201.436), stdev = 19.171
[info]   CI (99.9%): [1110.424, 1258.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   17350.574 ±(99.9%) 412.553 B/op [Average]
[info]   (min, avg, max) = (17233.642, 17350.574, 17519.147), stdev = 107.139
[info]   CI (99.9%): [16938.021, 17763.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1111.591 ±(99.9%) 688.315 MB/sec [Average]
[info]   (min, avg, max) = (973.884, 1111.591, 1311.581), stdev = 178.753
[info]   CI (99.9%): [423.275, 1799.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   16281.041 ±(99.9%) 9863.810 B/op [Average]
[info]   (min, avg, max) = (14186.074, 16281.041, 19148.121), stdev = 2561.600
[info]   CI (99.9%): [6417.232, 26144.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.275 ±(99.9%) 1.817 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.275, 1.114), stdev = 0.472
[info]   CI (99.9%): [≈ 0, 2.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.007 ±(99.9%) 26.497 B/op [Average]
[info]   (min, avg, max) = (0.304, 4.007, 16.245), stdev = 6.881
[info]   CI (99.9%): [≈ 0, 30.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.517
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.29% complete, ETA 00:44:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 118806.560 ops/s
[info] # Warmup Iteration   2: 228651.781 ops/s
[info] # Warmup Iteration   3: 263722.441 ops/s
[info] Iteration   1: 264212.545 ops/s
[info]                  ·gc.alloc.rate:                   887.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              5289.608 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5823.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 265690.534 ops/s
[info]                  ·gc.alloc.rate:               883.996 MB/sec
[info]                  ·gc.alloc.rate.norm:          5236.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3865.112 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 276116.875 ops/s
[info]                  ·gc.alloc.rate:                   925.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              5273.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5588.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.967 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 268001.087 ops/s
[info]                  ·gc.alloc.rate:                   900.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              5286.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5734.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.523 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 269303.082 ops/s
[info]                  ·gc.alloc.rate:                   902.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              5274.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5699.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.365 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala":
[info]   268664.825 ±(99.9%) 17755.829 ops/s [Average]
[info]   (min, avg, max) = (264212.545, 268664.825, 276116.875), stdev = 4611.133
[info]   CI (99.9%): [250908.995, 286420.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   900.084 ±(99.9%) 62.639 MB/sec [Average]
[info]   (min, avg, max) = (883.996, 900.084, 925.501), stdev = 16.267
[info]   CI (99.9%): [837.445, 962.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5272.010 ±(99.9%) 81.478 B/op [Average]
[info]   (min, avg, max) = (5236.386, 5272.010, 5289.608), stdev = 21.159
[info]   CI (99.9%): [5190.532, 5353.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   912.611 ±(99.9%) 559.962 MB/sec [Average]
[info]   (min, avg, max) = (652.500, 912.611, 980.922), stdev = 145.420
[info]   CI (99.9%): [352.648, 1472.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5342.348 ±(99.9%) 3196.242 B/op [Average]
[info]   (min, avg, max) = (3865.112, 5342.348, 5823.174), stdev = 830.054
[info]   CI (99.9%): [2146.106, 8538.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 4.920 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.766, 2.978), stdev = 1.278
[info]   CI (99.9%): [≈ 0, 5.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.396 ±(99.9%) 28.025 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.396, 16.967), stdev = 7.278
[info]   CI (99.9%): [≈ 0, 32.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 11.000), stdev = 2.608
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 51.53% complete, ETA 00:44:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1172.985 ops/s
[info] # Warmup Iteration   2: 10577.483 ops/s
[info] # Warmup Iteration   3: 13543.765 ops/s
[info] Iteration   1: 16743.830 ops/s
[info]                  ·gc.alloc.rate:                   2120.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              199343.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1944.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     182766.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      20.251 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1903.516 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 17036.258 ops/s
[info]                  ·gc.alloc.rate:                   2142.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              197881.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     182619.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.846 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 16840.139 ops/s
[info]                  ·gc.alloc.rate:                   2144.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              200386.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2083.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     194767.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.891 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 16942.671 ops/s
[info]                  ·gc.alloc.rate:                   2174.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              201875.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2192.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     203576.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.735 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 15666.719 ops/s
[info]                  ·gc.alloc.rate:                   2260.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              227095.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2267.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227730.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.091 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson":
[info]   16645.923 ±(99.9%) 2149.618 ops/s [Average]
[info]   (min, avg, max) = (15666.719, 16645.923, 17036.258), stdev = 558.249
[info]   CI (99.9%): [14496.306, 18795.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2168.361 ±(99.9%) 211.839 MB/sec [Average]
[info]   (min, avg, max) = (2120.737, 2168.361, 2260.719), stdev = 55.014
[info]   CI (99.9%): [1956.521, 2380.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   205316.382 ±(99.9%) 47215.626 B/op [Average]
[info]   (min, avg, max) = (197881.937, 205316.382, 227095.006), stdev = 12261.748
[info]   CI (99.9%): [158100.755, 252532.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2092.950 ±(99.9%) 530.102 MB/sec [Average]
[info]   (min, avg, max) = (1944.381, 2092.950, 2267.042), stdev = 137.666
[info]   CI (99.9%): [1562.848, 2623.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   198292.119 ±(99.9%) 71874.874 B/op [Average]
[info]   (min, avg, max) = (182619.243, 198292.119, 227730.176), stdev = 18665.677
[info]   CI (99.9%): [126417.245, 270166.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   4.088 ±(99.9%) 34.792 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 4.088, 20.251), stdev = 9.035
[info]   CI (99.9%): [≈ 0, 38.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   384.216 ±(99.9%) 3270.418 B/op [Average]
[info]   (min, avg, max) = (2.091, 384.216, 1903.516), stdev = 849.317
[info]   CI (99.9%): [≈ 0, 3654.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.time":
[info]   76.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 15.200, 27.000), stdev = 6.797
[info]   CI (99.9%): [76.000, 76.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 51.76% complete, ETA 00:43:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9304.677 ops/s
[info] # Warmup Iteration   2: 35479.468 ops/s
[info] # Warmup Iteration   3: 41182.238 ops/s
[info] Iteration   1: 36020.299 ops/s
[info]                  ·gc.alloc.rate:                   3105.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              135683.465 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2941.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128499.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.886 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 42999.596 ops/s
[info]                  ·gc.alloc.rate:                   3373.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              123469.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3318.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121444.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.120 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 42698.741 ops/s
[info]                  ·gc.alloc.rate:                   3347.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              123373.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3355.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123650.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.069 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 43041.114 ops/s
[info]                  ·gc.alloc.rate:                   3397.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              124224.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3040.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     111195.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.522 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 42930.942 ops/s
[info]                  ·gc.alloc.rate:                   3404.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              124798.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3392.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124374.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.526 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce":
[info]   41538.138 ±(99.9%) 11888.493 ops/s [Average]
[info]   (min, avg, max) = (36020.299, 41538.138, 43041.114), stdev = 3087.404
[info]   CI (99.9%): [29649.645, 53426.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate":
[info]   3325.524 ±(99.9%) 481.360 MB/sec [Average]
[info]   (min, avg, max) = (3105.469, 3325.524, 3404.207), stdev = 125.008
[info]   CI (99.9%): [2844.164, 3806.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   126309.602 ±(99.9%) 20302.277 B/op [Average]
[info]   (min, avg, max) = (123373.035, 126309.602, 135683.465), stdev = 5272.437
[info]   CI (99.9%): [106007.325, 146611.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   3209.516 ±(99.9%) 786.888 MB/sec [Average]
[info]   (min, avg, max) = (2941.053, 3209.516, 3392.653), stdev = 204.352
[info]   CI (99.9%): [2422.628, 3996.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   121832.997 ±(99.9%) 24918.947 B/op [Average]
[info]   (min, avg, max) = (111195.629, 121832.997, 128499.821), stdev = 6471.371
[info]   CI (99.9%): [96914.050, 146751.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.355 ±(99.9%) 1.672 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.355, 1.004), stdev = 0.434
[info]   CI (99.9%): [≈ 0, 2.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   14.425 ±(99.9%) 71.754 B/op [Average]
[info]   (min, avg, max) = (1.522, 14.425, 43.886), stdev = 18.634
[info]   CI (99.9%): [≈ 0, 86.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.000, 15.000), stdev = 1.000
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.00% complete, ETA 00:43:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35567.888 ops/s
[info] # Warmup Iteration   2: 120685.630 ops/s
[info] # Warmup Iteration   3: 129677.332 ops/s
[info] Iteration   1: 143949.073 ops/s
[info]                  ·gc.alloc.rate:                   1985.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              21713.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17876.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.869 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 143785.224 ops/s
[info]                  ·gc.alloc.rate:                   1990.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              21783.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21663.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.962 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 145168.133 ops/s
[info]                  ·gc.alloc.rate:                   2000.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              21684.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21652.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.677 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 143707.980 ops/s
[info]                  ·gc.alloc.rate:                   2007.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              21981.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2011.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22025.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.456 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 143069.593 ops/s
[info]                  ·gc.alloc.rate:                   2005.546 MB/sec
[info]                  ·gc.alloc.rate.norm:              22062.141 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22248.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.229 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala":
[info]   143936.001 ±(99.9%) 2947.511 ops/s [Average]
[info]   (min, avg, max) = (143069.593, 143936.001, 145168.133), stdev = 765.459
[info]   CI (99.9%): [140988.490, 146883.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1997.759 ±(99.9%) 36.080 MB/sec [Average]
[info]   (min, avg, max) = (1985.872, 1997.759, 2007.006), stdev = 9.370
[info]   CI (99.9%): [1961.680, 2033.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   21844.994 ±(99.9%) 646.390 B/op [Average]
[info]   (min, avg, max) = (21684.535, 21844.994, 22062.141), stdev = 167.865
[info]   CI (99.9%): [21198.604, 22491.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1929.006 ±(99.9%) 635.892 MB/sec [Average]
[info]   (min, avg, max) = (1635.011, 1929.006, 2022.505), stdev = 165.139
[info]   CI (99.9%): [1293.114, 2564.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   21093.529 ±(99.9%) 6991.848 B/op [Average]
[info]   (min, avg, max) = (17876.848, 21093.529, 22248.695), stdev = 1815.761
[info]   CI (99.9%): [14101.681, 28085.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.150 ±(99.9%) 0.585 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.150, 0.354), stdev = 0.152
[info]   CI (99.9%): [≈ 0, 0.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.639 ±(99.9%) 6.397 B/op [Average]
[info]   (min, avg, max) = (0.229, 1.639, 3.869), stdev = 1.661
[info]   CI (99.9%): [≈ 0, 8.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.24% complete, ETA 00:43:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 135185.039 ops/s
[info] # Warmup Iteration   2: 229220.103 ops/s
[info] # Warmup Iteration   3: 250148.143 ops/s
[info] Iteration   1: 250610.394 ops/s
[info]                  ·gc.alloc.rate:                   821.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              5158.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4125.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 246590.406 ops/s
[info]                  ·gc.alloc.rate:               804.018 MB/sec
[info]                  ·gc.alloc.rate.norm:          5129.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4200.835 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 245765.703 ops/s
[info]                  ·gc.alloc.rate:                   808.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              5176.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6330.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 248238.601 ops/s
[info]                  ·gc.alloc.rate:                   826.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              5238.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4177.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.178 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.144 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 251326.425 ops/s
[info]                  ·gc.alloc.rate:                   834.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6165.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.693 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala":
[info]   248506.306 ±(99.9%) 9359.817 ops/s [Average]
[info]   (min, avg, max) = (245765.703, 248506.306, 251326.425), stdev = 2430.715
[info]   CI (99.9%): [239146.488, 257866.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   818.933 ±(99.9%) 48.525 MB/sec [Average]
[info]   (min, avg, max) = (804.018, 818.933, 834.401), stdev = 12.602
[info]   CI (99.9%): [770.408, 867.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5185.546 ±(99.9%) 176.302 B/op [Average]
[info]   (min, avg, max) = (5129.283, 5185.546, 5238.875), stdev = 45.785
[info]   CI (99.9%): [5009.243, 5361.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   789.528 ±(99.9%) 692.968 MB/sec [Average]
[info]   (min, avg, max) = (656.880, 789.528, 988.662), stdev = 179.962
[info]   CI (99.9%): [96.559, 1482.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4999.921 ±(99.9%) 4395.305 B/op [Average]
[info]   (min, avg, max) = (4125.057, 4999.921, 6330.961), stdev = 1141.447
[info]   CI (99.9%): [604.616, 9395.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.798 ±(99.9%) 5.265 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.798, 3.178), stdev = 1.367
[info]   CI (99.9%): [≈ 0, 6.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.046 ±(99.9%) 33.379 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.046, 20.144), stdev = 8.669
[info]   CI (99.9%): [≈ 0, 38.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 2.550
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 52.47% complete, ETA 00:43:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 157763.859 ops/s
[info] # Warmup Iteration   2: 253131.414 ops/s
[info] # Warmup Iteration   3: 277763.149 ops/s
[info] Iteration   1: 277676.493 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 277689.091 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 275191.976 ops/s
[info]                  ·gc.alloc.rate:      8.155 MB/sec
[info]                  ·gc.alloc.rate.norm: 46.638 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 277264.700 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 276898.752 ops/s
[info]                  ·gc.alloc.rate:      4.954 MB/sec
[info]                  ·gc.alloc.rate.norm: 28.156 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc":
[info]   276944.202 ±(99.9%) 3976.706 ops/s [Average]
[info]   (min, avg, max) = (275191.976, 276944.202, 277689.091), stdev = 1032.738
[info]   CI (99.9%): [272967.496, 280920.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2.622 ±(99.9%) 14.493 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.622, 8.155), stdev = 3.764
[info]   CI (99.9%): [≈ 0, 17.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   14.960 ±(99.9%) 82.787 B/op [Average]
[info]   (min, avg, max) = (0.002, 14.960, 46.638), stdev = 21.499
[info]   CI (99.9%): [≈ 0, 97.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 52.71% complete, ETA 00:42:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8270.659 ops/s
[info] # Warmup Iteration   2: 48903.226 ops/s
[info] # Warmup Iteration   3: 54907.505 ops/s
[info] Iteration   1: 57841.635 ops/s
[info]                  ·gc.alloc.rate:                   3863.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              105132.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3939.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107175.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.341 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90.898 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 59424.448 ops/s
[info]                  ·gc.alloc.rate:                   3846.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              101884.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3665.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97077.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.962 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 59501.633 ops/s
[info]                  ·gc.alloc.rate:                   3918.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              103652.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3705.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98008.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.202 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 60148.125 ops/s
[info]                  ·gc.alloc.rate:                   3950.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              103371.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3727.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97537.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.089 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 60332.332 ops/s
[info]                  ·gc.alloc.rate:                   3978.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              103769.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4077.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106360.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.629 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson":
[info]   59449.634 ±(99.9%) 3780.718 ops/s [Average]
[info]   (min, avg, max) = (57841.635, 59449.634, 60332.332), stdev = 981.840
[info]   CI (99.9%): [55668.916, 63230.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   3911.785 ±(99.9%) 215.369 MB/sec [Average]
[info]   (min, avg, max) = (3846.975, 3911.785, 3978.628), stdev = 55.931
[info]   CI (99.9%): [3696.415, 4127.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   103562.116 ±(99.9%) 4460.732 B/op [Average]
[info]   (min, avg, max) = (101884.378, 103562.116, 105132.384), stdev = 1158.438
[info]   CI (99.9%): [99101.384, 108022.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   3823.104 ±(99.9%) 684.044 MB/sec [Average]
[info]   (min, avg, max) = (3665.468, 3823.104, 4077.984), stdev = 177.644
[info]   CI (99.9%): [3139.060, 4507.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   101231.978 ±(99.9%) 19533.823 B/op [Average]
[info]   (min, avg, max) = (97077.302, 101231.978, 107175.846), stdev = 5072.872
[info]   CI (99.9%): [81698.154, 120765.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.743 ±(99.9%) 5.596 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.743, 3.341), stdev = 1.453
[info]   CI (99.9%): [≈ 0, 6.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   20.156 ±(99.9%) 152.385 B/op [Average]
[info]   (min, avg, max) = (1.089, 20.156, 90.898), stdev = 39.574
[info]   CI (99.9%): [≈ 0, 172.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.count":
[info]   57.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.400, 12.000), stdev = 0.548
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.time":
[info]   83.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 16.600, 19.000), stdev = 1.949
[info]   CI (99.9%): [83.000, 83.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 52.94% complete, ETA 00:42:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2910.050 ops/s
[info] # Warmup Iteration   2: 16169.157 ops/s
[info] # Warmup Iteration   3: 28508.099 ops/s
[info] Iteration   1: 41898.247 ops/s
[info]                  ·gc.alloc.rate:                   1994.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              74936.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2138.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80345.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.697 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 476.960 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 40815.973 ops/s
[info]                  ·gc.alloc.rate:                   2232.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              86078.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2160.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83286.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.164 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 38961.734 ops/s
[info]                  ·gc.alloc.rate:                   2223.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              89805.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2216.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89540.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.868 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 317.830 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 39729.546 ops/s
[info]                  ·gc.alloc.rate:                   1694.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              67110.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1603.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63528.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.283 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90.443 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 39958.877 ops/s
[info]                  ·gc.alloc.rate:                   1709.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              67327.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1619.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63797.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.100 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce":
[info]   40272.875 ±(99.9%) 4326.487 ops/s [Average]
[info]   (min, avg, max) = (38961.734, 40272.875, 41898.247), stdev = 1123.575
[info]   CI (99.9%): [35946.389, 44599.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate":
[info]   1970.891 ±(99.9%) 1014.655 MB/sec [Average]
[info]   (min, avg, max) = (1694.164, 1970.891, 2232.791), stdev = 263.503
[info]   CI (99.9%): [956.236, 2985.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   77051.628 ±(99.9%) 40478.318 B/op [Average]
[info]   (min, avg, max) = (67110.035, 77051.628, 89805.117), stdev = 10512.091
[info]   CI (99.9%): [36573.310, 117529.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1947.891 ±(99.9%) 1186.656 MB/sec [Average]
[info]   (min, avg, max) = (1603.759, 1947.891, 2216.622), stdev = 308.171
[info]   CI (99.9%): [761.235, 3134.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   76099.987 ±(99.9%) 45549.608 B/op [Average]
[info]   (min, avg, max) = (63528.870, 76099.987, 89540.807), stdev = 11829.088
[info]   CI (99.9%): [30550.379, 121649.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   5.198 ±(99.9%) 19.490 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 5.198, 12.697), stdev = 5.061
[info]   CI (99.9%): [≈ 0, 24.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   201.299 ±(99.9%) 740.245 B/op [Average]
[info]   (min, avg, max) = (4.100, 201.299, 476.960), stdev = 192.239
[info]   CI (99.9%): [≈ 0, 941.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 7.000), stdev = 1.095
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 13.800, 19.000), stdev = 5.805
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.18% complete, ETA 00:42:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1446.400 ops/s
[info] # Warmup Iteration   2: 25624.089 ops/s
[info] # Warmup Iteration   3: 45090.634 ops/s
[info] Iteration   1: 43790.057 ops/s
[info]                  ·gc.alloc.rate:                   1640.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              58921.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1621.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58272.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.748 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 36270.535 ops/s
[info]                  ·gc.alloc.rate:                   1418.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              61555.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1610.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69866.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.469 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107.115 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   3: 37673.599 ops/s
[info]                  ·gc.alloc.rate:                   1172.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              48998.835 B/op
[info]                  ·gc.churn.PS_Eden_Space:          952.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39794.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.237 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 218.777 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 37117.265 ops/s
[info]                  ·gc.alloc.rate:                   1169.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              49587.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1272.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53975.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.648 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 36576.129 ops/s
[info]                  ·gc.alloc.rate:                   1143.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              49205.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          961.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41362.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.873 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala":
[info]   38285.517 ±(99.9%) 12026.926 ops/s [Average]
[info]   (min, avg, max) = (36270.535, 38285.517, 43790.057), stdev = 3123.354
[info]   CI (99.9%): [26258.591, 50312.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1308.935 ±(99.9%) 832.537 MB/sec [Average]
[info]   (min, avg, max) = (1143.533, 1308.935, 1640.052), stdev = 216.207
[info]   CI (99.9%): [476.398, 2141.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   53653.894 ±(99.9%) 23436.753 B/op [Average]
[info]   (min, avg, max) = (48998.835, 53653.894, 61555.711), stdev = 6086.450
[info]   CI (99.9%): [30217.142, 77090.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1283.809 ±(99.9%) 1269.505 MB/sec [Average]
[info]   (min, avg, max) = (952.569, 1283.809, 1621.992), stdev = 329.686
[info]   CI (99.9%): [14.304, 2553.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   52654.421 ±(99.9%) 48034.355 B/op [Average]
[info]   (min, avg, max) = (39794.684, 52654.421, 69866.525), stdev = 12474.369
[info]   CI (99.9%): [4620.067, 100688.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.683 ±(99.9%) 8.558 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.683, 5.237), stdev = 2.222
[info]   CI (99.9%): [≈ 0, 10.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   71.232 ±(99.9%) 358.630 B/op [Average]
[info]   (min, avg, max) = (0.748, 71.232, 218.777), stdev = 93.135
[info]   CI (99.9%): [≈ 0, 429.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 15.400, 29.000), stdev = 7.765
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.41% complete, ETA 00:42:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 259205.958 ops/s
[info] # Warmup Iteration   2: 589880.756 ops/s
[info] # Warmup Iteration   3: 610326.012 ops/s
[info] Iteration   1: 654804.422 ops/s
[info]                  ·gc.alloc.rate:                   1763.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              4235.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4721.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.714 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 655264.760 ops/s
[info]                  ·gc.alloc.rate:                   1755.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              4215.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3920.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 644941.531 ops/s
[info]                  ·gc.alloc.rate:                   1720.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              4196.310 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3996.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 651356.354 ops/s
[info]                  ·gc.alloc.rate:                   1736.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              4193.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3987.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 659578.551 ops/s
[info]                  ·gc.alloc.rate:                   1776.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              4238.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3969.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala":
[info]   653189.124 ±(99.9%) 21013.728 ops/s [Average]
[info]   (min, avg, max) = (644941.531, 653189.124, 659578.551), stdev = 5457.199
[info]   CI (99.9%): [632175.395, 674202.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1750.269 ±(99.9%) 85.882 MB/sec [Average]
[info]   (min, avg, max) = (1720.063, 1750.269, 1776.269), stdev = 22.303
[info]   CI (99.9%): [1664.387, 1836.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4215.792 ±(99.9%) 81.792 B/op [Average]
[info]   (min, avg, max) = (4193.074, 4215.792, 4238.199), stdev = 21.241
[info]   CI (99.9%): [4134.000, 4297.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1710.220 ±(99.9%) 551.481 MB/sec [Average]
[info]   (min, avg, max) = (1632.471, 1710.220, 1965.496), stdev = 143.218
[info]   CI (99.9%): [1158.740, 2261.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4119.132 ±(99.9%) 1301.114 B/op [Average]
[info]   (min, avg, max) = (3920.120, 4119.132, 4721.256), stdev = 337.895
[info]   CI (99.9%): [2818.017, 5420.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.838 ±(99.9%) 6.902 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.838, 4.044), stdev = 1.793
[info]   CI (99.9%): [≈ 0, 7.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.013 ±(99.9%) 16.580 B/op [Average]
[info]   (min, avg, max) = (0.050, 2.013, 9.714), stdev = 4.306
[info]   CI (99.9%): [≈ 0, 18.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 15.000), stdev = 3.937
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 53.65% complete, ETA 00:42:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 547.707 ops/s
[info] # Warmup Iteration   2: 14306.413 ops/s
[info] # Warmup Iteration   3: 28439.681 ops/s
[info] Iteration   1: 36278.038 ops/s
[info]                  ·gc.alloc.rate:                   2113.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              91685.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1911.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82911.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 174.855 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 34722.896 ops/s
[info]                  ·gc.alloc.rate:                   2242.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              101640.674 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2248.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101883.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.887 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 85.498 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 33516.586 ops/s
[info]                  ·gc.alloc.rate:                   2213.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              103946.944 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2260.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106146.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.517 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 165.133 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 32845.416 ops/s
[info]                  ·gc.alloc.rate:                   2076.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              99505.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1954.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93639.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.658 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 175.287 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 35052.222 ops/s
[info]                  ·gc.alloc.rate:                   2052.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              92177.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88323.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.608 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson":
[info]   34483.032 ±(99.9%) 5173.124 ops/s [Average]
[info]   (min, avg, max) = (32845.416, 34483.032, 36278.038), stdev = 1343.444
[info]   CI (99.9%): [29309.908, 39656.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2139.937 ±(99.9%) 323.931 MB/sec [Average]
[info]   (min, avg, max) = (2052.944, 2139.937, 2242.906), stdev = 84.124
[info]   CI (99.9%): [1816.006, 2463.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   97791.127 ±(99.9%) 21478.735 B/op [Average]
[info]   (min, avg, max) = (91685.095, 97791.127, 103946.944), stdev = 5577.959
[info]   CI (99.9%): [76312.392, 119269.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2068.277 ±(99.9%) 659.261 MB/sec [Average]
[info]   (min, avg, max) = (1911.222, 2068.277, 2260.510), stdev = 171.208
[info]   CI (99.9%): [1409.016, 2727.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   94580.890 ±(99.9%) 36697.626 B/op [Average]
[info]   (min, avg, max) = (82911.601, 94580.890, 106146.307), stdev = 9530.257
[info]   CI (99.9%): [57883.264, 131278.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.643 ±(99.9%) 6.278 MB/sec [Average]
[info]   (min, avg, max) = (0.125, 2.643, 4.031), stdev = 1.630
[info]   CI (99.9%): [≈ 0, 8.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   121.276 ±(99.9%) 287.966 B/op [Average]
[info]   (min, avg, max) = (5.608, 121.276, 175.287), stdev = 74.784
[info]   CI (99.9%): [≈ 0, 409.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time":
[info]   76.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 15.200, 21.000), stdev = 5.310
[info]   CI (99.9%): [76.000, 76.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 53.88% complete, ETA 00:41:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23446.968 ops/s
[info] # Warmup Iteration   2: 79268.416 ops/s
[info] # Warmup Iteration   3: 81234.858 ops/s
[info] Iteration   1: 94970.506 ops/s
[info]                  ·gc.alloc.rate:                   2109.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              34964.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32412.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.603 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.564 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 94447.312 ops/s
[info]                  ·gc.alloc.rate:                   2111.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              35190.450 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2278.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37963.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.428 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 95400.817 ops/s
[info]                  ·gc.alloc.rate:                   2124.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              35039.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32508.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.343 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 94228.118 ops/s
[info]                  ·gc.alloc.rate:                   2125.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              35504.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33255.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.348 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 91883.404 ops/s
[info]                  ·gc.alloc.rate:               2074.290 MB/sec
[info]                  ·gc.alloc.rate.norm:          35522.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2008.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34402.175 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce":
[info]   94186.031 ±(99.9%) 5259.772 ops/s [Average]
[info]   (min, avg, max) = (91883.404, 94186.031, 95400.817), stdev = 1365.946
[info]   CI (99.9%): [88926.259, 99445.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2109.146 ±(99.9%) 79.859 MB/sec [Average]
[info]   (min, avg, max) = (2074.290, 2109.146, 2125.762), stdev = 20.739
[info]   CI (99.9%): [2029.288, 2189.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   35244.391 ±(99.9%) 997.014 B/op [Average]
[info]   (min, avg, max) = (34964.834, 35244.391, 35522.844), stdev = 258.921
[info]   CI (99.9%): [34247.378, 36241.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2040.923 ±(99.9%) 516.665 MB/sec [Average]
[info]   (min, avg, max) = (1955.812, 2040.923, 2278.230), stdev = 134.176
[info]   CI (99.9%): [1524.258, 2557.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   34108.410 ±(99.9%) 8846.996 B/op [Average]
[info]   (min, avg, max) = (32412.317, 34108.410, 37963.731), stdev = 2297.537
[info]   CI (99.9%): [25261.415, 42955.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.358 ±(99.9%) 2.689 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.358, 1.603), stdev = 0.698
[info]   CI (99.9%): [≈ 0, 3.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.937 ±(99.9%) 44.556 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.937, 26.564), stdev = 11.571
[info]   CI (99.9%): [≈ 0, 50.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.400, 11.000), stdev = 1.140
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.12% complete, ETA 00:41:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52413.711 ops/s
[info] # Warmup Iteration   2: 215751.846 ops/s
[info] # Warmup Iteration   3: 220940.623 ops/s
[info] Iteration   1: 243906.782 ops/s
[info]                  ·gc.alloc.rate:                   1689.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              10903.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10540.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.017 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 249861.208 ops/s
[info]                  ·gc.alloc.rate:                   1715.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              10802.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10225.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.672 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 249199.764 ops/s
[info]                  ·gc.alloc.rate:                   1705.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              10769.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12319.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 246817.318 ops/s
[info]                  ·gc.alloc.rate:                   1715.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              10936.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10460.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 249766.414 ops/s
[info]                  ·gc.alloc.rate:                   1735.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              10937.748 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10428.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala":
[info]   247910.297 ±(99.9%) 9843.026 ops/s [Average]
[info]   (min, avg, max) = (243906.782, 247910.297, 249861.208), stdev = 2556.202
[info]   CI (99.9%): [238067.272, 257753.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1712.255 ±(99.9%) 64.804 MB/sec [Average]
[info]   (min, avg, max) = (1689.650, 1712.255, 1735.806), stdev = 16.829
[info]   CI (99.9%): [1647.451, 1777.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   10869.815 ±(99.9%) 302.755 B/op [Average]
[info]   (min, avg, max) = (10769.698, 10869.815, 10937.748), stdev = 78.624
[info]   CI (99.9%): [10567.060, 11172.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1700.687 ±(99.9%) 539.739 MB/sec [Average]
[info]   (min, avg, max) = (1623.608, 1700.687, 1950.585), stdev = 140.169
[info]   CI (99.9%): [1160.948, 2240.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   10794.866 ±(99.9%) 3311.103 B/op [Average]
[info]   (min, avg, max) = (10225.936, 10794.866, 12319.062), stdev = 859.883
[info]   CI (99.9%): [7483.764, 14105.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.971 ±(99.9%) 6.985 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.971, 4.187), stdev = 1.814
[info]   CI (99.9%): [≈ 0, 7.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.243 ±(99.9%) 45.096 B/op [Average]
[info]   (min, avg, max) = (0.131, 6.243, 27.017), stdev = 11.711
[info]   CI (99.9%): [≈ 0, 51.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.600, 18.000), stdev = 4.775
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.35% complete, ETA 00:41:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 640053.684 ops/s
[info] # Warmup Iteration   2: 995504.857 ops/s
[info] # Warmup Iteration   3: 1102712.166 ops/s
[info] Iteration   1: 1112207.934 ops/s
[info]                  ·gc.alloc.rate:                   951.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              1345.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1398.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1109672.384 ops/s
[info]                  ·gc.alloc.rate:                   953.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              1351.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1403.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1091946.612 ops/s
[info]                  ·gc.alloc.rate:                   919.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              1325.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     952.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.621 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1065834.166 ops/s
[info]                  ·gc.alloc.rate:                   968.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              1429.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1453.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.414 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1100772.948 ops/s
[info]                  ·gc.alloc.rate:                   938.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              1341.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1403.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala":
[info]   1096086.809 ±(99.9%) 72007.609 ops/s [Average]
[info]   (min, avg, max) = (1065834.166, 1096086.809, 1112207.934), stdev = 18700.147
[info]   CI (99.9%): [1024079.200, 1168094.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   946.109 ±(99.9%) 70.437 MB/sec [Average]
[info]   (min, avg, max) = (919.733, 946.109, 968.522), stdev = 18.292
[info]   CI (99.9%): [875.672, 1016.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1358.825 ±(99.9%) 156.824 B/op [Average]
[info]   (min, avg, max) = (1325.682, 1358.825, 1429.586), stdev = 40.727
[info]   CI (99.9%): [1202.001, 1515.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   920.989 ±(99.9%) 560.139 MB/sec [Average]
[info]   (min, avg, max) = (660.821, 920.989, 989.259), stdev = 145.466
[info]   CI (99.9%): [360.851, 1481.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1322.269 ±(99.9%) 800.760 B/op [Average]
[info]   (min, avg, max) = (952.492, 1322.269, 1453.851), stdev = 207.955
[info]   CI (99.9%): [521.509, 2123.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.863 ±(99.9%) 5.264 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.863, 3.206), stdev = 1.367
[info]   CI (99.9%): [≈ 0, 6.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.251 ±(99.9%) 7.592 B/op [Average]
[info]   (min, avg, max) = (0.059, 1.251, 4.621), stdev = 1.972
[info]   CI (99.9%): [≈ 0, 8.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 3.674
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 54.59% complete, ETA 00:41:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 382428.315 ops/s
[info] # Warmup Iteration   2: 1046517.149 ops/s
[info] # Warmup Iteration   3: 1137094.215 ops/s
[info] Iteration   1: 1137349.640 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1142215.705 ops/s
[info]                  ·gc.alloc.rate:      0.849 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.170 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1143088.348 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1137460.464 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1142543.786 ops/s
[info]                  ·gc.alloc.rate:      1.109 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.527 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc":
[info]   1140531.589 ±(99.9%) 11056.582 ops/s [Average]
[info]   (min, avg, max) = (1137349.640, 1140531.589, 1143088.348), stdev = 2871.359
[info]   CI (99.9%): [1129475.006, 1151588.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.392 ±(99.9%) 2.094 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.392, 1.109), stdev = 0.544
[info]   CI (99.9%): [≈ 0, 2.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.540 ±(99.9%) 2.884 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.540, 1.527), stdev = 0.749
[info]   CI (99.9%): [≈ 0, 3.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 54.82% complete, ETA 00:41:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18516.429 ops/s
[info] # Warmup Iteration   2: 152260.863 ops/s
[info] # Warmup Iteration   3: 196320.555 ops/s
[info] Iteration   1: 228546.911 ops/s
[info]                  ·gc.alloc.rate:                   2412.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              16614.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2296.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15812.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.834 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.512 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 229644.634 ops/s
[info]                  ·gc.alloc.rate:                   2413.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              16537.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2299.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15762.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 230516.130 ops/s
[info]                  ·gc.alloc.rate:               2448.207 MB/sec
[info]                  ·gc.alloc.rate.norm:          16707.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2322.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15848.373 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 231262.939 ops/s
[info]                  ·gc.alloc.rate:                   2468.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              16801.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2343.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15950.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.425 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 230231.133 ops/s
[info]                  ·gc.alloc.rate:                   2459.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              16809.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2358.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16122.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson":
[info]   230040.349 ±(99.9%) 3919.551 ops/s [Average]
[info]   (min, avg, max) = (228546.911, 230040.349, 231262.939), stdev = 1017.895
[info]   CI (99.9%): [226120.799, 233959.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2440.408 ±(99.9%) 100.681 MB/sec [Average]
[info]   (min, avg, max) = (2412.775, 2440.408, 2468.929), stdev = 26.147
[info]   CI (99.9%): [2339.726, 2541.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   16694.052 ±(99.9%) 456.013 B/op [Average]
[info]   (min, avg, max) = (16537.124, 16694.052, 16809.663), stdev = 118.425
[info]   CI (99.9%): [16238.039, 17150.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2324.213 ±(99.9%) 104.216 MB/sec [Average]
[info]   (min, avg, max) = (2296.353, 2324.213, 2358.481), stdev = 27.064
[info]   CI (99.9%): [2219.997, 2428.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   15899.256 ±(99.9%) 548.485 B/op [Average]
[info]   (min, avg, max) = (15762.310, 15899.256, 16122.026), stdev = 142.440
[info]   CI (99.9%): [15350.771, 16447.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.588 ±(99.9%) 4.836 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.588, 2.834), stdev = 1.256
[info]   CI (99.9%): [≈ 0, 5.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.044 ±(99.9%) 33.301 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.044, 19.512), stdev = 8.648
[info]   CI (99.9%): [≈ 0, 37.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.000, 17.000), stdev = 2.915
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.06% complete, ETA 00:40:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3524.351 ops/s
[info] # Warmup Iteration   2: 36361.237 ops/s
[info] # Warmup Iteration   3: 64605.032 ops/s
[info] Iteration   1: 51982.954 ops/s
[info]                  ·gc.alloc.rate:                   1737.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              52601.860 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1927.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58367.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.319 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 100.485 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 50332.057 ops/s
[info]                  ·gc.alloc.rate:                        1374.292 MB/sec
[info]                  ·gc.alloc.rate.norm:                   42972.619 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.017 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.544 B/op
[info]                  ·gc.churn.Metaspace:                   0.049 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              1.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1334.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          41723.931 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  5.431 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             169.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           8.646 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      270.339 B/op
[info]                  ·gc.count:                             6.000 counts
[info]                  ·gc.time:                              49.000 ms
[info] Iteration   3: 54081.473 ops/s
[info]                  ·gc.alloc.rate:                   1476.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              42967.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1278.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37191.589 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.817 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 52782.267 ops/s
[info]                  ·gc.alloc.rate:                   1441.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              42988.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1609.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47979.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.862 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 54164.705 ops/s
[info]                  ·gc.alloc.rate:               1476.125 MB/sec
[info]                  ·gc.alloc.rate.norm:          42873.278 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1302.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37841.802 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala":
[info]   52668.691 ±(99.9%) 6142.049 ops/s [Average]
[info]   (min, avg, max) = (50332.057, 52668.691, 54164.705), stdev = 1595.071
[info]   CI (99.9%): [46526.642, 58810.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1501.200 ±(99.9%) 533.108 MB/sec [Average]
[info]   (min, avg, max) = (1374.292, 1501.200, 1737.388), stdev = 138.446
[info]   CI (99.9%): [968.092, 2034.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   44880.850 ±(99.9%) 16620.973 B/op [Average]
[info]   (min, avg, max) = (42873.278, 44880.850, 52601.860), stdev = 4316.414
[info]   CI (99.9%): [28259.877, 61501.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.030 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.109 ±(99.9%) 0.936 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.109, 0.544), stdev = 0.243
[info]   CI (99.9%): [≈ 0, 1.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.010 ±(99.9%) 0.085 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.049), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.307 ±(99.9%) 2.646 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.307, 1.537), stdev = 0.687
[info]   CI (99.9%): [≈ 0, 2.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1490.430 ±(99.9%) 1072.034 MB/sec [Average]
[info]   (min, avg, max) = (1278.011, 1490.430, 1927.818), stdev = 278.404
[info]   CI (99.9%): [418.396, 2562.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   44620.833 ±(99.9%) 33887.259 B/op [Average]
[info]   (min, avg, max) = (37191.589, 44620.833, 58367.389), stdev = 8800.414
[info]   CI (99.9%): [10733.574, 78508.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   1.086 ±(99.9%) 9.353 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.086, 5.431), stdev = 2.429
[info]   CI (99.9%): [≈ 0, 10.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   33.965 ±(99.9%) 292.450 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 33.965, 169.826), stdev = 75.948
[info]   CI (99.9%): [≈ 0, 326.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.418 ±(99.9%) 14.477 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.418, 8.646), stdev = 3.760
[info]   CI (99.9%): [≈ 0, 16.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   74.901 ±(99.9%) 452.088 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 74.901, 270.339), stdev = 117.406
[info]   CI (99.9%): [≈ 0, 526.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 1.000
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.time":
[info]   96.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 19.200, 49.000), stdev = 18.404
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.29% complete, ETA 00:40:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 219586.070 ops/s
[info] # Warmup Iteration   2: 684933.261 ops/s
[info] # Warmup Iteration   3: 787599.082 ops/s
[info] Iteration   1: 787215.807 ops/s
[info]                  ·gc.alloc.rate:                   1587.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              3173.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3297.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.451 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 793500.481 ops/s
[info]                  ·gc.alloc.rate:                   1595.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              3164.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3251.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.858 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 778222.388 ops/s
[info]                  ·gc.alloc.rate:               1552.109 MB/sec
[info]                  ·gc.alloc.rate.norm:          3137.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2647.300 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 778928.772 ops/s
[info]                  ·gc.alloc.rate:                   1613.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              3260.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3320.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 787589.888 ops/s
[info]                  ·gc.alloc.rate:                   1588.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              3174.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3309.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala":
[info]   785091.467 ±(99.9%) 24853.027 ops/s [Average]
[info]   (min, avg, max) = (778222.388, 785091.467, 793500.481), stdev = 6454.252
[info]   CI (99.9%): [760238.440, 809944.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1587.506 ±(99.9%) 85.996 MB/sec [Average]
[info]   (min, avg, max) = (1552.109, 1587.506, 1613.520), stdev = 22.333
[info]   CI (99.9%): [1501.511, 1673.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3182.194 ±(99.9%) 177.369 B/op [Average]
[info]   (min, avg, max) = (3137.672, 3182.194, 3260.089), stdev = 46.062
[info]   CI (99.9%): [3004.825, 3359.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1579.611 ±(99.9%) 581.861 MB/sec [Average]
[info]   (min, avg, max) = (1309.537, 1579.611, 1656.105), stdev = 151.107
[info]   CI (99.9%): [997.750, 2161.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3165.299 ±(99.9%) 1119.565 B/op [Average]
[info]   (min, avg, max) = (2647.300, 3165.299, 3320.468), stdev = 290.747
[info]   CI (99.9%): [2045.734, 4284.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.841 ±(99.9%) 5.361 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.841, 3.227), stdev = 1.392
[info]   CI (99.9%): [≈ 0, 6.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.679 ±(99.9%) 10.717 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.679, 6.451), stdev = 2.783
[info]   CI (99.9%): [≈ 0, 12.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 19.000), stdev = 5.857
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 55.53% complete, ETA 00:40:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1234.198 ops/s
[info] # Warmup Iteration   2: 14270.981 ops/s
[info] # Warmup Iteration   3: 44815.282 ops/s
[info] Iteration   1: 49901.655 ops/s
[info]                  ·gc.alloc.rate:                   2903.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              91572.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2909.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91745.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 85.418 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   2: 46749.199 ops/s
[info]                  ·gc.alloc.rate:                   2844.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              95741.993 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2598.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87482.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.176 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 207.924 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 47534.587 ops/s
[info]                  ·gc.alloc.rate:                   2772.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              91807.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2942.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97420.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.461 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81.490 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 46041.589 ops/s
[info]                  ·gc.alloc.rate:                   2509.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              85741.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2309.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78902.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.423 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 46130.156 ops/s
[info]                  ·gc.alloc.rate:                   2502.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              85339.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2332.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79555.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.710 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson":
[info]   47271.437 ±(99.9%) 6111.215 ops/s [Average]
[info]   (min, avg, max) = (46041.589, 47271.437, 49901.655), stdev = 1587.063
[info]   CI (99.9%): [41160.222, 53382.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2706.390 ±(99.9%) 727.490 MB/sec [Average]
[info]   (min, avg, max) = (2502.317, 2706.390, 2903.598), stdev = 188.927
[info]   CI (99.9%): [1978.900, 3433.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   90040.489 ±(99.9%) 17065.217 B/op [Average]
[info]   (min, avg, max) = (85339.117, 90040.489, 95741.993), stdev = 4431.783
[info]   CI (99.9%): [72975.272, 107105.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2618.380 ±(99.9%) 1166.510 MB/sec [Average]
[info]   (min, avg, max) = (2309.082, 2618.380, 2942.315), stdev = 302.939
[info]   CI (99.9%): [1451.870, 3784.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   87021.411 ±(99.9%) 30583.014 B/op [Average]
[info]   (min, avg, max) = (78902.794, 87021.411, 97420.390), stdev = 7942.312
[info]   CI (99.9%): [56438.397, 117604.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.282 ±(99.9%) 9.725 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.282, 6.176), stdev = 2.526
[info]   CI (99.9%): [≈ 0, 12.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   75.393 ±(99.9%) 326.460 B/op [Average]
[info]   (min, avg, max) = (0.710, 75.393, 207.924), stdev = 84.781
[info]   CI (99.9%): [≈ 0, 401.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 9.000), stdev = 1.000
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.time":
[info]   90.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 18.000, 34.000), stdev = 9.618
[info]   CI (99.9%): [90.000, 90.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.76% complete, ETA 00:40:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 93646.913 ops/s
[info] # Warmup Iteration   2: 362133.863 ops/s
[info] # Warmup Iteration   3: 412251.680 ops/s
[info] Iteration   1: 403072.724 ops/s
[info]                  ·gc.alloc.rate:                   1068.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              4171.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5106.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.203 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 411282.730 ops/s
[info]                  ·gc.alloc.rate:                   1068.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              4087.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3762.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.085 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.800 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 405327.031 ops/s
[info]                  ·gc.alloc.rate:                   1081.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              4198.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3807.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.540 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.982 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 393296.716 ops/s
[info]                  ·gc.alloc.rate:                        1019.211 MB/sec
[info]                  ·gc.alloc.rate.norm:                   4078.631 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.017 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.067 B/op
[info]                  ·gc.churn.Metaspace:                   0.048 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:               980.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          3923.215 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.748 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             10.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      1.000 B/op
[info]                  ·gc.count:                             5.000 counts
[info]                  ·gc.time:                              38.000 ms
[info] Iteration   5: 410166.137 ops/s
[info]                  ·gc.alloc.rate:                   1060.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              4069.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3743.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala":
[info]   404629.068 ±(99.9%) 27651.129 ops/s [Average]
[info]   (min, avg, max) = (393296.716, 404629.068, 411282.730), stdev = 7180.911
[info]   CI (99.9%): [376977.938, 432280.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1059.577 ±(99.9%) 91.466 MB/sec [Average]
[info]   (min, avg, max) = (1019.211, 1059.577, 1081.274), stdev = 23.753
[info]   CI (99.9%): [968.111, 1151.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   4121.142 ±(99.9%) 228.909 B/op [Average]
[info]   (min, avg, max) = (4069.631, 4121.142, 4198.703), stdev = 59.447
[info]   CI (99.9%): [3892.233, 4350.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.029 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.013 ±(99.9%) 0.115 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.067), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.010 ±(99.9%) 0.082 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.048), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.038 ±(99.9%) 0.328 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.191), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1045.574 ±(99.9%) 564.451 MB/sec [Average]
[info]   (min, avg, max) = (975.605, 1045.574, 1307.745), stdev = 146.586
[info]   CI (99.9%): [481.123, 1610.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4068.631 ±(99.9%) 2249.385 B/op [Average]
[info]   (min, avg, max) = (3743.499, 4068.631, 5106.123), stdev = 584.158
[info]   CI (99.9%): [1819.246, 6318.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.550 ±(99.9%) 4.733 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.550, 2.748), stdev = 1.229
[info]   CI (99.9%): [≈ 0, 5.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   2.200 ±(99.9%) 18.939 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.200, 10.998), stdev = 4.919
[info]   CI (99.9%): [≈ 0, 21.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.990 ±(99.9%) 5.115 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.990, 3.085), stdev = 1.328
[info]   CI (99.9%): [≈ 0, 6.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.813 ±(99.9%) 19.576 B/op [Average]
[info]   (min, avg, max) = (0.080, 3.813, 11.800), stdev = 5.084
[info]   CI (99.9%): [≈ 0, 23.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 15.000, 38.000), stdev = 13.784
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.00% complete, ETA 00:39:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 949630.234 ops/s
[info] # Warmup Iteration   2: 1371572.564 ops/s
[info] # Warmup Iteration   3: 1629710.152 ops/s
[info] Iteration   1: 1607004.723 ops/s
[info]                  ·gc.alloc.rate:                   990.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              969.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     967.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1634648.781 ops/s
[info]                  ·gc.alloc.rate:                   987.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              951.203 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     952.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1597227.894 ops/s
[info]                  ·gc.alloc.rate:                   957.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              943.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     974.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.315 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1547179.001 ops/s
[info]                  ·gc.alloc.rate:                   959.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              975.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1000.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.762 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1609576.036 ops/s
[info]                  ·gc.alloc.rate:               962.053 MB/sec
[info]                  ·gc.alloc.rate.norm:          940.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 639.659 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala":
[info]   1599127.287 ±(99.9%) 123809.416 ops/s [Average]
[info]   (min, avg, max) = (1547179.001, 1599127.287, 1634648.781), stdev = 32152.912
[info]   CI (99.9%): [1475317.871, 1722936.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   971.511 ±(99.9%) 62.306 MB/sec [Average]
[info]   (min, avg, max) = (957.813, 971.511, 990.323), stdev = 16.181
[info]   CI (99.9%): [909.205, 1033.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   956.223 ±(99.9%) 60.954 B/op [Average]
[info]   (min, avg, max) = (940.438, 956.223, 975.845), stdev = 15.830
[info]   CI (99.9%): [895.268, 1017.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   920.705 ±(99.9%) 573.374 MB/sec [Average]
[info]   (min, avg, max) = (654.361, 920.705, 988.902), stdev = 148.903
[info]   CI (99.9%): [347.331, 1494.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   906.797 ±(99.9%) 579.038 B/op [Average]
[info]   (min, avg, max) = (639.659, 906.797, 1000.880), stdev = 150.374
[info]   CI (99.9%): [327.759, 1485.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.840 ±(99.9%) 5.568 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.840, 3.365), stdev = 1.446
[info]   CI (99.9%): [≈ 0, 6.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.832 ±(99.9%) 5.485 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.832, 3.315), stdev = 1.425
[info]   CI (99.9%): [≈ 0, 6.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.200, 12.000), stdev = 4.324
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 56.24% complete, ETA 00:39:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1111391.020 ops/s
[info] # Warmup Iteration   2: 1639952.438 ops/s
[info] # Warmup Iteration   3: 1751453.784 ops/s
[info] Iteration   1: 1751767.147 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1748059.109 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1745182.041 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1746022.039 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1746250.316 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc":
[info]   1747456.130 ±(99.9%) 10120.408 ops/s [Average]
[info]   (min, avg, max) = (1745182.041, 1747456.130, 1751767.147), stdev = 2628.238
[info]   CI (99.9%): [1737335.722, 1757576.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 56.47% complete, ETA 00:39:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43157.538 ops/s
[info] # Warmup Iteration   2: 281565.931 ops/s
[info] # Warmup Iteration   3: 364743.594 ops/s
[info] Iteration   1: 337924.151 ops/s
[info]                  ·gc.alloc.rate:                   2238.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              10424.408 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10728.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.561 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.272 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 361630.969 ops/s
[info]                  ·gc.alloc.rate:                   2280.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              9922.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2317.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10086.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.362 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 367820.404 ops/s
[info]                  ·gc.alloc.rate:               2299.739 MB/sec
[info]                  ·gc.alloc.rate.norm:          9840.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2002.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8566.755 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 366343.453 ops/s
[info]                  ·gc.alloc.rate:                   2337.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              10042.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2351.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10100.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 357544.270 ops/s
[info]                  ·gc.alloc.rate:                   2291.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              10084.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2364.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10406.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson":
[info]   358252.649 ±(99.9%) 46454.381 ops/s [Average]
[info]   (min, avg, max) = (337924.151, 358252.649, 367820.404), stdev = 12064.055
[info]   CI (99.9%): [311798.269, 404707.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2289.404 ±(99.9%) 137.917 MB/sec [Average]
[info]   (min, avg, max) = (2238.191, 2289.404, 2337.520), stdev = 35.817
[info]   CI (99.9%): [2151.488, 2427.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   10062.805 ±(99.9%) 862.908 B/op [Average]
[info]   (min, avg, max) = (9840.344, 10062.805, 10424.408), stdev = 224.094
[info]   CI (99.9%): [9199.897, 10925.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2267.831 ±(99.9%) 579.765 MB/sec [Average]
[info]   (min, avg, max) = (2002.095, 2267.831, 2364.476), stdev = 150.563
[info]   CI (99.9%): [1688.066, 2847.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9977.825 ±(99.9%) 3201.801 B/op [Average]
[info]   (min, avg, max) = (8566.755, 9977.825, 10728.564), stdev = 831.497
[info]   CI (99.9%): [6776.024, 13179.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.337 ±(99.9%) 2.638 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.337, 1.561), stdev = 0.685
[info]   CI (99.9%): [≈ 0, 2.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.563 ±(99.9%) 12.299 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.563, 7.272), stdev = 3.194
[info]   CI (99.9%): [≈ 0, 13.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 12.000), stdev = 1.140
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 56.71% complete, ETA 00:39:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13859.758 ops/s
[info] # Warmup Iteration   2: 32791.863 ops/s
[info] # Warmup Iteration   3: 75404.812 ops/s
[info] Iteration   1: 74821.319 ops/s
[info]                  ·gc.alloc.rate:                   1987.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              41808.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1916.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40313.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.045 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.059 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   2: 81457.587 ops/s
[info]                  ·gc.alloc.rate:                   1835.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              35465.919 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1913.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36965.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.155 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 234.841 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 85623.802 ops/s
[info]                  ·gc.alloc.rate:                   1739.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              31977.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1580.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29055.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.913 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 85338.656 ops/s
[info]                  ·gc.alloc.rate:                   1721.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              31731.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1590.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29326.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.768 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 83995.452 ops/s
[info]                  ·gc.alloc.rate:                   1720.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              32235.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30213.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.390 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce":
[info]   82247.363 ±(99.9%) 17197.138 ops/s [Average]
[info]   (min, avg, max) = (74821.319, 82247.363, 85623.802), stdev = 4466.042
[info]   CI (99.9%): [65050.225, 99444.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate":
[info]   1800.912 ±(99.9%) 441.450 MB/sec [Average]
[info]   (min, avg, max) = (1720.370, 1800.912, 1987.470), stdev = 114.643
[info]   CI (99.9%): [1359.462, 2242.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   34643.618 ±(99.9%) 16494.930 B/op [Average]
[info]   (min, avg, max) = (31731.280, 34643.618, 41808.286), stdev = 4283.681
[info]   CI (99.9%): [18148.688, 51138.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1722.745 ±(99.9%) 676.605 MB/sec [Average]
[info]   (min, avg, max) = (1580.908, 1722.745, 1916.420), stdev = 175.712
[info]   CI (99.9%): [1046.140, 2399.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   33174.652 ±(99.9%) 19811.602 B/op [Average]
[info]   (min, avg, max) = (29055.347, 33174.652, 40313.678), stdev = 5145.010
[info]   CI (99.9%): [13363.050, 52986.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3.073 ±(99.9%) 20.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 3.073, 12.155), stdev = 5.239
[info]   CI (99.9%): [≈ 0, 23.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   60.394 ±(99.9%) 389.948 B/op [Average]
[info]   (min, avg, max) = (0.390, 60.394, 234.841), stdev = 101.268
[info]   CI (99.9%): [≈ 0, 450.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 15.000, 34.000), stdev = 12.021
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.94% complete, ETA 00:39:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16973.290 ops/s
[info] # Warmup Iteration   2: 80830.874 ops/s
[info] # Warmup Iteration   3: 87022.342 ops/s
[info] Iteration   1: 94039.545 ops/s
[info]                  ·gc.alloc.rate:                   1213.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              20302.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1285.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21516.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.466 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.535 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 94139.343 ops/s
[info]                  ·gc.alloc.rate:                   1224.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              20466.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1290.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21566.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.606 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 94670.944 ops/s
[info]                  ·gc.alloc.rate:                   1221.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              20315.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16151.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.556 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.869 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 92013.374 ops/s
[info]                  ·gc.alloc.rate:                   1189.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              20345.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22173.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.806 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.087 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 92480.930 ops/s
[info]                  ·gc.alloc.rate:                   1205.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              20508.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1290.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21947.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.354 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala":
[info]   93468.827 ±(99.9%) 4438.558 ops/s [Average]
[info]   (min, avg, max) = (92013.374, 93468.827, 94670.944), stdev = 1152.679
[info]   CI (99.9%): [89030.270, 97907.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1210.899 ±(99.9%) 53.845 MB/sec [Average]
[info]   (min, avg, max) = (1189.718, 1210.899, 1224.180), stdev = 13.983
[info]   CI (99.9%): [1157.054, 1264.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   20387.445 ±(99.9%) 359.664 B/op [Average]
[info]   (min, avg, max) = (20302.535, 20387.445, 20508.007), stdev = 93.403
[info]   CI (99.9%): [20027.781, 20747.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1226.783 ±(99.9%) 549.614 MB/sec [Average]
[info]   (min, avg, max) = (971.551, 1226.783, 1296.609), stdev = 142.733
[info]   CI (99.9%): [677.170, 1776.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20671.089 ±(99.9%) 9784.365 B/op [Average]
[info]   (min, avg, max) = (16151.787, 20671.089, 22173.155), stdev = 2540.968
[info]   CI (99.9%): [10886.724, 30455.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.491 ±(99.9%) 5.550 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.491, 3.806), stdev = 1.441
[info]   CI (99.9%): [≈ 0, 7.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   25.196 ±(99.9%) 95.027 B/op [Average]
[info]   (min, avg, max) = (0.354, 25.196, 65.087), stdev = 24.678
[info]   CI (99.9%): [≈ 0, 120.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 11.000, 15.000), stdev = 3.937
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.18% complete, ETA 00:38:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30306.107 ops/s
[info] # Warmup Iteration   2: 88583.563 ops/s
[info] # Warmup Iteration   3: 95076.010 ops/s
[info] Iteration   1: 96901.929 ops/s
[info]                  ·gc.alloc.rate:                   1362.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              22123.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21174.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.322 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 93411.301 ops/s
[info]                  ·gc.alloc.rate:                   1348.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              22706.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21909.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 86.273 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 99922.443 ops/s
[info]                  ·gc.alloc.rate:                   1242.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              19568.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20407.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.935 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 101241.232 ops/s
[info]                  ·gc.alloc.rate:               1264.550 MB/sec
[info]                  ·gc.alloc.rate.norm:          19658.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1296.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20157.355 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 102825.635 ops/s
[info]                  ·gc.alloc.rate:                   1264.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              19353.863 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19964.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.637 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala":
[info]   98860.508 ±(99.9%) 14413.922 ops/s [Average]
[info]   (min, avg, max) = (93411.301, 98860.508, 102825.635), stdev = 3743.250
[info]   CI (99.9%): [84446.586, 113274.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1296.316 ±(99.9%) 210.500 MB/sec [Average]
[info]   (min, avg, max) = (1242.311, 1296.316, 1362.042), stdev = 54.666
[info]   CI (99.9%): [1085.816, 1506.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   20682.065 ±(99.9%) 6157.511 B/op [Average]
[info]   (min, avg, max) = (19353.863, 20682.065, 22706.576), stdev = 1599.086
[info]   CI (99.9%): [14524.554, 26839.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1300.224 ±(99.9%) 15.299 MB/sec [Average]
[info]   (min, avg, max) = (1295.629, 1300.224, 1304.360), stdev = 3.973
[info]   CI (99.9%): [1284.925, 1315.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   20722.683 ±(99.9%) 3107.710 B/op [Average]
[info]   (min, avg, max) = (19964.525, 20722.683, 21909.170), stdev = 807.063
[info]   CI (99.9%): [17614.973, 23830.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.481 ±(99.9%) 8.458 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.481, 5.123), stdev = 2.197
[info]   CI (99.9%): [≈ 0, 9.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   24.633 ±(99.9%) 142.391 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.633, 86.273), stdev = 36.979
[info]   CI (99.9%): [≈ 0, 167.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.400, 21.000), stdev = 6.656
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 57.41% complete, ETA 00:38:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5202.096 ops/s
[info] # Warmup Iteration   2: 31812.874 ops/s
[info] # Warmup Iteration   3: 53061.650 ops/s
[info] Iteration   1: 51838.730 ops/s
[info]                  ·gc.alloc.rate:                   2326.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              70632.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2280.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69235.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.069 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93.188 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 59148.118 ops/s
[info]                  ·gc.alloc.rate:                   2327.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              61919.563 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2300.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61179.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.765 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.948 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 59733.488 ops/s
[info]                  ·gc.alloc.rate:                   2338.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              61622.149 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2317.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61062.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.742 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 60171.926 ops/s
[info]                  ·gc.alloc.rate:                   2380.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              62262.206 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2337.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61123.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.633 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 60374.495 ops/s
[info]                  ·gc.alloc.rate:                   2401.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              62597.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2354.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61379.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.543 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson":
[info]   58253.351 ±(99.9%) 13926.209 ops/s [Average]
[info]   (min, avg, max) = (51838.730, 58253.351, 60374.495), stdev = 3616.592
[info]   CI (99.9%): [44327.142, 72179.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2355.069 ±(99.9%) 130.710 MB/sec [Average]
[info]   (min, avg, max) = (2326.556, 2355.069, 2401.279), stdev = 33.945
[info]   CI (99.9%): [2224.358, 2485.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63806.783 ±(99.9%) 14760.999 B/op [Average]
[info]   (min, avg, max) = (61622.149, 63806.783, 70632.912), stdev = 3833.384
[info]   CI (99.9%): [49045.784, 78567.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2318.000 ±(99.9%) 112.733 MB/sec [Average]
[info]   (min, avg, max) = (2280.532, 2318.000, 2354.555), stdev = 29.276
[info]   CI (99.9%): [2205.268, 2430.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   62796.111 ±(99.9%) 13869.175 B/op [Average]
[info]   (min, avg, max) = (61062.500, 62796.111, 69235.664), stdev = 3601.781
[info]   CI (99.9%): [48926.936, 76665.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.004 ±(99.9%) 5.276 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.004, 3.069), stdev = 1.370
[info]   CI (99.9%): [≈ 0, 6.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   29.011 ±(99.9%) 157.482 B/op [Average]
[info]   (min, avg, max) = (0.543, 29.011, 93.188), stdev = 40.897
[info]   CI (99.9%): [≈ 0, 186.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.800, 16.000), stdev = 2.490
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 57.65% complete, ETA 00:38:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25784.748 ops/s
[info] # Warmup Iteration   2: 117632.305 ops/s
[info] # Warmup Iteration   3: 140865.934 ops/s
[info] Iteration   1: 149027.439 ops/s
[info]                  ·gc.alloc.rate:                   1404.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              14828.273 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13732.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.660 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 148744.805 ops/s
[info]                  ·gc.alloc.rate:                   1399.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              14801.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13853.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.880 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.306 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 151239.847 ops/s
[info]                  ·gc.alloc.rate:                   1425.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              14831.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13701.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.650 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 151758.770 ops/s
[info]                  ·gc.alloc.rate:               1423.597 MB/sec
[info]                  ·gc.alloc.rate.norm:          14759.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1323.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13723.967 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 151227.584 ops/s
[info]                  ·gc.alloc.rate:                   1451.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              15106.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17318.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce":
[info]   150399.689 ±(99.9%) 5397.802 ops/s [Average]
[info]   (min, avg, max) = (148744.805, 150399.689, 151758.770), stdev = 1401.792
[info]   CI (99.9%): [145001.887, 155797.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1420.740 ±(99.9%) 79.958 MB/sec [Average]
[info]   (min, avg, max) = (1399.218, 1420.740, 1451.630), stdev = 20.765
[info]   CI (99.9%): [1340.782, 1500.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   14865.321 ±(99.9%) 531.415 B/op [Average]
[info]   (min, avg, max) = (14759.004, 14865.321, 15106.653), stdev = 138.007
[info]   CI (99.9%): [14333.905, 15396.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1382.910 ±(99.9%) 606.363 MB/sec [Average]
[info]   (min, avg, max) = (1300.318, 1382.910, 1664.175), stdev = 157.471
[info]   CI (99.9%): [776.547, 1989.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   14466.154 ±(99.9%) 6144.205 B/op [Average]
[info]   (min, avg, max) = (13701.733, 14466.154, 17318.542), stdev = 1595.631
[info]   CI (99.9%): [8321.949, 20610.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.205 ±(99.9%) 1.456 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.205, 0.880), stdev = 0.378
[info]   CI (99.9%): [≈ 0, 1.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.166 ±(99.9%) 15.407 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.166, 9.306), stdev = 4.001
[info]   CI (99.9%): [≈ 0, 17.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 8.000), stdev = 1.140
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.88% complete, ETA 00:38:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 116457.412 ops/s
[info] # Warmup Iteration   2: 328770.314 ops/s
[info] # Warmup Iteration   3: 394138.848 ops/s
[info] Iteration   1: 395524.225 ops/s
[info]                  ·gc.alloc.rate:                   507.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              2019.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          638.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2540.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 394857.546 ops/s
[info]                  ·gc.alloc.rate:               501.397 MB/sec
[info]                  ·gc.alloc.rate.norm:          1998.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1273.230 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 393120.592 ops/s
[info]                  ·gc.alloc.rate:                   537.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              2149.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2563.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 390225.086 ops/s
[info]                  ·gc.alloc.rate:               494.218 MB/sec
[info]                  ·gc.alloc.rate.norm:          1993.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1296.389 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 394347.721 ops/s
[info]                  ·gc.alloc.rate:                   513.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              2047.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2571.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala":
[info]   393615.034 ±(99.9%) 8045.426 ops/s [Average]
[info]   (min, avg, max) = (390225.086, 393615.034, 395524.225), stdev = 2089.372
[info]   CI (99.9%): [385569.608, 401660.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   510.658 ±(99.9%) 62.885 MB/sec [Average]
[info]   (min, avg, max) = (494.218, 510.658, 537.014), stdev = 16.331
[info]   CI (99.9%): [447.773, 573.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   2041.759 ±(99.9%) 247.018 B/op [Average]
[info]   (min, avg, max) = (1993.257, 2041.759, 2149.877), stdev = 64.150
[info]   CI (99.9%): [1794.741, 2288.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   512.780 ±(99.9%) 676.142 MB/sec [Average]
[info]   (min, avg, max) = (319.455, 512.780, 644.238), stdev = 175.592
[info]   CI (99.9%): [≈ 0, 1188.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2048.903 ±(99.9%) 2686.418 B/op [Average]
[info]   (min, avg, max) = (1273.230, 2048.903, 2571.023), stdev = 697.654
[info]   CI (99.9%): [≈ 0, 4735.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.067 ±(99.9%) 0.268 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.167), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 58.12% complete, ETA 00:38:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 401372.403 ops/s
[info] # Warmup Iteration   2: 852884.665 ops/s
[info] # Warmup Iteration   3: 945792.820 ops/s
[info] Iteration   1: 942890.820 ops/s
[info]                  ·gc.alloc.rate:                   1205.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              2011.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2196.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.140 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.235 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 927811.528 ops/s
[info]                  ·gc.alloc.rate:                   1178.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              1999.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1675.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.573 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.061 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 920169.349 ops/s
[info]                  ·gc.alloc.rate:                   1174.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              2008.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2237.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.317 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 916560.643 ops/s
[info]                  ·gc.alloc.rate:               1181.432 MB/sec
[info]                  ·gc.alloc.rate.norm:          2028.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1681.494 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 928176.046 ops/s
[info]                  ·gc.alloc.rate:                   1197.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              2031.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2219.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala":
[info]   927121.677 ±(99.9%) 38990.682 ops/s [Average]
[info]   (min, avg, max) = (916560.643, 927121.677, 942890.820), stdev = 10125.756
[info]   CI (99.9%): [888130.995, 966112.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1187.589 ±(99.9%) 50.941 MB/sec [Average]
[info]   (min, avg, max) = (1174.494, 1187.589, 1205.157), stdev = 13.229
[info]   CI (99.9%): [1136.648, 1238.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2015.960 ±(99.9%) 52.055 B/op [Average]
[info]   (min, avg, max) = (1999.825, 2015.960, 2031.230), stdev = 13.519
[info]   CI (99.9%): [1963.905, 2068.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1180.026 ±(99.9%) 690.740 MB/sec [Average]
[info]   (min, avg, max) = (979.248, 1180.026, 1315.564), stdev = 179.383
[info]   CI (99.9%): [489.286, 1870.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2002.043 ±(99.9%) 1138.266 B/op [Average]
[info]   (min, avg, max) = (1675.783, 2002.043, 2237.815), stdev = 295.604
[info]   CI (99.9%): [863.777, 3140.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.905 ±(99.9%) 5.866 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.905, 3.573), stdev = 1.523
[info]   CI (99.9%): [≈ 0, 6.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.537 ±(99.9%) 9.952 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.537, 6.061), stdev = 2.585
[info]   CI (99.9%): [≈ 0, 11.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 15.000), stdev = 4.764
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 58.35% complete, ETA 00:37:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 519861.261 ops/s
[info] # Warmup Iteration   2: 1076338.660 ops/s
[info] # Warmup Iteration   3: 1107435.670 ops/s
[info] Iteration   1: 1110649.080 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1113150.809 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1109011.081 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1113330.542 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1105033.665 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc":
[info]   1110235.035 ±(99.9%) 13172.305 ops/s [Average]
[info]   (min, avg, max) = (1105033.665, 1110235.035, 1113330.542), stdev = 3420.806
[info]   CI (99.9%): [1097062.730, 1123407.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 58.59% complete, ETA 00:37:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59513.042 ops/s
[info] # Warmup Iteration   2: 170592.350 ops/s
[info] # Warmup Iteration   3: 221195.996 ops/s
[info] Iteration   1: 310200.174 ops/s
[info]                  ·gc.alloc.rate:                   946.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              4801.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          962.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4883.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.845 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.500 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 308949.136 ops/s
[info]                  ·gc.alloc.rate:                   944.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              4809.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          957.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4876.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.287 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 309781.742 ops/s
[info]                  ·gc.alloc.rate:                   948.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              4817.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          951.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4834.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.163 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 308217.372 ops/s
[info]                  ·gc.alloc.rate:                   941.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              4808.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          953.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4869.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.957 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 308413.029 ops/s
[info]                  ·gc.alloc.rate:                   929.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              4745.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          637.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3253.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson":
[info]   309112.291 ±(99.9%) 3305.795 ops/s [Average]
[info]   (min, avg, max) = (308217.372, 309112.291, 310200.174), stdev = 858.504
[info]   CI (99.9%): [305806.495, 312418.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   942.201 ±(99.9%) 28.073 MB/sec [Average]
[info]   (min, avg, max) = (929.968, 942.201, 948.266), stdev = 7.291
[info]   CI (99.9%): [914.127, 970.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4796.477 ±(99.9%) 112.734 B/op [Average]
[info]   (min, avg, max) = (4745.087, 4796.477, 4817.628), stdev = 29.277
[info]   CI (99.9%): [4683.743, 4909.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   892.648 ±(99.9%) 549.295 MB/sec [Average]
[info]   (min, avg, max) = (637.585, 892.648, 962.984), stdev = 142.650
[info]   CI (99.9%): [343.353, 1441.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4543.511 ±(99.9%) 2778.381 B/op [Average]
[info]   (min, avg, max) = (3253.227, 4543.511, 4883.842), stdev = 721.537
[info]   CI (99.9%): [1765.130, 7321.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.986 ±(99.9%) 6.219 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.986, 3.845), stdev = 1.615
[info]   CI (99.9%): [≈ 0, 7.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.003 ±(99.9%) 31.531 B/op [Average]
[info]   (min, avg, max) = (0.106, 5.003, 19.500), stdev = 8.188
[info]   CI (99.9%): [≈ 0, 36.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.400, 15.000), stdev = 5.030
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 58.82% complete, ETA 00:37:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20780.256 ops/s
[info] # Warmup Iteration   2: 75557.746 ops/s
[info] # Warmup Iteration   3: 132944.350 ops/s
[info] Iteration   1: 139274.148 ops/s
[info]                  ·gc.alloc.rate:                   2098.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              23696.172 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1942.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21940.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.787 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 99.220 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 139198.463 ops/s
[info]                  ·gc.alloc.rate:                   2079.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              23502.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1936.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21884.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.838 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.077 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 142819.361 ops/s
[info]                  ·gc.alloc.rate:                   1788.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              19703.958 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21421.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.573 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.312 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 141970.310 ops/s
[info]                  ·gc.alloc.rate:                   1780.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              19729.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18089.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.462 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 142564.428 ops/s
[info]                  ·gc.alloc.rate:                   1774.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              19587.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18190.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.230 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce":
[info]   141165.342 ±(99.9%) 6884.587 ops/s [Average]
[info]   (min, avg, max) = (139198.463, 141165.342, 142819.361), stdev = 1787.905
[info]   CI (99.9%): [134280.755, 148049.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate":
[info]   1904.094 ±(99.9%) 650.348 MB/sec [Average]
[info]   (min, avg, max) = (1774.283, 1904.094, 2098.485), stdev = 168.893
[info]   CI (99.9%): [1253.746, 2554.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   21243.886 ±(99.9%) 8286.775 B/op [Average]
[info]   (min, avg, max) = (19587.472, 21243.886, 23696.172), stdev = 2152.049
[info]   CI (99.9%): [12957.111, 29530.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1820.605 ±(99.9%) 635.195 MB/sec [Average]
[info]   (min, avg, max) = (1632.356, 1820.605, 1943.907), stdev = 164.958
[info]   CI (99.9%): [1185.411, 2455.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   20304.933 ±(99.9%) 7652.123 B/op [Average]
[info]   (min, avg, max) = (18089.082, 20304.933, 21940.005), stdev = 1987.232
[info]   CI (99.9%): [12652.810, 27957.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.452 ±(99.9%) 14.347 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.452, 8.787), stdev = 3.726
[info]   CI (99.9%): [≈ 0, 16.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   27.660 ±(99.9%) 162.096 B/op [Average]
[info]   (min, avg, max) = (0.230, 27.660, 99.220), stdev = 42.096
[info]   CI (99.9%): [≈ 0, 189.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.200, 22.000), stdev = 6.221
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.06% complete, ETA 00:37:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36831.001 ops/s
[info] # Warmup Iteration   2: 155597.992 ops/s
[info] # Warmup Iteration   3: 197277.852 ops/s
[info] Iteration   1: 210411.505 ops/s
[info]                  ·gc.alloc.rate:                   1199.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              8972.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1275.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9544.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.494 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.654 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 207199.903 ops/s
[info]                  ·gc.alloc.rate:                   1189.854 MB/sec
[info]                  ·gc.alloc.rate.norm:              9035.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1284.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9755.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.428 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 208738.040 ops/s
[info]                  ·gc.alloc.rate:                   1194.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              9009.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          968.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7300.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.749 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 209145.446 ops/s
[info]                  ·gc.alloc.rate:                   1188.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              8944.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9735.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.321 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.463 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 212162.718 ops/s
[info]                  ·gc.alloc.rate:               1194.462 MB/sec
[info]                  ·gc.alloc.rate.norm:          8860.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:      969.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7194.923 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala":
[info]   209531.522 ±(99.9%) 7181.394 ops/s [Average]
[info]   (min, avg, max) = (207199.903, 209531.522, 212162.718), stdev = 1864.985
[info]   CI (99.9%): [202350.129, 216712.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1193.482 ±(99.9%) 16.909 MB/sec [Average]
[info]   (min, avg, max) = (1188.597, 1193.482, 1199.571), stdev = 4.391
[info]   CI (99.9%): [1176.572, 1210.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   8964.530 ±(99.9%) 260.819 B/op [Average]
[info]   (min, avg, max) = (8860.729, 8964.530, 9035.599), stdev = 67.734
[info]   CI (99.9%): [8703.711, 9225.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1158.526 ±(99.9%) 666.387 MB/sec [Average]
[info]   (min, avg, max) = (968.247, 1158.526, 1293.779), stdev = 173.058
[info]   CI (99.9%): [492.139, 1824.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   8706.216 ±(99.9%) 5138.577 B/op [Average]
[info]   (min, avg, max) = (7194.923, 8706.216, 9755.843), stdev = 1334.472
[info]   CI (99.9%): [3567.640, 13844.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.259 ±(99.9%) 4.230 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.259, 2.494), stdev = 1.098
[info]   CI (99.9%): [≈ 0, 5.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   9.459 ±(99.9%) 31.679 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.459, 18.654), stdev = 8.227
[info]   CI (99.9%): [≈ 0, 41.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 12.200, 19.000), stdev = 6.301
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.29% complete, ETA 00:36:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 150878.996 ops/s
[info] # Warmup Iteration   2: 398006.271 ops/s
[info] # Warmup Iteration   3: 556020.080 ops/s
[info] Iteration   1: 568761.664 ops/s
[info]                  ·gc.alloc.rate:               1173.109 MB/sec
[info]                  ·gc.alloc.rate.norm:          3245.285 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1298.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3592.510 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     16.000 ms
[info] Iteration   2: 564503.531 ops/s
[info]                  ·gc.alloc.rate:                   1133.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              3157.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2720.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.231 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.003 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 566988.006 ops/s
[info]                  ·gc.alloc.rate:                   1124.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              3121.542 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2699.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.138 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 562743.663 ops/s
[info]                  ·gc.alloc.rate:                   1125.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              3148.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3622.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 578755.133 ops/s
[info]                  ·gc.alloc.rate:                   1149.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              3126.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2647.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala":
[info]   568350.399 ±(99.9%) 24087.126 ops/s [Average]
[info]   (min, avg, max) = (562743.663, 568350.399, 578755.133), stdev = 6255.350
[info]   CI (99.9%): [544263.273, 592437.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1141.244 ±(99.9%) 78.829 MB/sec [Average]
[info]   (min, avg, max) = (1124.556, 1141.244, 1173.109), stdev = 20.472
[info]   CI (99.9%): [1062.415, 1220.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3159.899 ±(99.9%) 192.615 B/op [Average]
[info]   (min, avg, max) = (3121.542, 3159.899, 3245.285), stdev = 50.021
[info]   CI (99.9%): [2967.284, 3352.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1103.293 ±(99.9%) 680.849 MB/sec [Average]
[info]   (min, avg, max) = (972.593, 1103.293, 1298.624), stdev = 176.814
[info]   CI (99.9%): [422.444, 1784.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3056.672 ±(99.9%) 1939.724 B/op [Average]
[info]   (min, avg, max) = (2647.599, 3056.672, 3622.679), stdev = 503.740
[info]   CI (99.9%): [1116.947, 4996.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.817 ±(99.9%) 5.342 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.817, 3.231), stdev = 1.387
[info]   CI (99.9%): [≈ 0, 6.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.275 ±(99.9%) 14.888 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.275, 9.003), stdev = 3.866
[info]   CI (99.9%): [≈ 0, 17.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.000, 16.000), stdev = 5.099
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 59.53% complete, ETA 00:36:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1958.197 ops/s
[info] # Warmup Iteration   2: 56349.046 ops/s
[info] # Warmup Iteration   3: 91424.436 ops/s
[info] Iteration   1: 91474.412 ops/s
[info]                  ·gc.alloc.rate:                   3242.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              55789.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2961.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50945.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.138 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.981 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 96859.061 ops/s
[info]                  ·gc.alloc.rate:                   3073.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              49939.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2979.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48406.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.405 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.824 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 97934.350 ops/s
[info]                  ·gc.alloc.rate:                   3082.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              49538.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3006.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48323.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.338 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 96938.176 ops/s
[info]                  ·gc.alloc.rate:                   3088.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              50137.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3030.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49209.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.338 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 97170.944 ops/s
[info]                  ·gc.alloc.rate:                   3117.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              50471.195 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3049.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49362.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.349 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson":
[info]   96075.388 ±(99.9%) 10038.207 ops/s [Average]
[info]   (min, avg, max) = (91474.412, 96075.388, 97934.350), stdev = 2606.890
[info]   CI (99.9%): [86037.182, 106113.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3120.841 ±(99.9%) 269.768 MB/sec [Average]
[info]   (min, avg, max) = (3073.496, 3120.841, 3242.644), stdev = 70.058
[info]   CI (99.9%): [2851.072, 3390.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51175.068 ±(99.9%) 10017.377 B/op [Average]
[info]   (min, avg, max) = (49538.523, 51175.068, 55789.412), stdev = 2601.481
[info]   CI (99.9%): [41157.691, 61192.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3005.430 ±(99.9%) 138.958 MB/sec [Average]
[info]   (min, avg, max) = (2961.081, 3005.430, 3049.038), stdev = 36.087
[info]   CI (99.9%): [2866.472, 3144.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   49249.599 ±(99.9%) 4064.786 B/op [Average]
[info]   (min, avg, max) = (48323.349, 49249.599, 50945.144), stdev = 1055.612
[info]   CI (99.9%): [45184.813, 53314.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.946 ±(99.9%) 5.222 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.946, 3.138), stdev = 1.356
[info]   CI (99.9%): [≈ 0, 6.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   15.966 ±(99.9%) 89.565 B/op [Average]
[info]   (min, avg, max) = (0.338, 15.966, 53.981), stdev = 23.260
[info]   CI (99.9%): [≈ 0, 105.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count":
[info]   45.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.000, 9.000), stdev = 0.001
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.600, 18.000), stdev = 1.949
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 59.76% complete, ETA 00:36:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38612.349 ops/s
[info] # Warmup Iteration   2: 198386.829 ops/s
[info] # Warmup Iteration   3: 210005.560 ops/s
[info] Iteration   1: 234300.902 ops/s
[info]                  ·gc.alloc.rate:                   1486.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              9979.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8792.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.957 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.857 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 235337.033 ops/s
[info]                  ·gc.alloc.rate:                   1500.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              10037.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10888.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.478 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.885 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 234840.392 ops/s
[info]                  ·gc.alloc.rate:                   1489.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              9980.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8696.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 236624.278 ops/s
[info]                  ·gc.alloc.rate:                   1505.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              10016.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10843.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 237567.774 ops/s
[info]                  ·gc.alloc.rate:               1518.470 MB/sec
[info]                  ·gc.alloc.rate.norm:          10059.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8711.727 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce":
[info]   235734.076 ±(99.9%) 5153.685 ops/s [Average]
[info]   (min, avg, max) = (234300.902, 235734.076, 237567.774), stdev = 1338.396
[info]   CI (99.9%): [230580.390, 240887.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1500.195 ±(99.9%) 50.036 MB/sec [Average]
[info]   (min, avg, max) = (1486.338, 1500.195, 1518.470), stdev = 12.994
[info]   CI (99.9%): [1450.159, 1550.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10014.604 ±(99.9%) 134.163 B/op [Average]
[info]   (min, avg, max) = (9979.904, 10014.604, 10059.244), stdev = 34.842
[info]   CI (99.9%): [9880.441, 10148.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1436.183 ±(99.9%) 679.017 MB/sec [Average]
[info]   (min, avg, max) = (1297.836, 1436.183, 1630.351), stdev = 176.338
[info]   CI (99.9%): [757.167, 2115.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9586.716 ±(99.9%) 4499.527 B/op [Average]
[info]   (min, avg, max) = (8696.874, 9586.716, 10888.325), stdev = 1168.513
[info]   CI (99.9%): [5087.189, 14086.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.900 ±(99.9%) 5.052 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.900, 2.957), stdev = 1.312
[info]   CI (99.9%): [≈ 0, 5.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.032 ±(99.9%) 33.909 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.032, 19.857), stdev = 8.806
[info]   CI (99.9%): [≈ 0, 39.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 17.000), stdev = 4.980
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.00% complete, ETA 00:36:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 177391.627 ops/s
[info] # Warmup Iteration   2: 594383.142 ops/s
[info] # Warmup Iteration   3: 749128.455 ops/s
[info] Iteration   1: 764675.458 ops/s
[info]                  ·gc.alloc.rate:                   573.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              1180.898 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     660.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 762473.252 ops/s
[info]                  ·gc.alloc.rate:               589.075 MB/sec
[info]                  ·gc.alloc.rate.norm:          1215.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:      642.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1325.479 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 769250.152 ops/s
[info]                  ·gc.alloc.rate:               593.035 MB/sec
[info]                  ·gc.alloc.rate.norm:          1213.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:      642.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1315.206 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 772317.578 ops/s
[info]                  ·gc.alloc.rate:                   591.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              1205.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1313.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 772833.510 ops/s
[info]                  ·gc.alloc.rate:                   589.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              1201.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1317.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala":
[info]   768309.990 ±(99.9%) 17717.590 ops/s [Average]
[info]   (min, avg, max) = (762473.252, 768309.990, 772833.510), stdev = 4601.202
[info]   CI (99.9%): [750592.400, 786027.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   587.564 ±(99.9%) 30.007 MB/sec [Average]
[info]   (min, avg, max) = (573.901, 587.564, 593.035), stdev = 7.793
[info]   CI (99.9%): [557.558, 617.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1203.505 ±(99.9%) 53.509 B/op [Average]
[info]   (min, avg, max) = (1180.898, 1203.505, 1215.913), stdev = 13.896
[info]   CI (99.9%): [1149.997, 1257.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   579.518 ±(99.9%) 556.167 MB/sec [Average]
[info]   (min, avg, max) = (321.166, 579.518, 646.856), stdev = 144.435
[info]   CI (99.9%): [23.351, 1135.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1186.446 ±(99.9%) 1131.521 B/op [Average]
[info]   (min, avg, max) = (660.852, 1186.446, 1325.479), stdev = 293.853
[info]   CI (99.9%): [54.925, 2317.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.090 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.043), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.24% complete, ETA 00:36:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 725062.897 ops/s
[info] # Warmup Iteration   2: 1271242.201 ops/s
[info] # Warmup Iteration   3: 1388687.733 ops/s
[info] Iteration   1: 1373038.623 ops/s
[info]                  ·gc.alloc.rate:                   1064.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              1219.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1509.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1405443.827 ops/s
[info]                  ·gc.alloc.rate:                   1066.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              1193.841 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1108.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.899 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.246 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1352119.663 ops/s
[info]                  ·gc.alloc.rate:                   1041.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              1212.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1149.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.163 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1375825.722 ops/s
[info]                  ·gc.alloc.rate:                   1085.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              1241.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1123.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1375312.214 ops/s
[info]                  ·gc.alloc.rate:                   1050.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              1201.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1124.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala":
[info]   1376348.010 ±(99.9%) 73209.771 ops/s [Average]
[info]   (min, avg, max) = (1352119.663, 1376348.010, 1405443.827), stdev = 19012.345
[info]   CI (99.9%): [1303138.239, 1449557.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1061.461 ±(99.9%) 63.934 MB/sec [Average]
[info]   (min, avg, max) = (1041.788, 1061.461, 1085.152), stdev = 16.604
[info]   CI (99.9%): [997.526, 1125.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1213.847 ±(99.9%) 70.347 B/op [Average]
[info]   (min, avg, max) = (1193.841, 1213.847, 1241.354), stdev = 18.269
[info]   CI (99.9%): [1143.501, 1284.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1051.845 ±(99.9%) 570.929 MB/sec [Average]
[info]   (min, avg, max) = (982.535, 1051.845, 1317.016), stdev = 148.268
[info]   CI (99.9%): [480.916, 1622.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1203.105 ±(99.9%) 662.009 B/op [Average]
[info]   (min, avg, max) = (1108.516, 1203.105, 1509.548), stdev = 171.922
[info]   CI (99.9%): [541.096, 1865.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.807 ±(99.9%) 4.775 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.807, 2.899), stdev = 1.240
[info]   CI (99.9%): [≈ 0, 5.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.913 ±(99.9%) 5.352 B/op [Average]
[info]   (min, avg, max) = (0.048, 0.913, 3.246), stdev = 1.390
[info]   CI (99.9%): [≈ 0, 6.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 14.000), stdev = 4.278
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 60.47% complete, ETA 00:35:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 870806.326 ops/s
[info] # Warmup Iteration   2: 1361741.559 ops/s
[info] # Warmup Iteration   3: 1507376.279 ops/s
[info] Iteration   1: 1506354.656 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1505632.285 ops/s
[info]                  ·gc.alloc.rate:      1.309 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.368 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1506582.891 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1500988.940 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1502150.994 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc":
[info]   1504341.953 ±(99.9%) 9963.561 ops/s [Average]
[info]   (min, avg, max) = (1500988.940, 1504341.953, 1506582.891), stdev = 2587.505
[info]   CI (99.9%): [1494378.392, 1514305.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.262 ±(99.9%) 2.253 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.262, 1.309), stdev = 0.585
[info]   CI (99.9%): [≈ 0, 2.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.274 ±(99.9%) 2.355 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.274, 1.368), stdev = 0.612
[info]   CI (99.9%): [≈ 0, 2.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 60.71% complete, ETA 00:35:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64719.755 ops/s
[info] # Warmup Iteration   2: 530386.735 ops/s
[info] # Warmup Iteration   3: 543446.803 ops/s
[info] Iteration   1: 620056.830 ops/s
[info]                  ·gc.alloc.rate:                   1516.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              3848.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3319.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 619293.539 ops/s
[info]                  ·gc.alloc.rate:                   1514.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              3848.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4172.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.557 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 619830.046 ops/s
[info]                  ·gc.alloc.rate:                   1507.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              3828.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3338.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 619001.636 ops/s
[info]                  ·gc.alloc.rate:                   1518.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              3860.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4201.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 622261.859 ops/s
[info]                  ·gc.alloc.rate:                   1533.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              3876.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3363.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson":
[info]   620088.782 ±(99.9%) 4947.938 ops/s [Average]
[info]   (min, avg, max) = (619001.636, 620088.782, 622261.859), stdev = 1284.964
[info]   CI (99.9%): [615140.844, 625036.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1517.880 ±(99.9%) 36.057 MB/sec [Average]
[info]   (min, avg, max) = (1507.720, 1517.880, 1533.055), stdev = 9.364
[info]   CI (99.9%): [1481.823, 1553.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3852.466 ±(99.9%) 68.650 B/op [Average]
[info]   (min, avg, max) = (3828.611, 3852.466, 3876.950), stdev = 17.828
[info]   CI (99.9%): [3783.816, 3921.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1449.297 ±(99.9%) 696.022 MB/sec [Average]
[info]   (min, avg, max) = (1307.678, 1449.297, 1652.364), stdev = 180.755
[info]   CI (99.9%): [753.275, 2145.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3678.919 ±(99.9%) 1786.595 B/op [Average]
[info]   (min, avg, max) = (3319.215, 3678.919, 4201.214), stdev = 463.973
[info]   CI (99.9%): [1892.325, 5465.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.468 ±(99.9%) 3.699 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.468, 2.187), stdev = 0.961
[info]   CI (99.9%): [≈ 0, 4.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.190 ±(99.9%) 9.401 B/op [Average]
[info]   (min, avg, max) = (0.053, 1.190, 5.557), stdev = 2.441
[info]   CI (99.9%): [≈ 0, 10.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 11.000), stdev = 2.168
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 60.94% complete, ETA 00:35:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 168.559 ops/s
[info] # Warmup Iteration   2: 543.477 ops/s
[info] # Warmup Iteration   3: 849.383 ops/s
[info] Iteration   1: 931.130 ops/s
[info]                  ·gc.alloc.rate:                   1993.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              3367814.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1909.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3226733.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2883.021 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 911.911 ops/s
[info]                  ·gc.alloc.rate:                   1951.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              3366868.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1909.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3295032.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1148.495 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 921.234 ops/s
[info]                  ·gc.alloc.rate:                   1979.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              3381759.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1925.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3289594.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.237 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2113.675 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 893.983 ops/s
[info]                  ·gc.alloc.rate:                   1941.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              3417595.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1947.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3426910.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 109.837 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 946.464 ops/s
[info]                  ·gc.alloc.rate:                   2039.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              3390427.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3284135.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 449.825 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce":
[info]   920.944 ±(99.9%) 76.132 ops/s [Average]
[info]   (min, avg, max) = (893.983, 920.944, 946.464), stdev = 19.771
[info]   CI (99.9%): [844.813, 997.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1981.246 ±(99.9%) 149.171 MB/sec [Average]
[info]   (min, avg, max) = (1941.966, 1981.246, 2039.753), stdev = 38.739
[info]   CI (99.9%): [1832.074, 2130.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3384893.082 ±(99.9%) 79998.591 B/op [Average]
[info]   (min, avg, max) = (3366868.530, 3384893.082, 3417595.620), stdev = 20775.380
[info]   CI (99.9%): [3304894.491, 3464891.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1933.696 ±(99.9%) 108.304 MB/sec [Average]
[info]   (min, avg, max) = (1909.746, 1933.696, 1975.806), stdev = 28.126
[info]   CI (99.9%): [1825.392, 2042.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3304481.334 ±(99.9%) 283998.978 B/op [Average]
[info]   (min, avg, max) = (3226733.871, 3304481.334, 3426910.391), stdev = 73753.633
[info]   CI (99.9%): [3020482.357, 3588480.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.788 ±(99.9%) 2.622 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.788, 1.706), stdev = 0.681
[info]   CI (99.9%): [≈ 0, 3.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1340.971 ±(99.9%) 4441.560 B/op [Average]
[info]   (min, avg, max) = (109.837, 1340.971, 2883.021), stdev = 1153.459
[info]   CI (99.9%): [≈ 0, 5782.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.800, 16.000), stdev = 3.564
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.18% complete, ETA 00:35:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 149.514 ops/s
[info] # Warmup Iteration   2: 521.255 ops/s
[info] # Warmup Iteration   3: 844.557 ops/s
[info] Iteration   1: 874.182 ops/s
[info]                  ·gc.alloc.rate:                   1856.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              3340077.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2901859.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 786.432 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 869.356 ops/s
[info]                  ·gc.alloc.rate:                   1845.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              3340035.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1958.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3545874.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 602.630 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 887.989 ops/s
[info]                  ·gc.alloc.rate:               1875.157 MB/sec
[info]                  ·gc.alloc.rate.norm:          3321936.558 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1648.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2919853.642 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 877.028 ops/s
[info]                  ·gc.alloc.rate:                   1892.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              3394805.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3579250.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.321 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 838.558 ops/s
[info]                  ·gc.alloc.rate:                   1886.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              3539513.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3143853.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.357 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 670.503 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala":
[info]   869.423 ±(99.9%) 71.467 ops/s [Average]
[info]   (min, avg, max) = (838.558, 869.423, 887.989), stdev = 18.560
[info]   CI (99.9%): [797.955, 940.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1871.247 ±(99.9%) 77.082 MB/sec [Average]
[info]   (min, avg, max) = (1845.251, 1871.247, 1892.381), stdev = 20.018
[info]   CI (99.9%): [1794.165, 1948.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3387273.560 ±(99.9%) 344205.274 B/op [Average]
[info]   (min, avg, max) = (3321936.558, 3387273.560, 3539513.411), stdev = 89389.017
[info]   CI (99.9%): [3043068.286, 3731478.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1778.260 ±(99.9%) 705.906 MB/sec [Average]
[info]   (min, avg, max) = (1612.909, 1778.260, 1995.197), stdev = 183.321
[info]   CI (99.9%): [1072.355, 2484.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3218138.252 ±(99.9%) 1265945.122 B/op [Average]
[info]   (min, avg, max) = (2901859.182, 3218138.252, 3579250.879), stdev = 328761.928
[info]   CI (99.9%): [1952193.130, 4484083.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.230 ±(99.9%) 0.785 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.230, 0.437), stdev = 0.204
[info]   CI (99.9%): [≈ 0, 1.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   419.377 ±(99.9%) 1432.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 419.377, 786.432), stdev = 371.893
[info]   CI (99.9%): [≈ 0, 1851.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.800, 10.000), stdev = 0.837
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.41% complete, ETA 00:35:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16395.487 ops/s
[info] # Warmup Iteration   2: 43417.301 ops/s
[info] # Warmup Iteration   3: 46855.988 ops/s
[info] Iteration   1: 43705.321 ops/s
[info]                  ·gc.alloc.rate:                   892.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              32150.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          624.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22500.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 210.800 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 44892.905 ops/s
[info]                  ·gc.alloc.rate:                   753.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              26402.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          936.037 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32812.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.460 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 44732.384 ops/s
[info]                  ·gc.alloc.rate:                   742.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              26118.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:          627.120 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22055.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.239 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.418 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 44836.460 ops/s
[info]                  ·gc.alloc.rate:                   746.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              26206.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          628.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22050.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69.974 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 45254.165 ops/s
[info]                  ·gc.alloc.rate:                   763.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              26536.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          942.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32759.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 105.404 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala":
[info]   44684.247 ±(99.9%) 2238.784 ops/s [Average]
[info]   (min, avg, max) = (43705.321, 44684.247, 45254.165), stdev = 581.405
[info]   CI (99.9%): [42445.463, 46923.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   779.708 ±(99.9%) 245.366 MB/sec [Average]
[info]   (min, avg, max) = (742.646, 779.708, 892.836), stdev = 63.721
[info]   CI (99.9%): [534.342, 1025.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   27482.721 ±(99.9%) 10068.007 B/op [Average]
[info]   (min, avg, max) = (26118.265, 27482.721, 32150.741), stdev = 2614.629
[info]   CI (99.9%): [17414.714, 37550.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   751.701 ±(99.9%) 659.004 MB/sec [Average]
[info]   (min, avg, max) = (624.846, 751.701, 942.276), stdev = 171.141
[info]   CI (99.9%): [92.697, 1410.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   26435.709 ±(99.9%) 22333.065 B/op [Average]
[info]   (min, avg, max) = (22050.916, 26435.709, 32812.519), stdev = 5799.826
[info]   CI (99.9%): [4102.644, 48768.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   2.232 ±(99.9%) 9.150 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.232, 5.854), stdev = 2.376
[info]   CI (99.9%): [≈ 0, 11.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   79.211 ±(99.9%) 328.684 B/op [Average]
[info]   (min, avg, max) = (1.460, 79.211, 210.800), stdev = 85.358
[info]   CI (99.9%): [≈ 0, 407.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 13.800, 19.000), stdev = 3.962
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 61.65% complete, ETA 00:34:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131.849 ops/s
[info] # Warmup Iteration   2: 424.775 ops/s
[info] # Warmup Iteration   3: 780.424 ops/s
[info] Iteration   1: 859.489 ops/s
[info]                  ·gc.alloc.rate:                   1894.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              3467444.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1940.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3551746.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1524.093 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 862.492 ops/s
[info]                  ·gc.alloc.rate:                   1886.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              3441029.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2976230.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 721.428 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 832.035 ops/s
[info]                  ·gc.alloc.rate:                   1915.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              3621400.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3729808.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2086.127 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 880.338 ops/s
[info]                  ·gc.alloc.rate:                   1930.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              3450366.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1992.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3561706.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74.388 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 835.676 ops/s
[info]                  ·gc.alloc.rate:                   1893.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              3566411.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3149490.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.392 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson":
[info]   854.006 ±(99.9%) 77.352 ops/s [Average]
[info]   (min, avg, max) = (832.035, 854.006, 880.338), stdev = 20.088
[info]   CI (99.9%): [776.654, 931.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1904.217 ±(99.9%) 70.790 MB/sec [Average]
[info]   (min, avg, max) = (1886.075, 1904.217, 1930.425), stdev = 18.384
[info]   CI (99.9%): [1833.427, 1975.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3509330.507 ±(99.9%) 308737.436 B/op [Average]
[info]   (min, avg, max) = (3441029.506, 3509330.507, 3621400.384), stdev = 80178.132
[info]   CI (99.9%): [3200593.071, 3818067.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1842.128 ±(99.9%) 674.819 MB/sec [Average]
[info]   (min, avg, max) = (1631.313, 1842.128, 1992.718), stdev = 175.248
[info]   CI (99.9%): [1167.309, 2516.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3393796.648 ±(99.9%) 1217821.913 B/op [Average]
[info]   (min, avg, max) = (2976230.489, 3393796.648, 3729808.749), stdev = 316264.483
[info]   CI (99.9%): [2175974.735, 4611618.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.483 ±(99.9%) 1.832 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.483, 1.104), stdev = 0.476
[info]   CI (99.9%): [≈ 0, 2.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   896.886 ±(99.9%) 3435.987 B/op [Average]
[info]   (min, avg, max) = (74.388, 896.886, 2086.127), stdev = 892.315
[info]   CI (99.9%): [≈ 0, 4332.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.400, 12.000), stdev = 1.673
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 61.88% complete, ETA 00:34:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3775.283 ops/s
[info] # Warmup Iteration   2: 12381.928 ops/s
[info] # Warmup Iteration   3: 14774.993 ops/s
[info] Iteration   1: 16902.199 ops/s
[info]                  ·gc.alloc.rate:                   1283.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              119464.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1515.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     141143.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.066 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.132 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         41.000 ms
[info] Iteration   2: 17125.238 ops/s
[info]                  ·gc.alloc.rate:                   1292.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              118719.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1228.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112920.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 433.385 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   3: 17281.427 ops/s
[info]                  ·gc.alloc.rate:                   1303.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              118712.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1233.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112349.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.108 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 282.989 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   4: 17148.647 ops/s
[info]                  ·gc.alloc.rate:                   1284.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              117848.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1228.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112738.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.464 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 317.893 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 16260.468 ops/s
[info]                  ·gc.alloc.rate:               1669.370 MB/sec
[info]                  ·gc.alloc.rate.norm:          161507.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1535.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 148553.102 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce":
[info]   16943.596 ±(99.9%) 1561.229 ops/s [Average]
[info]   (min, avg, max) = (16260.468, 16943.596, 17281.427), stdev = 405.446
[info]   CI (99.9%): [15382.367, 18504.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1366.424 ±(99.9%) 652.895 MB/sec [Average]
[info]   (min, avg, max) = (1283.024, 1366.424, 1669.370), stdev = 169.555
[info]   CI (99.9%): [713.529, 2019.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   127250.522 ±(99.9%) 73773.869 B/op [Average]
[info]   (min, avg, max) = (117848.347, 127250.522, 161507.604), stdev = 19158.840
[info]   CI (99.9%): [53476.652, 201024.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1348.476 ±(99.9%) 623.455 MB/sec [Average]
[info]   (min, avg, max) = (1228.331, 1348.476, 1535.470), stdev = 161.909
[info]   CI (99.9%): [725.020, 1971.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   125540.994 ±(99.9%) 68618.421 B/op [Average]
[info]   (min, avg, max) = (112349.595, 125540.994, 148553.102), stdev = 17819.986
[info]   CI (99.9%): [56922.573, 194159.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2.271 ±(99.9%) 8.196 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.271, 4.717), stdev = 2.129
[info]   CI (99.9%): [≈ 0, 10.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   208.080 ±(99.9%) 751.894 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 208.080, 433.385), stdev = 195.265
[info]   CI (99.9%): [≈ 0, 959.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time":
[info]   110.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 22.000, 41.000), stdev = 13.820
[info]   CI (99.9%): [110.000, 110.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.12% complete, ETA 00:34:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4443.545 ops/s
[info] # Warmup Iteration   2: 11594.103 ops/s
[info] # Warmup Iteration   3: 18141.611 ops/s
[info] Iteration   1: 19259.504 ops/s
[info]                  ·gc.alloc.rate:               1129.369 MB/sec
[info]                  ·gc.alloc.rate.norm:          92287.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1205.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 98477.520 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     32.000 ms
[info] Iteration   2: 19407.512 ops/s
[info]                  ·gc.alloc.rate:                   1102.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              89448.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          915.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74226.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.309 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 106.190 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 19404.198 ops/s
[info]                  ·gc.alloc.rate:                   1112.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              90217.707 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1232.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99951.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.251 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 101.476 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   4: 18785.085 ops/s
[info]                  ·gc.alloc.rate:                   1413.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              118402.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1234.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103417.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.222 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 521.276 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 18644.757 ops/s
[info]                  ·gc.alloc.rate:                   1431.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              120742.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1540.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130003.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.987 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83.314 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala":
[info]   19100.211 ±(99.9%) 1386.978 ops/s [Average]
[info]   (min, avg, max) = (18644.757, 19100.211, 19407.512), stdev = 360.194
[info]   CI (99.9%): [17713.233, 20487.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1237.837 ±(99.9%) 649.321 MB/sec [Average]
[info]   (min, avg, max) = (1102.963, 1237.837, 1431.081), stdev = 168.626
[info]   CI (99.9%): [588.516, 1887.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   102219.688 ±(99.9%) 61211.799 B/op [Average]
[info]   (min, avg, max) = (89448.415, 102219.688, 120742.843), stdev = 15896.510
[info]   CI (99.9%): [41007.889, 163431.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1225.640 ±(99.9%) 852.871 MB/sec [Average]
[info]   (min, avg, max) = (915.270, 1225.640, 1540.843), stdev = 221.488
[info]   CI (99.9%): [372.769, 2078.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   101215.509 ±(99.9%) 76313.844 B/op [Average]
[info]   (min, avg, max) = (74226.864, 101215.509, 130003.631), stdev = 19818.463
[info]   CI (99.9%): [24901.665, 177529.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.954 ±(99.9%) 9.407 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.954, 6.222), stdev = 2.443
[info]   CI (99.9%): [≈ 0, 11.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   162.451 ±(99.9%) 789.832 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 162.451, 521.276), stdev = 205.117
[info]   CI (99.9%): [≈ 0, 952.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   107.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 21.400, 32.000), stdev = 9.290
[info]   CI (99.9%): [107.000, 107.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.35% complete, ETA 00:34:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 168603.265 ops/s
[info] # Warmup Iteration   2: 310152.216 ops/s
[info] # Warmup Iteration   3: 338465.407 ops/s
[info] Iteration   1: 339926.365 ops/s
[info]                  ·gc.alloc.rate:               1232.071 MB/sec
[info]                  ·gc.alloc.rate.norm:          5704.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4552.375 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   2: 338899.013 ops/s
[info]                  ·gc.alloc.rate:                   1225.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              5689.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6075.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.290 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.568 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 330524.587 ops/s
[info]                  ·gc.alloc.rate:                   1215.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              5787.898 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6166.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.974 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 333940.948 ops/s
[info]                  ·gc.alloc.rate:                   1204.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              5677.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4561.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 334312.098 ops/s
[info]                  ·gc.alloc.rate:                   1230.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              5793.673 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6099.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala":
[info]   335520.602 ±(99.9%) 14881.176 ops/s [Average]
[info]   (min, avg, max) = (330524.587, 335520.602, 339926.365), stdev = 3864.594
[info]   CI (99.9%): [320639.426, 350401.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1221.605 ±(99.9%) 44.118 MB/sec [Average]
[info]   (min, avg, max) = (1204.760, 1221.605, 1232.071), stdev = 11.457
[info]   CI (99.9%): [1177.487, 1265.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5730.651 ±(99.9%) 214.758 B/op [Average]
[info]   (min, avg, max) = (5677.731, 5730.651, 5793.673), stdev = 55.772
[info]   CI (99.9%): [5515.894, 5945.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1170.012 ±(99.9%) 684.220 MB/sec [Average]
[info]   (min, avg, max) = (967.909, 1170.012, 1308.291), stdev = 177.690
[info]   CI (99.9%): [485.792, 1854.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5491.183 ±(99.9%) 3286.506 B/op [Average]
[info]   (min, avg, max) = (4552.375, 5491.183, 6166.545), stdev = 853.495
[info]   CI (99.9%): [2204.677, 8777.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.191 ±(99.9%) 8.882 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.191, 5.290), stdev = 2.307
[info]   CI (99.9%): [≈ 0, 10.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.548 ±(99.9%) 41.229 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.548, 24.568), stdev = 10.707
[info]   CI (99.9%): [≈ 0, 46.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 14.000), stdev = 4.494
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 62.59% complete, ETA 00:34:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 185232.862 ops/s
[info] # Warmup Iteration   2: 360279.780 ops/s
[info] # Warmup Iteration   3: 385717.848 ops/s
[info] Iteration   1: 386876.162 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 385752.792 ops/s
[info]                  ·gc.alloc.rate:      3.417 MB/sec
[info]                  ·gc.alloc.rate.norm: 13.943 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 388306.613 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 380627.855 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 376357.833 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   383584.251 ±(99.9%) 19137.482 ops/s [Average]
[info]   (min, avg, max) = (376357.833, 383584.251, 388306.613), stdev = 4969.943
[info]   CI (99.9%): [364446.769, 402721.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.684 ±(99.9%) 5.884 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.684, 3.417), stdev = 1.528
[info]   CI (99.9%): [≈ 0, 6.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2.789 ±(99.9%) 24.008 B/op [Average]
[info]   (min, avg, max) = (0.001, 2.789, 13.943), stdev = 6.235
[info]   CI (99.9%): [≈ 0, 26.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 62.82% complete, ETA 00:33:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3115.600 ops/s
[info] # Warmup Iteration   2: 11496.132 ops/s
[info] # Warmup Iteration   3: 14768.072 ops/s
[info] Iteration   1: 16010.096 ops/s
[info]                  ·gc.alloc.rate:                   1778.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              174416.650 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1733.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170004.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      22.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2222.898 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         41.000 ms
[info] Iteration   2: 18978.368 ops/s
[info]                  ·gc.alloc.rate:                   1145.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              94976.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1171.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97168.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.996 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 911.911 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 19808.203 ops/s
[info]                  ·gc.alloc.rate:                   1229.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              97683.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1172.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93150.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.964 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 19251.639 ops/s
[info]                  ·gc.alloc.rate:                   1391.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              113691.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1183.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96716.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.807 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 18478.055 ops/s
[info]                  ·gc.alloc.rate:                   1560.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              132843.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1806.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153768.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      17.358 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1477.758 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson":
[info]   18505.272 ±(99.9%) 5680.566 ops/s [Average]
[info]   (min, avg, max) = (16010.096, 18505.272, 19808.203), stdev = 1475.225
[info]   CI (99.9%): [12824.706, 24185.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1420.989 ±(99.9%) 983.298 MB/sec [Average]
[info]   (min, avg, max) = (1145.270, 1420.989, 1778.462), stdev = 255.359
[info]   CI (99.9%): [437.690, 2404.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   122722.463 ±(99.9%) 125560.668 B/op [Average]
[info]   (min, avg, max) = (94976.553, 122722.463, 174416.650), stdev = 32607.707
[info]   CI (99.9%): [≈ 0, 248283.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1413.474 ±(99.9%) 1256.774 MB/sec [Average]
[info]   (min, avg, max) = (1171.697, 1413.474, 1806.241), stdev = 326.380
[info]   CI (99.9%): [156.700, 2670.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   122161.458 ±(99.9%) 141504.009 B/op [Average]
[info]   (min, avg, max) = (93150.301, 122161.458, 170004.197), stdev = 36748.142
[info]   CI (99.9%): [≈ 0, 263665.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   10.342 ±(99.9%) 38.584 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 10.342, 22.666), stdev = 10.020
[info]   CI (99.9%): [≈ 0, 48.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   933.468 ±(99.9%) 3654.138 B/op [Average]
[info]   (min, avg, max) = (6.807, 933.468, 2222.898), stdev = 948.968
[info]   CI (99.9%): [≈ 0, 4587.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time":
[info]   87.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 17.400, 41.000), stdev = 14.328
[info]   CI (99.9%): [87.000, 87.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.06% complete, ETA 00:33:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 767833.415 ops/s
[info] # Warmup Iteration   2: 1346858.230 ops/s
[info] # Warmup Iteration   3: 1400790.980 ops/s
[info] Iteration   1: 1402782.593 ops/s
[info]                  ·gc.alloc.rate:      57.053 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1401920.460 ops/s
[info]                  ·gc.alloc.rate:      57.012 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1402008.102 ops/s
[info]                  ·gc.alloc.rate:      57.014 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1394975.315 ops/s
[info]                  ·gc.alloc.rate:                   62.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              71.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     288.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1401444.232 ops/s
[info]                  ·gc.alloc.rate:      56.999 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala":
[info]   1400626.140 ±(99.9%) 12303.466 ops/s [Average]
[info]   (min, avg, max) = (1394975.315, 1400626.140, 1402782.593), stdev = 3195.171
[info]   CI (99.9%): [1388322.675, 1412929.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   58.212 ±(99.9%) 10.264 MB/sec [Average]
[info]   (min, avg, max) = (56.999, 58.212, 62.980), stdev = 2.666
[info]   CI (99.9%): [47.947, 68.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   65.411 ±(99.9%) 12.148 B/op [Average]
[info]   (min, avg, max) = (64.000, 65.411, 71.055), stdev = 3.155
[info]   CI (99.9%): [53.264, 77.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   51.163 ±(99.9%) 440.532 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.163, 255.817), stdev = 114.405
[info]   CI (99.9%): [≈ 0, 491.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   57.723 ±(99.9%) 497.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 57.723, 288.616), stdev = 129.073
[info]   CI (99.9%): [≈ 0, 554.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.081 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.047), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 4.000), stdev = 1.789
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 63.29% complete, ETA 00:33:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2590.994 ops/s
[info] # Warmup Iteration   2: 60934.581 ops/s
[info] # Warmup Iteration   3: 113021.025 ops/s
[info] Iteration   1: 129899.569 ops/s
[info]                  ·gc.alloc.rate:                   4257.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              51585.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3938.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47723.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.869 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.644 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 127406.914 ops/s
[info]                  ·gc.alloc.rate:                   4195.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              51824.923 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4326.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53440.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.771 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 131033.122 ops/s
[info]                  ·gc.alloc.rate:                   4332.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              52045.434 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4044.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48586.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.500 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 131551.334 ops/s
[info]                  ·gc.alloc.rate:                   4350.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              52052.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4070.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48695.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.498 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   5: 126795.505 ops/s
[info]                  ·gc.alloc.rate:                   4199.820 MB/sec
[info]                  ·gc.alloc.rate.norm:              52130.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4079.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50638.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.775 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson":
[info]   129337.289 ±(99.9%) 8231.965 ops/s [Average]
[info]   (min, avg, max) = (126795.505, 129337.289, 131551.334), stdev = 2137.815
[info]   CI (99.9%): [121105.323, 137569.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4267.417 ±(99.9%) 279.028 MB/sec [Average]
[info]   (min, avg, max) = (4195.916, 4267.417, 4350.722), stdev = 72.463
[info]   CI (99.9%): [3988.389, 4546.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51927.957 ±(99.9%) 857.097 B/op [Average]
[info]   (min, avg, max) = (51585.851, 51927.957, 52130.786), stdev = 222.585
[info]   CI (99.9%): [51070.860, 52785.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4092.055 ±(99.9%) 549.209 MB/sec [Average]
[info]   (min, avg, max) = (3938.936, 4092.055, 4326.719), stdev = 142.628
[info]   CI (99.9%): [3542.847, 4641.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   49816.833 ±(99.9%) 8814.312 B/op [Average]
[info]   (min, avg, max) = (47723.444, 49816.833, 53440.504), stdev = 2289.049
[info]   CI (99.9%): [41002.521, 58631.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.415 ±(99.9%) 3.129 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.415, 1.869), stdev = 0.813
[info]   CI (99.9%): [≈ 0, 3.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.038 ±(99.9%) 37.902 B/op [Average]
[info]   (min, avg, max) = (0.498, 5.038, 22.644), stdev = 9.843
[info]   CI (99.9%): [≈ 0, 42.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.count":
[info]   61.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (12.000, 12.200, 13.000), stdev = 0.447
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.time":
[info]   91.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 18.200, 19.000), stdev = 0.837
[info]   CI (99.9%): [91.000, 91.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.53% complete, ETA 00:33:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 317524.434 ops/s
[info] # Warmup Iteration   2: 1961038.261 ops/s
[info] # Warmup Iteration   3: 2141237.453 ops/s
[info] Iteration   1: 2215377.358 ops/s
[info]                  ·gc.alloc.rate:                   614.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     460.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 2220703.169 ops/s
[info]                  ·gc.alloc.rate:                   619.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.645 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     460.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2218491.628 ops/s
[info]                  ·gc.alloc.rate:               615.660 MB/sec
[info]                  ·gc.alloc.rate.norm:          436.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 461.452 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 2108354.317 ops/s
[info]                  ·gc.alloc.rate:                        586.610 MB/sec
[info]                  ·gc.alloc.rate.norm:                   437.899 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.025 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.019 B/op
[info]                  ·gc.churn.Metaspace:                   0.070 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:               658.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          491.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           4.947 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      3.693 B/op
[info]                  ·gc.count:                             4.000 counts
[info]                  ·gc.time:                              50.000 ms
[info] Iteration   5: 2216531.206 ops/s
[info]                  ·gc.alloc.rate:               610.172 MB/sec
[info]                  ·gc.alloc.rate.norm:          433.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 232.014 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala":
[info]   2195891.536 ±(99.9%) 188591.544 ops/s [Average]
[info]   (min, avg, max) = (2108354.317, 2195891.536, 2220703.169), stdev = 48976.625
[info]   CI (99.9%): [2007299.992, 2384483.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   609.251 ±(99.9%) 50.236 MB/sec [Average]
[info]   (min, avg, max) = (586.610, 609.251, 619.036), stdev = 13.046
[info]   CI (99.9%): [559.015, 659.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   436.644 ±(99.9%) 8.097 B/op [Average]
[info]   (min, avg, max) = (433.167, 436.644, 438.645), stdev = 2.103
[info]   CI (99.9%): [428.546, 444.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.005 ±(99.9%) 0.043 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.025), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.004 ±(99.9%) 0.032 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.019), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.014 ±(99.9%) 0.120 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.070), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.010 ±(99.9%) 0.089 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   586.814 ±(99.9%) 559.889 MB/sec [Average]
[info]   (min, avg, max) = (326.821, 586.814, 658.974), stdev = 145.401
[info]   CI (99.9%): [26.925, 1146.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   421.236 ±(99.9%) 410.622 B/op [Average]
[info]   (min, avg, max) = (232.014, 421.236, 491.918), stdev = 106.637
[info]   CI (99.9%): [10.615, 831.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.999 ±(99.9%) 8.497 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.999, 4.947), stdev = 2.207
[info]   CI (99.9%): [≈ 0, 9.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.746 ±(99.9%) 6.344 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.746, 3.693), stdev = 1.647
[info]   CI (99.9%): [≈ 0, 7.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 4.000), stdev = 1.095
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 15.600, 50.000), stdev = 19.540
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.76% complete, ETA 00:32:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 775509.970 ops/s
[info] # Warmup Iteration   2: 1629530.894 ops/s
[info] # Warmup Iteration   3: 1914531.774 ops/s
[info] Iteration   1: 1877588.196 ops/s
[info]                  ·gc.alloc.rate:               515.218 MB/sec
[info]                  ·gc.alloc.rate.norm:          431.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 274.727 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1861793.363 ops/s
[info]                  ·gc.alloc.rate:                   518.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     555.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1898161.403 ops/s
[info]                  ·gc.alloc.rate:               522.329 MB/sec
[info]                  ·gc.alloc.rate.norm:          433.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 272.581 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1865573.486 ops/s
[info]                  ·gc.alloc.rate:                   523.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              441.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     554.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1873483.432 ops/s
[info]                  ·gc.alloc.rate:               514.338 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 276.448 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala":
[info]   1875319.976 ±(99.9%) 54735.105 ops/s [Average]
[info]   (min, avg, max) = (1861793.363, 1875319.976, 1898161.403), stdev = 14214.533
[info]   CI (99.9%): [1820584.871, 1930055.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   518.860 ±(99.9%) 15.873 MB/sec [Average]
[info]   (min, avg, max) = (514.338, 518.860, 523.575), stdev = 4.122
[info]   CI (99.9%): [502.986, 534.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   435.456 ±(99.9%) 17.033 B/op [Average]
[info]   (min, avg, max) = (431.880, 435.456, 441.712), stdev = 4.423
[info]   CI (99.9%): [418.423, 452.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   460.060 ±(99.9%) 693.576 MB/sec [Average]
[info]   (min, avg, max) = (327.739, 460.060, 657.797), stdev = 180.119
[info]   CI (99.9%): [≈ 0, 1153.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   386.788 ±(99.9%) 591.636 B/op [Average]
[info]   (min, avg, max) = (272.581, 386.788, 555.235), stdev = 153.646
[info]   CI (99.9%): [≈ 0, 978.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.074 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.035), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 64.00% complete, ETA 00:32:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1047869.647 ops/s
[info] # Warmup Iteration   2: 1889098.412 ops/s
[info] # Warmup Iteration   3: 1961356.518 ops/s
[info] Iteration   1: 1961957.386 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1960543.783 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1960247.435 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1959881.486 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1962785.590 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   1961083.136 ±(99.9%) 4753.604 ops/s [Average]
[info]   (min, avg, max) = (1959881.486, 1961083.136, 1962785.590), stdev = 1234.496
[info]   CI (99.9%): [1956329.531, 1965836.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 64.24% complete, ETA 00:32:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5880.434 ops/s
[info] # Warmup Iteration   2: 38925.456 ops/s
[info] # Warmup Iteration   3: 52590.783 ops/s
[info] Iteration   1: 53203.704 ops/s
[info]                  ·gc.alloc.rate:                   2275.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              67279.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2297.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67924.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.240 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.245 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 60831.692 ops/s
[info]                  ·gc.alloc.rate:                   1977.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              51170.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51169.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.907 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 55952.409 ops/s
[info]                  ·gc.alloc.rate:                   1971.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              55456.707 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46487.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.270 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 56230.134 ops/s
[info]                  ·gc.alloc.rate:                   1954.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              54713.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55841.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.748 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 55342.801 ops/s
[info]                  ·gc.alloc.rate:                   1949.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              55450.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57117.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.184 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson":
[info]   56312.148 ±(99.9%) 10748.139 ops/s [Average]
[info]   (min, avg, max) = (53203.704, 56312.148, 60831.692), stdev = 2791.257
[info]   CI (99.9%): [45564.010, 67060.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2025.892 ±(99.9%) 538.912 MB/sec [Average]
[info]   (min, avg, max) = (1949.885, 2025.892, 2275.397), stdev = 139.954
[info]   CI (99.9%): [1486.979, 2564.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   56814.073 ±(99.9%) 23539.573 B/op [Average]
[info]   (min, avg, max) = (51170.502, 56814.073, 67279.192), stdev = 6113.152
[info]   CI (99.9%): [33274.500, 80353.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1986.259 ±(99.9%) 879.370 MB/sec [Average]
[info]   (min, avg, max) = (1652.675, 1986.259, 2297.206), stdev = 228.370
[info]   CI (99.9%): [1106.889, 2865.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   55708.073 ±(99.9%) 30856.514 B/op [Average]
[info]   (min, avg, max) = (46487.207, 55708.073, 67924.031), stdev = 8013.339
[info]   CI (99.9%): [24851.559, 86564.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.823 ±(99.9%) 3.935 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.823, 2.240), stdev = 1.022
[info]   CI (99.9%): [≈ 0, 4.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   23.071 ±(99.9%) 112.803 B/op [Average]
[info]   (min, avg, max) = (1.184, 23.071, 66.245), stdev = 29.295
[info]   CI (99.9%): [≈ 0, 135.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.600, 19.000), stdev = 4.827
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce
[info] # Run progress: 64.47% complete, ETA 00:32:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52601.277 ops/s
[info] # Warmup Iteration   2: 517279.141 ops/s
[info] # Warmup Iteration   3: 1038213.825 ops/s
[info] Iteration   1: 1184318.351 ops/s
[info]                  ·gc.alloc.rate:                   3406.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              4526.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3236.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4301.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.960 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.934 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 1205695.144 ops/s
[info]                  ·gc.alloc.rate:                   3487.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              4551.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3259.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4253.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1219560.987 ops/s
[info]                  ·gc.alloc.rate:                   3540.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              4569.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3313.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4275.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1205086.929 ops/s
[info]                  ·gc.alloc.rate:                   3518.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              4594.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3696.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4827.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 1212513.042 ops/s
[info]                  ·gc.alloc.rate:                   3523.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              4572.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3385.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4394.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce":
[info]   1205434.891 ±(99.9%) 50784.135 ops/s [Average]
[info]   (min, avg, max) = (1184318.351, 1205434.891, 1219560.987), stdev = 13188.479
[info]   CI (99.9%): [1154650.755, 1256219.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate":
[info]   3495.089 ±(99.9%) 205.009 MB/sec [Average]
[info]   (min, avg, max) = (3406.221, 3495.089, 3540.569), stdev = 53.240
[info]   CI (99.9%): [3290.080, 3700.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4562.953 ±(99.9%) 97.353 B/op [Average]
[info]   (min, avg, max) = (4526.647, 4562.953, 4594.257), stdev = 25.282
[info]   CI (99.9%): [4465.600, 4660.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3378.317 ±(99.9%) 720.557 MB/sec [Average]
[info]   (min, avg, max) = (3236.626, 3378.317, 3696.918), stdev = 187.126
[info]   CI (99.9%): [2657.759, 4098.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4410.628 ±(99.9%) 921.309 B/op [Average]
[info]   (min, avg, max) = (4253.851, 4410.628, 4827.789), stdev = 239.261
[info]   CI (99.9%): [3489.319, 5331.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.638 ±(99.9%) 4.999 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.638, 2.960), stdev = 1.298
[info]   CI (99.9%): [≈ 0, 5.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.846 ±(99.9%) 6.646 B/op [Average]
[info]   (min, avg, max) = (0.054, 0.846, 3.934), stdev = 1.726
[info]   CI (99.9%): [≈ 0, 7.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.count":
[info]   51.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 15.600, 23.000), stdev = 4.219
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava
[info] # Run progress: 64.71% complete, ETA 00:32:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.527 ops/s
[info] # Warmup Iteration   2: 4281644.683 ops/s
[info] # Warmup Iteration   3: 5342753.175 ops/s
[info] Iteration   1: 5085819.138 ops/s
[info]                  ·gc.alloc.rate:               379.827 MB/sec
[info]                  ·gc.alloc.rate.norm:          117.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 100.809 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 5361816.496 ops/s
[info]                  ·gc.alloc.rate:                   335.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.372 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 5349983.444 ops/s
[info]                  ·gc.alloc.rate:               334.150 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 95.833 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 5321927.519 ops/s
[info]                  ·gc.alloc.rate:                   333.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5328828.656 ops/s
[info]                  ·gc.alloc.rate:                   332.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava":
[info]   5289675.050 ±(99.9%) 443125.095 ops/s [Average]
[info]   (min, avg, max) = (5085819.138, 5289675.050, 5361816.496), stdev = 115078.180
[info]   CI (99.9%): [4846549.955, 5732800.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   343.134 ±(99.9%) 79.060 MB/sec [Average]
[info]   (min, avg, max) = (332.691, 343.134, 379.827), stdev = 20.532
[info]   CI (99.9%): [264.074, 422.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   102.233 ±(99.9%) 32.900 B/op [Average]
[info]   (min, avg, max) = (98.259, 102.233, 117.514), stdev = 8.544
[info]   CI (99.9%): [69.333, 135.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   325.849 ±(99.9%) 0.513 MB/sec [Average]
[info]   (min, avg, max) = (325.755, 325.849, 326.082), stdev = 0.133
[info]   CI (99.9%): [325.337, 326.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   96.981 ±(99.9%) 8.324 B/op [Average]
[info]   (min, avg, max) = (95.622, 96.981, 100.809), stdev = 2.162
[info]   CI (99.9%): [88.658, 105.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.623 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.372), stdev = 0.162
[info]   CI (99.9%): [≈ 0, 0.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.109), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala
[info] # Run progress: 64.94% complete, ETA 00:31:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28264.360 ops/s
[info] # Warmup Iteration   2: 680225.160 ops/s
[info] # Warmup Iteration   3: 1045483.113 ops/s
[info] Iteration   1: 1098113.883 ops/s
[info]                  ·gc.alloc.rate:                   1276.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              1829.763 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1854.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1098661.381 ops/s
[info]                  ·gc.alloc.rate:                   1236.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              1771.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1399.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1106057.048 ops/s
[info]                  ·gc.alloc.rate:                   1255.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              1786.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1865.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.540 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1108319.768 ops/s
[info]                  ·gc.alloc.rate:                   1244.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              1766.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1869.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.325 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1113395.769 ops/s
[info]                  ·gc.alloc.rate:               1243.176 MB/sec
[info]                  ·gc.alloc.rate.norm:          1757.277 B/op
[info]                  ·gc.churn.PS_Eden_Space:      992.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1402.580 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala":
[info]   1104909.570 ±(99.9%) 25116.632 ops/s [Average]
[info]   (min, avg, max) = (1098113.883, 1104909.570, 1113395.769), stdev = 6522.710
[info]   CI (99.9%): [1079792.938, 1130026.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1251.208 ±(99.9%) 60.499 MB/sec [Average]
[info]   (min, avg, max) = (1236.654, 1251.208, 1276.638), stdev = 15.711
[info]   CI (99.9%): [1190.708, 1311.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1782.323 ±(99.9%) 109.694 B/op [Average]
[info]   (min, avg, max) = (1757.277, 1782.323, 1829.763), stdev = 28.487
[info]   CI (99.9%): [1672.629, 1892.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1178.039 ±(99.9%) 681.025 MB/sec [Average]
[info]   (min, avg, max) = (976.966, 1178.039, 1316.301), stdev = 176.860
[info]   CI (99.9%): [497.014, 1859.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1678.178 ±(99.9%) 974.486 B/op [Average]
[info]   (min, avg, max) = (1399.465, 1678.178, 1869.231), stdev = 253.071
[info]   CI (99.9%): [703.692, 2652.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.275 ±(99.9%) 1.774 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.275, 1.083), stdev = 0.461
[info]   CI (99.9%): [≈ 0, 2.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.391 ±(99.9%) 2.524 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.391, 1.540), stdev = 0.655
[info]   CI (99.9%): [≈ 0, 2.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 7.000), stdev = 1.304
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala
[info] # Run progress: 65.18% complete, ETA 00:31:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3107553.800 ops/s
[info] # Warmup Iteration   2: 9339928.515 ops/s
[info] # Warmup Iteration   3: 10128757.276 ops/s
[info] Iteration   1: 10276408.788 ops/s
[info]                  ·gc.alloc.rate:               487.027 MB/sec
[info]                  ·gc.alloc.rate.norm:          74.591 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 100.697 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 10121687.344 ops/s
[info]                  ·gc.alloc.rate:               474.958 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 51.169 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 10388429.655 ops/s
[info]                  ·gc.alloc.rate:                   484.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              73.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 10453070.081 ops/s
[info]                  ·gc.alloc.rate:               495.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          74.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 99.294 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 10361435.323 ops/s
[info]                  ·gc.alloc.rate:               485.741 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 50.138 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala":
[info]   10320206.238 ±(99.9%) 492126.157 ops/s [Average]
[info]   (min, avg, max) = (10121687.344, 10320206.238, 10453070.081), stdev = 127803.600
[info]   CI (99.9%): [9828080.082, 10812332.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   485.502 ±(99.9%) 28.421 MB/sec [Average]
[info]   (min, avg, max) = (474.958, 485.502, 495.628), stdev = 7.381
[info]   CI (99.9%): [457.081, 513.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   74.034 ±(99.9%) 2.142 B/op [Average]
[info]   (min, avg, max) = (73.350, 74.034, 74.625), stdev = 0.556
[info]   CI (99.9%): [71.891, 76.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   461.066 ±(99.9%) 693.924 MB/sec [Average]
[info]   (min, avg, max) = (329.079, 461.066, 659.468), stdev = 180.210
[info]   CI (99.9%): [≈ 0, 1154.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   70.231 ±(99.9%) 104.662 B/op [Average]
[info]   (min, avg, max) = (49.855, 70.231, 100.697), stdev = 27.180
[info]   CI (99.9%): [≈ 0, 174.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson
[info] # Run progress: 65.41% complete, ETA 00:31:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 524.755 ops/s
[info] # Warmup Iteration   2: 175646.507 ops/s
[info] # Warmup Iteration   3: 681850.427 ops/s
[info] Iteration   1: 779600.032 ops/s
[info]                  ·gc.alloc.rate:                   2852.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              5759.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2619.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5287.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.547 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 776998.556 ops/s
[info]                  ·gc.alloc.rate:                   2868.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              5807.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2957.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5987.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 768792.704 ops/s
[info]                  ·gc.alloc.rate:                   2856.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              5848.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2662.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5450.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 778585.167 ops/s
[info]                  ·gc.alloc.rate:                   2871.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              5804.245 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2688.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5434.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 761250.213 ops/s
[info]                  ·gc.alloc.rate:                   2814.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              5818.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2704.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5591.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson":
[info]   773045.334 ±(99.9%) 30227.648 ops/s [Average]
[info]   (min, avg, max) = (761250.213, 773045.334, 779600.032), stdev = 7850.024
[info]   CI (99.9%): [742817.687, 803272.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2852.866 ±(99.9%) 88.172 MB/sec [Average]
[info]   (min, avg, max) = (2814.359, 2852.866, 2871.374), stdev = 22.898
[info]   CI (99.9%): [2764.694, 2941.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   5807.588 ±(99.9%) 124.015 B/op [Average]
[info]   (min, avg, max) = (5759.012, 5807.588, 5848.336), stdev = 32.206
[info]   CI (99.9%): [5683.572, 5931.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2726.422 ±(99.9%) 512.354 MB/sec [Average]
[info]   (min, avg, max) = (2619.517, 2726.422, 2957.431), stdev = 133.057
[info]   CI (99.9%): [2214.068, 3238.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   5550.162 ±(99.9%) 1027.531 B/op [Average]
[info]   (min, avg, max) = (5287.837, 5550.162, 5987.163), stdev = 266.846
[info]   CI (99.9%): [4522.631, 6577.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.587 ±(99.9%) 4.654 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.587, 2.748), stdev = 1.209
[info]   CI (99.9%): [≈ 0, 5.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.186 ±(99.9%) 9.393 B/op [Average]
[info]   (min, avg, max) = (0.042, 1.186, 5.547), stdev = 2.439
[info]   CI (99.9%): [≈ 0, 10.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.400, 17.000), stdev = 2.074
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce
[info] # Run progress: 65.65% complete, ETA 00:31:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 489.764 ops/s
[info] # Warmup Iteration   2: 2770.162 ops/s
[info] # Warmup Iteration   3: 4391.010 ops/s
[info] Iteration   1: 5051.199 ops/s
[info]                  ·gc.alloc.rate:                   2257.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              703236.536 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2284.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     711778.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1239.582 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 5000.602 ops/s
[info]                  ·gc.alloc.rate:                   2217.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              698012.205 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2282.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     718406.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.493 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 155.267 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 5130.657 ops/s
[info]                  ·gc.alloc.rate:                   2273.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              697497.406 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     604381.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.235 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4981.540 ops/s
[info]                  ·gc.alloc.rate:                   2243.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              708419.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2321.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     733140.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.032 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 5096.306 ops/s
[info]                  ·gc.alloc.rate:                   2293.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              708186.172 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2343.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     723634.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.147 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce":
[info]   5052.061 ±(99.9%) 241.680 ops/s [Average]
[info]   (min, avg, max) = (4981.540, 5052.061, 5130.657), stdev = 62.763
[info]   CI (99.9%): [4810.381, 5293.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate":
[info]   2257.103 ±(99.9%) 110.789 MB/sec [Average]
[info]   (min, avg, max) = (2217.969, 2257.103, 2293.288), stdev = 28.771
[info]   CI (99.9%): [2146.314, 2367.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   703070.304 ±(99.9%) 20325.784 B/op [Average]
[info]   (min, avg, max) = (697497.406, 703070.304, 708419.201), stdev = 5278.542
[info]   CI (99.9%): [682744.520, 723396.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2240.498 ±(99.9%) 589.988 MB/sec [Average]
[info]   (min, avg, max) = (1970.257, 2240.498, 2343.314), stdev = 153.218
[info]   CI (99.9%): [1650.511, 2830.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   698268.386 ±(99.9%) 204322.402 B/op [Average]
[info]   (min, avg, max) = (604381.880, 698268.386, 733140.434), stdev = 53061.879
[info]   CI (99.9%): [493945.984, 902590.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.019 ±(99.9%) 6.390 MB/sec [Average]
[info]   (min, avg, max) = (0.146, 1.019, 3.979), stdev = 1.659
[info]   CI (99.9%): [≈ 0, 7.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   317.653 ±(99.9%) 1990.786 B/op [Average]
[info]   (min, avg, max) = (46.032, 317.653, 1239.582), stdev = 517.001
[info]   CI (99.9%): [≈ 0, 2308.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.000, 18.000), stdev = 3.536
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala
[info] # Run progress: 65.88% complete, ETA 00:31:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 428.666 ops/s
[info] # Warmup Iteration   2: 4330.484 ops/s
[info] # Warmup Iteration   3: 6989.408 ops/s
[info] Iteration   1: 7815.514 ops/s
[info]                  ·gc.alloc.rate:                   3181.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              640502.750 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3267.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     657824.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 180.251 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 7819.293 ops/s
[info]                  ·gc.alloc.rate:                   3193.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              642684.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2973.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     598429.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.379 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 7732.396 ops/s
[info]                  ·gc.alloc.rate:                   3171.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              645541.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3010.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     612618.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.948 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 7802.750 ops/s
[info]                  ·gc.alloc.rate:                   3214.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              648411.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3035.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     612296.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.597 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 7814.381 ops/s
[info]                  ·gc.alloc.rate:                   3218.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              648205.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3049.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     614173.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.385 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala":
[info]   7796.867 ±(99.9%) 140.805 ops/s [Average]
[info]   (min, avg, max) = (7732.396, 7796.867, 7819.293), stdev = 36.567
[info]   CI (99.9%): [7656.062, 7937.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   3195.948 ±(99.9%) 78.681 MB/sec [Average]
[info]   (min, avg, max) = (3171.766, 3195.948, 3218.569), stdev = 20.433
[info]   CI (99.9%): [3117.267, 3274.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   645069.304 ±(99.9%) 13306.995 B/op [Average]
[info]   (min, avg, max) = (640502.750, 645069.304, 648411.753), stdev = 3455.784
[info]   CI (99.9%): [631762.309, 658376.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   3067.217 ±(99.9%) 445.083 MB/sec [Average]
[info]   (min, avg, max) = (2973.423, 3067.217, 3267.381), stdev = 115.587
[info]   CI (99.9%): [2622.134, 3512.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   619068.587 ±(99.9%) 86947.791 B/op [Average]
[info]   (min, avg, max) = (598429.737, 619068.587, 657824.831), stdev = 22580.065
[info]   CI (99.9%): [532120.797, 706016.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.225 ±(99.9%) 1.445 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.225, 0.895), stdev = 0.375
[info]   CI (99.9%): [≈ 0, 1.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   45.312 ±(99.9%) 290.788 B/op [Average]
[info]   (min, avg, max) = (8.379, 45.312, 180.251), stdev = 75.517
[info]   CI (99.9%): [≈ 0, 336.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.000, 17.000), stdev = 1.732
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala
[info] # Run progress: 66.12% complete, ETA 00:30:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24217.709 ops/s
[info] # Warmup Iteration   2: 52857.985 ops/s
[info] # Warmup Iteration   3: 53278.432 ops/s
[info] Iteration   1: 57477.301 ops/s
[info]                  ·gc.alloc.rate:                   956.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              26202.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26759.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.570 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 56744.770 ops/s
[info]                  ·gc.alloc.rate:                   946.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              26251.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27123.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.155 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 57801.249 ops/s
[info]                  ·gc.alloc.rate:               963.980 MB/sec
[info]                  ·gc.alloc.rate.norm:          26245.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26744.483 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 57992.458 ops/s
[info]                  ·gc.alloc.rate:               953.966 MB/sec
[info]                  ·gc.alloc.rate.norm:          25888.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17843.563 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 57084.154 ops/s
[info]                  ·gc.alloc.rate:               951.228 MB/sec
[info]                  ·gc.alloc.rate.norm:          26218.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27283.804 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala":
[info]   57419.987 ±(99.9%) 1968.231 ops/s [Average]
[info]   (min, avg, max) = (56744.770, 57419.987, 57992.458), stdev = 511.143
[info]   CI (99.9%): [55451.755, 59388.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   954.502 ±(99.9%) 25.187 MB/sec [Average]
[info]   (min, avg, max) = (946.460, 954.502, 963.980), stdev = 6.541
[info]   CI (99.9%): [929.315, 979.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26161.220 ±(99.9%) 593.016 B/op [Average]
[info]   (min, avg, max) = (25888.057, 26161.220, 26251.383), stdev = 154.004
[info]   CI (99.9%): [25568.204, 26754.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   916.964 ±(99.9%) 558.790 MB/sec [Average]
[info]   (min, avg, max) = (657.529, 916.964, 989.885), stdev = 145.116
[info]   CI (99.9%): [358.174, 1475.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   25150.928 ±(99.9%) 15755.202 B/op [Average]
[info]   (min, avg, max) = (17843.563, 25150.928, 27283.804), stdev = 4091.576
[info]   CI (99.9%): [9395.725, 40906.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.345 ±(99.9%) 1.985 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.345, 1.155), stdev = 0.516
[info]   CI (99.9%): [≈ 0, 2.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce
[info] # Run progress: 66.35% complete, ETA 00:30:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 706.422 ops/s
[info] # Warmup Iteration   2: 3358.514 ops/s
[info] # Warmup Iteration   3: 4888.155 ops/s
[info] Iteration   1: 5451.105 ops/s
[info]                  ·gc.alloc.rate:                   998.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              288289.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     280319.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.593 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 459.771 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 5484.626 ops/s
[info]                  ·gc.alloc.rate:                   977.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              280533.934 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     279346.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.973 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 5379.016 ops/s
[info]                  ·gc.alloc.rate:                   966.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              282691.695 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285922.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.876 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 256.193 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 5475.989 ops/s
[info]                  ·gc.alloc.rate:                   980.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              281844.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     281815.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.794 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 228.045 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5495.592 ops/s
[info]                  ·gc.alloc.rate:                   978.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              280089.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     281171.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.766 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce":
[info]   5457.266 ±(99.9%) 179.882 ops/s [Average]
[info]   (min, avg, max) = (5379.016, 5457.266, 5495.592), stdev = 46.715
[info]   CI (99.9%): [5277.384, 5637.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate":
[info]   980.306 ±(99.9%) 44.902 MB/sec [Average]
[info]   (min, avg, max) = (966.200, 980.306, 998.570), stdev = 11.661
[info]   CI (99.9%): [935.404, 1025.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   282689.685 ±(99.9%) 12695.627 B/op [Average]
[info]   (min, avg, max) = (280089.078, 282689.685, 288289.348), stdev = 3297.014
[info]   CI (99.9%): [269994.058, 295385.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   976.901 ±(99.9%) 17.752 MB/sec [Average]
[info]   (min, avg, max) = (970.963, 976.901, 981.856), stdev = 4.610
[info]   CI (99.9%): [959.149, 994.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   281714.957 ±(99.9%) 9734.679 B/op [Average]
[info]   (min, avg, max) = (279346.304, 281714.957, 285922.117), stdev = 2528.065
[info]   CI (99.9%): [271980.278, 291449.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.682 ±(99.9%) 2.455 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.682, 1.593), stdev = 0.638
[info]   CI (99.9%): [≈ 0, 3.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   197.150 ±(99.9%) 710.033 B/op [Average]
[info]   (min, avg, max) = (5.973, 197.150, 459.771), stdev = 184.393
[info]   CI (99.9%): [≈ 0, 907.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala
[info] # Run progress: 66.59% complete, ETA 00:30:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 963.513 ops/s
[info] # Warmup Iteration   2: 4404.625 ops/s
[info] # Warmup Iteration   3: 5185.217 ops/s
[info] Iteration   1: 5229.942 ops/s
[info]                  ·gc.alloc.rate:               561.882 MB/sec
[info]                  ·gc.alloc.rate.norm:          169062.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 96919.613 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 5241.229 ops/s
[info]                  ·gc.alloc.rate:                   575.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              172832.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     194232.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.502 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 5316.960 ops/s
[info]                  ·gc.alloc.rate:               579.911 MB/sec
[info]                  ·gc.alloc.rate.norm:          171579.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 191851.156 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 5300.520 ops/s
[info]                  ·gc.alloc.rate:                   567.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              168531.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96610.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.180 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5261.385 ops/s
[info]                  ·gc.alloc.rate:                   578.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              173051.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     195051.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.226 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala":
[info]   5270.007 ±(99.9%) 144.634 ops/s [Average]
[info]   (min, avg, max) = (5229.942, 5270.007, 5316.960), stdev = 37.561
[info]   CI (99.9%): [5125.373, 5414.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   572.750 ±(99.9%) 29.715 MB/sec [Average]
[info]   (min, avg, max) = (561.882, 572.750, 579.911), stdev = 7.717
[info]   CI (99.9%): [543.035, 602.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   171011.428 ±(99.9%) 8111.621 B/op [Average]
[info]   (min, avg, max) = (168531.072, 171011.428, 173051.806), stdev = 2106.562
[info]   CI (99.9%): [162899.807, 179123.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   519.021 ±(99.9%) 686.442 MB/sec [Average]
[info]   (min, avg, max) = (322.114, 519.021, 652.053), stdev = 178.267
[info]   CI (99.9%): [≈ 0, 1205.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   154933.088 ±(99.9%) 204519.194 B/op [Average]
[info]   (min, avg, max) = (96610.595, 154933.088, 195051.473), stdev = 53112.985
[info]   CI (99.9%): [≈ 0, 359452.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.982 ±(99.9%) 20.117 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.982, 12.502), stdev = 5.224
[info]   CI (99.9%): [≈ 0, 25.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 6.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala
[info] # Run progress: 66.82% complete, ETA 00:30:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3167.358 ops/s
[info] # Warmup Iteration   2: 6021.363 ops/s
[info] # Warmup Iteration   3: 6985.828 ops/s
[info] Iteration   1: 6984.670 ops/s
[info]                  ·gc.alloc.rate:               228.379 MB/sec
[info]                  ·gc.alloc.rate.norm:          51458.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57637.158 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 6969.135 ops/s
[info]                  ·gc.alloc.rate:                   231.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              52235.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73705.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.701 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 7027.511 ops/s
[info]                  ·gc.alloc.rate:      226.650 MB/sec
[info]                  ·gc.alloc.rate.norm: 50752.083 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6976.307 ops/s
[info]                  ·gc.alloc.rate:               233.233 MB/sec
[info]                  ·gc.alloc.rate.norm:          52614.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 73631.734 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 6983.463 ops/s
[info]                  ·gc.alloc.rate:                   235.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              53087.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73557.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.382 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala":
[info]   6988.217 ±(99.9%) 87.918 ops/s [Average]
[info]   (min, avg, max) = (6969.135, 6988.217, 7027.511), stdev = 22.832
[info]   CI (99.9%): [6900.299, 7076.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   231.055 ±(99.9%) 13.967 MB/sec [Average]
[info]   (min, avg, max) = (226.650, 231.055, 235.663), stdev = 3.627
[info]   CI (99.9%): [217.088, 245.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   52029.838 ±(99.9%) 3582.531 B/op [Average]
[info]   (min, avg, max) = (50752.083, 52029.838, 53087.777), stdev = 930.372
[info]   CI (99.9%): [48447.307, 55612.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   247.034 ±(99.9%) 544.654 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 247.034, 326.532), stdev = 141.445
[info]   CI (99.9%): [≈ 0, 791.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   55706.502 ±(99.9%) 122842.480 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 55706.502, 73705.672), stdev = 31901.802
[info]   CI (99.9%): [≈ 0, 178548.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.817 ±(99.9%) 16.161 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.817, 9.382), stdev = 4.197
[info]   CI (99.9%): [≈ 0, 18.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.600, 5.000), stdev = 2.074
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 67.06% complete, ETA 00:29:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3434.663 ops/s
[info] # Warmup Iteration   2: 6375.132 ops/s
[info] # Warmup Iteration   3: 6885.761 ops/s
[info] Iteration   1: 6928.186 ops/s
[info]                  ·gc.alloc.rate:      172.773 MB/sec
[info]                  ·gc.alloc.rate.norm: 39248.062 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6670.097 ops/s
[info]                  ·gc.alloc.rate:               178.932 MB/sec
[info]                  ·gc.alloc.rate.norm:          42200.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60358.744 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 6929.925 ops/s
[info]                  ·gc.alloc.rate:      173.032 MB/sec
[info]                  ·gc.alloc.rate.norm: 39286.015 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6891.117 ops/s
[info]                  ·gc.alloc.rate:               177.875 MB/sec
[info]                  ·gc.alloc.rate.norm:          40622.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74702.672 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 6929.897 ops/s
[info]                  ·gc.alloc.rate:      172.917 MB/sec
[info]                  ·gc.alloc.rate.norm: 39268.800 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc":
[info]   6869.844 ±(99.9%) 434.676 ops/s [Average]
[info]   (min, avg, max) = (6670.097, 6869.844, 6929.925), stdev = 112.884
[info]   CI (99.9%): [6435.168, 7304.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   175.106 ±(99.9%) 11.686 MB/sec [Average]
[info]   (min, avg, max) = (172.773, 175.106, 178.932), stdev = 3.035
[info]   CI (99.9%): [163.419, 186.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   40125.349 ±(99.9%) 5007.034 B/op [Average]
[info]   (min, avg, max) = (39248.062, 40125.349, 42200.871), stdev = 1300.311
[info]   CI (99.9%): [35118.315, 45132.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   116.604 ±(99.9%) 622.410 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 116.604, 327.099), stdev = 161.638
[info]   CI (99.9%): [≈ 0, 739.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   27012.283 ±(99.9%) 143760.453 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 27012.283, 74702.672), stdev = 37334.133
[info]   CI (99.9%): [≈ 0, 170772.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 5.000), stdev = 2.490
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce
[info] # Run progress: 67.29% complete, ETA 00:29:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 758.420 ops/s
[info] # Warmup Iteration   2: 3610.274 ops/s
[info] # Warmup Iteration   3: 7099.305 ops/s
[info] Iteration   1: 8511.641 ops/s
[info]                  ·gc.alloc.rate:                   1991.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              368184.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1911.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     353384.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 277.140 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   2: 8766.594 ops/s
[info]                  ·gc.alloc.rate:                   2038.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              365886.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1923.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     345379.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.231 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 579.946 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   3: 8945.380 ops/s
[info]                  ·gc.alloc.rate:                   2096.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              368794.267 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2232.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     392727.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.241 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 570.285 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 8931.859 ops/s
[info]                  ·gc.alloc.rate:                   2121.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              373857.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1915.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     337494.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.137 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.184 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 8873.972 ops/s
[info]                  ·gc.alloc.rate:                   2062.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              365793.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     344721.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.226 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce":
[info]   8805.889 ±(99.9%) 689.059 ops/s [Average]
[info]   (min, avg, max) = (8511.641, 8805.889, 8945.380), stdev = 178.947
[info]   CI (99.9%): [8116.830, 9494.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   2061.950 ±(99.9%) 195.491 MB/sec [Average]
[info]   (min, avg, max) = (1991.229, 2061.950, 2121.703), stdev = 50.768
[info]   CI (99.9%): [1866.459, 2257.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   368503.290 ±(99.9%) 12632.676 B/op [Average]
[info]   (min, avg, max) = (365793.212, 368503.290, 373857.972), stdev = 3280.666
[info]   CI (99.9%): [355870.614, 381135.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1985.265 ±(99.9%) 533.728 MB/sec [Average]
[info]   (min, avg, max) = (1911.189, 1985.265, 2232.202), stdev = 138.607
[info]   CI (99.9%): [1451.538, 2518.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   354741.491 ±(99.9%) 84588.145 B/op [Average]
[info]   (min, avg, max) = (337494.956, 354741.491, 392727.096), stdev = 21967.273
[info]   CI (99.9%): [270153.347, 439329.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.659 ±(99.9%) 5.928 MB/sec [Average]
[info]   (min, avg, max) = (0.137, 1.659, 3.241), stdev = 1.540
[info]   CI (99.9%): [≈ 0, 7.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   296.956 ±(99.9%) 1053.035 B/op [Average]
[info]   (min, avg, max) = (24.184, 296.956, 579.946), stdev = 273.470
[info]   CI (99.9%): [≈ 0, 1349.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.time":
[info]   91.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 18.200, 34.000), stdev = 11.649
[info]   CI (99.9%): [91.000, 91.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava
[info] # Run progress: 67.53% complete, ETA 00:29:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.787 ops/s
[info] # Warmup Iteration   2: 13730.900 ops/s
[info] # Warmup Iteration   3: 16873.199 ops/s
[info] Iteration   1: 16908.353 ops/s
[info]                  ·gc.alloc.rate:                   423.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              39405.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30012.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.848 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 16953.704 ops/s
[info]                  ·gc.alloc.rate:               424.908 MB/sec
[info]                  ·gc.alloc.rate.norm:          39429.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29992.885 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 16948.881 ops/s
[info]                  ·gc.alloc.rate:                   438.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              40682.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60030.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.293 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 17777.415 ops/s
[info]                  ·gc.alloc.rate:                   446.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              39497.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28630.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.843 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 16455.892 ops/s
[info]                  ·gc.alloc.rate:                   555.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              53170.418 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61924.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.147 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 109.671 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava":
[info]   17008.849 ±(99.9%) 1839.858 ops/s [Average]
[info]   (min, avg, max) = (16455.892, 17008.849, 17777.415), stdev = 477.805
[info]   CI (99.9%): [15168.991, 18848.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   457.717 ±(99.9%) 214.583 MB/sec [Average]
[info]   (min, avg, max) = (423.465, 457.717, 555.968), stdev = 55.727
[info]   CI (99.9%): [243.134, 672.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   42437.132 ±(99.9%) 23196.629 B/op [Average]
[info]   (min, avg, max) = (39405.652, 42437.132, 53170.418), stdev = 6024.091
[info]   CI (99.9%): [19240.502, 65633.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   452.617 ±(99.9%) 683.173 MB/sec [Average]
[info]   (min, avg, max) = (322.523, 452.617, 647.504), stdev = 177.418
[info]   CI (99.9%): [≈ 0, 1135.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   42118.300 ±(99.9%) 66378.581 B/op [Average]
[info]   (min, avg, max) = (28630.766, 42118.300, 61924.532), stdev = 17238.307
[info]   CI (99.9%): [≈ 0, 108496.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.238 ±(99.9%) 1.956 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.238, 1.147), stdev = 0.508
[info]   CI (99.9%): [≈ 0, 2.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   22.731 ±(99.9%) 187.164 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22.731, 109.671), stdev = 48.606
[info]   CI (99.9%): [≈ 0, 209.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 8.000), stdev = 1.949
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala
[info] # Run progress: 67.76% complete, ETA 00:29:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1049.384 ops/s
[info] # Warmup Iteration   2: 11319.141 ops/s
[info] # Warmup Iteration   3: 14890.186 ops/s
[info] Iteration   1: 14894.730 ops/s
[info]                  ·gc.alloc.rate:                   401.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              42418.213 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33854.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.598 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 14568.995 ops/s
[info]                  ·gc.alloc.rate:               404.920 MB/sec
[info]                  ·gc.alloc.rate.norm:          43740.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34758.233 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 14775.681 ops/s
[info]                  ·gc.alloc.rate:                   414.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              44202.229 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68649.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.435 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 14895.674 ops/s
[info]                  ·gc.alloc.rate:                   405.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              42838.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34100.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.199 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 14538.101 ops/s
[info]                  ·gc.alloc.rate:               394.150 MB/sec
[info]                  ·gc.alloc.rate.norm:          42667.203 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35082.334 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala":
[info]   14734.636 ±(99.9%) 665.032 ops/s [Average]
[info]   (min, avg, max) = (14538.101, 14734.636, 14895.674), stdev = 172.707
[info]   CI (99.9%): [14069.604, 15399.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   404.201 ±(99.9%) 29.040 MB/sec [Average]
[info]   (min, avg, max) = (394.150, 404.201, 414.999), stdev = 7.542
[info]   CI (99.9%): [375.161, 433.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   43173.334 ±(99.9%) 2932.017 B/op [Average]
[info]   (min, avg, max) = (42418.213, 43173.334, 44202.229), stdev = 761.435
[info]   CI (99.9%): [40241.318, 46105.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   386.711 ±(99.9%) 554.984 MB/sec [Average]
[info]   (min, avg, max) = (320.389, 386.711, 644.523), stdev = 144.128
[info]   CI (99.9%): [≈ 0, 941.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   41289.033 ±(99.9%) 58925.294 B/op [Average]
[info]   (min, avg, max) = (33854.548, 41289.033, 68649.160), stdev = 15302.712
[info]   CI (99.9%): [≈ 0, 100214.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.647 ±(99.9%) 11.064 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.647, 6.598), stdev = 2.873
[info]   CI (99.9%): [≈ 0, 13.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala
[info] # Run progress: 68.00% complete, ETA 00:29:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7540.282 ops/s
[info] # Warmup Iteration   2: 19628.587 ops/s
[info] # Warmup Iteration   3: 22639.622 ops/s
[info] Iteration   1: 21962.181 ops/s
[info]                  ·gc.alloc.rate:                   581.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              41693.443 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46161.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.984 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 22874.222 ops/s
[info]                  ·gc.alloc.rate:                   425.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              29295.221 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22183.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.582 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108.806 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 21987.750 ops/s
[info]                  ·gc.alloc.rate:                   572.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              41010.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46249.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.463 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 23313.929 ops/s
[info]                  ·gc.alloc.rate:                   437.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              29515.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21877.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.952 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.267 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 22746.665 ops/s
[info]                  ·gc.alloc.rate:                   446.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              30868.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44869.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.539 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala":
[info]   22576.949 ±(99.9%) 2266.169 ops/s [Average]
[info]   (min, avg, max) = (21962.181, 22576.949, 23313.929), stdev = 588.517
[info]   CI (99.9%): [20310.780, 24843.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   492.801 ±(99.9%) 298.836 MB/sec [Average]
[info]   (min, avg, max) = (425.846, 492.801, 581.802), stdev = 77.607
[info]   CI (99.9%): [193.965, 791.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   34476.601 ±(99.9%) 24297.290 B/op [Average]
[info]   (min, avg, max) = (29295.221, 34476.601, 41693.443), stdev = 6309.929
[info]   CI (99.9%): [10179.311, 58773.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   517.081 ±(99.9%) 681.332 MB/sec [Average]
[info]   (min, avg, max) = (322.465, 517.081, 648.599), stdev = 176.940
[info]   CI (99.9%): [≈ 0, 1198.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   36268.177 ±(99.9%) 50094.135 B/op [Average]
[info]   (min, avg, max) = (21877.186, 36268.177, 46249.487), stdev = 13009.288
[info]   CI (99.9%): [≈ 0, 86362.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.523 ±(99.9%) 2.750 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 0.523, 1.582), stdev = 0.714
[info]   CI (99.9%): [≈ 0, 3.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   35.812 ±(99.9%) 188.365 B/op [Average]
[info]   (min, avg, max) = (0.539, 35.812, 108.806), stdev = 48.918
[info]   CI (99.9%): [≈ 0, 224.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 10.000), stdev = 2.702
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson
[info] # Run progress: 68.24% complete, ETA 00:28:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42.867 ops/s
[info] # Warmup Iteration   2: 2077.674 ops/s
[info] # Warmup Iteration   3: 7093.512 ops/s
[info] Iteration   1: 7637.742 ops/s
[info]                  ·gc.alloc.rate:                   2704.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              557312.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2609.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     537601.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.893 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 596.176 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 7684.956 ops/s
[info]                  ·gc.alloc.rate:                   2703.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              553503.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2620.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     536496.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72.467 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 7566.584 ops/s
[info]                  ·gc.alloc.rate:                   2708.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              563286.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2648.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     550890.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.319 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 7651.671 ops/s
[info]                  ·gc.alloc.rate:                   2735.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              562727.769 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2677.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     550800.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.845 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 7628.612 ops/s
[info]                  ·gc.alloc.rate:                   2731.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              563432.955 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2698.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     556583.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.589 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson":
[info]   7633.913 ±(99.9%) 166.700 ops/s [Average]
[info]   (min, avg, max) = (7566.584, 7633.913, 7684.956), stdev = 43.292
[info]   CI (99.9%): [7467.213, 7800.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2716.675 ±(99.9%) 59.929 MB/sec [Average]
[info]   (min, avg, max) = (2703.376, 2716.675, 2735.824), stdev = 15.563
[info]   CI (99.9%): [2656.746, 2776.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   560052.591 ±(99.9%) 17161.168 B/op [Average]
[info]   (min, avg, max) = (553503.188, 560052.591, 563432.955), stdev = 4456.701
[info]   CI (99.9%): [542891.422, 577213.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2650.772 ±(99.9%) 144.497 MB/sec [Average]
[info]   (min, avg, max) = (2609.115, 2650.772, 2698.020), stdev = 37.525
[info]   CI (99.9%): [2506.275, 2795.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   546474.406 ±(99.9%) 34371.340 B/op [Average]
[info]   (min, avg, max) = (536496.606, 546474.406, 556583.591), stdev = 8926.128
[info]   CI (99.9%): [512103.065, 580845.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.687 ±(99.9%) 4.775 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.687, 2.893), stdev = 1.240
[info]   CI (99.9%): [≈ 0, 5.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   141.479 ±(99.9%) 983.864 B/op [Average]
[info]   (min, avg, max) = (8.589, 141.479, 596.176), stdev = 255.506
[info]   CI (99.9%): [≈ 0, 1125.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 14.200, 19.000), stdev = 2.775
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce
[info] # Run progress: 68.47% complete, ETA 00:28:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1344.105 ops/s
[info] # Warmup Iteration   2: 9423.940 ops/s
[info] # Warmup Iteration   3: 10794.911 ops/s
[info] Iteration   1: 12051.747 ops/s
[info]                  ·gc.alloc.rate:                   2291.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              299279.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2264.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     295741.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.210 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 12023.452 ops/s
[info]                  ·gc.alloc.rate:                   2270.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              297227.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2292.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     300097.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.050 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 12033.197 ops/s
[info]                  ·gc.alloc.rate:               2303.996 MB/sec
[info]                  ·gc.alloc.rate.norm:          301271.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2319.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 303308.187 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 11310.029 ops/s
[info]                  ·gc.alloc.rate:                   2233.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              310818.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     278897.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.910 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 265.762 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 11620.121 ops/s
[info]                  ·gc.alloc.rate:                   2215.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              300092.268 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2349.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     318172.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.819 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce":
[info]   11807.709 ±(99.9%) 1276.851 ops/s [Average]
[info]   (min, avg, max) = (11310.029, 11807.709, 12051.747), stdev = 331.594
[info]   CI (99.9%): [10530.858, 13084.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate":
[info]   2263.192 ±(99.9%) 145.107 MB/sec [Average]
[info]   (min, avg, max) = (2215.626, 2263.192, 2303.996), stdev = 37.684
[info]   CI (99.9%): [2118.084, 2408.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   301737.855 ±(99.9%) 20355.721 B/op [Average]
[info]   (min, avg, max) = (297227.114, 301737.855, 310818.871), stdev = 5286.316
[info]   CI (99.9%): [281382.134, 322093.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2246.093 ±(99.9%) 534.454 MB/sec [Average]
[info]   (min, avg, max) = (2004.207, 2246.093, 2349.116), stdev = 138.796
[info]   CI (99.9%): [1711.639, 2780.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   299243.382 ±(99.9%) 54517.599 B/op [Average]
[info]   (min, avg, max) = (278897.303, 299243.382, 318172.712), stdev = 14158.047
[info]   CI (99.9%): [244725.783, 353760.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.532 ±(99.9%) 3.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.532, 1.910), stdev = 0.790
[info]   CI (99.9%): [≈ 0, 3.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   72.768 ±(99.9%) 424.892 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 72.768, 265.762), stdev = 110.343
[info]   CI (99.9%): [≈ 0, 497.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.200, 12.000), stdev = 1.095
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava
[info] # Run progress: 68.71% complete, ETA 00:28:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.759 ops/s
[info] # Warmup Iteration   2: 50335.189 ops/s
[info] # Warmup Iteration   3: 66816.469 ops/s
[info] Iteration   1: 67164.395 ops/s
[info]                  ·gc.alloc.rate:                   757.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              17753.269 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15157.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.984 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 64767.891 ops/s
[info]                  ·gc.alloc.rate:                   628.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              15266.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15750.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.662 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.075 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 67063.871 ops/s
[info]                  ·gc.alloc.rate:               647.644 MB/sec
[info]                  ·gc.alloc.rate.norm:          15198.617 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15226.660 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 68880.221 ops/s
[info]                  ·gc.alloc.rate:                   661.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              15121.765 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14855.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.476 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 69077.447 ops/s
[info]                  ·gc.alloc.rate:                   668.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              15232.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14828.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.139 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 94.281 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava":
[info]   67390.765 ±(99.9%) 6697.505 ops/s [Average]
[info]   (min, avg, max) = (64767.891, 67390.765, 69077.447), stdev = 1739.321
[info]   CI (99.9%): [60693.260, 74088.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   672.878 ±(99.9%) 191.802 MB/sec [Average]
[info]   (min, avg, max) = (628.531, 672.878, 757.633), stdev = 49.810
[info]   CI (99.9%): [481.075, 864.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   15714.464 ±(99.9%) 4393.535 B/op [Average]
[info]   (min, avg, max) = (15121.765, 15714.464, 17753.269), stdev = 1140.987
[info]   CI (99.9%): [11320.928, 20107.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   649.061 ±(99.9%) 6.166 MB/sec [Average]
[info]   (min, avg, max) = (646.842, 649.061, 650.914), stdev = 1.601
[info]   CI (99.9%): [642.894, 655.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   15163.475 ±(99.9%) 1435.222 B/op [Average]
[info]   (min, avg, max) = (14828.317, 15163.475, 15750.169), stdev = 372.722
[info]   CI (99.9%): [13728.254, 16598.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.161 ±(99.9%) 6.612 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.161, 4.139), stdev = 1.717
[info]   CI (99.9%): [≈ 0, 7.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   26.780 ±(99.9%) 150.296 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26.780, 94.281), stdev = 39.031
[info]   CI (99.9%): [≈ 0, 177.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 9.000), stdev = 0.837
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala
[info] # Run progress: 68.94% complete, ETA 00:28:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6006.599 ops/s
[info] # Warmup Iteration   2: 40530.849 ops/s
[info] # Warmup Iteration   3: 46990.218 ops/s
[info] Iteration   1: 41748.107 ops/s
[info]                  ·gc.alloc.rate:               918.219 MB/sec
[info]                  ·gc.alloc.rate.norm:          34607.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:      965.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36402.436 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 42737.865 ops/s
[info]                  ·gc.alloc.rate:                   634.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              23370.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23844.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.316 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 42778.140 ops/s
[info]                  ·gc.alloc.rate:                   628.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              23128.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23919.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.766 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 42793.150 ops/s
[info]                  ·gc.alloc.rate:               635.005 MB/sec
[info]                  ·gc.alloc.rate.norm:          23353.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23984.951 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 44045.999 ops/s
[info]                  ·gc.alloc.rate:                   654.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              23380.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23386.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.750 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala":
[info]   42820.652 ±(99.9%) 3140.839 ops/s [Average]
[info]   (min, avg, max) = (41748.107, 42820.652, 44045.999), stdev = 815.666
[info]   CI (99.9%): [39679.813, 45961.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   694.197 ±(99.9%) 483.654 MB/sec [Average]
[info]   (min, avg, max) = (628.691, 694.197, 918.219), stdev = 125.603
[info]   CI (99.9%): [210.543, 1177.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   25567.915 ±(99.9%) 19463.038 B/op [Average]
[info]   (min, avg, max) = (23128.049, 25567.915, 34607.735), stdev = 5054.489
[info]   CI (99.9%): [6104.877, 45030.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   714.067 ±(99.9%) 542.041 MB/sec [Average]
[info]   (min, avg, max) = (647.623, 714.067, 965.837), stdev = 140.766
[info]   CI (99.9%): [172.026, 1256.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   26307.475 ±(99.9%) 21748.990 B/op [Average]
[info]   (min, avg, max) = (23386.056, 26307.475, 36402.436), stdev = 5648.144
[info]   CI (99.9%): [4558.485, 48056.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.569 ±(99.9%) 3.086 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.569, 1.728), stdev = 0.801
[info]   CI (99.9%): [≈ 0, 3.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   20.567 ±(99.9%) 111.006 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20.567, 61.750), stdev = 28.828
[info]   CI (99.9%): [≈ 0, 131.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 9.000), stdev = 2.074
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala
[info] # Run progress: 69.18% complete, ETA 00:28:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39225.839 ops/s
[info] # Warmup Iteration   2: 87810.788 ops/s
[info] # Warmup Iteration   3: 95888.133 ops/s
[info] Iteration   1: 103235.133 ops/s
[info]                  ·gc.alloc.rate:                   797.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              12163.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14898.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.709 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.807 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 102337.592 ops/s
[info]                  ·gc.alloc.rate:                   800.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              12305.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10040.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.320 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 101763.607 ops/s
[info]                  ·gc.alloc.rate:               782.896 MB/sec
[info]                  ·gc.alloc.rate.norm:          12108.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10096.529 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 103511.047 ops/s
[info]                  ·gc.alloc.rate:                   806.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              12261.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14899.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58.908 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 103660.348 ops/s
[info]                  ·gc.alloc.rate:                   801.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              12160.805 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9871.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.373 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala":
[info]   102901.545 ±(99.9%) 3146.887 ops/s [Average]
[info]   (min, avg, max) = (101763.607, 102901.545, 103660.348), stdev = 817.237
[info]   CI (99.9%): [99754.658, 106048.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   797.677 ±(99.9%) 34.064 MB/sec [Average]
[info]   (min, avg, max) = (782.896, 797.677, 806.456), stdev = 8.846
[info]   CI (99.9%): [763.613, 831.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   12200.107 ±(99.9%) 311.664 B/op [Average]
[info]   (min, avg, max) = (12108.652, 12200.107, 12305.762), stdev = 80.938
[info]   CI (99.9%): [11888.443, 12511.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   782.597 ±(99.9%) 688.873 MB/sec [Average]
[info]   (min, avg, max) = (650.230, 782.597, 979.923), stdev = 178.898
[info]   CI (99.9%): [93.724, 1471.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   11961.039 ±(99.9%) 10331.101 B/op [Average]
[info]   (min, avg, max) = (9871.235, 11961.039, 14899.207), stdev = 2682.954
[info]   CI (99.9%): [1629.938, 22292.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.992 ±(99.9%) 6.305 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.992, 3.874), stdev = 1.637
[info]   CI (99.9%): [≈ 0, 7.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.082 ±(99.9%) 95.855 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.082, 58.908), stdev = 24.893
[info]   CI (99.9%): [≈ 0, 110.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 13.000), stdev = 3.536
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 69.41% complete, ETA 00:27:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 65480.441 ops/s
[info] # Warmup Iteration   2: 116880.442 ops/s
[info] # Warmup Iteration   3: 123556.337 ops/s
[info] Iteration   1: 138200.472 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 137950.598 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 138491.481 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 138572.575 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 138483.681 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   138339.761 ±(99.9%) 998.171 ops/s [Average]
[info]   (min, avg, max) = (137950.598, 138339.761, 138572.575), stdev = 259.222
[info]   CI (99.9%): [137341.591, 139337.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.003 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.003, 0.004), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson
[info] # Run progress: 69.65% complete, ETA 00:27:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 471.737 ops/s
[info] # Warmup Iteration   2: 5016.904 ops/s
[info] # Warmup Iteration   3: 8799.350 ops/s
[info] Iteration   1: 9084.514 ops/s
[info]                  ·gc.alloc.rate:                   2367.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              410044.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     397355.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.030 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 351.590 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 9211.052 ops/s
[info]                  ·gc.alloc.rate:                   2398.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              409852.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2304.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     393685.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81.804 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 9175.308 ops/s
[info]                  ·gc.alloc.rate:                   2401.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              411845.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2322.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     398385.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.570 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 8983.514 ops/s
[info]                  ·gc.alloc.rate:                   2372.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              415526.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2344.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     410619.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.941 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 9199.766 ops/s
[info]                  ·gc.alloc.rate:                   2388.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              408520.307 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     403557.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.683 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson":
[info]   9130.831 ±(99.9%) 370.409 ops/s [Average]
[info]   (min, avg, max) = (8983.514, 9130.831, 9211.052), stdev = 96.194
[info]   CI (99.9%): [8760.422, 9501.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2385.556 ±(99.9%) 59.278 MB/sec [Average]
[info]   (min, avg, max) = (2367.303, 2385.556, 2401.403), stdev = 15.394
[info]   CI (99.9%): [2326.278, 2444.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   411157.735 ±(99.9%) 10450.186 B/op [Average]
[info]   (min, avg, max) = (408520.307, 411157.735, 415526.603), stdev = 2713.880
[info]   CI (99.9%): [400707.549, 421607.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2324.879 ±(99.9%) 104.053 MB/sec [Average]
[info]   (min, avg, max) = (2294.050, 2324.879, 2359.087), stdev = 27.022
[info]   CI (99.9%): [2220.826, 2428.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   400720.668 ±(99.9%) 25272.145 B/op [Average]
[info]   (min, avg, max) = (393685.486, 400720.668, 410619.327), stdev = 6563.096
[info]   CI (99.9%): [375448.523, 425992.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.531 ±(99.9%) 3.306 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.531, 2.030), stdev = 0.859
[info]   CI (99.9%): [≈ 0, 3.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   91.718 ±(99.9%) 572.741 B/op [Average]
[info]   (min, avg, max) = (3.570, 91.718, 351.590), stdev = 148.739
[info]   CI (99.9%): [≈ 0, 664.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.800, 15.000), stdev = 1.924
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce
[info] # Run progress: 69.88% complete, ETA 00:27:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 535524.369 ops/s
[info] # Warmup Iteration   2: 8716156.984 ops/s
[info] # Warmup Iteration   3: 12974980.186 ops/s
[info] Iteration   1: 12914330.651 ops/s
[info]                  ·gc.alloc.rate:                   5728.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              698.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5691.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     693.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        17.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 13101493.201 ops/s
[info]                  ·gc.alloc.rate:                   5764.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              692.459 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5422.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     651.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        16.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 13143681.001 ops/s
[info]                  ·gc.alloc.rate:                   5839.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              699.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5781.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     692.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        17.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   4: 13151328.085 ops/s
[info]                  ·gc.alloc.rate:                   5832.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              697.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5446.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     651.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        16.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   5: 12960822.902 ops/s
[info]                  ·gc.alloc.rate:                   5711.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              693.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5777.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     701.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        17.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce":
[info]   13054331.168 ±(99.9%) 421641.081 ops/s [Average]
[info]   (min, avg, max) = (12914330.651, 13054331.168, 13151328.085), stdev = 109498.850
[info]   CI (99.9%): [12632690.087, 13475972.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate":
[info]   5775.469 ±(99.9%) 226.625 MB/sec [Average]
[info]   (min, avg, max) = (5711.837, 5775.469, 5839.902), stdev = 58.854
[info]   CI (99.9%): [5548.844, 6002.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   696.248 ±(99.9%) 11.539 B/op [Average]
[info]   (min, avg, max) = (692.459, 696.248, 699.093), stdev = 2.997
[info]   CI (99.9%): [684.709, 707.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   5623.972 ±(99.9%) 679.991 MB/sec [Average]
[info]   (min, avg, max) = (5422.583, 5623.972, 5781.060), stdev = 176.592
[info]   CI (99.9%): [4943.981, 6303.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   678.095 ±(99.9%) 94.165 B/op [Average]
[info]   (min, avg, max) = (651.392, 678.095, 701.572), stdev = 24.454
[info]   CI (99.9%): [583.930, 772.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.158 ±(99.9%) 0.419 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.158, 0.333), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.051 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.019, 0.040), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.count":
[info]   83.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (16.000, 16.600, 17.000), stdev = 0.548
[info]   CI (99.9%): [83.000, 83.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.time":
[info]   111.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (20.000, 22.200, 26.000), stdev = 2.387
[info]   CI (99.9%): [111.000, 111.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava
[info] # Run progress: 70.12% complete, ETA 00:27:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.549 ops/s
[info] # Warmup Iteration   2: 40133155.250 ops/s
[info] # Warmup Iteration   3: 41727005.680 ops/s
[info] Iteration   1: 42714690.230 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 42401605.370 ops/s
[info]                  ·gc.alloc.rate:      0.111 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 42465514.460 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 42921846.855 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 42910102.463 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava":
[info]   42682751.876 ±(99.9%) 935536.527 ops/s [Average]
[info]   (min, avg, max) = (42401605.370, 42682751.876, 42921846.855), stdev = 242955.865
[info]   CI (99.9%): [41747215.348, 43618288.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   0.022 ±(99.9%) 0.191 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.022, 0.111), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala
[info] # Run progress: 70.35% complete, ETA 00:26:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 136408.283 ops/s
[info] # Warmup Iteration   2: 18942352.304 ops/s
[info] # Warmup Iteration   3: 21275092.057 ops/s
[info] Iteration   1: 26190425.308 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 26089735.432 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 26221129.568 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 26180007.178 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 26232326.905 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala":
[info]   26182724.878 ±(99.9%) 216536.681 ops/s [Average]
[info]   (min, avg, max) = (26089735.432, 26182724.878, 26232326.905), stdev = 56233.889
[info]   CI (99.9%): [25966188.197, 26399261.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala
[info] # Run progress: 70.59% complete, ETA 00:26:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11722016.248 ops/s
[info] # Warmup Iteration   2: 41375288.115 ops/s
[info] # Warmup Iteration   3: 47497202.253 ops/s
[info] Iteration   1: 47670456.547 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 47555605.764 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 47809305.892 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 47700867.096 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 47516767.635 ops/s
[info]                  ·gc.alloc.rate:      4.473 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.148 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala":
[info]   47650600.587 ±(99.9%) 451707.083 ops/s [Average]
[info]   (min, avg, max) = (47516767.635, 47650600.587, 47809305.892), stdev = 117306.895
[info]   CI (99.9%): [47198893.504, 48102307.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   0.895 ±(99.9%) 7.703 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.895, 4.473), stdev = 2.000
[info]   CI (99.9%): [≈ 0, 8.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   0.030 ±(99.9%) 0.255 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.030, 0.148), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala
[info] # Run progress: 70.82% complete, ETA 00:26:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4466303.148 ops/s
[info] # Warmup Iteration   2: 27701622.863 ops/s
[info] # Warmup Iteration   3: 31381603.894 ops/s
[info] Iteration   1: 31154651.269 ops/s
[info]                  ·gc.alloc.rate:                   810.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 29719166.396 ops/s
[info]                  ·gc.alloc.rate:                   813.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              43.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 31134250.755 ops/s
[info]                  ·gc.alloc.rate:                   814.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 31125809.630 ops/s
[info]                  ·gc.alloc.rate:                   818.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 31345853.656 ops/s
[info]                  ·gc.alloc.rate:                   811.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala":
[info]   30895946.341 ±(99.9%) 2556971.092 ops/s [Average]
[info]   (min, avg, max) = (29719166.396, 30895946.341, 31345853.656), stdev = 664037.273
[info]   CI (99.9%): [28338975.249, 33452917.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate":
[info]   813.719 ±(99.9%) 12.792 MB/sec [Average]
[info]   (min, avg, max) = (810.274, 813.719, 818.988), stdev = 3.322
[info]   CI (99.9%): [800.927, 826.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate.norm":
[info]   41.465 ±(99.9%) 3.572 B/op [Average]
[info]   (min, avg, max) = (40.755, 41.465, 43.065), stdev = 0.928
[info]   CI (99.9%): [37.893, 45.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space":
[info]   791.306 ±(99.9%) 698.493 MB/sec [Average]
[info]   (min, avg, max) = (658.173, 791.306, 991.234), stdev = 181.396
[info]   CI (99.9%): [92.813, 1489.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   40.428 ±(99.9%) 38.119 B/op [Average]
[info]   (min, avg, max) = (33.046, 40.428, 52.353), stdev = 9.900
[info]   CI (99.9%): [2.309, 78.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.783 ±(99.9%) 6.472 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 0.783, 3.789), stdev = 1.681
[info]   CI (99.9%): [≈ 0, 7.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.327 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.040, 0.192), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.000, 10.000), stdev = 3.082
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson
[info] # Run progress: 71.06% complete, ETA 00:26:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 453225.364 ops/s
[info] # Warmup Iteration   2: 17982999.969 ops/s
[info] # Warmup Iteration   3: 25207407.514 ops/s
[info] Iteration   1: 25275701.559 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 25263662.477 ops/s
[info]                  ·gc.alloc.rate:      0.089 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 25276319.424 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 25253044.561 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 25267208.851 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson":
[info]   25267187.374 ±(99.9%) 36950.646 ops/s [Average]
[info]   (min, avg, max) = (25253044.561, 25267187.374, 25276319.424), stdev = 9595.965
[info]   CI (99.9%): [25230236.728, 25304138.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate":
[info]   0.018 ±(99.9%) 0.152 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.018, 0.089), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.009 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.001, 0.006), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce
[info] # Run progress: 71.29% complete, ETA 00:26:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1305211.134 ops/s
[info] # Warmup Iteration   2: 19476968.444 ops/s
[info] # Warmup Iteration   3: 21418311.821 ops/s
[info] Iteration   1: 21657223.226 ops/s
[info]                  ·gc.alloc.rate:                   1694.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.830 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.278 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 22066924.019 ops/s
[info]                  ·gc.alloc.rate:                   1739.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 22067311.569 ops/s
[info]                  ·gc.alloc.rate:               1734.345 MB/sec
[info]                  ·gc.alloc.rate.norm:          123.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1633.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 116.501 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 21272143.534 ops/s
[info]                  ·gc.alloc.rate:                   1753.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              129.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1974.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 21863397.610 ops/s
[info]                  ·gc.alloc.rate:                   1717.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce":
[info]   21785399.992 ±(99.9%) 1283880.880 ops/s [Average]
[info]   (min, avg, max) = (21272143.534, 21785399.992, 22067311.569), stdev = 333419.787
[info]   CI (99.9%): [20501519.112, 23069280.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate":
[info]   1727.786 ±(99.9%) 87.463 MB/sec [Average]
[info]   (min, avg, max) = (1694.275, 1727.786, 1753.360), stdev = 22.714
[info]   CI (99.9%): [1640.323, 1815.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   124.847 ±(99.9%) 10.579 B/op [Average]
[info]   (min, avg, max) = (123.129, 124.847, 129.726), stdev = 2.747
[info]   CI (99.9%): [114.269, 135.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1709.481 ±(99.9%) 572.032 MB/sec [Average]
[info]   (min, avg, max) = (1633.569, 1709.481, 1974.531), stdev = 148.555
[info]   CI (99.9%): [1137.450, 2281.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   123.639 ±(99.9%) 48.661 B/op [Average]
[info]   (min, avg, max) = (116.501, 123.639, 146.089), stdev = 12.637
[info]   CI (99.9%): [74.978, 172.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.841 ±(99.9%) 6.457 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.841, 3.830), stdev = 1.677
[info]   CI (99.9%): [≈ 0, 7.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.061 ±(99.9%) 0.469 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.061, 0.278), stdev = 0.122
[info]   CI (99.9%): [≈ 0, 0.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 18.000), stdev = 4.970
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava
[info] # Run progress: 71.53% complete, ETA 00:25:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.650 ops/s
[info] # Warmup Iteration   2: 49997989.903 ops/s
[info] # Warmup Iteration   3: 56857742.347 ops/s
[info] Iteration   1: 58275598.660 ops/s
[info]                  ·gc.alloc.rate:               1211.425 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.704 B/op
[info]                  ·gc.churn.PS_Eden_Space:      976.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26.375 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 58196555.751 ops/s
[info]                  ·gc.alloc.rate:                   1213.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 58024644.034 ops/s
[info]                  ·gc.alloc.rate:                   1218.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 58150561.170 ops/s
[info]                  ·gc.alloc.rate:                   1227.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.221 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 57644468.060 ops/s
[info]                  ·gc.alloc.rate:                   1217.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava":
[info]   58058365.535 ±(99.9%) 957322.783 ops/s [Average]
[info]   (min, avg, max) = (57644468.060, 58058365.535, 58275598.660), stdev = 248613.687
[info]   CI (99.9%): [57101042.752, 59015688.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   1217.553 ±(99.9%) 24.018 MB/sec [Average]
[info]   (min, avg, max) = (1211.425, 1217.553, 1227.425), stdev = 6.237
[info]   CI (99.9%): [1193.534, 1241.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   33.002 ±(99.9%) 0.925 B/op [Average]
[info]   (min, avg, max) = (32.704, 33.002, 33.234), stdev = 0.240
[info]   CI (99.9%): [32.076, 33.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1170.854 ±(99.9%) 683.421 MB/sec [Average]
[info]   (min, avg, max) = (975.947, 1170.854, 1305.624), stdev = 177.482
[info]   CI (99.9%): [487.433, 1854.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   31.742 ±(99.9%) 18.705 B/op [Average]
[info]   (min, avg, max) = (26.375, 31.742, 35.476), stdev = 4.858
[info]   CI (99.9%): [13.037, 50.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.941 ±(99.9%) 6.778 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.941, 4.060), stdev = 1.760
[info]   CI (99.9%): [≈ 0, 7.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.110), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 13.000), stdev = 3.209
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala
[info] # Run progress: 71.76% complete, ETA 00:25:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 925491.058 ops/s
[info] # Warmup Iteration   2: 21942048.801 ops/s
[info] # Warmup Iteration   3: 26549588.497 ops/s
[info] Iteration   1: 27678415.009 ops/s
[info]                  ·gc.alloc.rate:                   581.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 28016121.297 ops/s
[info]                  ·gc.alloc.rate:               593.134 MB/sec
[info]                  ·gc.alloc.rate.norm:          33.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36.223 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 27959093.476 ops/s
[info]                  ·gc.alloc.rate:                   583.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.828 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 26644992.194 ops/s
[info]                  ·gc.alloc.rate:                   551.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 26305705.289 ops/s
[info]                  ·gc.alloc.rate:                   603.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              36.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala":
[info]   27320865.453 ±(99.9%) 3047798.780 ops/s [Average]
[info]   (min, avg, max) = (26305705.289, 27320865.453, 28016121.297), stdev = 791503.664
[info]   CI (99.9%): [24273066.673, 30368664.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   582.618 ±(99.9%) 74.776 MB/sec [Average]
[info]   (min, avg, max) = (551.591, 582.618, 603.418), stdev = 19.419
[info]   CI (99.9%): [507.842, 657.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   33.575 ±(99.9%) 5.542 B/op [Average]
[info]   (min, avg, max) = (32.567, 33.575, 36.101), stdev = 1.439
[info]   CI (99.9%): [28.033, 39.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   581.790 ±(99.9%) 554.494 MB/sec [Average]
[info]   (min, avg, max) = (324.220, 581.790, 649.533), stdev = 144.000
[info]   CI (99.9%): [27.296, 1136.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   33.442 ±(99.9%) 31.057 B/op [Average]
[info]   (min, avg, max) = (19.143, 33.442, 38.860), stdev = 8.065
[info]   CI (99.9%): [2.385, 64.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.028 ±(99.9%) 0.077 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.055), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.004 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala
[info] # Run progress: 72.00% complete, ETA 00:25:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10433091.755 ops/s
[info] # Warmup Iteration   2: 44973453.854 ops/s
[info] # Warmup Iteration   3: 48631334.157 ops/s
[info] Iteration   1: 50372522.084 ops/s
[info]                  ·gc.alloc.rate:                   1054.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 50331920.517 ops/s
[info]                  ·gc.alloc.rate:               1054.720 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:      986.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30.850 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   3: 49943929.232 ops/s
[info]                  ·gc.alloc.rate:                   1036.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 50737488.753 ops/s
[info]                  ·gc.alloc.rate:                   1063.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 49994932.631 ops/s
[info]                  ·gc.alloc.rate:                   1042.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala":
[info]   50276158.643 ±(99.9%) 1239831.438 ops/s [Average]
[info]   (min, avg, max) = (49943929.232, 50276158.643, 50737488.753), stdev = 321980.287
[info]   CI (99.9%): [49036327.206, 51515990.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1050.287 ±(99.9%) 41.921 MB/sec [Average]
[info]   (min, avg, max) = (1036.273, 1050.287, 1063.851), stdev = 10.887
[info]   CI (99.9%): [1008.366, 1092.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   32.876 ±(99.9%) 0.552 B/op [Average]
[info]   (min, avg, max) = (32.653, 32.876, 33.002), stdev = 0.143
[info]   CI (99.9%): [32.324, 33.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   983.292 ±(99.9%) 14.865 MB/sec [Average]
[info]   (min, avg, max) = (977.899, 983.292, 986.621), stdev = 3.860
[info]   CI (99.9%): [968.427, 998.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   30.780 ±(99.9%) 0.902 B/op [Average]
[info]   (min, avg, max) = (30.417, 30.780, 31.067), stdev = 0.234
[info]   CI (99.9%): [29.879, 31.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.872 ±(99.9%) 7.182 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.872, 4.208), stdev = 1.865
[info]   CI (99.9%): [≈ 0, 8.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.226 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.133), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 12.000), stdev = 3.647
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 72.24% complete, ETA 00:25:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14169898.635 ops/s
[info] # Warmup Iteration   2: 57693930.310 ops/s
[info] # Warmup Iteration   3: 64917268.435 ops/s
[info] Iteration   1: 64478908.305 ops/s
[info]                  ·gc.alloc.rate:      10.140 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.247 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 65118906.717 ops/s
[info]                  ·gc.alloc.rate:      0.851 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.021 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 65389080.335 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 65363012.149 ops/s
[info]                  ·gc.alloc.rate:      0.599 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.014 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 65356358.720 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc":
[info]   65141253.245 ±(99.9%) 1486450.594 ops/s [Average]
[info]   (min, avg, max) = (64478908.305, 65141253.245, 65389080.335), stdev = 386026.499
[info]   CI (99.9%): [63654802.652, 66627703.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2.318 ±(99.9%) 16.898 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.318, 10.140), stdev = 4.388
[info]   CI (99.9%): [≈ 0, 19.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.056 ±(99.9%) 0.413 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.056, 0.247), stdev = 0.107
[info]   CI (99.9%): [≈ 0, 0.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala
[info] # Run progress: 72.47% complete, ETA 00:25:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5512870.931 ops/s
[info] # Warmup Iteration   2: 23814480.463 ops/s
[info] # Warmup Iteration   3: 25849177.565 ops/s
[info] Iteration   1: 26355263.334 ops/s
[info]                  ·gc.alloc.rate:                   2057.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              122.837 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.124 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 26362410.717 ops/s
[info]                  ·gc.alloc.rate:                   2068.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 26564950.183 ops/s
[info]                  ·gc.alloc.rate:                   2104.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.676 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1992.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 26546017.080 ops/s
[info]                  ·gc.alloc.rate:                   2103.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.728 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 26085407.101 ops/s
[info]                  ·gc.alloc.rate:                   2069.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala":
[info]   26382809.683 ±(99.9%) 744268.391 ops/s [Average]
[info]   (min, avg, max) = (26085407.101, 26382809.683, 26564950.183), stdev = 193284.138
[info]   CI (99.9%): [25638541.292, 27127078.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate":
[info]   2080.893 ±(99.9%) 83.620 MB/sec [Average]
[info]   (min, avg, max) = (2057.869, 2080.893, 2104.352), stdev = 21.716
[info]   CI (99.9%): [1997.273, 2164.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm":
[info]   124.110 ±(99.9%) 3.471 B/op [Average]
[info]   (min, avg, max) = (122.837, 124.110, 124.833), stdev = 0.901
[info]   CI (99.9%): [120.639, 127.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space":
[info]   1998.614 ±(99.9%) 54.251 MB/sec [Average]
[info]   (min, avg, max) = (1983.686, 1998.614, 2019.003), stdev = 14.089
[info]   CI (99.9%): [1944.363, 2052.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   119.210 ±(99.9%) 5.721 B/op [Average]
[info]   (min, avg, max) = (118.045, 119.210, 121.785), stdev = 1.486
[info]   CI (99.9%): [113.489, 124.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.658 ±(99.9%) 5.308 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.658, 3.124), stdev = 1.379
[info]   CI (99.9%): [≈ 0, 5.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.317 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.039, 0.186), stdev = 0.082
[info]   CI (99.9%): [≈ 0, 0.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 11.000), stdev = 1.643
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson
[info] # Run progress: 72.71% complete, ETA 00:24:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 320277.733 ops/s
[info] # Warmup Iteration   2: 1972805.956 ops/s
[info] # Warmup Iteration   3: 3622853.623 ops/s
[info] Iteration   1: 3612021.422 ops/s
[info]                  ·gc.alloc.rate:                   1502.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              654.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     713.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.542 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.543 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 3732868.186 ops/s
[info]                  ·gc.alloc.rate:                   1530.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              645.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     549.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3731284.917 ops/s
[info]                  ·gc.alloc.rate:                   1550.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              654.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     685.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 3730890.864 ops/s
[info]                  ·gc.alloc.rate:                   1530.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              645.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     551.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3612965.304 ops/s
[info]                  ·gc.alloc.rate:                   1532.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              667.548 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     716.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson":
[info]   3684006.139 ±(99.9%) 251396.918 ops/s [Average]
[info]   (min, avg, max) = (3612021.422, 3684006.139, 3732868.186), stdev = 65286.981
[info]   CI (99.9%): [3432609.221, 3935403.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1529.395 ±(99.9%) 65.629 MB/sec [Average]
[info]   (min, avg, max) = (1502.975, 1529.395, 1550.665), stdev = 17.044
[info]   CI (99.9%): [1463.766, 1595.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   653.483 ±(99.9%) 34.947 B/op [Average]
[info]   (min, avg, max) = (645.249, 653.483, 667.548), stdev = 9.076
[info]   CI (99.9%): [618.537, 688.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1503.875 ±(99.9%) 698.063 MB/sec [Average]
[info]   (min, avg, max) = (1304.306, 1503.875, 1645.075), stdev = 181.285
[info]   CI (99.9%): [805.812, 2201.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   643.410 ±(99.9%) 329.663 B/op [Average]
[info]   (min, avg, max) = (549.926, 643.410, 716.609), stdev = 85.613
[info]   CI (99.9%): [313.747, 973.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.900 ±(99.9%) 5.803 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.900, 3.542), stdev = 1.507
[info]   CI (99.9%): [≈ 0, 6.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.389 ±(99.9%) 2.531 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.389, 1.543), stdev = 0.657
[info]   CI (99.9%): [≈ 0, 2.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 21.000), stdev = 6.648
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 72.94% complete, ETA 00:24:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54310.962 ops/s
[info] # Warmup Iteration   2: 148184.347 ops/s
[info] # Warmup Iteration   3: 161497.650 ops/s
[info] Iteration   1: 175451.644 ops/s
[info]                  ·gc.alloc.rate:                   3300.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              29608.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3284.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29459.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.428 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 177884.619 ops/s
[info]                  ·gc.alloc.rate:                   3382.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              29927.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3327.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29444.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.737 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 178582.822 ops/s
[info]                  ·gc.alloc.rate:                   3411.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              30053.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3367.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29664.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.734 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 175661.821 ops/s
[info]                  ·gc.alloc.rate:                   3329.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              29832.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3046.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27298.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.560 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 178267.295 ops/s
[info]                  ·gc.alloc.rate:                   3370.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              29758.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3395.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29976.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.368 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala":
[info]   177169.640 ±(99.9%) 5756.086 ops/s [Average]
[info]   (min, avg, max) = (175451.644, 177169.640, 178582.822), stdev = 1494.837
[info]   CI (99.9%): [171413.554, 182925.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3359.090 ±(99.9%) 169.059 MB/sec [Average]
[info]   (min, avg, max) = (3300.789, 3359.090, 3411.560), stdev = 43.904
[info]   CI (99.9%): [3190.031, 3528.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   29836.152 ±(99.9%) 648.839 B/op [Average]
[info]   (min, avg, max) = (29608.589, 29836.152, 30053.682), stdev = 168.501
[info]   CI (99.9%): [29187.313, 30484.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   3284.375 ±(99.9%) 536.141 MB/sec [Average]
[info]   (min, avg, max) = (3046.873, 3284.375, 3395.505), stdev = 139.234
[info]   CI (99.9%): [2748.234, 3820.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   29168.610 ±(99.9%) 4109.577 B/op [Average]
[info]   (min, avg, max) = (27298.523, 29168.610, 29976.286), stdev = 1067.244
[info]   CI (99.9%): [25059.033, 33278.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.108 ±(99.9%) 0.356 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.108, 0.271), stdev = 0.092
[info]   CI (99.9%): [≈ 0, 0.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.965 ±(99.9%) 3.202 B/op [Average]
[info]   (min, avg, max) = (0.368, 0.965, 2.428), stdev = 0.832
[info]   CI (99.9%): [≈ 0, 4.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.800, 14.000), stdev = 1.095
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 73.18% complete, ETA 00:24:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1337.216 ops/s
[info] # Warmup Iteration   2: 19266.816 ops/s
[info] # Warmup Iteration   3: 43379.672 ops/s
[info] Iteration   1: 43876.528 ops/s
[info]                  ·gc.alloc.rate:                   2893.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              103799.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2945.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105650.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.549 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 43535.943 ops/s
[info]                  ·gc.alloc.rate:                   2863.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              103427.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2970.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107301.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.527 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 91.265 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 46184.199 ops/s
[info]                  ·gc.alloc.rate:                   2850.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              97147.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2667.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90896.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.257 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 46147.904 ops/s
[info]                  ·gc.alloc.rate:                   2871.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              97945.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2687.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91669.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.130 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 46251.219 ops/s
[info]                  ·gc.alloc.rate:                   2893.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              98450.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2702.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91964.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.417 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson":
[info]   45199.159 ±(99.9%) 5270.212 ops/s [Average]
[info]   (min, avg, max) = (43535.943, 45199.159, 46251.219), stdev = 1368.657
[info]   CI (99.9%): [39928.947, 50469.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2874.616 ±(99.9%) 73.079 MB/sec [Average]
[info]   (min, avg, max) = (2850.550, 2874.616, 2893.699), stdev = 18.978
[info]   CI (99.9%): [2801.538, 2947.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   100154.029 ±(99.9%) 12302.340 B/op [Average]
[info]   (min, avg, max) = (97147.257, 100154.029, 103799.742), stdev = 3194.879
[info]   CI (99.9%): [87851.689, 112456.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2794.773 ±(99.9%) 576.642 MB/sec [Average]
[info]   (min, avg, max) = (2667.130, 2794.773, 2970.557), stdev = 149.752
[info]   CI (99.9%): [2218.131, 3371.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   97496.517 ±(99.9%) 31681.106 B/op [Average]
[info]   (min, avg, max) = (90896.261, 97496.517, 107301.906), stdev = 8227.483
[info]   CI (99.9%): [65815.411, 129177.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.805 ±(99.9%) 4.208 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.805, 2.527), stdev = 1.093
[info]   CI (99.9%): [≈ 0, 5.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   28.924 ±(99.9%) 152.160 B/op [Average]
[info]   (min, avg, max) = (1.417, 28.924, 91.265), stdev = 39.515
[info]   CI (99.9%): [≈ 0, 181.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   42.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.400, 9.000), stdev = 0.548
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.600, 16.000), stdev = 1.817
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.41% complete, ETA 00:24:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32341.103 ops/s
[info] # Warmup Iteration   2: 170317.194 ops/s
[info] # Warmup Iteration   3: 213495.135 ops/s
[info] Iteration   1: 226273.508 ops/s
[info]                  ·gc.alloc.rate:                   832.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              5789.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6723.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 231573.886 ops/s
[info]                  ·gc.alloc.rate:                   840.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              5715.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4391.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 227594.780 ops/s
[info]                  ·gc.alloc.rate:                   840.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              5810.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6732.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.358 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 223947.487 ops/s
[info]                  ·gc.alloc.rate:                   816.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              5741.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4580.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.635 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.465 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 232786.601 ops/s
[info]                  ·gc.alloc.rate:                   853.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              5764.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6634.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.422 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala":
[info]   228435.252 ±(99.9%) 14188.046 ops/s [Average]
[info]   (min, avg, max) = (223947.487, 228435.252, 232786.601), stdev = 3684.591
[info]   CI (99.9%): [214247.206, 242623.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   836.721 ±(99.9%) 51.183 MB/sec [Average]
[info]   (min, avg, max) = (816.956, 836.721, 853.048), stdev = 13.292
[info]   CI (99.9%): [785.538, 887.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   5764.234 ±(99.9%) 145.034 B/op [Average]
[info]   (min, avg, max) = (5715.363, 5764.234, 5810.258), stdev = 37.665
[info]   CI (99.9%): [5619.200, 5909.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   843.988 ±(99.9%) 685.638 MB/sec [Average]
[info]   (min, avg, max) = (646.209, 843.988, 981.691), stdev = 178.058
[info]   CI (99.9%): [158.349, 1529.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5812.450 ±(99.9%) 4671.093 B/op [Average]
[info]   (min, avg, max) = (4391.610, 5812.450, 6732.330), stdev = 1213.068
[info]   CI (99.9%): [1141.358, 10483.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.164 ±(99.9%) 1.015 MB/sec [Average]
[info]   (min, avg, max) = (0.031, 0.164, 0.635), stdev = 0.263
[info]   CI (99.9%): [≈ 0, 1.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.149 ±(99.9%) 7.144 B/op [Average]
[info]   (min, avg, max) = (0.210, 1.149, 4.465), stdev = 1.855
[info]   CI (99.9%): [≈ 0, 8.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.65% complete, ETA 00:23:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 189660.153 ops/s
[info] # Warmup Iteration   2: 439304.307 ops/s
[info] # Warmup Iteration   3: 519648.578 ops/s
[info] Iteration   1: 521880.018 ops/s
[info]                  ·gc.alloc.rate:               962.331 MB/sec
[info]                  ·gc.alloc.rate.norm:          2902.205 B/op
[info]                  ·gc.churn.PS_Eden_Space:      978.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2951.160 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     17.000 ms
[info] Iteration   2: 525798.059 ops/s
[info]                  ·gc.alloc.rate:                   970.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              2905.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2921.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.905 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.693 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 526323.720 ops/s
[info]                  ·gc.alloc.rate:                   968.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              2895.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2910.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.432 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 528289.885 ops/s
[info]                  ·gc.alloc.rate:                   970.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              2891.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2899.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.225 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 515546.701 ops/s
[info]                  ·gc.alloc.rate:                   946.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              2888.773 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2969.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.779 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.429 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala":
[info]   523567.677 ±(99.9%) 19449.933 ops/s [Average]
[info]   (min, avg, max) = (515546.701, 523567.677, 528289.885), stdev = 5051.086
[info]   CI (99.9%): [504117.743, 543017.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   963.714 ±(99.9%) 39.759 MB/sec [Average]
[info]   (min, avg, max) = (946.319, 963.714, 970.945), stdev = 10.325
[info]   CI (99.9%): [923.954, 1003.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2896.815 ±(99.9%) 27.293 B/op [Average]
[info]   (min, avg, max) = (2888.773, 2896.815, 2905.803), stdev = 7.088
[info]   CI (99.9%): [2869.522, 2924.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   974.734 ±(99.9%) 9.774 MB/sec [Average]
[info]   (min, avg, max) = (972.608, 974.734, 978.564), stdev = 2.538
[info]   CI (99.9%): [964.961, 984.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2930.178 ±(99.9%) 112.013 B/op [Average]
[info]   (min, avg, max) = (2899.217, 2930.178, 2969.024), stdev = 29.089
[info]   CI (99.9%): [2818.165, 3042.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.249 ±(99.9%) 4.391 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.249, 2.905), stdev = 1.140
[info]   CI (99.9%): [≈ 0, 5.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.756 ±(99.9%) 13.194 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.756, 8.693), stdev = 3.426
[info]   CI (99.9%): [≈ 0, 16.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.800, 17.000), stdev = 4.266
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 73.88% complete, ETA 00:23:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 178099.970 ops/s
[info] # Warmup Iteration   2: 399239.195 ops/s
[info] # Warmup Iteration   3: 519469.986 ops/s
[info] Iteration   1: 520422.928 ops/s
[info]                  ·gc.alloc.rate:                   364.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              1101.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     991.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 512146.297 ops/s
[info]                  ·gc.alloc.rate:               360.212 MB/sec
[info]                  ·gc.alloc.rate.norm:          1106.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1007.209 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 521304.957 ops/s
[info]                  ·gc.alloc.rate:               373.649 MB/sec
[info]                  ·gc.alloc.rate.norm:          1128.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 989.500 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 517742.725 ops/s
[info]                  ·gc.alloc.rate:               373.504 MB/sec
[info]                  ·gc.alloc.rate.norm:          1135.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 996.278 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 516891.158 ops/s
[info]                  ·gc.alloc.rate:                   366.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              1116.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     997.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   517701.613 ±(99.9%) 13871.635 ops/s [Average]
[info]   (min, avg, max) = (512146.297, 517701.613, 521304.957), stdev = 3602.420
[info]   CI (99.9%): [503829.978, 531573.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   367.662 ±(99.9%) 22.586 MB/sec [Average]
[info]   (min, avg, max) = (360.212, 367.662, 373.649), stdev = 5.866
[info]   CI (99.9%): [345.076, 390.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1117.686 ±(99.9%) 54.104 B/op [Average]
[info]   (min, avg, max) = (1101.871, 1117.686, 1135.387), stdev = 14.051
[info]   CI (99.9%): [1063.582, 1171.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   327.751 ±(99.9%) 0.056 MB/sec [Average]
[info]   (min, avg, max) = (327.736, 327.751, 327.774), stdev = 0.015
[info]   CI (99.9%): [327.695, 327.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   996.415 ±(99.9%) 26.833 B/op [Average]
[info]   (min, avg, max) = (989.500, 996.415, 1007.209), stdev = 6.969
[info]   CI (99.9%): [969.582, 1023.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.053 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.029), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.161 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.087), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 74.12% complete, ETA 00:23:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2544.770 ops/s
[info] # Warmup Iteration   2: 44764.599 ops/s
[info] # Warmup Iteration   3: 64174.779 ops/s
[info] Iteration   1: 73997.763 ops/s
[info]                  ·gc.alloc.rate:                   1536.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              32681.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27811.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.804 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.636 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 85687.570 ops/s
[info]                  ·gc.alloc.rate:                   1442.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              26487.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30111.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.982 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 88470.839 ops/s
[info]                  ·gc.alloc.rate:                   1445.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              25709.789 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23345.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.925 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 86999.348 ops/s
[info]                  ·gc.alloc.rate:                   1416.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              25627.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23812.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.883 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 87821.558 ops/s
[info]                  ·gc.alloc.rate:                   1430.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              25637.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23708.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.373 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson":
[info]   84595.416 ±(99.9%) 23160.658 ops/s [Average]
[info]   (min, avg, max) = (73997.763, 84595.416, 88470.839), stdev = 6014.749
[info]   CI (99.9%): [61434.758, 107756.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1454.358 ±(99.9%) 182.460 MB/sec [Average]
[info]   (min, avg, max) = (1416.625, 1454.358, 1536.640), stdev = 47.384
[info]   CI (99.9%): [1271.898, 1636.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   27228.442 ±(99.9%) 11818.929 B/op [Average]
[info]   (min, avg, max) = (25627.219, 27228.442, 32681.054), stdev = 3069.338
[info]   CI (99.9%): [15409.513, 39047.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1379.867 ±(99.9%) 559.880 MB/sec [Average]
[info]   (min, avg, max) = (1307.658, 1379.867, 1639.774), stdev = 145.399
[info]   CI (99.9%): [819.987, 1939.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   25757.903 ±(99.9%) 11707.328 B/op [Average]
[info]   (min, avg, max) = (23345.404, 25757.903, 30111.735), stdev = 3040.356
[info]   CI (99.9%): [14050.575, 37465.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.131 ±(99.9%) 5.209 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.131, 2.804), stdev = 1.353
[info]   CI (99.9%): [≈ 0, 6.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   22.360 ±(99.9%) 105.978 B/op [Average]
[info]   (min, avg, max) = (0.373, 22.360, 59.636), stdev = 27.522
[info]   CI (99.9%): [≈ 0, 128.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 13.000), stdev = 2.950
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 74.35% complete, ETA 00:23:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41438.125 ops/s
[info] # Warmup Iteration   2: 310411.976 ops/s
[info] # Warmup Iteration   3: 347628.753 ops/s
[info] Iteration   1: 374285.970 ops/s
[info]                  ·gc.alloc.rate:                   2711.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              11402.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2586.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10876.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.488 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 378088.639 ops/s
[info]                  ·gc.alloc.rate:                   2740.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              11403.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2944.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12255.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 371425.996 ops/s
[info]                  ·gc.alloc.rate:                   2716.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              11511.829 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2323.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9844.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 373869.164 ops/s
[info]                  ·gc.alloc.rate:                   2709.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              11404.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2682.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11292.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.351 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 373961.598 ops/s
[info]                  ·gc.alloc.rate:                   2742.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              11539.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2701.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11368.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce":
[info]   374326.273 ±(99.9%) 9215.551 ops/s [Average]
[info]   (min, avg, max) = (371425.996, 374326.273, 378088.639), stdev = 2393.249
[info]   CI (99.9%): [365110.723, 383541.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2723.922 ±(99.9%) 61.530 MB/sec [Average]
[info]   (min, avg, max) = (2709.003, 2723.922, 2742.150), stdev = 15.979
[info]   CI (99.9%): [2662.393, 2785.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   11452.386 ±(99.9%) 261.227 B/op [Average]
[info]   (min, avg, max) = (11402.190, 11452.386, 11539.957), stdev = 67.840
[info]   CI (99.9%): [11191.159, 11713.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2647.677 ±(99.9%) 863.910 MB/sec [Average]
[info]   (min, avg, max) = (2323.208, 2647.677, 2944.705), stdev = 224.355
[info]   CI (99.9%): [1783.767, 3511.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11127.407 ±(99.9%) 3371.696 B/op [Average]
[info]   (min, avg, max) = (9844.161, 11127.407, 12255.136), stdev = 875.619
[info]   CI (99.9%): [7755.711, 14499.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.108 ±(99.9%) 0.536 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.108, 0.354), stdev = 0.139
[info]   CI (99.9%): [≈ 0, 0.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.455 ±(99.9%) 2.254 B/op [Average]
[info]   (min, avg, max) = (0.088, 0.455, 1.488), stdev = 0.585
[info]   CI (99.9%): [≈ 0, 2.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 9.000), stdev = 0.707
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.200, 12.000), stdev = 1.304
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.59% complete, ETA 00:23:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 75839.726 ops/s
[info] # Warmup Iteration   2: 541806.589 ops/s
[info] # Warmup Iteration   3: 638743.834 ops/s
[info] Iteration   1: 820114.962 ops/s
[info]                  ·gc.alloc.rate:                   1784.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              3425.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1942.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3727.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.472 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.825 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 815857.398 ops/s
[info]                  ·gc.alloc.rate:                   1775.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              3424.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3154.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 793189.267 ops/s
[info]                  ·gc.alloc.rate:                   1707.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              3388.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3276.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 819449.161 ops/s
[info]                  ·gc.alloc.rate:               1768.738 MB/sec
[info]                  ·gc.alloc.rate.norm:          3396.450 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1664.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3196.640 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 820818.494 ops/s
[info]                  ·gc.alloc.rate:                   1798.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              3447.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1677.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3214.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala":
[info]   813885.856 ±(99.9%) 45154.828 ops/s [Average]
[info]   (min, avg, max) = (793189.267, 813885.856, 820818.494), stdev = 11726.565
[info]   CI (99.9%): [768731.028, 859040.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1767.039 ±(99.9%) 135.364 MB/sec [Average]
[info]   (min, avg, max) = (1707.554, 1767.039, 1798.954), stdev = 35.154
[info]   CI (99.9%): [1631.675, 1902.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3416.428 ±(99.9%) 92.936 B/op [Average]
[info]   (min, avg, max) = (3388.188, 3416.428, 3447.945), stdev = 24.135
[info]   CI (99.9%): [3323.492, 3509.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1714.065 ±(99.9%) 495.426 MB/sec [Average]
[info]   (min, avg, max) = (1635.049, 1714.065, 1942.515), stdev = 128.660
[info]   CI (99.9%): [1218.639, 2209.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3313.783 ±(99.9%) 906.978 B/op [Average]
[info]   (min, avg, max) = (3154.181, 3313.783, 3727.775), stdev = 235.539
[info]   CI (99.9%): [2406.805, 4220.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.315 ±(99.9%) 2.492 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.315, 1.472), stdev = 0.647
[info]   CI (99.9%): [≈ 0, 2.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.605 ±(99.9%) 4.781 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.605, 2.825), stdev = 1.242
[info]   CI (99.9%): [≈ 0, 5.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 9.000), stdev = 0.894
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.82% complete, ETA 00:22:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 521576.377 ops/s
[info] # Warmup Iteration   2: 1492181.062 ops/s
[info] # Warmup Iteration   3: 1601224.703 ops/s
[info] Iteration   1: 1630200.681 ops/s
[info]                  ·gc.alloc.rate:                   3294.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              3179.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3292.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3178.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1572951.372 ops/s
[info]                  ·gc.alloc.rate:                   3177.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              3179.320 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3001.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3002.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.500 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1634901.577 ops/s
[info]                  ·gc.alloc.rate:                   3305.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              3182.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3367.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3242.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1583970.222 ops/s
[info]                  ·gc.alloc.rate:                   3238.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              3217.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3047.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3028.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1622211.684 ops/s
[info]                  ·gc.alloc.rate:                   3247.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              3150.550 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3056.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2965.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala":
[info]   1608847.107 ±(99.9%) 109265.806 ops/s [Average]
[info]   (min, avg, max) = (1572951.372, 1608847.107, 1634901.577), stdev = 28375.983
[info]   CI (99.9%): [1499581.301, 1718112.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3252.801 ±(99.9%) 195.732 MB/sec [Average]
[info]   (min, avg, max) = (3177.855, 3252.801, 3305.521), stdev = 50.831
[info]   CI (99.9%): [3057.069, 3448.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3181.896 ±(99.9%) 92.142 B/op [Average]
[info]   (min, avg, max) = (3150.550, 3181.896, 3217.893), stdev = 23.929
[info]   CI (99.9%): [3089.754, 3274.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   3153.228 ±(99.9%) 635.968 MB/sec [Average]
[info]   (min, avg, max) = (3001.101, 3153.228, 3367.763), stdev = 165.159
[info]   CI (99.9%): [2517.260, 3789.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3083.241 ±(99.9%) 462.691 B/op [Average]
[info]   (min, avg, max) = (2965.143, 3083.241, 3242.056), stdev = 120.159
[info]   CI (99.9%): [2620.550, 3545.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.146 ±(99.9%) 0.765 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.146, 0.500), stdev = 0.199
[info]   CI (99.9%): [≈ 0, 0.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.144 ±(99.9%) 0.768 B/op [Average]
[info]   (min, avg, max) = (0.040, 0.144, 0.500), stdev = 0.199
[info]   CI (99.9%): [≈ 0, 0.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.000, 13.000), stdev = 0.707
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 75.06% complete, ETA 00:22:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7360.233 ops/s
[info] # Warmup Iteration   2: 112489.349 ops/s
[info] # Warmup Iteration   3: 169755.905 ops/s
[info] Iteration   1: 185422.239 ops/s
[info]                  ·gc.alloc.rate:                   4815.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              40873.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4637.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39364.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.944 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 186337.695 ops/s
[info]                  ·gc.alloc.rate:                   4888.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              41287.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4715.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39825.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 186041.373 ops/s
[info]                  ·gc.alloc.rate:                   4866.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              41171.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4409.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37305.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.881 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 188766.886 ops/s
[info]                  ·gc.alloc.rate:                   4951.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              41282.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4759.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39683.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.215 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 184761.432 ops/s
[info]                  ·gc.alloc.rate:                   4845.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              41260.767 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4767.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40595.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.355 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson":
[info]   186265.925 ±(99.9%) 5866.923 ops/s [Average]
[info]   (min, avg, max) = (184761.432, 186265.925, 188766.886), stdev = 1523.621
[info]   CI (99.9%): [180399.002, 192132.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4873.536 ±(99.9%) 196.971 MB/sec [Average]
[info]   (min, avg, max) = (4815.542, 4873.536, 4951.390), stdev = 51.153
[info]   CI (99.9%): [4676.565, 5070.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   41175.013 ±(99.9%) 674.468 B/op [Average]
[info]   (min, avg, max) = (40873.045, 41175.013, 41287.738), stdev = 175.157
[info]   CI (99.9%): [40500.544, 41849.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4658.006 ±(99.9%) 570.028 MB/sec [Average]
[info]   (min, avg, max) = (4409.741, 4658.006, 4767.607), stdev = 148.034
[info]   CI (99.9%): [4087.979, 5228.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   39354.985 ±(99.9%) 4743.128 B/op [Average]
[info]   (min, avg, max) = (37305.644, 39354.985, 40595.896), stdev = 1231.775
[info]   CI (99.9%): [34611.857, 44098.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.108 ±(99.9%) 0.323 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.108, 0.229), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.914 ±(99.9%) 2.729 B/op [Average]
[info]   (min, avg, max) = (0.176, 0.914, 1.944), stdev = 0.709
[info]   CI (99.9%): [≈ 0, 3.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   69.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.800, 14.000), stdev = 0.447
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   104.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (19.000, 20.800, 27.000), stdev = 3.493
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 75.29% complete, ETA 00:22:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94116.964 ops/s
[info] # Warmup Iteration   2: 399225.077 ops/s
[info] # Warmup Iteration   3: 430228.128 ops/s
[info] Iteration   1: 421956.977 ops/s
[info]                  ·gc.alloc.rate:                   1414.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              5274.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4869.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.448 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.860 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 441303.407 ops/s
[info]                  ·gc.alloc.rate:                   1437.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              5124.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4641.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.267 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 434688.285 ops/s
[info]                  ·gc.alloc.rate:                   1431.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              5181.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5872.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.377 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 443236.621 ops/s
[info]                  ·gc.alloc.rate:               1451.321 MB/sec
[info]                  ·gc.alloc.rate.norm:          5153.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1302.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4626.592 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 450246.849 ops/s
[info]                  ·gc.alloc.rate:                   1487.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              5198.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4587.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce":
[info]   438286.428 ±(99.9%) 41125.158 ops/s [Average]
[info]   (min, avg, max) = (421956.977, 438286.428, 450246.849), stdev = 10680.073
[info]   CI (99.9%): [397161.270, 479411.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1444.232 ±(99.9%) 105.934 MB/sec [Average]
[info]   (min, avg, max) = (1414.187, 1444.232, 1487.290), stdev = 27.511
[info]   CI (99.9%): [1338.298, 1550.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5186.464 ±(99.9%) 218.810 B/op [Average]
[info]   (min, avg, max) = (5124.239, 5186.464, 5274.731), stdev = 56.824
[info]   CI (99.9%): [4967.654, 5405.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1368.954 ±(99.9%) 544.981 MB/sec [Average]
[info]   (min, avg, max) = (1301.706, 1368.954, 1622.021), stdev = 141.530
[info]   CI (99.9%): [823.973, 1913.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4919.487 ±(99.9%) 2095.317 B/op [Average]
[info]   (min, avg, max) = (4587.242, 4919.487, 5872.518), stdev = 544.147
[info]   CI (99.9%): [2824.170, 7014.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.898 ±(99.9%) 5.682 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.898, 3.448), stdev = 1.476
[info]   CI (99.9%): [≈ 0, 6.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.315 ±(99.9%) 21.200 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.315, 12.860), stdev = 5.506
[info]   CI (99.9%): [≈ 0, 24.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 17.000), stdev = 4.879
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.53% complete, ETA 00:22:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 252847.108 ops/s
[info] # Warmup Iteration   2: 839420.220 ops/s
[info] # Warmup Iteration   3: 988551.768 ops/s
[info] Iteration   1: 987595.850 ops/s
[info]                  ·gc.alloc.rate:               465.069 MB/sec
[info]                  ·gc.alloc.rate.norm:          741.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 510.108 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 950854.821 ops/s
[info]                  ·gc.alloc.rate:                   448.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              741.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     530.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1002324.891 ops/s
[info]                  ·gc.alloc.rate:               481.098 MB/sec
[info]                  ·gc.alloc.rate.norm:          755.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:      642.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1009.350 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1004017.610 ops/s
[info]                  ·gc.alloc.rate:                   474.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              743.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     504.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 986898.813 ops/s
[info]                  ·gc.alloc.rate:                   478.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              763.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1031.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala":
[info]   986338.397 ±(99.9%) 82342.173 ops/s [Average]
[info]   (min, avg, max) = (950854.821, 986338.397, 1004017.610), stdev = 21384.001
[info]   CI (99.9%): [903996.224, 1068680.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   469.517 ±(99.9%) 51.768 MB/sec [Average]
[info]   (min, avg, max) = (448.140, 469.517, 481.098), stdev = 13.444
[info]   CI (99.9%): [417.749, 521.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   749.102 ±(99.9%) 38.424 B/op [Average]
[info]   (min, avg, max) = (741.176, 749.102, 763.615), stdev = 9.979
[info]   CI (99.9%): [710.678, 787.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   450.546 ±(99.9%) 683.246 MB/sec [Average]
[info]   (min, avg, max) = (320.080, 450.546, 647.004), stdev = 177.437
[info]   CI (99.9%): [≈ 0, 1133.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   717.361 ±(99.9%) 1066.515 B/op [Average]
[info]   (min, avg, max) = (504.884, 717.361, 1031.565), stdev = 276.971
[info]   CI (99.9%): [≈ 0, 1783.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.034), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.76% complete, ETA 00:22:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1245087.750 ops/s
[info] # Warmup Iteration   2: 2522087.425 ops/s
[info] # Warmup Iteration   3: 2725901.943 ops/s
[info] Iteration   1: 2674000.837 ops/s
[info]                  ·gc.alloc.rate:                   1305.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              768.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     775.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 2692377.055 ops/s
[info]                  ·gc.alloc.rate:                   1313.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              767.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     769.876 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.061 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.373 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2728774.046 ops/s
[info]                  ·gc.alloc.rate:                   1297.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     755.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2746682.598 ops/s
[info]                  ·gc.alloc.rate:                   1291.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              739.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     562.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2729669.573 ops/s
[info]                  ·gc.alloc.rate:               1308.718 MB/sec
[info]                  ·gc.alloc.rate.norm:          754.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 757.989 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala":
[info]   2714300.822 ±(99.9%) 115503.151 ops/s [Average]
[info]   (min, avg, max) = (2674000.837, 2714300.822, 2746682.598), stdev = 29995.801
[info]   CI (99.9%): [2598797.671, 2829803.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1303.210 ±(99.9%) 34.596 MB/sec [Average]
[info]   (min, avg, max) = (1291.163, 1303.210, 1313.571), stdev = 8.984
[info]   CI (99.9%): [1268.614, 1337.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   755.640 ±(99.9%) 47.439 B/op [Average]
[info]   (min, avg, max) = (739.838, 755.640, 768.237), stdev = 12.320
[info]   CI (99.9%): [708.201, 803.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1248.363 ±(99.9%) 573.709 MB/sec [Average]
[info]   (min, avg, max) = (981.905, 1248.363, 1317.716), stdev = 148.990
[info]   CI (99.9%): [674.654, 1822.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   724.274 ±(99.9%) 349.413 B/op [Average]
[info]   (min, avg, max) = (562.633, 724.274, 775.517), stdev = 90.741
[info]   CI (99.9%): [374.861, 1073.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.829 ±(99.9%) 6.958 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.829, 4.061), stdev = 1.807
[info]   CI (99.9%): [≈ 0, 7.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.484 ±(99.9%) 4.066 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.484, 2.373), stdev = 1.056
[info]   CI (99.9%): [≈ 0, 4.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 14.000), stdev = 4.037
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 76.00% complete, ETA 00:21:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1366925.478 ops/s
[info] # Warmup Iteration   2: 2586353.280 ops/s
[info] # Warmup Iteration   3: 2884598.764 ops/s
[info] Iteration   1: 2885509.266 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2878503.517 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2897348.432 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2896902.324 ops/s
[info]                  ·gc.alloc.rate:      0.847 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.460 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2857806.071 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2883213.922 ±(99.9%) 62689.032 ops/s [Average]
[info]   (min, avg, max) = (2857806.071, 2883213.922, 2897348.432), stdev = 16280.142
[info]   CI (99.9%): [2820524.890, 2945902.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.170 ±(99.9%) 1.458 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.170, 0.847), stdev = 0.379
[info]   CI (99.9%): [≈ 0, 1.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.092 ±(99.9%) 0.792 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.092, 0.460), stdev = 0.206
[info]   CI (99.9%): [≈ 0, 0.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 76.24% complete, ETA 00:21:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 63342.103 ops/s
[info] # Warmup Iteration   2: 500821.231 ops/s
[info] # Warmup Iteration   3: 477301.116 ops/s
[info] Iteration   1: 598775.243 ops/s
[info]                  ·gc.alloc.rate:                   1315.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1272.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3342.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.775 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.798 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 688871.716 ops/s
[info]                  ·gc.alloc.rate:                   1013.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              2315.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          952.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2176.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.851 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 694153.311 ops/s
[info]                  ·gc.alloc.rate:                   966.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              2190.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          952.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2158.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.826 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.137 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 696120.781 ops/s
[info]                  ·gc.alloc.rate:                   969.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              2191.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          953.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2155.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.800 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 685361.261 ops/s
[info]                  ·gc.alloc.rate:                   957.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              2198.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          955.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2194.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson":
[info]   672656.462 ±(99.9%) 159876.743 ops/s [Average]
[info]   (min, avg, max) = (598775.243, 672656.462, 696120.781), stdev = 41519.482
[info]   CI (99.9%): [512779.719, 832533.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1044.548 ±(99.9%) 589.269 MB/sec [Average]
[info]   (min, avg, max) = (957.514, 1044.548, 1315.565), stdev = 153.031
[info]   CI (99.9%): [455.279, 1633.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2470.435 ±(99.9%) 2131.513 B/op [Average]
[info]   (min, avg, max) = (2190.647, 2470.435, 3456.147), stdev = 553.547
[info]   CI (99.9%): [338.922, 4601.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1017.323 ±(99.9%) 549.065 MB/sec [Average]
[info]   (min, avg, max) = (952.332, 1017.323, 1272.386), stdev = 142.590
[info]   CI (99.9%): [468.258, 1566.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2405.405 ±(99.9%) 2018.528 B/op [Average]
[info]   (min, avg, max) = (2155.249, 2405.405, 3342.710), stdev = 524.205
[info]   CI (99.9%): [386.878, 4423.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.224 ±(99.9%) 10.393 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.224, 6.775), stdev = 2.699
[info]   CI (99.9%): [≈ 0, 12.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.536 ±(99.9%) 27.553 B/op [Average]
[info]   (min, avg, max) = (0.096, 5.536, 17.798), stdev = 7.156
[info]   CI (99.9%): [≈ 0, 33.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 14.000), stdev = 3.564
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 76.47% complete, ETA 00:21:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6359.313 ops/s
[info] # Warmup Iteration   2: 51832.157 ops/s
[info] # Warmup Iteration   3: 68936.297 ops/s
[info] Iteration   1: 72464.871 ops/s
[info]                  ·gc.alloc.rate:                   2267.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              49242.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2276.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49442.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.986 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.141 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 76698.271 ops/s
[info]                  ·gc.alloc.rate:                   2238.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              45923.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2305.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47309.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.417 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 77727.862 ops/s
[info]                  ·gc.alloc.rate:               2255.156 MB/sec
[info]                  ·gc.alloc.rate.norm:          45655.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2329.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47167.779 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 74278.648 ops/s
[info]                  ·gc.alloc.rate:                   2202.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              46652.293 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42642.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.882 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 78351.947 ops/s
[info]                  ·gc.alloc.rate:                   2276.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              45687.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2360.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47370.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.835 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce":
[info]   75904.320 ±(99.9%) 9514.122 ops/s [Average]
[info]   (min, avg, max) = (72464.871, 75904.320, 78351.947), stdev = 2470.787
[info]   CI (99.9%): [66390.198, 85418.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2247.981 ±(99.9%) 111.661 MB/sec [Average]
[info]   (min, avg, max) = (2202.829, 2247.981, 2276.321), stdev = 28.998
[info]   CI (99.9%): [2136.319, 2359.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   46632.221 ±(99.9%) 5828.892 B/op [Average]
[info]   (min, avg, max) = (45655.099, 46632.221, 49242.892), stdev = 1513.745
[info]   CI (99.9%): [40803.329, 52461.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2257.169 ±(99.9%) 537.788 MB/sec [Average]
[info]   (min, avg, max) = (2013.472, 2257.169, 2360.155), stdev = 139.662
[info]   CI (99.9%): [1719.381, 2794.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   46786.361 ±(99.9%) 9624.376 B/op [Average]
[info]   (min, avg, max) = (42642.025, 46786.361, 49442.024), stdev = 2499.420
[info]   CI (99.9%): [37161.985, 56410.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.447 ±(99.9%) 3.322 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.447, 1.986), stdev = 0.863
[info]   CI (99.9%): [≈ 0, 3.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.655 ±(99.9%) 72.250 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.655, 43.141), stdev = 18.763
[info]   CI (99.9%): [≈ 0, 81.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.800, 11.000), stdev = 1.095
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.71% complete, ETA 00:21:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13167.387 ops/s
[info] # Warmup Iteration   2: 56871.677 ops/s
[info] # Warmup Iteration   3: 94880.446 ops/s
[info] Iteration   1: 102973.099 ops/s
[info]                  ·gc.alloc.rate:                   1892.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              28920.691 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24766.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.995 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 103295.694 ops/s
[info]                  ·gc.alloc.rate:                   1882.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              28683.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29850.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.978 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 102746.724 ops/s
[info]                  ·gc.alloc.rate:                   1856.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              28436.792 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30255.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.232 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 103929.641 ops/s
[info]                  ·gc.alloc.rate:                   1889.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              28616.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25154.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.630 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 102268.947 ops/s
[info]                  ·gc.alloc.rate:                   1893.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              29143.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30892.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.320 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   103042.821 ±(99.9%) 2390.665 ops/s [Average]
[info]   (min, avg, max) = (102268.947, 103042.821, 103929.641), stdev = 620.848
[info]   CI (99.9%): [100652.156, 105433.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1882.931 ±(99.9%) 59.406 MB/sec [Average]
[info]   (min, avg, max) = (1856.402, 1882.931, 1893.780), stdev = 15.428
[info]   CI (99.9%): [1823.525, 1942.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   28760.285 ±(99.9%) 1060.647 B/op [Average]
[info]   (min, avg, max) = (28436.792, 28760.285, 29143.282), stdev = 275.447
[info]   CI (99.9%): [27699.638, 29820.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1844.629 ±(99.9%) 722.112 MB/sec [Average]
[info]   (min, avg, max) = (1620.361, 1844.629, 2007.436), stdev = 187.530
[info]   CI (99.9%): [1122.517, 2566.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   28183.718 ±(99.9%) 11432.645 B/op [Average]
[info]   (min, avg, max) = (24766.345, 28183.718, 30892.330), stdev = 2969.022
[info]   CI (99.9%): [16751.073, 39616.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.932 ±(99.9%) 6.626 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.932, 3.995), stdev = 1.721
[info]   CI (99.9%): [≈ 0, 7.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   14.243 ±(99.9%) 101.285 B/op [Average]
[info]   (min, avg, max) = (0.320, 14.243, 61.054), stdev = 26.303
[info]   CI (99.9%): [≈ 0, 115.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.200, 12.000), stdev = 1.643
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.94% complete, ETA 00:20:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33766.294 ops/s
[info] # Warmup Iteration   2: 118617.809 ops/s
[info] # Warmup Iteration   3: 150540.994 ops/s
[info] Iteration   1: 158220.742 ops/s
[info]                  ·gc.alloc.rate:                   2478.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              24642.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2267.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22552.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.875 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.697 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 158381.650 ops/s
[info]                  ·gc.alloc.rate:                   2481.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              24655.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2599.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25823.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.004 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 161131.516 ops/s
[info]                  ·gc.alloc.rate:                   2554.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              24953.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2271.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22191.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.203 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 156935.232 ops/s
[info]                  ·gc.alloc.rate:                   2505.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              25123.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2629.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26374.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.835 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 158063.267 ops/s
[info]                  ·gc.alloc.rate:                   2518.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              25069.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2330.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23205.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.415 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   158546.481 ±(99.9%) 5979.450 ops/s [Average]
[info]   (min, avg, max) = (156935.232, 158546.481, 161131.516), stdev = 1552.844
[info]   CI (99.9%): [152567.031, 164525.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2507.519 ±(99.9%) 119.814 MB/sec [Average]
[info]   (min, avg, max) = (2478.072, 2507.519, 2554.582), stdev = 31.115
[info]   CI (99.9%): [2387.704, 2627.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   24888.885 ±(99.9%) 875.773 B/op [Average]
[info]   (min, avg, max) = (24642.224, 24888.885, 25123.275), stdev = 227.435
[info]   CI (99.9%): [24013.112, 25764.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2419.950 ±(99.9%) 691.895 MB/sec [Average]
[info]   (min, avg, max) = (2267.959, 2419.950, 2629.883), stdev = 179.683
[info]   CI (99.9%): [1728.055, 3111.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   24029.541 ±(99.9%) 7445.999 B/op [Average]
[info]   (min, avg, max) = (22191.138, 24029.541, 26374.733), stdev = 1933.702
[info]   CI (99.9%): [16583.543, 31475.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.009 ±(99.9%) 6.639 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.009, 4.026), stdev = 1.724
[info]   CI (99.9%): [≈ 0, 7.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   10.031 ±(99.9%) 65.962 B/op [Average]
[info]   (min, avg, max) = (0.203, 10.031, 40.004), stdev = 17.130
[info]   CI (99.9%): [≈ 0, 75.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 14.200, 23.000), stdev = 6.058
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 77.18% complete, ETA 00:20:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1006.401 ops/s
[info] # Warmup Iteration   2: 16312.164 ops/s
[info] # Warmup Iteration   3: 40141.660 ops/s
[info] Iteration   1: 43769.324 ops/s
[info]                  ·gc.alloc.rate:                   2463.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              88569.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82498.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.602 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93.572 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 41223.236 ops/s
[info]                  ·gc.alloc.rate:                   2549.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              97344.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2630.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100434.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 116.354 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 43666.087 ops/s
[info]                  ·gc.alloc.rate:                   2450.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              88335.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2316.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83505.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.001 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 44059.456 ops/s
[info]                  ·gc.alloc.rate:                   2485.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              88754.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2670.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95374.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.975 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 44329.129 ops/s
[info]                  ·gc.alloc.rate:                   2511.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              89164.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2354.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83577.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.739 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson":
[info]   43409.446 ±(99.9%) 4810.694 ops/s [Average]
[info]   (min, avg, max) = (41223.236, 43409.446, 44329.129), stdev = 1249.322
[info]   CI (99.9%): [38598.753, 48220.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2492.106 ±(99.9%) 152.663 MB/sec [Average]
[info]   (min, avg, max) = (2450.870, 2492.106, 2549.745), stdev = 39.646
[info]   CI (99.9%): [2339.443, 2644.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   90433.522 ±(99.9%) 14921.587 B/op [Average]
[info]   (min, avg, max) = (88335.572, 90433.522, 97344.201), stdev = 3875.089
[info]   CI (99.9%): [75511.935, 105355.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2453.339 ±(99.9%) 700.799 MB/sec [Average]
[info]   (min, avg, max) = (2294.256, 2453.339, 2670.733), stdev = 181.995
[info]   CI (99.9%): [1752.540, 3154.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   89078.351 ±(99.9%) 31824.263 B/op [Average]
[info]   (min, avg, max) = (82498.646, 89078.351, 100434.806), stdev = 8264.660
[info]   CI (99.9%): [57254.088, 120902.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.167 ±(99.9%) 5.859 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.167, 3.048), stdev = 1.521
[info]   CI (99.9%): [≈ 0, 7.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   43.328 ±(99.9%) 218.892 B/op [Average]
[info]   (min, avg, max) = (0.739, 43.328, 116.354), stdev = 56.846
[info]   CI (99.9%): [≈ 0, 262.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 13.000, 17.000), stdev = 2.915
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.41% complete, ETA 00:20:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28506.777 ops/s
[info] # Warmup Iteration   2: 190189.006 ops/s
[info] # Warmup Iteration   3: 211144.050 ops/s
[info] Iteration   1: 239308.168 ops/s
[info]                  ·gc.alloc.rate:                   1084.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              7128.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6376.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 237129.855 ops/s
[info]                  ·gc.alloc.rate:                   1087.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              7218.145 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8634.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.185 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 238237.737 ops/s
[info]                  ·gc.alloc.rate:                   1076.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              7114.450 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6480.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.100 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 237773.328 ops/s
[info]                  ·gc.alloc.rate:                   1071.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              7090.246 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6510.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.276 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 238635.315 ops/s
[info]                  ·gc.alloc.rate:               1074.049 MB/sec
[info]                  ·gc.alloc.rate.norm:          7083.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:      988.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6517.793 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   238216.881 ±(99.9%) 3189.763 ops/s [Average]
[info]   (min, avg, max) = (237129.855, 238216.881, 239308.168), stdev = 828.371
[info]   CI (99.9%): [235027.118, 241406.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1078.751 ±(99.9%) 26.489 MB/sec [Average]
[info]   (min, avg, max) = (1071.161, 1078.751, 1087.576), stdev = 6.879
[info]   CI (99.9%): [1052.262, 1105.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   7126.922 ±(99.9%) 208.385 B/op [Average]
[info]   (min, avg, max) = (7083.446, 7126.922, 7218.145), stdev = 54.117
[info]   CI (99.9%): [6918.537, 7335.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1044.699 ±(99.9%) 552.384 MB/sec [Average]
[info]   (min, avg, max) = (969.736, 1044.699, 1301.024), stdev = 143.452
[info]   CI (99.9%): [492.316, 1597.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6903.942 ±(99.9%) 3732.115 B/op [Average]
[info]   (min, avg, max) = (6376.526, 6903.942, 8634.786), stdev = 969.218
[info]   CI (99.9%): [3171.827, 10636.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.262 ±(99.9%) 1.783 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.262, 1.083), stdev = 0.463
[info]   CI (99.9%): [≈ 0, 2.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.739 ±(99.9%) 11.836 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.739, 7.185), stdev = 3.074
[info]   CI (99.9%): [≈ 0, 13.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 9.000), stdev = 2.168
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.65% complete, ETA 00:20:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 206493.344 ops/s
[info] # Warmup Iteration   2: 348162.709 ops/s
[info] # Warmup Iteration   3: 561121.640 ops/s
[info] Iteration   1: 550080.655 ops/s
[info]                  ·gc.alloc.rate:                   627.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              1796.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1860.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 552415.570 ops/s
[info]                  ·gc.alloc.rate:               641.192 MB/sec
[info]                  ·gc.alloc.rate.norm:          1826.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1853.339 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 536669.610 ops/s
[info]                  ·gc.alloc.rate:                   616.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              1807.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1909.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 548153.039 ops/s
[info]                  ·gc.alloc.rate:                   623.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              1789.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1872.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.852 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.189 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 550936.212 ops/s
[info]                  ·gc.alloc.rate:                   627.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              1793.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1861.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.725 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   547651.017 ±(99.9%) 24371.864 ops/s [Average]
[info]   (min, avg, max) = (536669.610, 547651.017, 552415.570), stdev = 6329.296
[info]   CI (99.9%): [523279.153, 572022.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   627.271 ±(99.9%) 34.868 MB/sec [Average]
[info]   (min, avg, max) = (616.441, 627.271, 641.192), stdev = 9.055
[info]   CI (99.9%): [592.403, 662.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1802.509 ±(99.9%) 58.168 B/op [Average]
[info]   (min, avg, max) = (1789.342, 1802.509, 1826.825), stdev = 15.106
[info]   CI (99.9%): [1744.341, 1860.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   651.154 ±(99.9%) 3.173 MB/sec [Average]
[info]   (min, avg, max) = (650.145, 651.154, 652.185), stdev = 0.824
[info]   CI (99.9%): [647.981, 654.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1871.346 ±(99.9%) 86.514 B/op [Average]
[info]   (min, avg, max) = (1853.339, 1871.346, 1909.606), stdev = 22.467
[info]   CI (99.9%): [1784.832, 1957.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.701 ±(99.9%) 4.733 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.701, 2.852), stdev = 1.229
[info]   CI (99.9%): [≈ 0, 5.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.011 ±(99.9%) 13.588 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.011, 8.189), stdev = 3.529
[info]   CI (99.9%): [≈ 0, 15.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 8.000), stdev = 2.168
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 77.88% complete, ETA 00:20:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 250393.411 ops/s
[info] # Warmup Iteration   2: 472109.743 ops/s
[info] # Warmup Iteration   3: 631909.228 ops/s
[info] Iteration   1: 603532.609 ops/s
[info]                  ·gc.alloc.rate:      6.139 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 634342.209 ops/s
[info]                  ·gc.alloc.rate:      6.452 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 635835.983 ops/s
[info]                  ·gc.alloc.rate:      6.467 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 632432.321 ops/s
[info]                  ·gc.alloc.rate:      6.430 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 632626.647 ops/s
[info]                  ·gc.alloc.rate:      6.432 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   627753.954 ±(99.9%) 52410.791 ops/s [Average]
[info]   (min, avg, max) = (603532.609, 627753.954, 635835.983), stdev = 13610.916
[info]   CI (99.9%): [575343.163, 680164.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   6.384 ±(99.9%) 0.531 MB/sec [Average]
[info]   (min, avg, max) = (6.139, 6.384, 6.467), stdev = 0.138
[info]   CI (99.9%): [5.853, 6.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 78.12% complete, ETA 00:19:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5119.619 ops/s
[info] # Warmup Iteration   2: 35623.937 ops/s
[info] # Warmup Iteration   3: 77110.618 ops/s
[info] Iteration   1: 82814.500 ops/s
[info]                  ·gc.alloc.rate:                   1613.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              30655.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31193.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.297 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.647 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 91560.113 ops/s
[info]                  ·gc.alloc.rate:                   1454.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              24992.371 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22466.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.773 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.653 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 89674.359 ops/s
[info]                  ·gc.alloc.rate:                   1421.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              24949.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22955.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.115 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 91228.733 ops/s
[info]                  ·gc.alloc.rate:                   1453.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              25080.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28299.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.724 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 93462.949 ops/s
[info]                  ·gc.alloc.rate:                   1467.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              24709.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22166.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.906 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.090 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson":
[info]   89748.131 ±(99.9%) 15801.254 ops/s [Average]
[info]   (min, avg, max) = (82814.500, 89748.131, 93462.949), stdev = 4103.535
[info]   CI (99.9%): [73946.877, 105549.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1482.017 ±(99.9%) 290.069 MB/sec [Average]
[info]   (min, avg, max) = (1421.568, 1482.017, 1613.347), stdev = 75.330
[info]   CI (99.9%): [1191.947, 1772.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   26077.488 ±(99.9%) 9868.828 B/op [Average]
[info]   (min, avg, max) = (24709.519, 26077.488, 30655.564), stdev = 2562.903
[info]   CI (99.9%): [16208.659, 35946.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1442.674 ±(99.9%) 697.138 MB/sec [Average]
[info]   (min, avg, max) = (1307.151, 1442.674, 1641.656), stdev = 181.045
[info]   CI (99.9%): [745.535, 2139.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   25416.274 ±(99.9%) 15760.500 B/op [Average]
[info]   (min, avg, max) = (22166.207, 25416.274, 31193.452), stdev = 4092.952
[info]   CI (99.9%): [9655.775, 41176.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.424 ±(99.9%) 3.691 MB/sec [Average]
[info]   (min, avg, max) = (0.291, 1.424, 2.773), stdev = 0.959
[info]   CI (99.9%): [≈ 0, 5.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   24.846 ±(99.9%) 62.815 B/op [Average]
[info]   (min, avg, max) = (5.115, 24.846, 47.653), stdev = 16.313
[info]   CI (99.9%): [≈ 0, 87.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 13.600, 21.000), stdev = 4.722
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce
[info] # Run progress: 78.35% complete, ETA 00:19:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 142403.494 ops/s
[info] # Warmup Iteration   2: 2329452.247 ops/s
[info] # Warmup Iteration   3: 7777431.683 ops/s
[info] Iteration   1: 8116877.572 ops/s
[info]                  ·gc.alloc.rate:                   7178.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              1392.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          6994.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1356.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        21.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 8205581.218 ops/s
[info]                  ·gc.alloc.rate:                   7201.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              1381.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          6780.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1300.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        20.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   3: 8178555.489 ops/s
[info]                  ·gc.alloc.rate:                   7227.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              1390.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:          7144.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1374.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        21.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   4: 8163527.003 ops/s
[info]                  ·gc.alloc.rate:                   7133.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              1375.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          6799.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1310.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        20.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   5: 8272512.770 ops/s
[info]                  ·gc.alloc.rate:                   7307.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              1390.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          7134.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1357.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        21.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce":
[info]   8187410.810 ±(99.9%) 221171.632 ops/s [Average]
[info]   (min, avg, max) = (8116877.572, 8187410.810, 8272512.770), stdev = 57437.570
[info]   CI (99.9%): [7966239.179, 8408582.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate":
[info]   7209.441 ±(99.9%) 248.647 MB/sec [Average]
[info]   (min, avg, max) = (7133.134, 7209.441, 7307.025), stdev = 64.573
[info]   CI (99.9%): [6960.794, 7458.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1385.837 ±(99.9%) 28.443 B/op [Average]
[info]   (min, avg, max) = (1375.186, 1385.837, 1392.006), stdev = 7.387
[info]   CI (99.9%): [1357.394, 1414.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   6970.539 ±(99.9%) 675.204 MB/sec [Average]
[info]   (min, avg, max) = (6780.255, 6970.539, 7144.160), stdev = 175.348
[info]   CI (99.9%): [6295.335, 7645.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1339.917 ±(99.9%) 124.783 B/op [Average]
[info]   (min, avg, max) = (1300.311, 1339.917, 1374.796), stdev = 32.406
[info]   CI (99.9%): [1215.133, 1464.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.167 ±(99.9%) 0.409 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 0.167, 0.354), stdev = 0.106
[info]   CI (99.9%): [≈ 0, 0.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.079 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.032, 0.068), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.count":
[info]   103.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (20.000, 20.600, 21.000), stdev = 0.548
[info]   CI (99.9%): [103.000, 103.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.time":
[info]   134.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (26.000, 26.800, 28.000), stdev = 0.837
[info]   CI (99.9%): [134.000, 134.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava
[info] # Run progress: 78.59% complete, ETA 00:19:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.640 ops/s
[info] # Warmup Iteration   2: 743475.323 ops/s
[info] # Warmup Iteration   3: 922665.450 ops/s
[info] Iteration   1: 1029220.056 ops/s
[info]                  ·gc.alloc.rate:                   647.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              990.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     988.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1029214.981 ops/s
[info]                  ·gc.alloc.rate:                   646.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              989.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     988.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 945078.127 ops/s
[info]                  ·gc.alloc.rate:                   609.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              1015.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1076.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 976471.247 ops/s
[info]                  ·gc.alloc.rate:               618.058 MB/sec
[info]                  ·gc.alloc.rate.norm:          996.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1043.619 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 973373.767 ops/s
[info]                  ·gc.alloc.rate:                   612.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              989.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1048.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.635 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava":
[info]   990671.636 ±(99.9%) 143448.832 ops/s [Average]
[info]   (min, avg, max) = (945078.127, 990671.636, 1029220.056), stdev = 37253.206
[info]   CI (99.9%): [847222.804, 1134120.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   626.897 ±(99.9%) 72.861 MB/sec [Average]
[info]   (min, avg, max) = (609.692, 626.897, 647.741), stdev = 18.922
[info]   CI (99.9%): [554.036, 699.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   996.025 ±(99.9%) 42.504 B/op [Average]
[info]   (min, avg, max) = (989.063, 996.025, 1015.094), stdev = 11.038
[info]   CI (99.9%): [953.521, 1038.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   646.931 ±(99.9%) 3.595 MB/sec [Average]
[info]   (min, avg, max) = (646.229, 646.931, 648.301), stdev = 0.934
[info]   CI (99.9%): [643.336, 650.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1028.776 ±(99.9%) 150.901 B/op [Average]
[info]   (min, avg, max) = (988.052, 1028.776, 1076.068), stdev = 39.188
[info]   CI (99.9%): [877.875, 1179.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.834 ±(99.9%) 7.039 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.834, 4.104), stdev = 1.828
[info]   CI (99.9%): [≈ 0, 7.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.348 ±(99.9%) 11.380 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.348, 6.635), stdev = 2.955
[info]   CI (99.9%): [≈ 0, 12.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala
[info] # Run progress: 78.82% complete, ETA 00:19:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13296.285 ops/s
[info] # Warmup Iteration   2: 151926.283 ops/s
[info] # Warmup Iteration   3: 338613.920 ops/s
[info] Iteration   1: 445414.146 ops/s
[info]                  ·gc.alloc.rate:                   977.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              3455.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3419.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 443542.498 ops/s
[info]                  ·gc.alloc.rate:               982.601 MB/sec
[info]                  ·gc.alloc.rate.norm:          3486.414 B/op
[info]                  ·gc.churn.PS_Eden_Space:      969.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3440.601 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 441317.557 ops/s
[info]                  ·gc.alloc.rate:                   980.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              3495.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3472.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.341 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 441257.002 ops/s
[info]                  ·gc.alloc.rate:                   968.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              3455.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3486.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.782 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 426396.837 ops/s
[info]                  ·gc.alloc.rate:                   933.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              3446.459 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3620.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.615 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala":
[info]   439585.608 ±(99.9%) 29158.664 ops/s [Average]
[info]   (min, avg, max) = (426396.837, 439585.608, 445414.146), stdev = 7572.413
[info]   CI (99.9%): [410426.944, 468744.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   968.670 ±(99.9%) 77.605 MB/sec [Average]
[info]   (min, avg, max) = (933.850, 968.670, 982.601), stdev = 20.154
[info]   CI (99.9%): [891.064, 1046.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3467.865 ±(99.9%) 83.285 B/op [Average]
[info]   (min, avg, max) = (3446.459, 3467.865, 3495.479), stdev = 21.629
[info]   CI (99.9%): [3384.581, 3551.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   973.911 ±(99.9%) 21.234 MB/sec [Average]
[info]   (min, avg, max) = (967.616, 973.911, 981.025), stdev = 5.514
[info]   CI (99.9%): [952.677, 995.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3487.846 ±(99.9%) 303.331 B/op [Average]
[info]   (min, avg, max) = (3419.080, 3487.846, 3620.561), stdev = 78.774
[info]   CI (99.9%): [3184.515, 3791.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.329 ±(99.9%) 1.511 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.329, 0.937), stdev = 0.392
[info]   CI (99.9%): [≈ 0, 1.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.177 ±(99.9%) 5.381 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.177, 3.341), stdev = 1.397
[info]   CI (99.9%): [≈ 0, 6.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala
[info] # Run progress: 79.06% complete, ETA 00:19:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 321502.541 ops/s
[info] # Warmup Iteration   2: 670314.947 ops/s
[info] # Warmup Iteration   3: 736954.244 ops/s
[info] Iteration   1: 851101.072 ops/s
[info]                  ·gc.alloc.rate:                   773.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              1430.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1220.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 824323.151 ops/s
[info]                  ·gc.alloc.rate:                   754.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              1440.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1261.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 804953.934 ops/s
[info]                  ·gc.alloc.rate:               744.310 MB/sec
[info]                  ·gc.alloc.rate.norm:          1454.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1294.638 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 805527.889 ops/s
[info]                  ·gc.alloc.rate:                   748.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              1461.536 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1941.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.339 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.570 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 787808.935 ops/s
[info]                  ·gc.alloc.rate:                   706.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              1411.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1322.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.703 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala":
[info]   814742.996 ±(99.9%) 92733.320 ops/s [Average]
[info]   (min, avg, max) = (787808.935, 814742.996, 851101.072), stdev = 24082.549
[info]   CI (99.9%): [722009.676, 907476.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   745.392 ±(99.9%) 94.199 MB/sec [Average]
[info]   (min, avg, max) = (706.460, 745.392, 773.351), stdev = 24.463
[info]   CI (99.9%): [651.193, 839.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1439.571 ±(99.9%) 77.016 B/op [Average]
[info]   (min, avg, max) = (1411.314, 1439.571, 1461.536), stdev = 20.001
[info]   CI (99.9%): [1362.555, 1516.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   727.972 ±(99.9%) 572.416 MB/sec [Average]
[info]   (min, avg, max) = (660.175, 727.972, 993.889), stdev = 148.655
[info]   CI (99.9%): [155.556, 1300.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1408.357 ±(99.9%) 1157.634 B/op [Average]
[info]   (min, avg, max) = (1220.758, 1408.357, 1941.822), stdev = 300.634
[info]   CI (99.9%): [250.722, 2565.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.750 ±(99.9%) 4.081 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.750, 2.339), stdev = 1.060
[info]   CI (99.9%): [≈ 0, 4.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.476 ±(99.9%) 8.009 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.476, 4.570), stdev = 2.080
[info]   CI (99.9%): [≈ 0, 9.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 10.000), stdev = 2.191
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless
[info] # Run progress: 79.29% complete, ETA 00:18:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 584997.570 ops/s
[info] # Warmup Iteration   2: 3671408.432 ops/s
[info] # Warmup Iteration   3: 3936530.119 ops/s
[info] Iteration   1: 3892775.273 ops/s
[info]                  ·gc.alloc.rate:                   2352.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              951.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2304.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     931.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.463 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 3980749.829 ops/s
[info]                  ·gc.alloc.rate:                   2392.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              945.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2305.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     911.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 4037622.106 ops/s
[info]                  ·gc.alloc.rate:               2453.474 MB/sec
[info]                  ·gc.alloc.rate.norm:          956.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2326.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 906.582 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 3999114.904 ops/s
[info]                  ·gc.alloc.rate:                   2431.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              956.739 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2346.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     923.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3940956.728 ops/s
[info]                  ·gc.alloc.rate:                   2396.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              957.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2361.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     942.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.240 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless":
[info]   3970243.768 ±(99.9%) 213900.225 ops/s [Average]
[info]   (min, avg, max) = (3892775.273, 3970243.768, 4037622.106), stdev = 55549.209
[info]   CI (99.9%): [3756343.543, 4184143.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate":
[info]   2405.441 ±(99.9%) 148.731 MB/sec [Average]
[info]   (min, avg, max) = (2352.919, 2405.441, 2453.474), stdev = 38.625
[info]   CI (99.9%): [2256.710, 2554.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm":
[info]   953.452 ±(99.9%) 18.522 B/op [Average]
[info]   (min, avg, max) = (945.941, 953.452, 957.185), stdev = 4.810
[info]   CI (99.9%): [934.930, 971.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   2328.663 ±(99.9%) 96.573 MB/sec [Average]
[info]   (min, avg, max) = (2304.200, 2328.663, 2361.105), stdev = 25.080
[info]   CI (99.9%): [2232.090, 2425.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   923.157 ±(99.9%) 56.903 B/op [Average]
[info]   (min, avg, max) = (906.582, 923.157, 942.869), stdev = 14.777
[info]   CI (99.9%): [866.254, 980.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.302 ±(99.9%) 1.848 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.302, 1.145), stdev = 0.480
[info]   CI (99.9%): [≈ 0, 2.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.122 ±(99.9%) 0.748 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.122, 0.463), stdev = 0.194
[info]   CI (99.9%): [≈ 0, 0.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 10.000), stdev = 0.894
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump
[info] # Run progress: 79.53% complete, ETA 00:18:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2057647.635 ops/s
[info] # Warmup Iteration   2: 7335105.037 ops/s
[info] # Warmup Iteration   3: 29021327.288 ops/s
[info] Iteration   1: 29576527.286 ops/s
[info]                  ·gc.alloc.rate:                   2633.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              140.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2641.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     140.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.614 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 29871749.175 ops/s
[info]                  ·gc.alloc.rate:                   2678.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              141.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2630.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 29602478.208 ops/s
[info]                  ·gc.alloc.rate:                   2662.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              141.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2653.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     141.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 29493450.893 ops/s
[info]                  ·gc.alloc.rate:                   2641.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              140.947 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2343.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 29583595.223 ops/s
[info]                  ·gc.alloc.rate:               2664.479 MB/sec
[info]                  ·gc.alloc.rate.norm:          141.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2697.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 143.491 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump":
[info]   29625560.157 ±(99.9%) 553877.165 ops/s [Average]
[info]   (min, avg, max) = (29493450.893, 29625560.157, 29871749.175), stdev = 143840.141
[info]   CI (99.9%): [29071682.992, 30179437.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   2656.097 ±(99.9%) 70.489 MB/sec [Average]
[info]   (min, avg, max) = (2633.537, 2656.097, 2678.284), stdev = 18.306
[info]   CI (99.9%): [2585.609, 2726.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   141.098 ±(99.9%) 2.401 B/op [Average]
[info]   (min, avg, max) = (140.137, 141.098, 141.711), stdev = 0.624
[info]   CI (99.9%): [138.696, 143.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   2593.722 ±(99.9%) 546.903 MB/sec [Average]
[info]   (min, avg, max) = (2343.759, 2593.722, 2697.947), stdev = 142.029
[info]   CI (99.9%): [2046.818, 3140.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   137.774 ±(99.9%) 28.145 B/op [Average]
[info]   (min, avg, max) = (125.073, 137.774, 143.491), stdev = 7.309
[info]   CI (99.9%): [109.629, 165.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.760 ±(99.9%) 6.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.760, 3.614), stdev = 1.596
[info]   CI (99.9%): [≈ 0, 6.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.327 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.192), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.200, 18.000), stdev = 3.834
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson
[info] # Run progress: 79.76% complete, ETA 00:18:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 259.895 ops/s
[info] # Warmup Iteration   2: 64656.084 ops/s
[info] # Warmup Iteration   3: 280419.709 ops/s
[info] Iteration   1: 402347.811 ops/s
[info]                  ·gc.alloc.rate:                   2809.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              10989.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2926.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11447.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.570 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 396522.770 ops/s
[info]                  ·gc.alloc.rate:                   2755.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              10935.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2638.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10470.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.763 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.027 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 397448.937 ops/s
[info]                  ·gc.alloc.rate:                   2791.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              11055.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2663.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10549.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 390586.652 ops/s
[info]                  ·gc.alloc.rate:                   2764.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              11139.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2686.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10823.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.168 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 383749.188 ops/s
[info]                  ·gc.alloc.rate:                   2726.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              11183.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2702.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11084.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson":
[info]   394131.072 ±(99.9%) 27538.814 ops/s [Average]
[info]   (min, avg, max) = (383749.188, 394131.072, 402347.811), stdev = 7151.742
[info]   CI (99.9%): [366592.258, 421669.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2769.527 ±(99.9%) 124.065 MB/sec [Average]
[info]   (min, avg, max) = (2726.844, 2769.527, 2809.455), stdev = 32.219
[info]   CI (99.9%): [2645.462, 2893.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   11060.540 ±(99.9%) 395.298 B/op [Average]
[info]   (min, avg, max) = (10935.047, 11060.540, 11183.573), stdev = 102.658
[info]   CI (99.9%): [10665.241, 11455.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2723.457 ±(99.9%) 447.278 MB/sec [Average]
[info]   (min, avg, max) = (2638.013, 2723.457, 2926.660), stdev = 116.157
[info]   CI (99.9%): [2276.179, 3170.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10874.980 ±(99.9%) 1545.316 B/op [Average]
[info]   (min, avg, max) = (10470.636, 10874.980, 11447.700), stdev = 401.314
[info]   CI (99.9%): [9329.664, 12420.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.202 ±(99.9%) 1.220 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.202, 0.763), stdev = 0.317
[info]   CI (99.9%): [≈ 0, 1.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.803 ±(99.9%) 4.842 B/op [Average]
[info]   (min, avg, max) = (0.085, 0.803, 3.027), stdev = 1.258
[info]   CI (99.9%): [≈ 0, 5.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 12.800, 16.000), stdev = 1.789
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.00% complete, ETA 00:18:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 446274.126 ops/s
[info] # Warmup Iteration   2: 1359243.883 ops/s
[info] # Warmup Iteration   3: 1471139.080 ops/s
[info] Iteration   1: 1445239.353 ops/s
[info]                  ·gc.alloc.rate:                   49.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              54.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     278.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.452 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1474082.879 ops/s
[info]                  ·gc.alloc.rate:      45.035 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.074 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1467688.901 ops/s
[info]                  ·gc.alloc.rate:      46.061 MB/sec
[info]                  ·gc.alloc.rate.norm: 49.396 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1467725.208 ops/s
[info]                  ·gc.alloc.rate:      44.761 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1471127.133 ops/s
[info]                  ·gc.alloc.rate:      44.868 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala":
[info]   1465172.695 ±(99.9%) 44115.990 ops/s [Average]
[info]   (min, avg, max) = (1445239.353, 1465172.695, 1474082.879), stdev = 11456.783
[info]   CI (99.9%): [1421056.705, 1509288.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   46.106 ±(99.9%) 8.211 MB/sec [Average]
[info]   (min, avg, max) = (44.761, 46.106, 49.807), stdev = 2.132
[info]   CI (99.9%): [37.895, 54.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   49.542 ±(99.9%) 10.370 B/op [Average]
[info]   (min, avg, max) = (48.000, 49.542, 54.241), stdev = 2.693
[info]   CI (99.9%): [39.172, 59.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   51.158 ±(99.9%) 440.485 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.158, 255.790), stdev = 114.393
[info]   CI (99.9%): [≈ 0, 491.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   55.712 ±(99.9%) 479.701 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 55.712, 278.562), stdev = 124.577
[info]   CI (99.9%): [≈ 0, 535.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.267 ±(99.9%) 2.297 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.267, 1.334), stdev = 0.596
[info]   CI (99.9%): [≈ 0, 2.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.290 ±(99.9%) 2.501 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.290, 1.452), stdev = 0.650
[info]   CI (99.9%): [≈ 0, 2.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 4.000), stdev = 1.789
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.24% complete, ETA 00:17:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1679.230 ops/s
[info] # Warmup Iteration   2: 62086.071 ops/s
[info] # Warmup Iteration   3: 102324.973 ops/s
[info] Iteration   1: 118797.137 ops/s
[info]                  ·gc.alloc.rate:                   4210.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              55780.214 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3955.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52407.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.233 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.580 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 120300.724 ops/s
[info]                  ·gc.alloc.rate:                   4303.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              56294.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4005.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52404.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.817 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 116098.354 ops/s
[info]                  ·gc.alloc.rate:                   4160.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              56394.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4050.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54904.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.693 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 119965.938 ops/s
[info]                  ·gc.alloc.rate:                   4313.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              56596.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4411.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57873.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.819 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   5: 120576.985 ops/s
[info]                  ·gc.alloc.rate:                   4322.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              56413.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4080.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53258.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.272 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson":
[info]   119147.828 ±(99.9%) 7064.446 ops/s [Average]
[info]   (min, avg, max) = (116098.354, 119147.828, 120576.985), stdev = 1834.614
[info]   CI (99.9%): [112083.381, 126212.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4262.007 ±(99.9%) 279.119 MB/sec [Average]
[info]   (min, avg, max) = (4160.196, 4262.007, 4322.007), stdev = 72.486
[info]   CI (99.9%): [3982.888, 4541.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   56295.727 ±(99.9%) 1186.280 B/op [Average]
[info]   (min, avg, max) = (55780.214, 56295.727, 56596.272), stdev = 308.073
[info]   CI (99.9%): [55109.447, 57482.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4100.758 ±(99.9%) 692.462 MB/sec [Average]
[info]   (min, avg, max) = (3955.951, 4100.758, 4411.294), stdev = 179.830
[info]   CI (99.9%): [3408.296, 4793.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   54169.585 ±(99.9%) 8887.609 B/op [Average]
[info]   (min, avg, max) = (52404.397, 54169.585, 57873.082), stdev = 2308.084
[info]   CI (99.9%): [45281.976, 63057.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.501 ±(99.9%) 3.731 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.501, 2.233), stdev = 0.969
[info]   CI (99.9%): [≈ 0, 4.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.636 ±(99.9%) 49.427 B/op [Average]
[info]   (min, avg, max) = (0.272, 6.636, 29.580), stdev = 12.836
[info]   CI (99.9%): [≈ 0, 56.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.count":
[info]   61.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (12.000, 12.200, 13.000), stdev = 0.447
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.time":
[info]   90.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 18.000, 20.000), stdev = 1.225
[info]   CI (99.9%): [90.000, 90.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.47% complete, ETA 00:17:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 462203.736 ops/s
[info] # Warmup Iteration   2: 2047438.937 ops/s
[info] # Warmup Iteration   3: 2092379.759 ops/s
[info] Iteration   1: 2075135.195 ops/s
[info]                  ·gc.alloc.rate:               576.458 MB/sec
[info]                  ·gc.alloc.rate.norm:          437.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 491.086 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 2084886.041 ops/s
[info]                  ·gc.alloc.rate:                   578.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     487.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2100310.240 ops/s
[info]                  ·gc.alloc.rate:               573.681 MB/sec
[info]                  ·gc.alloc.rate.norm:          429.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 242.094 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1882684.446 ops/s
[info]                  ·gc.alloc.rate:                        527.939 MB/sec
[info]                  ·gc.alloc.rate.norm:                   441.355 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.014 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.012 B/op
[info]                  ·gc.churn.Metaspace:                   0.040 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:               653.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          546.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           1.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      0.957 B/op
[info]                  ·gc.count:                             4.000 counts
[info]                  ·gc.time:                              96.000 ms
[info] Iteration   5: 2103579.899 ops/s
[info]                  ·gc.alloc.rate:                   582.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              435.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     484.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala":
[info]   2049319.164 ±(99.9%) 361442.558 ops/s [Average]
[info]   (min, avg, max) = (1882684.446, 2049319.164, 2103579.899), stdev = 93865.484
[info]   CI (99.9%): [1687876.607, 2410761.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   567.914 ±(99.9%) 86.979 MB/sec [Average]
[info]   (min, avg, max) = (527.939, 567.914, 582.664), stdev = 22.588
[info]   CI (99.9%): [480.935, 654.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   436.240 ±(99.9%) 15.881 B/op [Average]
[info]   (min, avg, max) = (429.883, 436.240, 441.355), stdev = 4.124
[info]   CI (99.9%): [420.359, 452.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.025 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.002 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.008 ±(99.9%) 0.069 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.040), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.007 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.033), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   583.662 ±(99.9%) 561.024 MB/sec [Average]
[info]   (min, avg, max) = (323.075, 583.662, 653.218), stdev = 145.696
[info]   CI (99.9%): [22.637, 1144.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   450.397 ±(99.9%) 458.829 B/op [Average]
[info]   (min, avg, max) = (242.094, 450.397, 546.088), stdev = 119.156
[info]   CI (99.9%): [≈ 0, 909.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.237 ±(99.9%) 1.954 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.237, 1.145), stdev = 0.507
[info]   CI (99.9%): [≈ 0, 2.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.198 ±(99.9%) 1.635 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.198, 0.957), stdev = 0.425
[info]   CI (99.9%): [≈ 0, 1.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 4.000), stdev = 1.095
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.time":
[info]   107.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 21.400, 96.000), stdev = 41.711
[info]   CI (99.9%): [107.000, 107.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.71% complete, ETA 00:17:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 965760.959 ops/s
[info] # Warmup Iteration   2: 1736567.087 ops/s
[info] # Warmup Iteration   3: 1975806.430 ops/s
[info] Iteration   1: 1923569.290 ops/s
[info]                  ·gc.alloc.rate:                   530.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              434.142 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     268.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1912664.110 ops/s
[info]                  ·gc.alloc.rate:               532.893 MB/sec
[info]                  ·gc.alloc.rate.norm:          438.474 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 540.504 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 1926573.692 ops/s
[info]                  ·gc.alloc.rate:                   542.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              443.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     536.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1997102.510 ops/s
[info]                  ·gc.alloc.rate:               554.023 MB/sec
[info]                  ·gc.alloc.rate.norm:          436.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 259.329 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1993164.796 ops/s
[info]                  ·gc.alloc.rate:               554.800 MB/sec
[info]                  ·gc.alloc.rate.norm:          438.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 519.698 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala":
[info]   1950614.880 ±(99.9%) 157844.685 ops/s [Average]
[info]   (min, avg, max) = (1912664.110, 1950614.880, 1997102.510), stdev = 40991.763
[info]   CI (99.9%): [1792770.195, 2108459.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   543.063 ±(99.9%) 43.727 MB/sec [Average]
[info]   (min, avg, max) = (530.633, 543.063, 554.800), stdev = 11.356
[info]   CI (99.9%): [499.336, 586.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   438.175 ±(99.9%) 13.301 B/op [Average]
[info]   (min, avg, max) = (434.142, 438.175, 443.555), stdev = 3.454
[info]   CI (99.9%): [424.874, 451.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   525.745 ±(99.9%) 693.636 MB/sec [Average]
[info]   (min, avg, max) = (327.779, 525.745, 658.158), stdev = 180.135
[info]   CI (99.9%): [≈ 0, 1219.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   424.857 ±(99.9%) 567.234 B/op [Average]
[info]   (min, avg, max) = (259.329, 424.857, 540.504), stdev = 147.309
[info]   CI (99.9%): [≈ 0, 992.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.070 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.042), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.034), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 7.000), stdev = 1.643
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 80.94% complete, ETA 00:17:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 884305.641 ops/s
[info] # Warmup Iteration   2: 1869562.502 ops/s
[info] # Warmup Iteration   3: 2044847.269 ops/s
[info] Iteration   1: 2044645.327 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2044217.676 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2044906.952 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2044406.205 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2027936.528 ops/s
[info]                  ·gc.alloc.rate:      25.050 MB/sec
[info]                  ·gc.alloc.rate.norm: 19.431 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   2041222.538 ±(99.9%) 28616.467 ops/s [Average]
[info]   (min, avg, max) = (2027936.528, 2041222.538, 2044906.952), stdev = 7431.606
[info]   CI (99.9%): [2012606.071, 2069839.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   5.010 ±(99.9%) 43.137 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 5.010, 25.050), stdev = 11.203
[info]   CI (99.9%): [≈ 0, 48.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   3.886 ±(99.9%) 33.461 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 3.886, 19.431), stdev = 8.690
[info]   CI (99.9%): [≈ 0, 37.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.18% complete, ETA 00:17:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4858.163 ops/s
[info] # Warmup Iteration   2: 39331.385 ops/s
[info] # Warmup Iteration   3: 54766.830 ops/s
[info] Iteration   1: 51537.982 ops/s
[info]                  ·gc.alloc.rate:                   2217.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              67713.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2284.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69744.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.701 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.944 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 55504.441 ops/s
[info]                  ·gc.alloc.rate:                   1925.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              54592.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55948.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.102 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.593 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 56518.310 ops/s
[info]                  ·gc.alloc.rate:                   1965.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              54705.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45982.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.637 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 55473.898 ops/s
[info]                  ·gc.alloc.rate:                   1937.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              54959.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1994.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56582.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.591 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 55140.111 ops/s
[info]                  ·gc.alloc.rate:                   1951.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              55697.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57327.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.594 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson":
[info]   54834.949 ±(99.9%) 7370.059 ops/s [Average]
[info]   (min, avg, max) = (51537.982, 54834.949, 56518.310), stdev = 1913.981
[info]   CI (99.9%): [47464.889, 62205.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1999.359 ±(99.9%) 473.963 MB/sec [Average]
[info]   (min, avg, max) = (1925.310, 1999.359, 2217.921), stdev = 123.087
[info]   CI (99.9%): [1525.395, 2473.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   57533.590 ±(99.9%) 21975.540 B/op [Average]
[info]   (min, avg, max) = (54592.095, 57533.590, 67713.489), stdev = 5706.978
[info]   CI (99.9%): [35558.050, 79509.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1982.432 ±(99.9%) 864.306 MB/sec [Average]
[info]   (min, avg, max) = (1651.665, 1982.432, 2284.441), stdev = 224.457
[info]   CI (99.9%): [1118.126, 2846.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   57117.169 ±(99.9%) 32510.512 B/op [Average]
[info]   (min, avg, max) = (45982.203, 57117.169, 69744.361), stdev = 8442.877
[info]   CI (99.9%): [24606.657, 89627.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.802 ±(99.9%) 3.909 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.802, 2.102), stdev = 1.015
[info]   CI (99.9%): [≈ 0, 4.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   23.472 ±(99.9%) 114.182 B/op [Average]
[info]   (min, avg, max) = (0.591, 23.472, 59.593), stdev = 29.653
[info]   CI (99.9%): [≈ 0, 137.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 16.000), stdev = 3.271
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.41% complete, ETA 00:16:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 124390.477 ops/s
[info] # Warmup Iteration   2: 247289.431 ops/s
[info] # Warmup Iteration   3: 256078.043 ops/s
[info] Iteration   1: 269971.461 ops/s
[info]                  ·gc.alloc.rate:                   1093.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              6375.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5736.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 270047.482 ops/s
[info]                  ·gc.alloc.rate:                   1085.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              6327.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5745.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.988 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.410 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 271054.006 ops/s
[info]                  ·gc.alloc.rate:                   1091.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              6336.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7612.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.124 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.527 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 269403.549 ops/s
[info]                  ·gc.alloc.rate:                   1080.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              6314.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5720.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 265575.685 ops/s
[info]                  ·gc.alloc.rate:               1065.582 MB/sec
[info]                  ·gc.alloc.rate.norm:          6314.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5807.131 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala":
[info]   269210.437 ±(99.9%) 8151.929 ops/s [Average]
[info]   (min, avg, max) = (265575.685, 269210.437, 271054.006), stdev = 2117.030
[info]   CI (99.9%): [261058.508, 277362.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1083.487 ±(99.9%) 42.999 MB/sec [Average]
[info]   (min, avg, max) = (1065.582, 1083.487, 1093.617), stdev = 11.167
[info]   CI (99.9%): [1040.488, 1126.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6333.901 ±(99.9%) 96.526 B/op [Average]
[info]   (min, avg, max) = (6314.819, 6333.901, 6375.592), stdev = 25.068
[info]   CI (99.9%): [6237.375, 6430.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1048.045 ±(99.9%) 566.456 MB/sec [Average]
[info]   (min, avg, max) = (979.231, 1048.045, 1311.149), stdev = 147.107
[info]   CI (99.9%): [481.588, 1614.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6124.371 ±(99.9%) 3205.210 B/op [Average]
[info]   (min, avg, max) = (5720.673, 6124.371, 7612.223), stdev = 832.383
[info]   CI (99.9%): [2919.161, 9329.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.837 ±(99.9%) 4.980 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.837, 2.988), stdev = 1.293
[info]   CI (99.9%): [≈ 0, 5.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.872 ±(99.9%) 29.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.872, 17.410), stdev = 7.535
[info]   CI (99.9%): [≈ 0, 33.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 12.000), stdev = 3.782
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.65% complete, ETA 00:16:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 971.519 ops/s
[info] # Warmup Iteration   2: 24703.682 ops/s
[info] # Warmup Iteration   3: 49201.876 ops/s
[info] Iteration   1: 47474.503 ops/s
[info]                  ·gc.alloc.rate:                   2197.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              72833.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2292.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75988.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.279 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 141.855 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 51473.907 ops/s
[info]                  ·gc.alloc.rate:                   2172.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              66407.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60124.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.648 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50.351 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 51477.394 ops/s
[info]                  ·gc.alloc.rate:                   2176.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              66544.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70431.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.091 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 50770.064 ops/s
[info]                  ·gc.alloc.rate:                   2151.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              66707.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1992.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61764.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.227 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 51170.823 ops/s
[info]                  ·gc.alloc.rate:                   2173.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              66835.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61764.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.281 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson":
[info]   50473.338 ±(99.9%) 6550.852 ops/s [Average]
[info]   (min, avg, max) = (47474.503, 50473.338, 51477.394), stdev = 1701.235
[info]   CI (99.9%): [43922.486, 57024.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2174.397 ±(99.9%) 61.798 MB/sec [Average]
[info]   (min, avg, max) = (2151.840, 2174.397, 2197.057), stdev = 16.049
[info]   CI (99.9%): [2112.599, 2236.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   67865.612 ±(99.9%) 10712.425 B/op [Average]
[info]   (min, avg, max) = (66407.110, 67865.612, 72833.718), stdev = 2781.983
[info]   CI (99.9%): [57153.187, 78578.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2112.874 ±(99.9%) 653.403 MB/sec [Average]
[info]   (min, avg, max) = (1967.405, 2112.874, 2303.798), stdev = 169.687
[info]   CI (99.9%): [1459.471, 2766.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   66014.699 ±(99.9%) 26524.350 B/op [Average]
[info]   (min, avg, max) = (60124.630, 66014.699, 75988.249), stdev = 6888.289
[info]   CI (99.9%): [39490.349, 92539.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.248 ±(99.9%) 7.016 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.248, 4.279), stdev = 1.822
[info]   CI (99.9%): [≈ 0, 8.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   40.361 ±(99.9%) 232.246 B/op [Average]
[info]   (min, avg, max) = (1.281, 40.361, 141.855), stdev = 60.314
[info]   CI (99.9%): [≈ 0, 272.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.800, 21.000), stdev = 5.167
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.88% complete, ETA 00:16:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29996.976 ops/s
[info] # Warmup Iteration   2: 133893.718 ops/s
[info] # Warmup Iteration   3: 168007.644 ops/s
[info] Iteration   1: 153964.025 ops/s
[info]                  ·gc.alloc.rate:                   1549.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              15842.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1621.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16577.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.638 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 153981.160 ops/s
[info]                  ·gc.alloc.rate:                   1553.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              15880.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13352.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.150 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 158283.532 ops/s
[info]                  ·gc.alloc.rate:                   1582.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              15735.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16340.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.242 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 156305.228 ops/s
[info]                  ·gc.alloc.rate:                   1580.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              15910.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16661.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 156528.382 ops/s
[info]                  ·gc.alloc.rate:                   1584.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              15927.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13396.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.209 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala":
[info]   155812.465 ±(99.9%) 7108.568 ops/s [Average]
[info]   (min, avg, max) = (153964.025, 155812.465, 158283.532), stdev = 1846.072
[info]   CI (99.9%): [148703.898, 162921.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1570.078 ±(99.9%) 64.870 MB/sec [Average]
[info]   (min, avg, max) = (1549.785, 1570.078, 1584.026), stdev = 16.846
[info]   CI (99.9%): [1505.209, 1634.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15859.061 ±(99.9%) 293.433 B/op [Average]
[info]   (min, avg, max) = (15735.598, 15859.061, 15927.354), stdev = 76.204
[info]   CI (99.9%): [15565.629, 16152.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1511.764 ±(99.9%) 678.822 MB/sec [Average]
[info]   (min, avg, max) = (1306.384, 1511.764, 1655.089), stdev = 176.288
[info]   CI (99.9%): [832.941, 2190.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   15265.738 ±(99.9%) 6663.864 B/op [Average]
[info]   (min, avg, max) = (13352.322, 15265.738, 16661.524), stdev = 1730.584
[info]   CI (99.9%): [8601.874, 21929.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.225 ±(99.9%) 1.452 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.225, 0.895), stdev = 0.377
[info]   CI (99.9%): [≈ 0, 1.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.290 ±(99.9%) 14.856 B/op [Average]
[info]   (min, avg, max) = (0.209, 2.290, 9.150), stdev = 3.858
[info]   CI (99.9%): [≈ 0, 17.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 10.000), stdev = 1.517
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.12% complete, ETA 00:16:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 197601.935 ops/s
[info] # Warmup Iteration   2: 461222.531 ops/s
[info] # Warmup Iteration   3: 516031.816 ops/s
[info] Iteration   1: 517655.760 ops/s
[info]                  ·gc.alloc.rate:                   711.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              2163.128 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1992.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 519516.224 ops/s
[info]                  ·gc.alloc.rate:                   716.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              2169.829 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1987.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 509380.199 ops/s
[info]                  ·gc.alloc.rate:               699.427 MB/sec
[info]                  ·gc.alloc.rate.norm:          2160.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2029.408 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 507622.445 ops/s
[info]                  ·gc.alloc.rate:                   703.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              2181.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3058.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.241 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.045 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 513515.497 ops/s
[info]                  ·gc.alloc.rate:                   700.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              2147.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2013.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.680 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala":
[info]   513538.025 ±(99.9%) 19726.492 ops/s [Average]
[info]   (min, avg, max) = (507622.445, 513538.025, 519516.224), stdev = 5122.907
[info]   CI (99.9%): [493811.533, 533264.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   706.419 ±(99.9%) 28.244 MB/sec [Average]
[info]   (min, avg, max) = (699.427, 706.419, 716.532), stdev = 7.335
[info]   CI (99.9%): [678.175, 734.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2164.558 ±(99.9%) 48.685 B/op [Average]
[info]   (min, avg, max) = (2147.515, 2164.558, 2181.929), stdev = 12.643
[info]   CI (99.9%): [2115.873, 2213.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   722.538 ±(99.9%) 569.136 MB/sec [Average]
[info]   (min, avg, max) = (655.488, 722.538, 986.934), stdev = 147.803
[info]   CI (99.9%): [153.402, 1291.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2216.425 ±(99.9%) 1814.515 B/op [Average]
[info]   (min, avg, max) = (1987.858, 2216.425, 3058.855), stdev = 471.224
[info]   CI (99.9%): [401.910, 4030.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 5.377 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 3.241), stdev = 1.396
[info]   CI (99.9%): [≈ 0, 6.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.575 ±(99.9%) 16.667 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.575, 10.045), stdev = 4.328
[info]   CI (99.9%): [≈ 0, 19.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 12.000), stdev = 3.209
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 82.35% complete, ETA 00:16:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 218962.111 ops/s
[info] # Warmup Iteration   2: 530944.342 ops/s
[info] # Warmup Iteration   3: 578194.550 ops/s
[info] Iteration   1: 577875.621 ops/s
[info]                  ·gc.alloc.rate:      0.839 MB/sec
[info]                  ·gc.alloc.rate.norm: 2.284 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 579574.782 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 588704.116 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 588806.377 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 589004.789 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   584793.137 ±(99.9%) 21458.758 ops/s [Average]
[info]   (min, avg, max) = (577875.621, 584793.137, 589004.789), stdev = 5572.771
[info]   CI (99.9%): [563334.379, 606251.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.168 ±(99.9%) 1.444 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.168, 0.839), stdev = 0.375
[info]   CI (99.9%): [≈ 0, 1.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.458 ±(99.9%) 3.932 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.458, 2.284), stdev = 1.021
[info]   CI (99.9%): [≈ 0, 4.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 82.59% complete, ETA 00:15:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5657.003 ops/s
[info] # Warmup Iteration   2: 45244.431 ops/s
[info] # Warmup Iteration   3: 68387.722 ops/s
[info] Iteration   1: 76610.279 ops/s
[info]                  ·gc.alloc.rate:                   1747.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              35897.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40164.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.315 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88.642 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 86516.057 ops/s
[info]                  ·gc.alloc.rate:                   1590.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              28932.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23727.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.198 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 94.557 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 86288.678 ops/s
[info]                  ·gc.alloc.rate:                   1599.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              29182.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29658.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.695 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 85408.476 ops/s
[info]                  ·gc.alloc.rate:                   1591.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              29318.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30098.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.767 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 86207.529 ops/s
[info]                  ·gc.alloc.rate:                   1590.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              29042.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30082.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.760 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson":
[info]   84206.204 ±(99.9%) 16429.773 ops/s [Average]
[info]   (min, avg, max) = (76610.279, 84206.204, 86516.057), stdev = 4266.760
[info]   CI (99.9%): [67776.431, 100635.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1623.968 ±(99.9%) 266.109 MB/sec [Average]
[info]   (min, avg, max) = (1590.458, 1623.968, 1747.389), stdev = 69.108
[info]   CI (99.9%): [1357.859, 1890.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   30474.762 ±(99.9%) 11686.982 B/op [Average]
[info]   (min, avg, max) = (28932.352, 30474.762, 35897.825), stdev = 3035.072
[info]   CI (99.9%): [18787.780, 42161.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1633.347 ±(99.9%) 886.529 MB/sec [Average]
[info]   (min, avg, max) = (1304.321, 1633.347, 1955.055), stdev = 230.229
[info]   CI (99.9%): [746.818, 2519.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   30746.051 ±(99.9%) 22781.255 B/op [Average]
[info]   (min, avg, max) = (23727.168, 30746.051, 40164.053), stdev = 5916.220
[info]   CI (99.9%): [7964.795, 53527.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.982 ±(99.9%) 9.837 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.982, 5.198), stdev = 2.555
[info]   CI (99.9%): [≈ 0, 11.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   38.084 ±(99.9%) 188.445 B/op [Average]
[info]   (min, avg, max) = (0.760, 38.084, 94.557), stdev = 48.938
[info]   CI (99.9%): [≈ 0, 226.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.000, 24.000), stdev = 7.280
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 82.82% complete, ETA 00:15:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3576.481 ops/s
[info] # Warmup Iteration   2: 76903.256 ops/s
[info] # Warmup Iteration   3: 91240.578 ops/s
[info] Iteration   1: 97916.177 ops/s
[info]                  ·gc.alloc.rate:                   1542.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              24794.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1621.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26061.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.423 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87.152 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 102534.159 ops/s
[info]                  ·gc.alloc.rate:                   1614.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              24777.375 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1613.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24764.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.988 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 102808.429 ops/s
[info]                  ·gc.alloc.rate:                   1604.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              24545.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24674.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 103012.440 ops/s
[info]                  ·gc.alloc.rate:                   1611.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              24621.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19764.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.318 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 102502.238 ops/s
[info]                  ·gc.alloc.rate:               1630.318 MB/sec
[info]                  ·gc.alloc.rate.norm:          25029.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1629.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25013.340 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce":
[info]   101754.688 ±(99.9%) 8301.886 ops/s [Average]
[info]   (min, avg, max) = (97916.177, 101754.688, 103012.440), stdev = 2155.973
[info]   CI (99.9%): [93452.803, 110056.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1600.653 ±(99.9%) 130.001 MB/sec [Average]
[info]   (min, avg, max) = (1542.687, 1600.653, 1630.318), stdev = 33.761
[info]   CI (99.9%): [1470.652, 1730.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   24753.868 ±(99.9%) 717.544 B/op [Average]
[info]   (min, avg, max) = (24545.902, 24753.868, 25029.593), stdev = 186.344
[info]   CI (99.9%): [24036.324, 25471.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1554.130 ±(99.9%) 561.377 MB/sec [Average]
[info]   (min, avg, max) = (1293.613, 1554.130, 1629.259), stdev = 145.788
[info]   CI (99.9%): [992.752, 2115.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   24055.584 ±(99.9%) 9478.969 B/op [Average]
[info]   (min, avg, max) = (19764.482, 24055.584, 26061.287), stdev = 2461.658
[info]   CI (99.9%): [14576.615, 33534.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.559 ±(99.9%) 8.797 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.559, 5.423), stdev = 2.285
[info]   CI (99.9%): [≈ 0, 10.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   24.702 ±(99.9%) 141.421 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.702, 87.152), stdev = 36.727
[info]   CI (99.9%): [≈ 0, 166.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 11.400, 25.000), stdev = 7.925
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.06% complete, ETA 00:15:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9272.767 ops/s
[info] # Warmup Iteration   2: 87913.661 ops/s
[info] # Warmup Iteration   3: 137161.682 ops/s
[info] Iteration   1: 147469.982 ops/s
[info]                  ·gc.alloc.rate:                   806.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              8602.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6853.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 145724.806 ops/s
[info]                  ·gc.alloc.rate:                   782.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              8447.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10435.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.171 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 153226.388 ops/s
[info]                  ·gc.alloc.rate:                   732.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              7520.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6637.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.428 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 155657.483 ops/s
[info]                  ·gc.alloc.rate:               743.429 MB/sec
[info]                  ·gc.alloc.rate.norm:          7516.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6553.684 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 155444.929 ops/s
[info]                  ·gc.alloc.rate:                   736.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              7456.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6586.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.695 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   151504.718 ±(99.9%) 17794.532 ops/s [Average]
[info]   (min, avg, max) = (145724.806, 151504.718, 155657.483), stdev = 4621.183
[info]   CI (99.9%): [133710.186, 169299.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   760.096 ±(99.9%) 125.168 MB/sec [Average]
[info]   (min, avg, max) = (732.216, 760.096, 806.204), stdev = 32.506
[info]   CI (99.9%): [634.928, 885.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   7908.867 ±(99.9%) 2178.384 B/op [Average]
[info]   (min, avg, max) = (7456.578, 7908.867, 8602.723), stdev = 565.719
[info]   CI (99.9%): [5730.483, 10087.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   710.683 ±(99.9%) 550.349 MB/sec [Average]
[info]   (min, avg, max) = (642.270, 710.683, 966.296), stdev = 142.924
[info]   CI (99.9%): [160.334, 1261.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7413.274 ±(99.9%) 6521.986 B/op [Average]
[info]   (min, avg, max) = (6553.684, 7413.274, 10435.901), stdev = 1693.739
[info]   CI (99.9%): [891.288, 13935.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.502 ±(99.9%) 1.879 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.502, 1.031), stdev = 0.488
[info]   CI (99.9%): [≈ 0, 2.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.259 ±(99.9%) 19.605 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.259, 11.003), stdev = 5.091
[info]   CI (99.9%): [≈ 0, 24.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.29% complete, ETA 00:15:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17274.216 ops/s
[info] # Warmup Iteration   2: 251728.119 ops/s
[info] # Warmup Iteration   3: 324673.711 ops/s
[info] Iteration   1: 337361.886 ops/s
[info]                  ·gc.alloc.rate:                   1438.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              6715.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6128.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.081 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.376 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 347429.373 ops/s
[info]                  ·gc.alloc.rate:                   1465.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              6640.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5944.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.967 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 349239.485 ops/s
[info]                  ·gc.alloc.rate:                   1489.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              6711.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7340.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.844 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 350339.352 ops/s
[info]                  ·gc.alloc.rate:               1475.264 MB/sec
[info]                  ·gc.alloc.rate.norm:          6625.917 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1306.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5867.137 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 349955.206 ops/s
[info]                  ·gc.alloc.rate:                   1493.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              6714.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5910.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   346865.060 ±(99.9%) 20904.278 ops/s [Average]
[info]   (min, avg, max) = (337361.886, 346865.060, 350339.352), stdev = 5428.775
[info]   CI (99.9%): [325960.782, 367769.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1472.513 ±(99.9%) 84.150 MB/sec [Average]
[info]   (min, avg, max) = (1438.734, 1472.513, 1493.121), stdev = 21.853
[info]   CI (99.9%): [1388.364, 1556.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6681.689 ±(99.9%) 172.392 B/op [Average]
[info]   (min, avg, max) = (6625.917, 6681.689, 6715.688), stdev = 44.770
[info]   CI (99.9%): [6509.297, 6854.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1375.005 ±(99.9%) 546.938 MB/sec [Average]
[info]   (min, avg, max) = (1306.321, 1375.005, 1629.031), stdev = 142.038
[info]   CI (99.9%): [828.068, 1921.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6238.319 ±(99.9%) 2402.479 B/op [Average]
[info]   (min, avg, max) = (5867.137, 6238.319, 7340.110), stdev = 623.916
[info]   CI (99.9%): [3835.840, 8640.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.895 ±(99.9%) 7.092 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.895, 4.187), stdev = 1.842
[info]   CI (99.9%): [≈ 0, 7.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.056 ±(99.9%) 32.121 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.056, 18.967), stdev = 8.342
[info]   CI (99.9%): [≈ 0, 36.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.400, 19.000), stdev = 5.683
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.53% complete, ETA 00:14:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 949.460 ops/s
[info] # Warmup Iteration   2: 22230.115 ops/s
[info] # Warmup Iteration   3: 40697.678 ops/s
[info] Iteration   1: 44989.056 ops/s
[info]                  ·gc.alloc.rate:                   2423.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              84767.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2292.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80188.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.390 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 258.512 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 43604.551 ops/s
[info]                  ·gc.alloc.rate:                   2389.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              86229.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82805.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.662 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96.089 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 45441.941 ops/s
[info]                  ·gc.alloc.rate:                   2377.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              82344.269 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2310.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80002.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.344 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 219.683 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 42041.724 ops/s
[info]                  ·gc.alloc.rate:                   2330.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              87217.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2323.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86944.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.961 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 223.044 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 44432.434 ops/s
[info]                  ·gc.alloc.rate:                   2377.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              84227.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2327.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82443.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.402 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 191.351 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson":
[info]   44101.941 ±(99.9%) 5160.326 ops/s [Average]
[info]   (min, avg, max) = (42041.724, 44101.941, 45441.941), stdev = 1340.120
[info]   CI (99.9%): [38941.615, 49262.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2379.836 ±(99.9%) 127.370 MB/sec [Average]
[info]   (min, avg, max) = (2330.879, 2379.836, 2423.258), stdev = 33.078
[info]   CI (99.9%): [2252.466, 2507.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   84957.230 ±(99.9%) 7235.624 B/op [Average]
[info]   (min, avg, max) = (82344.269, 84957.230, 87217.332), stdev = 1879.069
[info]   CI (99.9%): [77721.605, 92192.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2309.624 ±(99.9%) 62.491 MB/sec [Average]
[info]   (min, avg, max) = (2292.358, 2309.624, 2327.628), stdev = 16.229
[info]   CI (99.9%): [2247.133, 2372.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   82476.860 ±(99.9%) 10794.594 B/op [Average]
[info]   (min, avg, max) = (80002.140, 82476.860, 86944.925), stdev = 2803.322
[info]   CI (99.9%): [71682.266, 93271.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   5.552 ±(99.9%) 6.819 MB/sec [Average]
[info]   (min, avg, max) = (2.662, 5.552, 7.390), stdev = 1.771
[info]   CI (99.9%): [≈ 0, 12.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   197.736 ±(99.9%) 237.282 B/op [Average]
[info]   (min, avg, max) = (96.089, 197.736, 258.512), stdev = 61.621
[info]   CI (99.9%): [≈ 0, 435.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 15.600, 20.000), stdev = 2.702
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.76% complete, ETA 00:14:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30544.916 ops/s
[info] # Warmup Iteration   2: 188939.975 ops/s
[info] # Warmup Iteration   3: 217768.356 ops/s
[info] Iteration   1: 246364.386 ops/s
[info]                  ·gc.alloc.rate:                   865.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              5526.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4132.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 246680.977 ops/s
[info]                  ·gc.alloc.rate:                   882.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              5629.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6215.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 252555.753 ops/s
[info]                  ·gc.alloc.rate:                   904.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              5635.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6100.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.189 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 253226.455 ops/s
[info]                  ·gc.alloc.rate:                   890.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              5533.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4074.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.906 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 257002.630 ops/s
[info]                  ·gc.alloc.rate:                   913.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              5596.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6037.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   251166.040 ±(99.9%) 17584.217 ops/s [Average]
[info]   (min, avg, max) = (246364.386, 251166.040, 257002.630), stdev = 4566.565
[info]   CI (99.9%): [233581.823, 268750.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   891.298 ±(99.9%) 73.273 MB/sec [Average]
[info]   (min, avg, max) = (865.157, 891.298, 913.862), stdev = 19.029
[info]   CI (99.9%): [818.025, 964.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   5584.321 ±(99.9%) 199.041 B/op [Average]
[info]   (min, avg, max) = (5526.565, 5584.321, 5635.275), stdev = 51.690
[info]   CI (99.9%): [5385.281, 5783.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   848.404 ±(99.9%) 693.513 MB/sec [Average]
[info]   (min, avg, max) = (646.882, 848.404, 985.950), stdev = 180.103
[info]   CI (99.9%): [154.891, 1541.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5312.089 ±(99.9%) 4257.352 B/op [Average]
[info]   (min, avg, max) = (4074.118, 5312.089, 6215.947), stdev = 1105.621
[info]   CI (99.9%): [1054.738, 9569.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.221 ±(99.9%) 1.331 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.221, 0.833), stdev = 0.346
[info]   CI (99.9%): [≈ 0, 1.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.375 ±(99.9%) 8.287 B/op [Average]
[info]   (min, avg, max) = (0.133, 1.375, 5.189), stdev = 2.152
[info]   CI (99.9%): [≈ 0, 9.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.140
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.00% complete, ETA 00:14:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 159074.234 ops/s
[info] # Warmup Iteration   2: 578839.852 ops/s
[info] # Warmup Iteration   3: 688295.745 ops/s
[info] Iteration   1: 706041.370 ops/s
[info]                  ·gc.alloc.rate:               788.786 MB/sec
[info]                  ·gc.alloc.rate.norm:          1758.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1461.206 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 666160.933 ops/s
[info]                  ·gc.alloc.rate:                   757.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              1788.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2327.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 655010.423 ops/s
[info]                  ·gc.alloc.rate:               751.141 MB/sec
[info]                  ·gc.alloc.rate.norm:          1804.982 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1579.043 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 670695.343 ops/s
[info]                  ·gc.alloc.rate:                   750.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              1762.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1543.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.156 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.407 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 694221.223 ops/s
[info]                  ·gc.alloc.rate:                   775.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              1756.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1487.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.124 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.548 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   678425.858 ±(99.9%) 81014.243 ops/s [Average]
[info]   (min, avg, max) = (655010.423, 678425.858, 706041.370), stdev = 21039.142
[info]   CI (99.9%): [597411.616, 759440.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   764.659 ±(99.9%) 64.241 MB/sec [Average]
[info]   (min, avg, max) = (750.923, 764.659, 788.786), stdev = 16.683
[info]   CI (99.9%): [700.419, 828.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1774.205 ±(99.9%) 82.959 B/op [Average]
[info]   (min, avg, max) = (1756.853, 1774.205, 1804.982), stdev = 21.544
[info]   CI (99.9%): [1691.246, 1857.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   722.458 ±(99.9%) 566.549 MB/sec [Average]
[info]   (min, avg, max) = (655.485, 722.458, 985.650), stdev = 147.131
[info]   CI (99.9%): [155.909, 1289.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1679.826 ±(99.9%) 1405.902 B/op [Average]
[info]   (min, avg, max) = (1461.206, 1679.826, 2327.703), stdev = 365.108
[info]   CI (99.9%): [273.923, 3085.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.865 ±(99.9%) 5.268 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.865, 3.156), stdev = 1.368
[info]   CI (99.9%): [≈ 0, 6.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.012 ±(99.9%) 12.347 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.012, 7.407), stdev = 3.206
[info]   CI (99.9%): [≈ 0, 14.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 11.000), stdev = 2.881
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 84.24% complete, ETA 00:14:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 313005.466 ops/s
[info] # Warmup Iteration   2: 680377.007 ops/s
[info] # Warmup Iteration   3: 723987.461 ops/s
[info] Iteration   1: 749351.332 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 749279.228 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 749738.524 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 749585.183 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 748961.904 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   749383.234 ±(99.9%) 1149.351 ops/s [Average]
[info]   (min, avg, max) = (748961.904, 749383.234, 749738.524), stdev = 298.483
[info]   CI (99.9%): [748233.883, 750532.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 84.47% complete, ETA 00:14:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5734.657 ops/s
[info] # Warmup Iteration   2: 64345.042 ops/s
[info] # Warmup Iteration   3: 74928.258 ops/s
[info] Iteration   1: 85521.637 ops/s
[info]                  ·gc.alloc.rate:                   1872.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              34421.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1954.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35946.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.551 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.066 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 88651.927 ops/s
[info]                  ·gc.alloc.rate:                   1861.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              33027.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28962.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.633 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.980 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 83916.991 ops/s
[info]                  ·gc.alloc.rate:                   1759.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              32989.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1918.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35967.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.970 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.179 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   4: 83766.802 ops/s
[info]                  ·gc.alloc.rate:                   1770.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              33244.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1570.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29499.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.116 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.291 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   5: 85405.507 ops/s
[info]                  ·gc.alloc.rate:                   1384.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              25505.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1576.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29045.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.188 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 150.869 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson":
[info]   85452.573 ±(99.9%) 7565.973 ops/s [Average]
[info]   (min, avg, max) = (83766.802, 85452.573, 88651.927), stdev = 1964.859
[info]   CI (99.9%): [77886.599, 93018.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1729.515 ±(99.9%) 768.836 MB/sec [Average]
[info]   (min, avg, max) = (1384.226, 1729.515, 1872.009), stdev = 199.664
[info]   CI (99.9%): [960.680, 2498.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   31837.687 ±(99.9%) 13815.493 B/op [Average]
[info]   (min, avg, max) = (25505.692, 31837.687, 34421.219), stdev = 3587.840
[info]   CI (99.9%): [18022.193, 45653.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1730.610 ±(99.9%) 732.482 MB/sec [Average]
[info]   (min, avg, max) = (1570.846, 1730.610, 1954.969), stdev = 190.223
[info]   CI (99.9%): [998.128, 2463.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   31884.474 ±(99.9%) 14337.938 B/op [Average]
[info]   (min, avg, max) = (28962.856, 31884.474, 35967.811), stdev = 3723.517
[info]   CI (99.9%): [17546.536, 46222.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   4.091 ±(99.9%) 11.341 MB/sec [Average]
[info]   (min, avg, max) = (0.970, 4.091, 8.188), stdev = 2.945
[info]   CI (99.9%): [≈ 0, 15.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   75.477 ±(99.9%) 209.491 B/op [Average]
[info]   (min, avg, max) = (18.179, 75.477, 150.869), stdev = 54.404
[info]   CI (99.9%): [≈ 0, 284.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   122.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (19.000, 24.400, 34.000), stdev = 6.768
[info]   CI (99.9%): [122.000, 122.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 84.71% complete, ETA 00:13:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9028.320 ops/s
[info] # Warmup Iteration   2: 77791.942 ops/s
[info] # Warmup Iteration   3: 114572.751 ops/s
[info] Iteration   1: 112580.755 ops/s
[info]                  ·gc.alloc.rate:                   2209.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              30881.293 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1949.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27249.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.658 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 122721.442 ops/s
[info]                  ·gc.alloc.rate:                   1987.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              25494.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24920.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.934 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 124193.006 ops/s
[info]                  ·gc.alloc.rate:                   2021.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              25611.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24713.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.847 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 125114.113 ops/s
[info]                  ·gc.alloc.rate:                   2027.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              25505.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24771.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.571 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 124909.757 ops/s
[info]                  ·gc.alloc.rate:                   2042.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              25738.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25089.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce":
[info]   121903.815 ±(99.9%) 20391.156 ops/s [Average]
[info]   (min, avg, max) = (112580.755, 121903.815, 125114.113), stdev = 5295.519
[info]   CI (99.9%): [101512.658, 142294.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2057.673 ±(99.9%) 334.800 MB/sec [Average]
[info]   (min, avg, max) = (1987.900, 2057.673, 2209.013), stdev = 86.947
[info]   CI (99.9%): [1722.873, 2392.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   26645.969 ±(99.9%) 9124.723 B/op [Average]
[info]   (min, avg, max) = (25494.168, 26645.969, 30881.293), stdev = 2369.662
[info]   CI (99.9%): [17521.246, 35770.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1960.624 ±(99.9%) 76.054 MB/sec [Average]
[info]   (min, avg, max) = (1943.140, 1960.624, 1991.301), stdev = 19.751
[info]   CI (99.9%): [1884.570, 2036.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   25348.675 ±(99.9%) 4128.881 B/op [Average]
[info]   (min, avg, max) = (24713.642, 25348.675, 27249.044), stdev = 1072.257
[info]   CI (99.9%): [21219.795, 29477.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.150 ±(99.9%) 5.656 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.150, 3.123), stdev = 1.469
[info]   CI (99.9%): [≈ 0, 6.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   15.455 ±(99.9%) 77.345 B/op [Average]
[info]   (min, avg, max) = (0.262, 15.455, 43.658), stdev = 20.086
[info]   CI (99.9%): [≈ 0, 92.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 15.000), stdev = 2.915
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.94% complete, ETA 00:13:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17274.295 ops/s
[info] # Warmup Iteration   2: 95245.832 ops/s
[info] # Warmup Iteration   3: 186548.307 ops/s
[info] Iteration   1: 199530.497 ops/s
[info]                  ·gc.alloc.rate:                   841.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              6635.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7627.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 202654.537 ops/s
[info]                  ·gc.alloc.rate:                   850.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              6601.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5018.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 198885.525 ops/s
[info]                  ·gc.alloc.rate:                   841.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              6662.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7693.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 201779.097 ops/s
[info]                  ·gc.alloc.rate:                   840.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              6558.456 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5071.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.905 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.662 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 197097.467 ops/s
[info]                  ·gc.alloc.rate:                   831.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              6641.837 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7790.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.538 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.295 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala":
[info]   199989.425 ±(99.9%) 8631.453 ops/s [Average]
[info]   (min, avg, max) = (197097.467, 199989.425, 202654.537), stdev = 2241.561
[info]   CI (99.9%): [191357.971, 208620.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   841.239 ±(99.9%) 24.847 MB/sec [Average]
[info]   (min, avg, max) = (831.911, 841.239, 850.116), stdev = 6.453
[info]   CI (99.9%): [816.392, 866.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   6619.992 ±(99.9%) 157.698 B/op [Average]
[info]   (min, avg, max) = (6558.456, 6619.992, 6662.986), stdev = 40.954
[info]   CI (99.9%): [6462.294, 6777.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   842.298 ±(99.9%) 682.381 MB/sec [Average]
[info]   (min, avg, max) = (646.259, 842.298, 975.730), stdev = 177.212
[info]   CI (99.9%): [159.917, 1524.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6640.105 ±(99.9%) 5613.003 B/op [Average]
[info]   (min, avg, max) = (5018.199, 6640.105, 7790.063), stdev = 1457.679
[info]   CI (99.9%): [1027.102, 12253.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.701 ±(99.9%) 4.823 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.701, 2.905), stdev = 1.252
[info]   CI (99.9%): [≈ 0, 5.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.490 ±(99.9%) 37.602 B/op [Average]
[info]   (min, avg, max) = (0.162, 5.490, 22.662), stdev = 9.765
[info]   CI (99.9%): [≈ 0, 43.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 7.000), stdev = 1.225
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.18% complete, ETA 00:13:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59345.587 ops/s
[info] # Warmup Iteration   2: 191320.713 ops/s
[info] # Warmup Iteration   3: 247050.851 ops/s
[info] Iteration   1: 279183.196 ops/s
[info]                  ·gc.alloc.rate:                   1023.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              5769.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7364.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.515 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.904 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 282945.959 ops/s
[info]                  ·gc.alloc.rate:                   1045.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              5815.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5446.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.935 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.327 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 285323.944 ops/s
[info]                  ·gc.alloc.rate:                   1055.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              5818.577 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5375.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 284012.764 ops/s
[info]                  ·gc.alloc.rate:                   1034.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              5734.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5393.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.154 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 282237.835 ops/s
[info]                  ·gc.alloc.rate:                   1025.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              5721.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5431.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.464 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala":
[info]   282740.740 ±(99.9%) 8873.653 ops/s [Average]
[info]   (min, avg, max) = (279183.196, 282740.740, 285323.944), stdev = 2304.460
[info]   CI (99.9%): [273867.086, 291614.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1036.948 ±(99.9%) 51.360 MB/sec [Average]
[info]   (min, avg, max) = (1023.344, 1036.948, 1055.065), stdev = 13.338
[info]   CI (99.9%): [985.588, 1088.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5771.812 ±(99.9%) 172.746 B/op [Average]
[info]   (min, avg, max) = (5721.134, 5771.812, 5818.577), stdev = 44.862
[info]   CI (99.9%): [5599.065, 5944.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1041.492 ±(99.9%) 570.039 MB/sec [Average]
[info]   (min, avg, max) = (973.221, 1041.492, 1306.276), stdev = 148.037
[info]   CI (99.9%): [471.453, 1611.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5802.213 ±(99.9%) 3364.055 B/op [Average]
[info]   (min, avg, max) = (5375.730, 5802.213, 7364.186), stdev = 873.635
[info]   CI (99.9%): [2438.157, 9166.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.932 ±(99.9%) 4.487 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 0.932, 2.935), stdev = 1.165
[info]   CI (99.9%): [≈ 0, 5.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.180 ±(99.9%) 24.947 B/op [Average]
[info]   (min, avg, max) = (0.464, 5.180, 16.327), stdev = 6.479
[info]   CI (99.9%): [≈ 0, 30.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 18.000), stdev = 6.107
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 85.41% complete, ETA 00:13:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6009.866 ops/s
[info] # Warmup Iteration   2: 46358.815 ops/s
[info] # Warmup Iteration   3: 96014.668 ops/s
[info] Iteration   1: 81232.881 ops/s
[info]                  ·gc.alloc.rate:                   2838.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              55001.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2605.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50474.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.195 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 139.407 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 98707.413 ops/s
[info]                  ·gc.alloc.rate:                   3206.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              51129.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3269.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52130.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.992 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 99468.830 ops/s
[info]                  ·gc.alloc.rate:                   3204.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              50706.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2986.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47245.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.988 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 98785.356 ops/s
[info]                  ·gc.alloc.rate:                   3245.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              51704.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3357.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53490.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.995 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 97474.798 ops/s
[info]                  ·gc.alloc.rate:                   3188.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              51476.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3044.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49161.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.672 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson":
[info]   95133.855 ±(99.9%) 30050.624 ops/s [Average]
[info]   (min, avg, max) = (81232.881, 95133.855, 99468.830), stdev = 7804.052
[info]   CI (99.9%): [65083.232, 125184.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3136.771 ±(99.9%) 646.361 MB/sec [Average]
[info]   (min, avg, max) = (2838.840, 3136.771, 3245.259), stdev = 167.858
[info]   CI (99.9%): [2490.409, 3783.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52003.442 ±(99.9%) 6613.697 B/op [Average]
[info]   (min, avg, max) = (50706.585, 52003.442, 55001.116), stdev = 1717.556
[info]   CI (99.9%): [45389.745, 58617.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3052.599 ±(99.9%) 1130.119 MB/sec [Average]
[info]   (min, avg, max) = (2605.220, 3052.599, 3357.380), stdev = 293.488
[info]   CI (99.9%): [1922.480, 4182.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50500.435 ±(99.9%) 9429.889 B/op [Average]
[info]   (min, avg, max) = (47245.260, 50500.435, 53490.653), stdev = 2448.912
[info]   CI (99.9%): [41070.546, 59930.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.497 ±(99.9%) 12.266 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.497, 7.195), stdev = 3.185
[info]   CI (99.9%): [≈ 0, 13.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   28.811 ±(99.9%) 238.074 B/op [Average]
[info]   (min, avg, max) = (0.672, 28.811, 139.407), stdev = 61.827
[info]   CI (99.9%): [≈ 0, 266.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 9.200, 10.000), stdev = 0.837
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.800, 17.000), stdev = 1.924
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 85.65% complete, ETA 00:13:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46422.177 ops/s
[info] # Warmup Iteration   2: 217378.790 ops/s
[info] # Warmup Iteration   3: 230712.155 ops/s
[info] Iteration   1: 250875.161 ops/s
[info]                  ·gc.alloc.rate:                   1706.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              10708.470 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10234.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.218 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.462 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 249222.725 ops/s
[info]                  ·gc.alloc.rate:                   1691.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              10682.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10232.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.920 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 247222.778 ops/s
[info]                  ·gc.alloc.rate:               1676.732 MB/sec
[info]                  ·gc.alloc.rate.norm:          10674.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1625.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10349.463 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 252498.904 ops/s
[info]                  ·gc.alloc.rate:                   1724.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              10749.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10225.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 250364.329 ops/s
[info]                  ·gc.alloc.rate:                   1724.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              10840.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10404.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce":
[info]   250036.780 ±(99.9%) 7568.627 ops/s [Average]
[info]   (min, avg, max) = (247222.778, 250036.780, 252498.904), stdev = 1965.548
[info]   CI (99.9%): [242468.153, 257605.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1704.970 ±(99.9%) 80.801 MB/sec [Average]
[info]   (min, avg, max) = (1676.732, 1704.970, 1724.944), stdev = 20.984
[info]   CI (99.9%): [1624.170, 1785.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10731.158 ±(99.9%) 261.399 B/op [Average]
[info]   (min, avg, max) = (10674.198, 10731.158, 10840.628), stdev = 67.884
[info]   CI (99.9%): [10469.759, 10992.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1634.697 ±(99.9%) 53.129 MB/sec [Average]
[info]   (min, avg, max) = (1620.438, 1634.697, 1655.524), stdev = 13.797
[info]   CI (99.9%): [1581.568, 1687.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10289.284 ±(99.9%) 317.232 B/op [Average]
[info]   (min, avg, max) = (10225.199, 10289.284, 10404.351), stdev = 82.384
[info]   CI (99.9%): [9972.052, 10606.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.885 ±(99.9%) 7.177 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.885, 4.218), stdev = 1.864
[info]   CI (99.9%): [≈ 0, 8.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.555 ±(99.9%) 45.026 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.555, 26.462), stdev = 11.693
[info]   CI (99.9%): [≈ 0, 50.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 14.000), stdev = 3.050
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.88% complete, ETA 00:12:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 133623.380 ops/s
[info] # Warmup Iteration   2: 727731.636 ops/s
[info] # Warmup Iteration   3: 759106.961 ops/s
[info] Iteration   1: 760881.336 ops/s
[info]                  ·gc.alloc.rate:               411.075 MB/sec
[info]                  ·gc.alloc.rate.norm:          849.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 660.003 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 768899.741 ops/s
[info]                  ·gc.alloc.rate:               418.003 MB/sec
[info]                  ·gc.alloc.rate.norm:          855.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 655.213 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 751635.671 ops/s
[info]                  ·gc.alloc.rate:               417.772 MB/sec
[info]                  ·gc.alloc.rate.norm:          874.765 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 670.239 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 765984.383 ops/s
[info]                  ·gc.alloc.rate:                   425.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              873.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1320.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 762473.429 ops/s
[info]                  ·gc.alloc.rate:               414.467 MB/sec
[info]                  ·gc.alloc.rate.norm:          855.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 666.198 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala":
[info]   761974.912 ±(99.9%) 25277.759 ops/s [Average]
[info]   (min, avg, max) = (751635.671, 761974.912, 768899.741), stdev = 6564.554
[info]   CI (99.9%): [736697.153, 787252.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   417.266 ±(99.9%) 19.914 MB/sec [Average]
[info]   (min, avg, max) = (411.075, 417.266, 425.013), stdev = 5.172
[info]   CI (99.9%): [397.352, 437.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   861.746 ±(99.9%) 43.616 B/op [Average]
[info]   (min, avg, max) = (849.969, 861.746, 874.765), stdev = 11.327
[info]   CI (99.9%): [818.130, 905.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   385.044 ±(99.9%) 555.342 MB/sec [Average]
[info]   (min, avg, max) = (319.201, 385.044, 643.022), stdev = 144.221
[info]   CI (99.9%): [≈ 0, 940.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   794.493 ±(99.9%) 1133.158 B/op [Average]
[info]   (min, avg, max) = (655.213, 794.493, 1320.813), stdev = 294.278
[info]   CI (99.9%): [≈ 0, 1927.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.147 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.086), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.12% complete, ETA 00:12:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 277507.932 ops/s
[info] # Warmup Iteration   2: 799073.769 ops/s
[info] # Warmup Iteration   3: 852422.850 ops/s
[info] Iteration   1: 855700.496 ops/s
[info]                  ·gc.alloc.rate:               460.109 MB/sec
[info]                  ·gc.alloc.rate.norm:          846.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 601.592 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 860427.559 ops/s
[info]                  ·gc.alloc.rate:                   472.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              864.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1197.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 889510.533 ops/s
[info]                  ·gc.alloc.rate:               482.109 MB/sec
[info]                  ·gc.alloc.rate.norm:          853.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 579.912 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 870554.873 ops/s
[info]                  ·gc.alloc.rate:                   487.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              881.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1186.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 892470.497 ops/s
[info]                  ·gc.alloc.rate:                   480.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              846.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     579.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala":
[info]   873732.792 ±(99.9%) 64212.613 ops/s [Average]
[info]   (min, avg, max) = (855700.496, 873732.792, 892470.497), stdev = 16675.812
[info]   CI (99.9%): [809520.179, 937945.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   476.548 ±(99.9%) 40.742 MB/sec [Average]
[info]   (min, avg, max) = (460.109, 476.548, 487.437), stdev = 10.581
[info]   CI (99.9%): [435.805, 517.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   858.392 ±(99.9%) 56.612 B/op [Average]
[info]   (min, avg, max) = (846.197, 858.392, 881.120), stdev = 14.702
[info]   CI (99.9%): [801.780, 915.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   458.900 ±(99.9%) 691.474 MB/sec [Average]
[info]   (min, avg, max) = (327.108, 458.900, 656.255), stdev = 179.574
[info]   CI (99.9%): [≈ 0, 1150.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   828.951 ±(99.9%) 1276.912 B/op [Average]
[info]   (min, avg, max) = (579.150, 828.951, 1197.814), stdev = 331.610
[info]   CI (99.9%): [≈ 0, 2105.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.018 ±(99.9%) 0.071 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.039), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.128 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.071), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 2.168
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 86.35% complete, ETA 00:12:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 393584.690 ops/s
[info] # Warmup Iteration   2: 780357.466 ops/s
[info] # Warmup Iteration   3: 902793.134 ops/s
[info] Iteration   1: 896594.653 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 890397.273 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 897390.362 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 896305.267 ops/s
[info]                  ·gc.alloc.rate:      0.256 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.450 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 899929.289 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   896123.369 ±(99.9%) 13495.625 ops/s [Average]
[info]   (min, avg, max) = (890397.273, 896123.369, 899929.289), stdev = 3504.771
[info]   CI (99.9%): [882627.744, 909618.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.052 ±(99.9%) 0.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.052, 0.256), stdev = 0.115
[info]   CI (99.9%): [≈ 0, 0.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.090 ±(99.9%) 0.774 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.090, 0.450), stdev = 0.201
[info]   CI (99.9%): [≈ 0, 0.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 86.59% complete, ETA 00:12:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6013.424 ops/s
[info] # Warmup Iteration   2: 26420.138 ops/s
[info] # Warmup Iteration   3: 38358.012 ops/s
[info] Iteration   1: 36836.852 ops/s
[info]                  ·gc.alloc.rate:                   1871.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              79974.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1957.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83645.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.093 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 174.878 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 35568.525 ops/s
[info]                  ·gc.alloc.rate:                   1930.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              85388.982 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1953.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86406.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.835 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 125.379 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 37815.189 ops/s
[info]                  ·gc.alloc.rate:                   1956.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              81439.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67852.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.485 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 186.645 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 36747.797 ops/s
[info]                  ·gc.alloc.rate:                   1926.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              82512.897 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84102.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.590 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 36170.895 ops/s
[info]                  ·gc.alloc.rate:                   1907.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              82997.882 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86229.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.402 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson":
[info]   36627.851 ±(99.9%) 3221.001 ops/s [Average]
[info]   (min, avg, max) = (35568.525, 36627.851, 37815.189), stdev = 836.484
[info]   CI (99.9%): [33406.850, 39848.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1918.647 ±(99.9%) 121.459 MB/sec [Average]
[info]   (min, avg, max) = (1871.760, 1918.647, 1956.780), stdev = 31.542
[info]   CI (99.9%): [1797.189, 2040.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   82462.733 ±(99.9%) 7722.957 B/op [Average]
[info]   (min, avg, max) = (79974.559, 82462.733, 85388.982), stdev = 2005.627
[info]   CI (99.9%): [74739.776, 90185.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1897.419 ±(99.9%) 576.442 MB/sec [Average]
[info]   (min, avg, max) = (1630.325, 1897.419, 1981.850), stdev = 149.700
[info]   CI (99.9%): [1320.977, 2473.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   81647.358 ±(99.9%) 30071.918 B/op [Average]
[info]   (min, avg, max) = (67852.623, 81647.358, 86406.199), stdev = 7809.582
[info]   CI (99.9%): [51575.440, 111719.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.545 ±(99.9%) 7.118 MB/sec [Average]
[info]   (min, avg, max) = (0.271, 2.545, 4.485), stdev = 1.849
[info]   CI (99.9%): [≈ 0, 9.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   108.779 ±(99.9%) 299.324 B/op [Average]
[info]   (min, avg, max) = (11.590, 108.779, 186.645), stdev = 77.734
[info]   CI (99.9%): [≈ 0, 408.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   79.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 15.800, 18.000), stdev = 1.483
[info]   CI (99.9%): [79.000, 79.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce
[info] # Run progress: 86.82% complete, ETA 00:11:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41526.583 ops/s
[info] # Warmup Iteration   2: 481184.749 ops/s
[info] # Warmup Iteration   3: 1011013.070 ops/s
[info] Iteration   1: 1090437.030 ops/s
[info]                  ·gc.alloc.rate:                   2505.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              3612.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2601.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3751.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.760 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 1121233.838 ops/s
[info]                  ·gc.alloc.rate:                   2554.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              3585.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2264.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3178.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.432 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.010 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1128282.977 ops/s
[info]                  ·gc.alloc.rate:               2615.866 MB/sec
[info]                  ·gc.alloc.rate.norm:          3648.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2603.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3632.245 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 1117338.657 ops/s
[info]                  ·gc.alloc.rate:                   2595.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              3652.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2644.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3721.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1130814.405 ops/s
[info]                  ·gc.alloc.rate:                   2610.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2341.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3258.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce":
[info]   1117621.382 ±(99.9%) 62085.118 ops/s [Average]
[info]   (min, avg, max) = (1090437.030, 1117621.382, 1130814.405), stdev = 16123.308
[info]   CI (99.9%): [1055536.264, 1179706.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate":
[info]   2576.173 ±(99.9%) 178.494 MB/sec [Average]
[info]   (min, avg, max) = (2505.294, 2576.173, 2615.866), stdev = 46.354
[info]   CI (99.9%): [2397.679, 2754.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3626.463 ±(99.9%) 106.751 B/op [Average]
[info]   (min, avg, max) = (3585.466, 3626.463, 3652.345), stdev = 27.723
[info]   CI (99.9%): [3519.711, 3733.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2491.058 ±(99.9%) 672.705 MB/sec [Average]
[info]   (min, avg, max) = (2264.564, 2491.058, 2644.154), stdev = 174.699
[info]   CI (99.9%): [1818.352, 3163.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3508.423 ±(99.9%) 1038.251 B/op [Average]
[info]   (min, avg, max) = (3178.721, 3508.423, 3751.348), stdev = 269.630
[info]   CI (99.9%): [2470.173, 4546.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.106 ±(99.9%) 6.640 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.106, 3.994), stdev = 1.724
[info]   CI (99.9%): [≈ 0, 7.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.583 ±(99.9%) 9.568 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.583, 5.760), stdev = 2.485
[info]   CI (99.9%): [≈ 0, 11.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.200, 25.000), stdev = 6.648
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala
[info] # Run progress: 87.06% complete, ETA 00:11:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51748.840 ops/s
[info] # Warmup Iteration   2: 1226934.206 ops/s
[info] # Warmup Iteration   3: 1732905.085 ops/s
[info] Iteration   1: 1838696.867 ops/s
[info]                  ·gc.alloc.rate:                   1159.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              992.368 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1107.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1854003.488 ops/s
[info]                  ·gc.alloc.rate:                   1151.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              977.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1845573.232 ops/s
[info]                  ·gc.alloc.rate:                   1147.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              978.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1117.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.994 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1871977.871 ops/s
[info]                  ·gc.alloc.rate:                   1152.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1868037.885 ops/s
[info]                  ·gc.alloc.rate:                   1162.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              979.661 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1113.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala":
[info]   1855657.869 ±(99.9%) 54853.762 ops/s [Average]
[info]   (min, avg, max) = (1838696.867, 1855657.869, 1871977.871), stdev = 14245.348
[info]   CI (99.9%): [1800804.107, 1910511.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1154.645 ±(99.9%) 24.609 MB/sec [Average]
[info]   (min, avg, max) = (1147.117, 1154.645, 1162.932), stdev = 6.391
[info]   CI (99.9%): [1130.036, 1179.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   979.309 ±(99.9%) 32.375 B/op [Average]
[info]   (min, avg, max) = (968.967, 979.309, 992.368), stdev = 8.408
[info]   CI (99.9%): [946.934, 1011.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1178.082 ±(99.9%) 690.076 MB/sec [Average]
[info]   (min, avg, max) = (977.561, 1178.082, 1321.222), stdev = 179.211
[info]   CI (99.9%): [488.006, 1868.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   999.587 ±(99.9%) 597.479 B/op [Average]
[info]   (min, avg, max) = (829.471, 999.587, 1117.696), stdev = 155.163
[info]   CI (99.9%): [402.108, 1597.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.275 ±(99.9%) 1.923 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.275, 1.166), stdev = 0.499
[info]   CI (99.9%): [≈ 0, 2.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.234 ±(99.9%) 1.640 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.234, 0.994), stdev = 0.426
[info]   CI (99.9%): [≈ 0, 1.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.140
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala
[info] # Run progress: 87.29% complete, ETA 00:11:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1611965.242 ops/s
[info] # Warmup Iteration   2: 8194457.907 ops/s
[info] # Warmup Iteration   3: 9546867.687 ops/s
[info] Iteration   1: 9608337.846 ops/s
[info]                  ·gc.alloc.rate:                   300.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 9433561.069 ops/s
[info]                  ·gc.alloc.rate:               302.270 MB/sec
[info]                  ·gc.alloc.rate.norm:          50.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54.903 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 9782079.778 ops/s
[info]                  ·gc.alloc.rate:      298.413 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 9675189.567 ops/s
[info]                  ·gc.alloc.rate:                   305.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 9733053.046 ops/s
[info]                  ·gc.alloc.rate:               307.029 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.626 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 53.320 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala":
[info]   9646444.261 ±(99.9%) 521956.596 ops/s [Average]
[info]   (min, avg, max) = (9433561.069, 9646444.261, 9782079.778), stdev = 135550.470
[info]   CI (99.9%): [9124487.665, 10168400.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   302.665 ±(99.9%) 13.815 MB/sec [Average]
[info]   (min, avg, max) = (298.413, 302.665, 307.029), stdev = 3.588
[info]   CI (99.9%): [288.849, 316.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   49.382 ±(99.9%) 3.448 B/op [Average]
[info]   (min, avg, max) = (48.000, 49.382, 50.429), stdev = 0.895
[info]   CI (99.9%): [45.934, 52.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   248.767 ±(99.9%) 549.353 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 248.767, 329.882), stdev = 142.665
[info]   CI (99.9%): [≈ 0, 798.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   40.730 ±(99.9%) 89.966 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 40.730, 54.903), stdev = 23.364
[info]   CI (99.9%): [≈ 0, 130.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.200, 6.000), stdev = 2.168
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson
[info] # Run progress: 87.53% complete, ETA 00:11:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1535.235 ops/s
[info] # Warmup Iteration   2: 117417.133 ops/s
[info] # Warmup Iteration   3: 463648.537 ops/s
[info] Iteration   1: 482653.757 ops/s
[info]                  ·gc.alloc.rate:                   2199.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              7173.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2291.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7472.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.852 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.300 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 497660.632 ops/s
[info]                  ·gc.alloc.rate:                   2258.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              7139.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6206.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.185 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 495545.295 ops/s
[info]                  ·gc.alloc.rate:               2260.450 MB/sec
[info]                  ·gc.alloc.rate.norm:          7179.260 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2302.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7312.881 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 496777.421 ops/s
[info]                  ·gc.alloc.rate:                   2286.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              7245.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2325.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7368.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 502921.128 ops/s
[info]                  ·gc.alloc.rate:                   2301.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              7200.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2011.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6291.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson":
[info]   495111.647 ±(99.9%) 28921.334 ops/s [Average]
[info]   (min, avg, max) = (482653.757, 495111.647, 502921.128), stdev = 7510.779
[info]   CI (99.9%): [466190.312, 524032.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2261.454 ±(99.9%) 149.968 MB/sec [Average]
[info]   (min, avg, max) = (2199.940, 2261.454, 2301.705), stdev = 38.946
[info]   CI (99.9%): [2111.486, 2411.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   7187.651 ±(99.9%) 151.245 B/op [Average]
[info]   (min, avg, max) = (7139.012, 7187.651, 7245.598), stdev = 39.278
[info]   CI (99.9%): [7036.407, 7338.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2178.856 ±(99.9%) 678.757 MB/sec [Average]
[info]   (min, avg, max) = (1963.230, 2178.856, 2325.863), stdev = 176.271
[info]   CI (99.9%): [1500.099, 2857.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   6930.437 ±(99.9%) 2408.205 B/op [Average]
[info]   (min, avg, max) = (6206.511, 6930.437, 7472.482), stdev = 625.403
[info]   CI (99.9%): [4522.232, 9338.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.654 ±(99.9%) 4.770 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.654, 2.852), stdev = 1.239
[info]   CI (99.9%): [≈ 0, 5.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.123 ±(99.9%) 15.565 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.123, 9.300), stdev = 4.042
[info]   CI (99.9%): [≈ 0, 17.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.000, 20.000), stdev = 4.528
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce
[info] # Run progress: 87.76% complete, ETA 00:11:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59726.764 ops/s
[info] # Warmup Iteration   2: 899296.254 ops/s
[info] # Warmup Iteration   3: 1538282.746 ops/s
[info] Iteration   1: 1997323.106 ops/s
[info]                  ·gc.alloc.rate:                   2045.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              1611.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1932.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1522.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.674 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 2038226.183 ops/s
[info]                  ·gc.alloc.rate:                   2078.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              1604.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1925.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1486.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.209 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2038603.992 ops/s
[info]                  ·gc.alloc.rate:                   2089.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              1612.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2272.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1754.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 2062759.736 ops/s
[info]                  ·gc.alloc.rate:                   2133.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              1627.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1508.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2048778.852 ops/s
[info]                  ·gc.alloc.rate:                   2133.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              1638.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1535.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce":
[info]   2037138.374 ±(99.9%) 93937.992 ops/s [Average]
[info]   (min, avg, max) = (1997323.106, 2037138.374, 2062759.736), stdev = 24395.398
[info]   CI (99.9%): [1943200.382, 2131076.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate":
[info]   2096.027 ±(99.9%) 145.309 MB/sec [Average]
[info]   (min, avg, max) = (2045.599, 2096.027, 2133.473), stdev = 37.736
[info]   CI (99.9%): [1950.718, 2241.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1619.115 ±(99.9%) 53.409 B/op [Average]
[info]   (min, avg, max) = (1604.582, 1619.115, 1638.764), stdev = 13.870
[info]   CI (99.9%): [1565.706, 1672.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2021.098 ±(99.9%) 553.745 MB/sec [Average]
[info]   (min, avg, max) = (1925.700, 2021.098, 2272.532), stdev = 143.806
[info]   CI (99.9%): [1467.353, 2574.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1561.301 ±(99.9%) 421.617 B/op [Average]
[info]   (min, avg, max) = (1486.595, 1561.301, 1754.496), stdev = 109.493
[info]   CI (99.9%): [1139.683, 1982.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.999 ±(99.9%) 7.899 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.999, 4.664), stdev = 2.051
[info]   CI (99.9%): [≈ 0, 8.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.786 ±(99.9%) 6.225 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.786, 3.674), stdev = 1.617
[info]   CI (99.9%): [≈ 0, 7.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.800, 14.000), stdev = 2.490
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala
[info] # Run progress: 88.00% complete, ETA 00:10:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 143163.825 ops/s
[info] # Warmup Iteration   2: 1902457.066 ops/s
[info] # Warmup Iteration   3: 3019994.193 ops/s
[info] Iteration   1: 3070024.833 ops/s
[info]                  ·gc.alloc.rate:                   1209.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              619.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1288.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     660.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.693 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3080367.143 ops/s
[info]                  ·gc.alloc.rate:                   1214.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              620.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1289.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     658.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3020021.167 ops/s
[info]                  ·gc.alloc.rate:               1172.649 MB/sec
[info]                  ·gc.alloc.rate.norm:          611.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:      971.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 506.169 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 3080205.801 ops/s
[info]                  ·gc.alloc.rate:                   1207.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              616.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     666.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3071265.200 ops/s
[info]                  ·gc.alloc.rate:                   1196.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              613.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     506.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala":
[info]   3064376.829 ±(99.9%) 97281.565 ops/s [Average]
[info]   (min, avg, max) = (3020021.167, 3064376.829, 3080367.143), stdev = 25263.713
[info]   CI (99.9%): [2967095.264, 3161658.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1200.122 ±(99.9%) 64.378 MB/sec [Average]
[info]   (min, avg, max) = (1172.649, 1200.122, 1214.757), stdev = 16.719
[info]   CI (99.9%): [1135.744, 1264.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   616.309 ±(99.9%) 15.746 B/op [Average]
[info]   (min, avg, max) = (611.117, 616.309, 620.394), stdev = 4.089
[info]   CI (99.9%): [600.563, 632.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1168.210 ±(99.9%) 664.412 MB/sec [Average]
[info]   (min, avg, max) = (971.270, 1168.210, 1304.329), stdev = 172.546
[info]   CI (99.9%): [503.798, 1832.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   599.554 ±(99.9%) 328.600 B/op [Average]
[info]   (min, avg, max) = (506.085, 599.554, 666.458), stdev = 85.336
[info]   CI (99.9%): [270.954, 928.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.283 ±(99.9%) 2.302 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.283, 1.352), stdev = 0.598
[info]   CI (99.9%): [≈ 0, 2.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.145 ±(99.9%) 1.180 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.145, 0.693), stdev = 0.306
[info]   CI (99.9%): [≈ 0, 1.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.342
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala
[info] # Run progress: 88.24% complete, ETA 00:10:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 765180.275 ops/s
[info] # Warmup Iteration   2: 7269942.489 ops/s
[info] # Warmup Iteration   3: 8916960.026 ops/s
[info] Iteration   1: 8914173.768 ops/s
[info]                  ·gc.alloc.rate:                   751.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              132.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 8914496.665 ops/s
[info]                  ·gc.alloc.rate:               743.598 MB/sec
[info]                  ·gc.alloc.rate.norm:          131.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 115.495 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 8859573.950 ops/s
[info]                  ·gc.alloc.rate:               752.778 MB/sec
[info]                  ·gc.alloc.rate.norm:          133.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 116.446 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 8820193.750 ops/s
[info]                  ·gc.alloc.rate:               759.260 MB/sec
[info]                  ·gc.alloc.rate.norm:          135.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 117.084 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 8712788.223 ops/s
[info]                  ·gc.alloc.rate:                   734.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              132.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.760 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala":
[info]   8844245.271 ±(99.9%) 321705.414 ops/s [Average]
[info]   (min, avg, max) = (8712788.223, 8844245.271, 8914496.665), stdev = 83545.874
[info]   CI (99.9%): [8522539.858, 9165950.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   748.395 ±(99.9%) 36.979 MB/sec [Average]
[info]   (min, avg, max) = (734.394, 748.395, 759.260), stdev = 9.603
[info]   CI (99.9%): [711.416, 785.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   133.174 ±(99.9%) 5.911 B/op [Average]
[info]   (min, avg, max) = (131.286, 133.174, 135.436), stdev = 1.535
[info]   CI (99.9%): [127.263, 139.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   785.974 ±(99.9%) 688.798 MB/sec [Average]
[info]   (min, avg, max) = (654.161, 785.974, 983.925), stdev = 178.879
[info]   CI (99.9%): [97.176, 1474.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   139.954 ±(99.9%) 124.684 B/op [Average]
[info]   (min, avg, max) = (115.495, 139.954, 177.730), stdev = 32.380
[info]   CI (99.9%): [15.270, 264.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.850 ±(99.9%) 7.228 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.850, 4.208), stdev = 1.877
[info]   CI (99.9%): [≈ 0, 8.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.153 ±(99.9%) 1.306 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.153, 0.760), stdev = 0.339
[info]   CI (99.9%): [≈ 0, 1.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 12.000), stdev = 2.074
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 88.47% complete, ETA 00:10:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 873632.978 ops/s
[info] # Warmup Iteration   2: 7943744.861 ops/s
[info] # Warmup Iteration   3: 8533602.281 ops/s
[info] Iteration   1: 8647053.119 ops/s
[info]                  ·gc.alloc.rate:               302.224 MB/sec
[info]                  ·gc.alloc.rate.norm:          55.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46.559 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 8697567.610 ops/s
[info]                  ·gc.alloc.rate:               275.704 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.890 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59.126 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 8722663.433 ops/s
[info]                  ·gc.alloc.rate:      266.028 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 8725334.057 ops/s
[info]                  ·gc.alloc.rate:                   272.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 8652636.477 ops/s
[info]                  ·gc.alloc.rate:               277.037 MB/sec
[info]                  ·gc.alloc.rate.norm:          50.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59.554 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc":
[info]   8689050.939 ±(99.9%) 144188.853 ops/s [Average]
[info]   (min, avg, max) = (8647053.119, 8689050.939, 8725334.057), stdev = 37445.387
[info]   CI (99.9%): [8544862.087, 8833239.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   278.661 ±(99.9%) 53.305 MB/sec [Average]
[info]   (min, avg, max) = (266.028, 278.661, 302.224), stdev = 13.843
[info]   CI (99.9%): [225.356, 331.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   50.482 ±(99.9%) 10.345 B/op [Average]
[info]   (min, avg, max) = (48.000, 50.482, 55.009), stdev = 2.686
[info]   CI (99.9%): [40.137, 60.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   247.339 ±(99.9%) 545.478 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 247.339, 327.413), stdev = 141.659
[info]   CI (99.9%): [≈ 0, 792.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   44.835 ±(99.9%) 98.791 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 44.835, 59.554), stdev = 25.656
[info]   CI (99.9%): [≈ 0, 143.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.008), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.200, 4.000), stdev = 1.789
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson
[info] # Run progress: 88.71% complete, ETA 00:10:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5729.537 ops/s
[info] # Warmup Iteration   2: 225538.392 ops/s
[info] # Warmup Iteration   3: 471885.403 ops/s
[info] Iteration   1: 504888.365 ops/s
[info]                  ·gc.alloc.rate:                   2567.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              8002.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2602.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8113.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.938 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.159 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 511694.492 ops/s
[info]                  ·gc.alloc.rate:                   2575.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              7921.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2287.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7035.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 514247.009 ops/s
[info]                  ·gc.alloc.rate:                   2633.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              8060.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2644.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8094.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 509636.017 ops/s
[info]                  ·gc.alloc.rate:                   2618.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              8087.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2676.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8265.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 510178.728 ops/s
[info]                  ·gc.alloc.rate:                   2616.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              8070.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7277.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson":
[info]   510128.922 ±(99.9%) 13215.975 ops/s [Average]
[info]   (min, avg, max) = (504888.365, 510128.922, 514247.009), stdev = 3432.147
[info]   CI (99.9%): [496912.948, 523344.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2602.245 ±(99.9%) 112.224 MB/sec [Average]
[info]   (min, avg, max) = (2567.236, 2602.245, 2633.600), stdev = 29.144
[info]   CI (99.9%): [2490.022, 2714.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   8028.314 ±(99.9%) 261.750 B/op [Average]
[info]   (min, avg, max) = (7921.015, 8028.314, 8087.742), stdev = 67.976
[info]   CI (99.9%): [7766.564, 8290.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2514.217 ±(99.9%) 685.099 MB/sec [Average]
[info]   (min, avg, max) = (2287.598, 2514.217, 2676.578), stdev = 177.918
[info]   CI (99.9%): [1829.118, 3199.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   7757.507 ±(99.9%) 2152.105 B/op [Average]
[info]   (min, avg, max) = (7035.800, 7757.507, 8265.850), stdev = 558.895
[info]   CI (99.9%): [5605.402, 9909.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.629 ±(99.9%) 4.971 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.629, 2.938), stdev = 1.291
[info]   CI (99.9%): [≈ 0, 5.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.960 ±(99.9%) 15.499 B/op [Average]
[info]   (min, avg, max) = (0.064, 1.960, 9.159), stdev = 4.025
[info]   CI (99.9%): [≈ 0, 17.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.time":
[info]   62.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.400, 17.000), stdev = 2.881
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 88.94% complete, ETA 00:10:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9671.149 ops/s
[info] # Warmup Iteration   2: 68138.769 ops/s
[info] # Warmup Iteration   3: 89308.350 ops/s
[info] Iteration   1: 85038.270 ops/s
[info]                  ·gc.alloc.rate:                   2723.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              50409.205 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2777.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51399.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.189 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.027 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         65.000 ms
[info] Iteration   2: 94828.386 ops/s
[info]                  ·gc.alloc.rate:                   2619.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              43482.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2402.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39877.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      16.171 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 268.388 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 94391.421 ops/s
[info]                  ·gc.alloc.rate:                   2629.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              43832.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2446.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40785.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.736 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 95780.138 ops/s
[info]                  ·gc.alloc.rate:                   2650.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              43542.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2866.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47091.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.684 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 93696.128 ops/s
[info]                  ·gc.alloc.rate:                   2614.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              43918.459 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38536.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.399 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce":
[info]   92746.869 ±(99.9%) 16846.465 ops/s [Average]
[info]   (min, avg, max) = (85038.270, 92746.869, 95780.138), stdev = 4374.973
[info]   CI (99.9%): [75900.404, 109593.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2647.609 ±(99.9%) 172.167 MB/sec [Average]
[info]   (min, avg, max) = (2614.636, 2647.609, 2723.753), stdev = 44.711
[info]   CI (99.9%): [2475.443, 2819.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   45037.014 ±(99.9%) 11586.068 B/op [Average]
[info]   (min, avg, max) = (43482.453, 45037.014, 50409.205), stdev = 3008.865
[info]   CI (99.9%): [33450.946, 56623.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2557.439 ±(99.9%) 961.491 MB/sec [Average]
[info]   (min, avg, max) = (2294.228, 2557.439, 2866.536), stdev = 249.696
[info]   CI (99.9%): [1595.948, 3518.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   43538.057 ±(99.9%) 21127.443 B/op [Average]
[info]   (min, avg, max) = (38536.519, 43538.057, 51399.334), stdev = 5486.730
[info]   CI (99.9%): [22410.614, 64665.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3.918 ±(99.9%) 26.882 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 3.918, 16.171), stdev = 6.981
[info]   CI (99.9%): [≈ 0, 30.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   66.247 ±(99.9%) 445.655 B/op [Average]
[info]   (min, avg, max) = (0.684, 66.247, 268.388), stdev = 115.735
[info]   CI (99.9%): [≈ 0, 511.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 9.000), stdev = 0.837
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.time":
[info]   115.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 23.000, 65.000), stdev = 23.590
[info]   CI (99.9%): [115.000, 115.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.18% complete, ETA 00:09:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9777.229 ops/s
[info] # Warmup Iteration   2: 90313.790 ops/s
[info] # Warmup Iteration   3: 133591.493 ops/s
[info] Iteration   1: 144275.742 ops/s
[info]                  ·gc.alloc.rate:                   2260.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              24648.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21329.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.176 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 143659.792 ops/s
[info]                  ·gc.alloc.rate:                   2244.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              24586.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25226.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.825 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 145496.549 ops/s
[info]                  ·gc.alloc.rate:                   2288.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              24751.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2327.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25180.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.225 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 140726.078 ops/s
[info]                  ·gc.alloc.rate:                   2200.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              24606.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22502.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.698 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 144282.818 ops/s
[info]                  ·gc.alloc.rate:                   2300.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              25095.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2360.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25752.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.681 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala":
[info]   143688.196 ±(99.9%) 6873.124 ops/s [Average]
[info]   (min, avg, max) = (140726.078, 143688.196, 145496.549), stdev = 1784.928
[info]   CI (99.9%): [136815.072, 150561.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2258.694 ±(99.9%) 152.154 MB/sec [Average]
[info]   (min, avg, max) = (2200.281, 2258.694, 2300.634), stdev = 39.514
[info]   CI (99.9%): [2106.540, 2410.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24737.859 ±(99.9%) 808.632 B/op [Average]
[info]   (min, avg, max) = (24586.518, 24737.859, 25095.822), stdev = 209.999
[info]   CI (99.9%): [23929.227, 25546.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2191.834 ±(99.9%) 739.094 MB/sec [Average]
[info]   (min, avg, max) = (1955.785, 2191.834, 2360.877), stdev = 191.940
[info]   CI (99.9%): [1452.740, 2930.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23998.153 ±(99.9%) 7542.254 B/op [Average]
[info]   (min, avg, max) = (21329.211, 23998.153, 25752.968), stdev = 1958.699
[info]   CI (99.9%): [16455.899, 31540.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.212 ±(99.9%) 1.175 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.212, 0.750), stdev = 0.305
[info]   CI (99.9%): [≈ 0, 1.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.321 ±(99.9%) 12.805 B/op [Average]
[info]   (min, avg, max) = (0.225, 2.321, 8.176), stdev = 3.326
[info]   CI (99.9%): [≈ 0, 15.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.000, 11.000), stdev = 0.707
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.41% complete, ETA 00:09:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36750.838 ops/s
[info] # Warmup Iteration   2: 118646.936 ops/s
[info] # Warmup Iteration   3: 164778.118 ops/s
[info] Iteration   1: 172908.918 ops/s
[info]                  ·gc.alloc.rate:                   2612.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              23775.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2542.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23144.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.315 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.273 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         37.000 ms
[info] Iteration   2: 175192.376 ops/s
[info]                  ·gc.alloc.rate:                   2627.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              23596.591 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2563.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23021.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.892 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.891 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 177748.174 ops/s
[info]                  ·gc.alloc.rate:                   2706.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              23962.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2546.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22543.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.553 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 176267.783 ops/s
[info]                  ·gc.alloc.rate:                   2692.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              24036.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2586.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23095.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.372 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 176295.563 ops/s
[info]                  ·gc.alloc.rate:                   2680.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              23931.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2638.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23555.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala":
[info]   175682.563 ±(99.9%) 6920.023 ops/s [Average]
[info]   (min, avg, max) = (172908.918, 175682.563, 177748.174), stdev = 1797.108
[info]   CI (99.9%): [168762.540, 182602.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2663.808 ±(99.9%) 159.819 MB/sec [Average]
[info]   (min, avg, max) = (2612.077, 2663.808, 2706.364), stdev = 41.505
[info]   CI (99.9%): [2503.989, 2823.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   23860.492 ±(99.9%) 676.514 B/op [Average]
[info]   (min, avg, max) = (23596.591, 23860.492, 24036.552), stdev = 175.688
[info]   CI (99.9%): [23183.978, 24537.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2575.594 ±(99.9%) 151.390 MB/sec [Average]
[info]   (min, avg, max) = (2542.812, 2575.594, 2638.557), stdev = 39.315
[info]   CI (99.9%): [2424.205, 2726.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   23072.213 ±(99.9%) 1390.472 B/op [Average]
[info]   (min, avg, max) = (22543.679, 23072.213, 23555.821), stdev = 361.101
[info]   CI (99.9%): [21681.741, 24462.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   2.266 ±(99.9%) 12.244 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.266, 6.892), stdev = 3.180
[info]   CI (99.9%): [≈ 0, 14.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   20.455 ±(99.9%) 110.289 B/op [Average]
[info]   (min, avg, max) = (0.186, 20.455, 61.891), stdev = 28.642
[info]   CI (99.9%): [≈ 0, 130.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   93.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 18.600, 37.000), stdev = 11.824
[info]   CI (99.9%): [93.000, 93.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 89.65% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1898.976 ops/s
[info] # Warmup Iteration   2: 40627.483 ops/s
[info] # Warmup Iteration   3: 73073.301 ops/s
[info] Iteration   1: 74566.956 ops/s
[info]                  ·gc.alloc.rate:                   3347.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              70653.245 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3280.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69244.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.364 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 92.107 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 76688.754 ops/s
[info]                  ·gc.alloc.rate:                   3390.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              69571.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3313.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67988.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.954 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.578 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 79222.184 ops/s
[info]                  ·gc.alloc.rate:                   3455.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              68635.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3353.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66617.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.827 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 79286.117 ops/s
[info]                  ·gc.alloc.rate:                   3505.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              69576.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3378.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67056.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.653 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 79778.766 ops/s
[info]                  ·gc.alloc.rate:                   3540.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              69839.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3393.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66943.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.411 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson":
[info]   77908.555 ±(99.9%) 8561.772 ops/s [Average]
[info]   (min, avg, max) = (74566.956, 77908.555, 79778.766), stdev = 2223.465
[info]   CI (99.9%): [69346.784, 86470.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3447.641 ±(99.9%) 305.771 MB/sec [Average]
[info]   (min, avg, max) = (3347.562, 3447.641, 3540.219), stdev = 79.408
[info]   CI (99.9%): [3141.870, 3753.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   69655.459 ±(99.9%) 2778.388 B/op [Average]
[info]   (min, avg, max) = (68635.799, 69655.459, 70653.245), stdev = 721.539
[info]   CI (99.9%): [66877.071, 72433.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3343.791 ±(99.9%) 178.945 MB/sec [Average]
[info]   (min, avg, max) = (3280.804, 3343.791, 3393.420), stdev = 46.471
[info]   CI (99.9%): [3164.846, 3522.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   67570.188 ±(99.9%) 4102.482 B/op [Average]
[info]   (min, avg, max) = (66617.845, 67570.188, 69244.259), stdev = 1065.402
[info]   CI (99.9%): [63467.706, 71672.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.093 ±(99.9%) 7.202 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.093, 4.364), stdev = 1.870
[info]   CI (99.9%): [≈ 0, 8.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   22.915 ±(99.9%) 152.150 B/op [Average]
[info]   (min, avg, max) = (0.411, 22.915, 92.107), stdev = 39.513
[info]   CI (99.9%): [≈ 0, 175.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   50.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.000, 10.000), stdev = 0.001
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.200, 16.000), stdev = 1.095
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 89.88% complete, ETA 00:09:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39394.502 ops/s
[info] # Warmup Iteration   2: 209514.692 ops/s
[info] # Warmup Iteration   3: 237333.379 ops/s
[info] Iteration   1: 253642.725 ops/s
[info]                  ·gc.alloc.rate:                   1749.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              10854.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10131.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.078 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 252161.841 ops/s
[info]                  ·gc.alloc.rate:                   1722.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              10750.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1621.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10116.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.039 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 257484.585 ops/s
[info]                  ·gc.alloc.rate:                   1758.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              10745.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9939.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 256053.634 ops/s
[info]                  ·gc.alloc.rate:                   1781.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              10945.320 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12107.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 251972.722 ops/s
[info]                  ·gc.alloc.rate:                   1747.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              10916.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10360.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce":
[info]   254263.102 ±(99.9%) 9359.118 ops/s [Average]
[info]   (min, avg, max) = (251972.722, 254263.102, 257484.585), stdev = 2430.533
[info]   CI (99.9%): [244903.984, 263622.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1752.043 ±(99.9%) 81.158 MB/sec [Average]
[info]   (min, avg, max) = (1722.808, 1752.043, 1781.454), stdev = 21.076
[info]   CI (99.9%): [1670.886, 1833.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10842.449 ±(99.9%) 355.997 B/op [Average]
[info]   (min, avg, max) = (10745.376, 10842.449, 10945.320), stdev = 92.451
[info]   CI (99.9%): [10486.453, 11198.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1702.075 ±(99.9%) 580.915 MB/sec [Average]
[info]   (min, avg, max) = (1621.231, 1702.075, 1970.690), stdev = 150.862
[info]   CI (99.9%): [1121.160, 2282.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10531.159 ±(99.9%) 3442.843 B/op [Average]
[info]   (min, avg, max) = (9939.398, 10531.159, 12107.994), stdev = 894.095
[info]   CI (99.9%): [7088.316, 13974.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.927 ±(99.9%) 7.404 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.927, 4.365), stdev = 1.923
[info]   CI (99.9%): [≈ 0, 8.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.752 ±(99.9%) 45.927 B/op [Average]
[info]   (min, avg, max) = (0.130, 5.752, 27.078), stdev = 11.927
[info]   CI (99.9%): [≈ 0, 51.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 15.000), stdev = 3.391
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.12% complete, ETA 00:08:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103963.310 ops/s
[info] # Warmup Iteration   2: 706177.017 ops/s
[info] # Warmup Iteration   3: 784132.558 ops/s
[info] Iteration   1: 815325.960 ops/s
[info]                  ·gc.alloc.rate:                   481.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              929.331 B/op
[info]                  ·gc.churn.PS_Eden_Space:          319.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     616.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 793567.216 ops/s
[info]                  ·gc.alloc.rate:               487.640 MB/sec
[info]                  ·gc.alloc.rate.norm:          967.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:      640.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1269.603 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 791958.591 ops/s
[info]                  ·gc.alloc.rate:                   467.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              929.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     638.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 810206.342 ops/s
[info]                  ·gc.alloc.rate:                   490.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              952.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1251.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 815226.751 ops/s
[info]                  ·gc.alloc.rate:               483.330 MB/sec
[info]                  ·gc.alloc.rate.norm:          933.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 623.721 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala":
[info]   805256.972 ±(99.9%) 44689.647 ops/s [Average]
[info]   (min, avg, max) = (791958.591, 805256.972, 815325.960), stdev = 11605.759
[info]   CI (99.9%): [760567.325, 849946.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   482.087 ±(99.9%) 33.511 MB/sec [Average]
[info]   (min, avg, max) = (467.806, 482.087, 490.224), stdev = 8.703
[info]   CI (99.9%): [448.575, 515.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   942.214 ±(99.9%) 64.886 B/op [Average]
[info]   (min, avg, max) = (929.309, 942.214, 967.088), stdev = 16.851
[info]   CI (99.9%): [877.328, 1007.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   449.742 ±(99.9%) 677.057 MB/sec [Average]
[info]   (min, avg, max) = (319.412, 449.742, 644.503), stdev = 175.830
[info]   CI (99.9%): [≈ 0, 1126.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   880.116 ±(99.9%) 1338.654 B/op [Average]
[info]   (min, avg, max) = (616.574, 880.116, 1269.603), stdev = 347.644
[info]   CI (99.9%): [≈ 0, 2218.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.158 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.35% complete, ETA 00:08:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 241704.912 ops/s
[info] # Warmup Iteration   2: 675786.011 ops/s
[info] # Warmup Iteration   3: 812102.867 ops/s
[info] Iteration   1: 808579.258 ops/s
[info]                  ·gc.alloc.rate:                   447.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              871.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1268.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 819175.335 ops/s
[info]                  ·gc.alloc.rate:               450.346 MB/sec
[info]                  ·gc.alloc.rate.norm:          865.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 625.847 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 817106.962 ops/s
[info]                  ·gc.alloc.rate:                   446.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              859.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     628.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 807803.734 ops/s
[info]                  ·gc.alloc.rate:                   468.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              913.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1271.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 814470.292 ops/s
[info]                  ·gc.alloc.rate:               449.012 MB/sec
[info]                  ·gc.alloc.rate.norm:          867.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 630.757 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala":
[info]   813427.116 ±(99.9%) 19520.491 ops/s [Average]
[info]   (min, avg, max) = (807803.734, 813427.116, 819175.335), stdev = 5069.410
[info]   CI (99.9%): [793906.625, 832947.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   452.471 ±(99.9%) 35.163 MB/sec [Average]
[info]   (min, avg, max) = (446.480, 452.471, 468.607), stdev = 9.132
[info]   CI (99.9%): [417.308, 487.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   875.530 ±(99.9%) 82.363 B/op [Average]
[info]   (min, avg, max) = (859.977, 875.530, 913.017), stdev = 21.389
[info]   CI (99.9%): [793.167, 957.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   456.445 ±(99.9%) 687.328 MB/sec [Average]
[info]   (min, avg, max) = (325.756, 456.445, 652.477), stdev = 178.497
[info]   CI (99.9%): [≈ 0, 1143.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   884.802 ±(99.9%) 1352.884 B/op [Average]
[info]   (min, avg, max) = (625.847, 884.802, 1271.265), stdev = 351.340
[info]   CI (99.9%): [≈ 0, 2237.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.130 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.081), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 90.59% complete, ETA 00:08:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 329923.629 ops/s
[info] # Warmup Iteration   2: 581576.751 ops/s
[info] # Warmup Iteration   3: 818135.062 ops/s
[info] Iteration   1: 840035.928 ops/s
[info]                  ·gc.alloc.rate:      8.542 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 839151.640 ops/s
[info]                  ·gc.alloc.rate:      8.531 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 838316.256 ops/s
[info]                  ·gc.alloc.rate:      8.523 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 830027.161 ops/s
[info]                  ·gc.alloc.rate:                   10.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              20.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     485.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.173 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 838136.896 ops/s
[info]                  ·gc.alloc.rate:      8.525 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   837133.576 ±(99.9%) 15570.457 ops/s [Average]
[info]   (min, avg, max) = (830027.161, 837133.576, 840035.928), stdev = 4043.598
[info]   CI (99.9%): [821563.120, 852704.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   8.947 ±(99.9%) 3.585 MB/sec [Average]
[info]   (min, avg, max) = (8.523, 8.947, 10.612), stdev = 0.931
[info]   CI (99.9%): [5.361, 12.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.825 ±(99.9%) 7.098 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.825, 20.123), stdev = 1.843
[info]   CI (99.9%): [9.727, 23.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   51.161 ±(99.9%) 440.508 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.161, 255.803), stdev = 114.398
[info]   CI (99.9%): [≈ 0, 491.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   97.010 ±(99.9%) 835.284 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 97.010, 485.049), stdev = 216.920
[info]   CI (99.9%): [≈ 0, 932.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.229 ±(99.9%) 1.974 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.229, 1.146), stdev = 0.513
[info]   CI (99.9%): [≈ 0, 2.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.435 ±(99.9%) 3.742 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.435, 2.173), stdev = 0.972
[info]   CI (99.9%): [≈ 0, 4.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 5.000), stdev = 2.236
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 90.82% complete, ETA 00:08:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6492.428 ops/s
[info] # Warmup Iteration   2: 23436.734 ops/s
[info] # Warmup Iteration   3: 31857.350 ops/s
[info] Iteration   1: 38211.814 ops/s
[info]                  ·gc.alloc.rate:                   1762.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              72594.721 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1592.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65601.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.525 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 186.375 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 35029.558 ops/s
[info]                  ·gc.alloc.rate:                   1960.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              88045.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1911.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85864.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.949 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87.566 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 38051.750 ops/s
[info]                  ·gc.alloc.rate:                   1829.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              75684.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1914.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79170.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.797 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 115.674 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 37105.777 ops/s
[info]                  ·gc.alloc.rate:                   1868.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              79214.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1930.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81855.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.919 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 166.175 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 38504.644 ops/s
[info]                  ·gc.alloc.rate:                   1749.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              71495.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66368.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.553 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson":
[info]   37380.709 ±(99.9%) 5448.274 ops/s [Average]
[info]   (min, avg, max) = (35029.558, 37380.709, 38504.644), stdev = 1414.900
[info]   CI (99.9%): [31932.434, 42828.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1834.044 ±(99.9%) 329.945 MB/sec [Average]
[info]   (min, avg, max) = (1749.332, 1834.044, 1960.048), stdev = 85.686
[info]   CI (99.9%): [1504.099, 2163.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   77406.913 ±(99.9%) 25652.718 B/op [Average]
[info]   (min, avg, max) = (71495.424, 77406.913, 88045.975), stdev = 6661.929
[info]   CI (99.9%): [51754.195, 103059.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1794.602 ±(99.9%) 656.897 MB/sec [Average]
[info]   (min, avg, max) = (1592.700, 1794.602, 1930.674), stdev = 170.594
[info]   CI (99.9%): [1137.706, 2451.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   75772.036 ±(99.9%) 35621.154 B/op [Average]
[info]   (min, avg, max) = (65601.162, 75772.036, 85864.942), stdev = 9250.701
[info]   CI (99.9%): [40150.883, 111393.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.651 ±(99.9%) 6.762 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 2.651, 4.525), stdev = 1.756
[info]   CI (99.9%): [≈ 0, 9.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   111.668 ±(99.9%) 279.372 B/op [Average]
[info]   (min, avg, max) = (2.553, 111.668, 186.375), stdev = 72.552
[info]   CI (99.9%): [≈ 0, 391.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 13.200, 21.000), stdev = 5.675
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 91.06% complete, ETA 00:08:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1013750.316 ops/s
[info] # Warmup Iteration   2: 4109031.641 ops/s
[info] # Warmup Iteration   3: 3919955.069 ops/s
[info] Iteration   1: 4246854.981 ops/s
[info]                  ·gc.alloc.rate:                   3278.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              1214.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3278.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1214.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 4241191.339 ops/s
[info]                  ·gc.alloc.rate:                   3289.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              1220.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2990.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1109.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 4136041.373 ops/s
[info]                  ·gc.alloc.rate:                   3234.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              1230.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3360.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1278.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 4207317.946 ops/s
[info]                  ·gc.alloc.rate:                   3253.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              1217.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3044.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1139.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 4221217.384 ops/s
[info]                  ·gc.alloc.rate:                   3313.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              1234.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3392.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1263.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce":
[info]   4210524.605 ±(99.9%) 171480.321 ops/s [Average]
[info]   (min, avg, max) = (4136041.373, 4210524.605, 4246854.981), stdev = 44532.895
[info]   CI (99.9%): [4039044.283, 4382004.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   3273.912 ±(99.9%) 118.840 MB/sec [Average]
[info]   (min, avg, max) = (3234.259, 3273.912, 3313.453), stdev = 30.862
[info]   CI (99.9%): [3155.072, 3392.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1223.557 ±(99.9%) 32.952 B/op [Average]
[info]   (min, avg, max) = (1214.874, 1223.557, 1234.444), stdev = 8.558
[info]   CI (99.9%): [1190.605, 1256.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3213.364 ±(99.9%) 709.908 MB/sec [Average]
[info]   (min, avg, max) = (2990.696, 3213.364, 3392.293), stdev = 184.361
[info]   CI (99.9%): [2503.455, 3923.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1201.226 ±(99.9%) 287.836 B/op [Average]
[info]   (min, avg, max) = (1109.775, 1201.226, 1278.778), stdev = 74.750
[info]   CI (99.9%): [913.390, 1489.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.079, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.030, 0.048), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.600, 18.000), stdev = 2.702
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 91.29% complete, ETA 00:07:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.589 ops/s
[info] # Warmup Iteration   2: 5514464.944 ops/s
[info] # Warmup Iteration   3: 6215071.197 ops/s
[info] Iteration   1: 6345975.304 ops/s
[info]                  ·gc.alloc.rate:                   1234.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              306.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     323.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 6427759.156 ops/s
[info]                  ·gc.alloc.rate:                   1231.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              301.462 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     239.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.575 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.630 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 6398590.967 ops/s
[info]                  ·gc.alloc.rate:                   1255.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              308.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     320.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.283 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.562 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6388164.111 ops/s
[info]                  ·gc.alloc.rate:                   1247.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     319.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 6509102.885 ops/s
[info]                  ·gc.alloc.rate:                   1252.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     314.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava":
[info]   6413918.485 ±(99.9%) 233957.363 ops/s [Average]
[info]   (min, avg, max) = (6345975.304, 6413918.485, 6509102.885), stdev = 60757.984
[info]   CI (99.9%): [6179961.122, 6647875.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1244.093 ±(99.9%) 41.777 MB/sec [Average]
[info]   (min, avg, max) = (1231.315, 1244.093, 1255.510), stdev = 10.849
[info]   CI (99.9%): [1202.316, 1285.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   305.245 ±(99.9%) 11.810 B/op [Average]
[info]   (min, avg, max) = (301.462, 305.245, 308.777), stdev = 3.067
[info]   CI (99.9%): [293.435, 317.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1236.105 ±(99.9%) 551.400 MB/sec [Average]
[info]   (min, avg, max) = (980.001, 1236.105, 1303.371), stdev = 143.197
[info]   CI (99.9%): [684.705, 1787.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   303.329 ±(99.9%) 137.029 B/op [Average]
[info]   (min, avg, max) = (239.933, 303.329, 323.233), stdev = 35.586
[info]   CI (99.9%): [166.300, 440.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.985 ±(99.9%) 5.091 MB/sec [Average]
[info]   (min, avg, max) = (0.005, 0.985, 2.575), stdev = 1.322
[info]   CI (99.9%): [≈ 0, 6.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.242 ±(99.9%) 1.249 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.242, 0.630), stdev = 0.324
[info]   CI (99.9%): [≈ 0, 1.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 15.000), stdev = 3.768
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.53% complete, ETA 00:07:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 804723.229 ops/s
[info] # Warmup Iteration   2: 4828243.265 ops/s
[info] # Warmup Iteration   3: 5030238.660 ops/s
[info] Iteration   1: 5097038.707 ops/s
[info]                  ·gc.alloc.rate:                   1040.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              321.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     301.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 5085099.569 ops/s
[info]                  ·gc.alloc.rate:                   1031.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              319.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     303.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.718 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.151 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 5181100.445 ops/s
[info]                  ·gc.alloc.rate:                   1049.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              318.677 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     296.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 4773008.008 ops/s
[info]                  ·gc.alloc.rate:                        1001.002 MB/sec
[info]                  ·gc.alloc.rate.norm:                   330.088 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.025 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.008 B/op
[info]                  ·gc.churn.Metaspace:                   0.070 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:               995.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          328.172 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.336 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             0.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      0.144 B/op
[info]                  ·gc.count:                             5.000 counts
[info]                  ·gc.time:                              44.000 ms
[info] Iteration   5: 5170786.440 ops/s
[info]                  ·gc.alloc.rate:                   1061.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              323.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     296.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala":
[info]   5061406.634 ±(99.9%) 642305.753 ops/s [Average]
[info]   (min, avg, max) = (4773008.008, 5061406.634, 5181100.445), stdev = 166804.764
[info]   CI (99.9%): [4419100.881, 5703712.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1036.688 ±(99.9%) 87.683 MB/sec [Average]
[info]   (min, avg, max) = (1001.002, 1036.688, 1061.346), stdev = 22.771
[info]   CI (99.9%): [949.005, 1124.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   322.465 ±(99.9%) 17.676 B/op [Average]
[info]   (min, avg, max) = (318.677, 322.465, 330.088), stdev = 4.590
[info]   CI (99.9%): [304.789, 340.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.005 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.025), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.002 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.008), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.014 ±(99.9%) 0.121 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.070), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.005 ±(99.9%) 0.040 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.023), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   980.310 ±(99.9%) 33.300 MB/sec [Average]
[info]   (min, avg, max) = (972.948, 980.310, 995.191), stdev = 8.648
[info]   CI (99.9%): [947.010, 1013.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   305.175 ±(99.9%) 50.863 B/op [Average]
[info]   (min, avg, max) = (296.138, 305.175, 328.172), stdev = 13.209
[info]   CI (99.9%): [254.312, 356.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.467 ±(99.9%) 4.023 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.467, 2.336), stdev = 1.045
[info]   CI (99.9%): [≈ 0, 4.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   0.154 ±(99.9%) 1.326 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.154, 0.770), stdev = 0.344
[info]   CI (99.9%): [≈ 0, 1.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.046 ±(99.9%) 5.975 MB/sec [Average]
[info]   (min, avg, max) = (0.013, 1.046, 3.718), stdev = 1.552
[info]   CI (99.9%): [≈ 0, 7.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.324 ±(99.9%) 1.846 B/op [Average]
[info]   (min, avg, max) = (0.004, 0.324, 1.151), stdev = 0.479
[info]   CI (99.9%): [≈ 0, 2.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   79.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 15.800, 44.000), stdev = 16.331
[info]   CI (99.9%): [79.000, 79.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.76% complete, ETA 00:07:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3219552.253 ops/s
[info] # Warmup Iteration   2: 5948025.977 ops/s
[info] # Warmup Iteration   3: 6421719.596 ops/s
[info] Iteration   1: 6595774.048 ops/s
[info]                  ·gc.alloc.rate:                   1269.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.857 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 6590853.211 ops/s
[info]                  ·gc.alloc.rate:                   1268.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     315.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.345 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.798 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 6428444.216 ops/s
[info]                  ·gc.alloc.rate:                   1306.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              319.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     321.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6515827.174 ops/s
[info]                  ·gc.alloc.rate:                   1263.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     316.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 6639895.720 ops/s
[info]                  ·gc.alloc.rate:                   1277.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     312.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala":
[info]   6554158.874 ±(99.9%) 320452.466 ops/s [Average]
[info]   (min, avg, max) = (6428444.216, 6554158.874, 6639895.720), stdev = 83220.488
[info]   CI (99.9%): [6233706.408, 6874611.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1276.904 ±(99.9%) 66.397 MB/sec [Average]
[info]   (min, avg, max) = (1263.081, 1276.904, 1306.432), stdev = 17.243
[info]   CI (99.9%): [1210.507, 1343.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   306.643 ±(99.9%) 28.601 B/op [Average]
[info]   (min, avg, max) = (302.685, 306.643, 319.809), stdev = 7.428
[info]   CI (99.9%): [278.041, 335.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1250.132 ±(99.9%) 561.320 MB/sec [Average]
[info]   (min, avg, max) = (989.437, 1250.132, 1320.215), stdev = 145.773
[info]   CI (99.9%): [688.811, 1811.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   300.281 ±(99.9%) 138.849 B/op [Average]
[info]   (min, avg, max) = (236.052, 300.281, 321.295), stdev = 36.059
[info]   CI (99.9%): [161.432, 439.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.823 ±(99.9%) 5.498 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.823, 3.345), stdev = 1.428
[info]   CI (99.9%): [≈ 0, 6.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.197 ±(99.9%) 1.312 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.197, 0.798), stdev = 0.341
[info]   CI (99.9%): [≈ 0, 1.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 11.000), stdev = 2.950
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 92.00% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1209217.030 ops/s
[info] # Warmup Iteration   2: 4789735.965 ops/s
[info] # Warmup Iteration   3: 5304790.968 ops/s
[info] Iteration   1: 5315720.289 ops/s
[info]                  ·gc.alloc.rate:                   1027.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     290.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 5204168.757 ops/s
[info]                  ·gc.alloc.rate:                   1032.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     297.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.260 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 5360047.959 ops/s
[info]                  ·gc.alloc.rate:                   1043.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              306.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     382.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.446 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 5418979.796 ops/s
[info]                  ·gc.alloc.rate:                   1046.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     282.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5389576.064 ops/s
[info]                  ·gc.alloc.rate:                   1039.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     284.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson":
[info]   5337698.573 ±(99.9%) 322804.002 ops/s [Average]
[info]   (min, avg, max) = (5204168.757, 5337698.573, 5418979.796), stdev = 83831.174
[info]   CI (99.9%): [5014894.571, 5660502.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1037.747 ±(99.9%) 30.275 MB/sec [Average]
[info]   (min, avg, max) = (1027.040, 1037.747, 1046.282), stdev = 7.862
[info]   CI (99.9%): [1007.472, 1068.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   306.014 ±(99.9%) 14.077 B/op [Average]
[info]   (min, avg, max) = (303.600, 306.014, 312.262), stdev = 3.656
[info]   CI (99.9%): [291.937, 320.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1043.302 ±(99.9%) 562.057 MB/sec [Average]
[info]   (min, avg, max) = (973.869, 1043.302, 1304.303), stdev = 145.965
[info]   CI (99.9%): [481.244, 1605.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   307.604 ±(99.9%) 163.771 B/op [Average]
[info]   (min, avg, max) = (282.851, 307.604, 382.996), stdev = 42.531
[info]   CI (99.9%): [143.834, 471.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.154 ±(99.9%) 6.945 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.154, 4.166), stdev = 1.804
[info]   CI (99.9%): [≈ 0, 8.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.346 ±(99.9%) 2.098 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.346, 1.260), stdev = 0.545
[info]   CI (99.9%): [≈ 0, 2.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 12.000), stdev = 3.808
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 92.24% complete, ETA 00:07:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 730331.302 ops/s
[info] # Warmup Iteration   2: 2991334.832 ops/s
[info] # Warmup Iteration   3: 3515377.525 ops/s
[info] Iteration   1: 3574611.812 ops/s
[info]                  ·gc.alloc.rate:                   1969.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              866.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1966.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     865.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.897 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 3604003.983 ops/s
[info]                  ·gc.alloc.rate:                   1975.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              862.917 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     853.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3603080.359 ops/s
[info]                  ·gc.alloc.rate:               1994.985 MB/sec
[info]                  ·gc.alloc.rate.norm:          871.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1968.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 859.717 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 3638227.150 ops/s
[info]                  ·gc.alloc.rate:                   2007.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              868.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     715.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3621150.104 ops/s
[info]                  ·gc.alloc.rate:                   2012.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              874.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     870.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce":
[info]   3608214.682 ±(99.9%) 91149.661 ops/s [Average]
[info]   (min, avg, max) = (3574611.812, 3608214.682, 3638227.150), stdev = 23671.278
[info]   CI (99.9%): [3517065.020, 3699364.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1992.095 ±(99.9%) 72.358 MB/sec [Average]
[info]   (min, avg, max) = (1969.714, 1992.095, 2012.138), stdev = 18.791
[info]   CI (99.9%): [1919.737, 2064.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   868.821 ±(99.9%) 16.972 B/op [Average]
[info]   (min, avg, max) = (862.917, 868.821, 874.524), stdev = 4.408
[info]   CI (99.9%): [851.849, 885.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1909.406 ±(99.9%) 551.876 MB/sec [Average]
[info]   (min, avg, max) = (1654.992, 1909.406, 2002.429), stdev = 143.320
[info]   CI (99.9%): [1357.531, 2461.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   833.002 ±(99.9%) 253.090 B/op [Average]
[info]   (min, avg, max) = (715.943, 833.002, 870.304), stdev = 65.727
[info]   CI (99.9%): [579.912, 1086.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.883 ±(99.9%) 7.380 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.883, 4.311), stdev = 1.917
[info]   CI (99.9%): [≈ 0, 8.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.388 ±(99.9%) 3.248 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.388, 1.897), stdev = 0.843
[info]   CI (99.9%): [≈ 0, 3.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.000, 14.000), stdev = 3.000
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 92.47% complete, ETA 00:06:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.774 ops/s
[info] # Warmup Iteration   2: 5917184.488 ops/s
[info] # Warmup Iteration   3: 6425766.662 ops/s
[info] Iteration   1: 6806119.442 ops/s
[info]                  ·gc.alloc.rate:                   677.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 6621009.421 ops/s
[info]                  ·gc.alloc.rate:                   698.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              165.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     154.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 6660948.965 ops/s
[info]                  ·gc.alloc.rate:                   676.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              159.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6788545.401 ops/s
[info]                  ·gc.alloc.rate:                   678.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 6724517.794 ops/s
[info]                  ·gc.alloc.rate:                   667.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.214 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     152.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.902 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.913 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava":
[info]   6720228.205 ±(99.9%) 306974.700 ops/s [Average]
[info]   (min, avg, max) = (6621009.421, 6720228.205, 6806119.442), stdev = 79720.355
[info]   CI (99.9%): [6413253.505, 7027202.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   679.690 ±(99.9%) 43.117 MB/sec [Average]
[info]   (min, avg, max) = (667.625, 679.690, 698.114), stdev = 11.197
[info]   CI (99.9%): [636.572, 722.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   159.185 ±(99.9%) 15.479 B/op [Average]
[info]   (min, avg, max) = (156.214, 159.185, 165.915), stdev = 4.020
[info]   CI (99.9%): [143.706, 174.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   650.550 ±(99.9%) 7.121 MB/sec [Average]
[info]   (min, avg, max) = (648.184, 650.550, 653.008), stdev = 1.849
[info]   CI (99.9%): [643.429, 657.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   152.347 ±(99.9%) 7.149 B/op [Average]
[info]   (min, avg, max) = (149.886, 152.347, 154.392), stdev = 1.857
[info]   CI (99.9%): [145.198, 159.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.802 ±(99.9%) 6.673 MB/sec [Average]
[info]   (min, avg, max) = (0.001, 0.802, 3.902), stdev = 1.733
[info]   CI (99.9%): [≈ 0, 7.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.188 ±(99.9%) 1.561 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.188, 0.913), stdev = 0.405
[info]   CI (99.9%): [≈ 0, 1.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.71% complete, ETA 00:06:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1662823.222 ops/s
[info] # Warmup Iteration   2: 5670767.462 ops/s
[info] # Warmup Iteration   3: 6369269.758 ops/s
[info] Iteration   1: 6368472.299 ops/s
[info]                  ·gc.alloc.rate:                   634.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     160.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 6369415.658 ops/s
[info]                  ·gc.alloc.rate:                   638.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     160.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 6299647.193 ops/s
[info]                  ·gc.alloc.rate:                   628.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 6323771.028 ops/s
[info]                  ·gc.alloc.rate:               656.069 MB/sec
[info]                  ·gc.alloc.rate.norm:          163.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 162.226 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 6333616.927 ops/s
[info]                  ·gc.alloc.rate:                   634.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.968 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala":
[info]   6338984.621 ±(99.9%) 115571.770 ops/s [Average]
[info]   (min, avg, max) = (6299647.193, 6338984.621, 6369415.658), stdev = 30013.622
[info]   CI (99.9%): [6223412.851, 6454556.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   638.532 ±(99.9%) 40.134 MB/sec [Average]
[info]   (min, avg, max) = (628.743, 638.532, 656.069), stdev = 10.423
[info]   CI (99.9%): [598.398, 678.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   158.521 ±(99.9%) 10.318 B/op [Average]
[info]   (min, avg, max) = (156.818, 158.521, 163.257), stdev = 2.680
[info]   CI (99.9%): [148.203, 168.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   650.701 ±(99.9%) 7.044 MB/sec [Average]
[info]   (min, avg, max) = (648.282, 650.701, 652.829), stdev = 1.829
[info]   CI (99.9%): [643.658, 657.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   161.544 ±(99.9%) 4.311 B/op [Average]
[info]   (min, avg, max) = (160.182, 161.544, 162.601), stdev = 1.120
[info]   CI (99.9%): [157.233, 165.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.793 ±(99.9%) 6.678 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.793, 3.895), stdev = 1.734
[info]   CI (99.9%): [≈ 0, 7.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.197 ±(99.9%) 1.659 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.197, 0.968), stdev = 0.431
[info]   CI (99.9%): [≈ 0, 1.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.94% complete, ETA 00:06:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3035208.252 ops/s
[info] # Warmup Iteration   2: 6432120.430 ops/s
[info] # Warmup Iteration   3: 6907221.167 ops/s
[info] Iteration   1: 7135205.982 ops/s
[info]                  ·gc.alloc.rate:               707.955 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 144.734 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 6879383.678 ops/s
[info]                  ·gc.alloc.rate:                   687.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 6849894.151 ops/s
[info]                  ·gc.alloc.rate:                   705.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              162.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6881406.665 ops/s
[info]                  ·gc.alloc.rate:               684.915 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 150.676 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 6909616.074 ops/s
[info]                  ·gc.alloc.rate:                   684.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.573 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.814 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala":
[info]   6931101.310 ±(99.9%) 446820.757 ops/s [Average]
[info]   (min, avg, max) = (6849894.151, 6931101.310, 7135205.982), stdev = 116037.932
[info]   CI (99.9%): [6484280.553, 7377922.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   693.986 ±(99.9%) 45.376 MB/sec [Average]
[info]   (min, avg, max) = (684.271, 693.986, 707.955), stdev = 11.784
[info]   CI (99.9%): [648.610, 739.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   157.600 ±(99.9%) 9.949 B/op [Average]
[info]   (min, avg, max) = (155.865, 157.600, 162.134), stdev = 2.584
[info]   CI (99.9%): [147.651, 167.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   657.886 ±(99.9%) 5.315 MB/sec [Average]
[info]   (min, avg, max) = (656.140, 657.886, 659.474), stdev = 1.380
[info]   CI (99.9%): [652.571, 663.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   149.422 ±(99.9%) 10.212 B/op [Average]
[info]   (min, avg, max) = (144.734, 149.422, 151.221), stdev = 2.652
[info]   CI (99.9%): [139.211, 159.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.727 ±(99.9%) 6.126 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.727, 3.573), stdev = 1.591
[info]   CI (99.9%): [≈ 0, 6.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 1.395 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.166, 0.814), stdev = 0.362
[info]   CI (99.9%): [≈ 0, 1.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 93.18% complete, ETA 00:06:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3820221.315 ops/s
[info] # Warmup Iteration   2: 6780312.816 ops/s
[info] # Warmup Iteration   3: 7376755.197 ops/s
[info] Iteration   1: 7371654.154 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 7351089.337 ops/s
[info]                  ·gc.alloc.rate:      0.833 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.178 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 7353067.210 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 7362804.164 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 7356520.474 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   7359027.068 ±(99.9%) 32131.555 ops/s [Average]
[info]   (min, avg, max) = (7351089.337, 7359027.068, 7371654.154), stdev = 8344.463
[info]   CI (99.9%): [7326895.513, 7391158.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.167 ±(99.9%) 1.435 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.167, 0.833), stdev = 0.373
[info]   CI (99.9%): [≈ 0, 1.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.036 ±(99.9%) 0.307 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.036, 0.178), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 93.41% complete, ETA 00:05:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1351580.965 ops/s
[info] # Warmup Iteration   2: 4229347.940 ops/s
[info] # Warmup Iteration   3: 6340171.296 ops/s
[info] Iteration   1: 6344999.051 ops/s
[info]                  ·gc.alloc.rate:               627.215 MB/sec
[info]                  ·gc.alloc.rate.norm:          155.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 162.266 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 6335704.801 ops/s
[info]                  ·gc.alloc.rate:               632.037 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 162.670 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   3: 6344031.876 ops/s
[info]                  ·gc.alloc.rate:               637.482 MB/sec
[info]                  ·gc.alloc.rate.norm:          158.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 81.311 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 6360589.858 ops/s
[info]                  ·gc.alloc.rate:                   635.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.424 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.847 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 6379231.789 ops/s
[info]                  ·gc.alloc.rate:                   632.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     161.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson":
[info]   6352911.475 ±(99.9%) 66395.416 ops/s [Average]
[info]   (min, avg, max) = (6335704.801, 6352911.475, 6379231.789), stdev = 17242.679
[info]   CI (99.9%): [6286516.059, 6419306.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   633.000 ±(99.9%) 14.978 MB/sec [Average]
[info]   (min, avg, max) = (627.215, 633.000, 637.482), stdev = 3.890
[info]   CI (99.9%): [618.022, 647.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   156.810 ±(99.9%) 3.863 B/op [Average]
[info]   (min, avg, max) = (155.581, 156.810, 158.152), stdev = 1.003
[info]   CI (99.9%): [152.946, 160.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   589.194 ±(99.9%) 562.800 MB/sec [Average]
[info]   (min, avg, max) = (327.748, 589.194, 656.145), stdev = 146.157
[info]   CI (99.9%): [26.394, 1151.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   145.935 ±(99.9%) 139.127 B/op [Average]
[info]   (min, avg, max) = (81.311, 145.935, 162.670), stdev = 36.131
[info]   CI (99.9%): [6.807, 285.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.889 ±(99.9%) 5.717 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.889, 3.424), stdev = 1.485
[info]   CI (99.9%): [≈ 0, 6.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.220 ±(99.9%) 1.415 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.220, 0.847), stdev = 0.367
[info]   CI (99.9%): [≈ 0, 1.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 9.000), stdev = 2.280
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 93.65% complete, ETA 00:05:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 313405.883 ops/s
[info] # Warmup Iteration   2: 1389638.389 ops/s
[info] # Warmup Iteration   3: 1701145.067 ops/s
[info] Iteration   1: 1738138.695 ops/s
[info]                  ·gc.alloc.rate:                   2250.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              2038.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2269.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2054.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.153 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.855 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 1758058.176 ops/s
[info]                  ·gc.alloc.rate:                   2265.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              2027.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2264.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2027.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1741104.556 ops/s
[info]                  ·gc.alloc.rate:                   2263.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              2046.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1772.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1722834.142 ops/s
[info]                  ·gc.alloc.rate:                   2248.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              2054.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2316.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2116.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1747353.736 ops/s
[info]                  ·gc.alloc.rate:                   2235.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              2013.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1806.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce":
[info]   1741497.861 ±(99.9%) 49772.771 ops/s [Average]
[info]   (min, avg, max) = (1722834.142, 1741497.861, 1758058.176), stdev = 12925.831
[info]   CI (99.9%): [1691725.090, 1791270.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2252.757 ±(99.9%) 45.999 MB/sec [Average]
[info]   (min, avg, max) = (2235.808, 2252.757, 2265.012), stdev = 11.946
[info]   CI (99.9%): [2206.758, 2298.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2035.823 ±(99.9%) 61.847 B/op [Average]
[info]   (min, avg, max) = (2013.050, 2035.823, 2054.173), stdev = 16.062
[info]   CI (99.9%): [1973.976, 2097.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2163.511 ±(99.9%) 640.624 MB/sec [Average]
[info]   (min, avg, max) = (1960.427, 2163.511, 2316.520), stdev = 166.368
[info]   CI (99.9%): [1522.886, 2804.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1955.449 ±(99.9%) 598.536 B/op [Average]
[info]   (min, avg, max) = (1772.141, 1955.449, 2116.217), stdev = 155.438
[info]   CI (99.9%): [1356.914, 2553.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.660 ±(99.9%) 5.367 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.660, 3.153), stdev = 1.394
[info]   CI (99.9%): [≈ 0, 6.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.597 ±(99.9%) 4.860 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.597, 2.855), stdev = 1.262
[info]   CI (99.9%): [≈ 0, 5.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.000, 16.000), stdev = 3.536
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 93.88% complete, ETA 00:05:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.528 ops/s
[info] # Warmup Iteration   2: 2644233.220 ops/s
[info] # Warmup Iteration   3: 2904519.447 ops/s
[info] Iteration   1: 2913191.234 ops/s
[info]                  ·gc.alloc.rate:               556.365 MB/sec
[info]                  ·gc.alloc.rate.norm:          300.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 175.992 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2914515.868 ops/s
[info]                  ·gc.alloc.rate:                   570.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     351.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2989034.885 ops/s
[info]                  ·gc.alloc.rate:                   577.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     343.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 3017512.154 ops/s
[info]                  ·gc.alloc.rate:               577.495 MB/sec
[info]                  ·gc.alloc.rate.norm:          301.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 170.253 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 2995912.077 ops/s
[info]                  ·gc.alloc.rate:               582.078 MB/sec
[info]                  ·gc.alloc.rate.norm:          305.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 342.953 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava":
[info]   2966033.244 ±(99.9%) 187837.004 ops/s [Average]
[info]   (min, avg, max) = (2913191.234, 2966033.244, 3017512.154), stdev = 48780.673
[info]   CI (99.9%): [2778196.240, 3153870.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   572.840 ±(99.9%) 39.048 MB/sec [Average]
[info]   (min, avg, max) = (556.365, 572.840, 582.078), stdev = 10.141
[info]   CI (99.9%): [533.792, 611.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   303.940 ±(99.9%) 12.032 B/op [Average]
[info]   (min, avg, max) = (300.570, 303.940, 307.963), stdev = 3.125
[info]   CI (99.9%): [291.908, 315.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   521.782 ±(99.9%) 687.655 MB/sec [Average]
[info]   (min, avg, max) = (325.767, 521.782, 652.919), stdev = 178.582
[info]   CI (99.9%): [≈ 0, 1209.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   276.884 ±(99.9%) 365.074 B/op [Average]
[info]   (min, avg, max) = (170.253, 276.884, 351.823), stdev = 94.809
[info]   CI (99.9%): [≈ 0, 641.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.009 ±(99.9%) 0.068 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.041), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 8.000), stdev = 2.168
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.12% complete, ETA 00:05:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89353.597 ops/s
[info] # Warmup Iteration   2: 1665855.900 ops/s
[info] # Warmup Iteration   3: 1637531.587 ops/s
[info] Iteration   1: 1891676.331 ops/s
[info]                  ·gc.alloc.rate:                   386.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              321.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     538.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.346 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.118 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1899022.612 ops/s
[info]                  ·gc.alloc.rate:               383.214 MB/sec
[info]                  ·gc.alloc.rate.norm:          317.526 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 269.417 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 1897634.807 ops/s
[info]                  ·gc.alloc.rate:                   383.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              317.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     269.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1900604.912 ops/s
[info]                  ·gc.alloc.rate:                   388.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              321.331 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     269.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1922221.389 ops/s
[info]                  ·gc.alloc.rate:               390.486 MB/sec
[info]                  ·gc.alloc.rate.norm:          319.673 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 266.437 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala":
[info]   1902232.010 ±(99.9%) 44950.376 ops/s [Average]
[info]   (min, avg, max) = (1891676.331, 1902232.010, 1922221.389), stdev = 11673.470
[info]   CI (99.9%): [1857281.635, 1947182.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   386.261 ±(99.9%) 12.126 MB/sec [Average]
[info]   (min, avg, max) = (383.200, 386.261, 390.486), stdev = 3.149
[info]   CI (99.9%): [374.135, 398.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   319.471 ±(99.9%) 6.766 B/op [Average]
[info]   (min, avg, max) = (317.526, 319.471, 321.331), stdev = 1.757
[info]   CI (99.9%): [312.705, 326.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   389.875 ±(99.9%) 556.256 MB/sec [Average]
[info]   (min, avg, max) = (325.071, 389.875, 648.289), stdev = 144.458
[info]   CI (99.9%): [≈ 0, 946.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   322.710 ±(99.9%) 464.782 B/op [Average]
[info]   (min, avg, max) = (266.437, 322.710, 538.615), stdev = 120.702
[info]   CI (99.9%): [≈ 0, 787.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.279 ±(99.9%) 2.297 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.279, 1.346), stdev = 0.597
[info]   CI (99.9%): [≈ 0, 2.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.232 ±(99.9%) 1.909 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.232, 1.118), stdev = 0.496
[info]   CI (99.9%): [≈ 0, 2.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 8.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.35% complete, ETA 00:05:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 891055.195 ops/s
[info] # Warmup Iteration   2: 2175030.548 ops/s
[info] # Warmup Iteration   3: 2235611.464 ops/s
[info] Iteration   1: 2240452.558 ops/s
[info]                  ·gc.alloc.rate:               434.387 MB/sec
[info]                  ·gc.alloc.rate.norm:          305.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 230.929 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2281487.950 ops/s
[info]                  ·gc.alloc.rate:               435.465 MB/sec
[info]                  ·gc.alloc.rate.norm:          300.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 226.781 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 2301674.394 ops/s
[info]                  ·gc.alloc.rate:               447.374 MB/sec
[info]                  ·gc.alloc.rate.norm:          305.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 450.061 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 2312001.061 ops/s
[info]                  ·gc.alloc.rate:                   443.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              301.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     224.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2310409.562 ops/s
[info]                  ·gc.alloc.rate:               446.449 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 224.634 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala":
[info]   2289205.105 ±(99.9%) 114894.031 ops/s [Average]
[info]   (min, avg, max) = (2240452.558, 2289205.105, 2312001.061), stdev = 29837.615
[info]   CI (99.9%): [2174311.074, 2404099.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   441.351 ±(99.9%) 23.454 MB/sec [Average]
[info]   (min, avg, max) = (434.387, 441.351, 447.374), stdev = 6.091
[info]   CI (99.9%): [417.898, 464.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   303.428 ±(99.9%) 9.052 B/op [Average]
[info]   (min, avg, max) = (300.394, 303.428, 305.913), stdev = 2.351
[info]   CI (99.9%): [294.377, 312.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   395.049 ±(99.9%) 566.409 MB/sec [Average]
[info]   (min, avg, max) = (328.718, 395.049, 658.178), stdev = 147.095
[info]   CI (99.9%): [≈ 0, 961.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   271.376 ±(99.9%) 384.763 B/op [Average]
[info]   (min, avg, max) = (224.476, 271.376, 450.061), stdev = 99.922
[info]   CI (99.9%): [≈ 0, 656.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 7.000), stdev = 1.732
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 94.59% complete, ETA 00:04:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 144228.948 ops/s
[info] # Warmup Iteration   2: 1815248.197 ops/s
[info] # Warmup Iteration   3: 1767123.403 ops/s
[info] Iteration   1: 1975484.468 ops/s
[info]                  ·gc.alloc.rate:                   377.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              300.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     258.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.614 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1946086.102 ops/s
[info]                  ·gc.alloc.rate:                   372.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              300.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1972722.961 ops/s
[info]                  ·gc.alloc.rate:               377.521 MB/sec
[info]                  ·gc.alloc.rate.norm:          301.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 257.748 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1964446.222 ops/s
[info]                  ·gc.alloc.rate:               390.876 MB/sec
[info]                  ·gc.alloc.rate.norm:          313.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 517.688 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1945150.795 ops/s
[info]                  ·gc.alloc.rate:               382.503 MB/sec
[info]                  ·gc.alloc.rate.norm:          309.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 261.418 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson":
[info]   1960778.110 ±(99.9%) 55550.780 ops/s [Average]
[info]   (min, avg, max) = (1945150.795, 1960778.110, 1975484.468), stdev = 14426.361
[info]   CI (99.9%): [1905227.330, 2016328.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   380.148 ±(99.9%) 27.093 MB/sec [Average]
[info]   (min, avg, max) = (372.108, 380.148, 390.876), stdev = 7.036
[info]   CI (99.9%): [353.055, 407.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   305.121 ±(99.9%) 22.372 B/op [Average]
[info]   (min, avg, max) = (300.818, 305.121, 313.155), stdev = 5.810
[info]   CI (99.9%): [282.749, 327.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   388.253 ±(99.9%) 555.195 MB/sec [Average]
[info]   (min, avg, max) = (323.070, 388.253, 646.172), stdev = 144.182
[info]   CI (99.9%): [≈ 0, 943.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   311.535 ±(99.9%) 443.823 B/op [Average]
[info]   (min, avg, max) = (257.748, 311.535, 517.688), stdev = 115.259
[info]   CI (99.9%): [≈ 0, 755.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.162 ±(99.9%) 1.310 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.162, 0.770), stdev = 0.340
[info]   CI (99.9%): [≈ 0, 1.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.129 ±(99.9%) 1.044 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.129, 0.614), stdev = 0.271
[info]   CI (99.9%): [≈ 0, 1.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 94.82% complete, ETA 00:04:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 234542.827 ops/s
[info] # Warmup Iteration   2: 2068333.445 ops/s
[info] # Warmup Iteration   3: 2232524.306 ops/s
[info] Iteration   1: 2405986.350 ops/s
[info]                  ·gc.alloc.rate:                   1733.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              1133.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1074.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.473 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 2446400.196 ops/s
[info]                  ·gc.alloc.rate:                   1767.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              1136.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1957.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1259.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2450863.084 ops/s
[info]                  ·gc.alloc.rate:                   1746.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              1121.548 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1048.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2437780.551 ops/s
[info]                  ·gc.alloc.rate:               1731.365 MB/sec
[info]                  ·gc.alloc.rate.norm:          1117.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1062.312 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 2455013.897 ops/s
[info]                  ·gc.alloc.rate:               1756.588 MB/sec
[info]                  ·gc.alloc.rate.norm:          1126.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1659.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1063.838 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce":
[info]   2439208.816 ±(99.9%) 75631.360 ops/s [Average]
[info]   (min, avg, max) = (2405986.350, 2439208.816, 2455013.897), stdev = 19641.224
[info]   CI (99.9%): [2363577.456, 2514840.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1746.956 ±(99.9%) 59.103 MB/sec [Average]
[info]   (min, avg, max) = (1731.365, 1746.956, 1767.267), stdev = 15.349
[info]   CI (99.9%): [1687.853, 1806.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1127.187 ±(99.9%) 30.752 B/op [Average]
[info]   (min, avg, max) = (1117.834, 1127.187, 1136.791), stdev = 7.986
[info]   CI (99.9%): [1096.435, 1157.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1707.548 ±(99.9%) 539.062 MB/sec [Average]
[info]   (min, avg, max) = (1633.498, 1707.548, 1957.411), stdev = 139.993
[info]   CI (99.9%): [1168.486, 2246.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1101.665 ±(99.9%) 340.637 B/op [Average]
[info]   (min, avg, max) = (1048.966, 1101.665, 1259.101), stdev = 88.462
[info]   CI (99.9%): [761.028, 1442.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.885 ±(99.9%) 6.265 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.885, 3.781), stdev = 1.627
[info]   CI (99.9%): [≈ 0, 7.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.578 ±(99.9%) 4.101 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.578, 2.473), stdev = 1.065
[info]   CI (99.9%): [≈ 0, 4.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 16.000), stdev = 4.087
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 95.06% complete, ETA 00:04:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.550 ops/s
[info] # Warmup Iteration   2: 3188060.065 ops/s
[info] # Warmup Iteration   3: 3458573.208 ops/s
[info] Iteration   1: 3546931.234 ops/s
[info]                  ·gc.alloc.rate:                   953.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              422.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     433.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 3500785.182 ops/s
[info]                  ·gc.alloc.rate:                   938.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              421.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     439.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.064 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 3575166.995 ops/s
[info]                  ·gc.alloc.rate:                   956.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              421.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     431.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.431 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.510 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 3541682.506 ops/s
[info]                  ·gc.alloc.rate:                   938.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.959 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     433.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.609 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.715 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3597280.263 ops/s
[info]                  ·gc.alloc.rate:               971.475 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:      970.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 424.374 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava":
[info]   3552369.236 ±(99.9%) 140712.335 ops/s [Average]
[info]   (min, avg, max) = (3500785.182, 3552369.236, 3597280.263), stdev = 36542.546
[info]   CI (99.9%): [3411656.901, 3693081.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   951.575 ±(99.9%) 53.315 MB/sec [Average]
[info]   (min, avg, max) = (938.322, 951.575, 971.475), stdev = 13.846
[info]   CI (99.9%): [898.259, 1004.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   421.530 ±(99.9%) 11.231 B/op [Average]
[info]   (min, avg, max) = (416.959, 421.530, 424.820), stdev = 2.917
[info]   CI (99.9%): [410.299, 432.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   976.047 ±(99.9%) 13.731 MB/sec [Average]
[info]   (min, avg, max) = (970.455, 976.047, 979.949), stdev = 3.566
[info]   CI (99.9%): [962.316, 989.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   432.425 ±(99.9%) 21.067 B/op [Average]
[info]   (min, avg, max) = (424.374, 432.425, 439.641), stdev = 5.471
[info]   CI (99.9%): [411.358, 453.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.024 ±(99.9%) 5.817 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.024, 3.431), stdev = 1.511
[info]   CI (99.9%): [≈ 0, 6.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.452 ±(99.9%) 2.563 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.452, 1.510), stdev = 0.666
[info]   CI (99.9%): [≈ 0, 3.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 12.000), stdev = 3.564
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.29% complete, ETA 00:04:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 400903.342 ops/s
[info] # Warmup Iteration   2: 2610917.584 ops/s
[info] # Warmup Iteration   3: 3282360.535 ops/s
[info] Iteration   1: 3325007.907 ops/s
[info]                  ·gc.alloc.rate:               881.476 MB/sec
[info]                  ·gc.alloc.rate.norm:          417.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 308.547 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 3234251.416 ops/s
[info]                  ·gc.alloc.rate:                   883.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              429.707 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     476.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.159 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 3265866.303 ops/s
[info]                  ·gc.alloc.rate:                   878.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              423.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     473.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.094 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.491 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 3348398.626 ops/s
[info]                  ·gc.alloc.rate:                   884.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              415.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     307.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.587 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3331799.401 ops/s
[info]                  ·gc.alloc.rate:                   896.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              423.454 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     460.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala":
[info]   3301064.731 ±(99.9%) 187274.967 ops/s [Average]
[info]   (min, avg, max) = (3234251.416, 3301064.731, 3348398.626), stdev = 48634.714
[info]   CI (99.9%): [3113789.764, 3488339.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   884.759 ±(99.9%) 27.335 MB/sec [Average]
[info]   (min, avg, max) = (878.133, 884.759, 896.767), stdev = 7.099
[info]   CI (99.9%): [857.424, 912.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   421.799 ±(99.9%) 21.850 B/op [Average]
[info]   (min, avg, max) = (415.458, 421.799, 429.707), stdev = 5.674
[info]   CI (99.9%): [399.949, 443.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   848.589 ±(99.9%) 688.111 MB/sec [Average]
[info]   (min, avg, max) = (651.944, 848.589, 981.872), stdev = 178.700
[info]   CI (99.9%): [160.478, 1536.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   405.255 ±(99.9%) 343.079 B/op [Average]
[info]   (min, avg, max) = (307.170, 405.255, 476.370), stdev = 89.096
[info]   CI (99.9%): [62.176, 748.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.921 ±(99.9%) 5.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.921, 3.094), stdev = 1.316
[info]   CI (99.9%): [≈ 0, 5.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.441 ±(99.9%) 2.439 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.441, 1.491), stdev = 0.633
[info]   CI (99.9%): [≈ 0, 2.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 12.000), stdev = 4.000
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.53% complete, ETA 00:04:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1019425.855 ops/s
[info] # Warmup Iteration   2: 3254162.673 ops/s
[info] # Warmup Iteration   3: 3552983.565 ops/s
[info] Iteration   1: 3600848.850 ops/s
[info]                  ·gc.alloc.rate:                   963.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              421.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     430.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3600425.943 ops/s
[info]                  ·gc.alloc.rate:                   961.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              420.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     431.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 3599792.359 ops/s
[info]                  ·gc.alloc.rate:                   960.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              419.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     432.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.685 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3567204.299 ops/s
[info]                  ·gc.alloc.rate:                   945.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              417.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     289.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3543213.703 ops/s
[info]                  ·gc.alloc.rate:                   950.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              421.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     435.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala":
[info]   3582297.031 ±(99.9%) 100674.476 ops/s [Average]
[info]   (min, avg, max) = (3543213.703, 3582297.031, 3600848.850), stdev = 26144.842
[info]   CI (99.9%): [3481622.555, 3682971.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   956.314 ±(99.9%) 31.252 MB/sec [Average]
[info]   (min, avg, max) = (945.387, 956.314, 963.836), stdev = 8.116
[info]   CI (99.9%): [925.062, 987.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   420.140 ±(99.9%) 7.185 B/op [Average]
[info]   (min, avg, max) = (417.109, 420.140, 421.980), stdev = 1.866
[info]   CI (99.9%): [412.955, 427.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   919.693 ±(99.9%) 568.860 MB/sec [Average]
[info]   (min, avg, max) = (655.483, 919.693, 988.864), stdev = 147.731
[info]   CI (99.9%): [350.832, 1488.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   403.938 ±(99.9%) 247.073 B/op [Average]
[info]   (min, avg, max) = (289.202, 403.938, 435.573), stdev = 64.164
[info]   CI (99.9%): [156.865, 651.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.842 ±(99.9%) 6.500 MB/sec [Average]
[info]   (min, avg, max) = (0.003, 0.842, 3.854), stdev = 1.688
[info]   CI (99.9%): [≈ 0, 7.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.368 ±(99.9%) 2.841 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.368, 1.685), stdev = 0.738
[info]   CI (99.9%): [≈ 0, 3.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 11.000), stdev = 3.847
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 95.76% complete, ETA 00:03:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1354602.711 ops/s
[info] # Warmup Iteration   2: 3445388.816 ops/s
[info] # Warmup Iteration   3: 3897798.423 ops/s
[info] Iteration   1: 3892261.808 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3892589.176 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3890980.206 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3885373.827 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3891851.637 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3890611.331 ±(99.9%) 11510.434 ops/s [Average]
[info]   (min, avg, max) = (3885373.827, 3890611.331, 3892589.176), stdev = 2989.223
[info]   CI (99.9%): [3879100.897, 3902121.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 96.00% complete, ETA 00:03:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 561799.893 ops/s
[info] # Warmup Iteration   2: 2274548.678 ops/s
[info] # Warmup Iteration   3: 3321690.504 ops/s
[info] Iteration   1: 3291049.293 ops/s
[info]                  ·gc.alloc.rate:                   881.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              421.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     470.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 3286733.611 ops/s
[info]                  ·gc.alloc.rate:                   895.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              428.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     471.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 3265160.640 ops/s
[info]                  ·gc.alloc.rate:                   867.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              417.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     316.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.408 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.642 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3321973.330 ops/s
[info]                  ·gc.alloc.rate:                   881.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              417.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     464.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3366087.299 ops/s
[info]                  ·gc.alloc.rate:                   893.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              417.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     304.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson":
[info]   3306200.834 ±(99.9%) 150717.173 ops/s [Average]
[info]   (min, avg, max) = (3265160.640, 3306200.834, 3366087.299), stdev = 39140.771
[info]   CI (99.9%): [3155483.662, 3456918.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   883.911 ±(99.9%) 43.305 MB/sec [Average]
[info]   (min, avg, max) = (867.188, 883.911, 895.029), stdev = 11.246
[info]   CI (99.9%): [840.606, 927.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   420.700 ±(99.9%) 17.807 B/op [Average]
[info]   (min, avg, max) = (417.795, 420.700, 428.425), stdev = 4.624
[info]   CI (99.9%): [402.893, 438.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   851.909 ±(99.9%) 692.377 MB/sec [Average]
[info]   (min, avg, max) = (652.163, 851.909, 985.278), stdev = 179.808
[info]   CI (99.9%): [159.532, 1544.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   405.678 ±(99.9%) 333.638 B/op [Average]
[info]   (min, avg, max) = (304.925, 405.678, 471.625), stdev = 86.645
[info]   CI (99.9%): [72.040, 739.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.859 ±(99.9%) 5.652 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 0.859, 3.408), stdev = 1.468
[info]   CI (99.9%): [≈ 0, 6.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.412 ±(99.9%) 2.723 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.412, 1.642), stdev = 0.707
[info]   CI (99.9%): [≈ 0, 3.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 13.000), stdev = 4.615
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce
[info] # Run progress: 96.24% complete, ETA 00:03:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 639.157 ops/s
[info] # Warmup Iteration   2: 3414.515 ops/s
[info] # Warmup Iteration   3: 9992.170 ops/s
[info] Iteration   1: 12306.672 ops/s
[info]                  ·gc.alloc.rate:                   1554.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              198755.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1617.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     206793.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.045 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 133.592 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 12102.958 ops/s
[info]                  ·gc.alloc.rate:                   1534.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              199485.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168569.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 131.291 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 12340.693 ops/s
[info]                  ·gc.alloc.rate:                   1555.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              198329.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207735.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.200 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 12172.499 ops/s
[info]                  ·gc.alloc.rate:                   1682.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              217517.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212101.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.383 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 12451.328 ops/s
[info]                  ·gc.alloc.rate:                   1620.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              204867.172 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     208780.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 253.452 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce":
[info]   12274.830 ±(99.9%) 532.570 ops/s [Average]
[info]   (min, avg, max) = (12102.958, 12274.830, 12451.328), stdev = 138.307
[info]   CI (99.9%): [11742.260, 12807.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1589.437 ±(99.9%) 236.368 MB/sec [Average]
[info]   (min, avg, max) = (1534.510, 1589.437, 1682.447), stdev = 61.384
[info]   CI (99.9%): [1353.068, 1825.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   203790.867 ±(99.9%) 31240.792 B/op [Average]
[info]   (min, avg, max) = (198329.114, 203790.867, 217517.125), stdev = 8113.134
[info]   CI (99.9%): [172550.075, 235031.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1567.010 ±(99.9%) 584.024 MB/sec [Average]
[info]   (min, avg, max) = (1296.688, 1567.010, 1651.827), stdev = 151.669
[info]   CI (99.9%): [982.986, 2151.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   200795.985 ±(99.9%) 69798.195 B/op [Average]
[info]   (min, avg, max) = (168569.095, 200795.985, 212101.068), stdev = 18126.369
[info]   CI (99.9%): [130997.791, 270594.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.866 ±(99.9%) 3.005 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.866, 2.005), stdev = 0.780
[info]   CI (99.9%): [≈ 0, 3.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   110.584 ±(99.9%) 380.513 B/op [Average]
[info]   (min, avg, max) = (5.383, 110.584, 253.452), stdev = 98.818
[info]   CI (99.9%): [≈ 0, 491.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 9.000), stdev = 1.095
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala
[info] # Run progress: 96.47% complete, ETA 00:03:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1918.200 ops/s
[info] # Warmup Iteration   2: 17467.750 ops/s
[info] # Warmup Iteration   3: 22570.112 ops/s
[info] Iteration   1: 22121.966 ops/s
[info]                  ·gc.alloc.rate:               324.891 MB/sec
[info]                  ·gc.alloc.rate.norm:          23113.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22771.435 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 21827.089 ops/s
[info]                  ·gc.alloc.rate:               322.285 MB/sec
[info]                  ·gc.alloc.rate.norm:          23237.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23175.206 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 21491.591 ops/s
[info]                  ·gc.alloc.rate:               369.633 MB/sec
[info]                  ·gc.alloc.rate.norm:          27067.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23537.470 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 21138.573 ops/s
[info]                  ·gc.alloc.rate:               431.696 MB/sec
[info]                  ·gc.alloc.rate.norm:          32141.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24029.660 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 22186.451 ops/s
[info]                  ·gc.alloc.rate:                   405.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              28789.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22894.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.665 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala":
[info]   21753.134 ±(99.9%) 1695.333 ops/s [Average]
[info]   (min, avg, max) = (21138.573, 21753.134, 22186.451), stdev = 440.273
[info]   CI (99.9%): [20057.801, 23448.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   370.871 ±(99.9%) 186.662 MB/sec [Average]
[info]   (min, avg, max) = (322.285, 370.871, 431.696), stdev = 48.475
[info]   CI (99.9%): [184.209, 557.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   26869.807 ±(99.9%) 14765.397 B/op [Average]
[info]   (min, avg, max) = (23113.390, 26869.807, 32141.276), stdev = 3834.527
[info]   CI (99.9%): [12104.410, 41635.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   321.686 ±(99.9%) 4.290 MB/sec [Average]
[info]   (min, avg, max) = (320.085, 321.686, 322.752), stdev = 1.114
[info]   CI (99.9%): [317.396, 325.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23281.709 ±(99.9%) 1969.374 B/op [Average]
[info]   (min, avg, max) = (22771.435, 23281.709, 24029.660), stdev = 511.440
[info]   CI (99.9%): [21312.335, 25251.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.089 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.733 ±(99.9%) 6.311 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.733, 3.665), stdev = 1.639
[info]   CI (99.9%): [≈ 0, 7.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala
[info] # Run progress: 96.71% complete, ETA 00:02:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7745.656 ops/s
[info] # Warmup Iteration   2: 18373.451 ops/s
[info] # Warmup Iteration   3: 21131.227 ops/s
[info] Iteration   1: 21637.945 ops/s
[info]                  ·gc.alloc.rate:      232.584 MB/sec
[info]                  ·gc.alloc.rate.norm: 16912.021 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 21319.837 ops/s
[info]                  ·gc.alloc.rate:                   232.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              17191.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24144.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.537 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 21145.358 ops/s
[info]                  ·gc.alloc.rate:               358.836 MB/sec
[info]                  ·gc.alloc.rate.norm:          26708.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24343.979 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 21419.697 ops/s
[info]                  ·gc.alloc.rate:               245.184 MB/sec
[info]                  ·gc.alloc.rate.norm:          18016.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24032.620 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 21555.383 ops/s
[info]                  ·gc.alloc.rate:               237.861 MB/sec
[info]                  ·gc.alloc.rate.norm:          17366.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23879.908 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala":
[info]   21415.644 ±(99.9%) 748.637 ops/s [Average]
[info]   (min, avg, max) = (21145.358, 21415.644, 21637.945), stdev = 194.419
[info]   CI (99.9%): [20667.007, 22164.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   261.471 ±(99.9%) 210.505 MB/sec [Average]
[info]   (min, avg, max) = (232.584, 261.471, 358.836), stdev = 54.667
[info]   CI (99.9%): [50.966, 471.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   19238.968 ±(99.9%) 16154.467 B/op [Average]
[info]   (min, avg, max) = (16912.021, 19238.968, 26708.487), stdev = 4195.264
[info]   CI (99.9%): [3084.501, 35393.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   261.655 ±(99.9%) 563.231 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 261.655, 327.076), stdev = 146.269
[info]   CI (99.9%): [≈ 0, 824.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   19280.140 ±(99.9%) 41507.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 19280.140, 24343.979), stdev = 10779.254
[info]   CI (99.9%): [≈ 0, 60787.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.307 ±(99.9%) 2.646 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.307, 1.537), stdev = 0.687
[info]   CI (99.9%): [≈ 0, 2.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.200, 4.000), stdev = 1.789
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson
[info] # Run progress: 96.94% complete, ETA 00:02:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68.823 ops/s
[info] # Warmup Iteration   2: 1577.482 ops/s
[info] # Warmup Iteration   3: 4651.022 ops/s
[info] Iteration   1: 8657.555 ops/s
[info]                  ·gc.alloc.rate:                   1999.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              363445.645 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1944.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     353541.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.927 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 713.906 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 9168.709 ops/s
[info]                  ·gc.alloc.rate:                   1955.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              335635.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1946.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     334089.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 571.740 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 9275.405 ops/s
[info]                  ·gc.alloc.rate:                   1962.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              332855.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1947.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     330293.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.700 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 9279.480 ops/s
[info]                  ·gc.alloc.rate:                   1972.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              334479.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1962.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     332841.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.531 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 9016.826 ops/s
[info]                  ·gc.alloc.rate:                   1952.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              340596.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     346289.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.266 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson":
[info]   9079.595 ±(99.9%) 997.262 ops/s [Average]
[info]   (min, avg, max) = (8657.555, 9079.595, 9279.480), stdev = 258.986
[info]   CI (99.9%): [8082.332, 10076.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1968.288 ±(99.9%) 72.849 MB/sec [Average]
[info]   (min, avg, max) = (1952.322, 1968.288, 1999.275), stdev = 18.919
[info]   CI (99.9%): [1895.440, 2041.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   341402.601 ±(99.9%) 48736.901 B/op [Average]
[info]   (min, avg, max) = (332855.387, 341402.601, 363445.645), stdev = 12656.818
[info]   CI (99.9%): [292665.700, 390139.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1957.165 ±(99.9%) 65.788 MB/sec [Average]
[info]   (min, avg, max) = (1944.794, 1957.165, 1984.956), stdev = 17.085
[info]   CI (99.9%): [1891.378, 2022.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   339411.273 ±(99.9%) 38582.624 B/op [Average]
[info]   (min, avg, max) = (330293.529, 339411.273, 353541.706), stdev = 10019.785
[info]   CI (99.9%): [300828.648, 377993.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.556 ±(99.9%) 7.364 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.556, 3.927), stdev = 1.912
[info]   CI (99.9%): [≈ 0, 8.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   274.828 ±(99.9%) 1312.890 B/op [Average]
[info]   (min, avg, max) = (3.531, 274.828, 713.906), stdev = 340.953
[info]   CI (99.9%): [≈ 0, 1587.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.600, 25.000), stdev = 6.693
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala
[info] # Run progress: 97.18% complete, ETA 00:02:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7151.378 ops/s
[info] # Warmup Iteration   2: 35683.058 ops/s
[info] # Warmup Iteration   3: 64094.075 ops/s
[info] Iteration   1: 61054.439 ops/s
[info]                  ·gc.alloc.rate:                   964.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              24857.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          968.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24959.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.691 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.587 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 64182.747 ops/s
[info]                  ·gc.alloc.rate:               937.284 MB/sec
[info]                  ·gc.alloc.rate.norm:          22982.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15910.781 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 62139.326 ops/s
[info]                  ·gc.alloc.rate:                   994.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              25186.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24760.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.509 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.221 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 64218.742 ops/s
[info]                  ·gc.alloc.rate:                   849.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              20808.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24105.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.468 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 65144.990 ops/s
[info]                  ·gc.alloc.rate:                   862.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              20846.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15859.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala":
[info]   63348.049 ±(99.9%) 6502.198 ops/s [Average]
[info]   (min, avg, max) = (61054.439, 63348.049, 65144.990), stdev = 1688.600
[info]   CI (99.9%): [56845.851, 69850.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   921.600 ±(99.9%) 244.086 MB/sec [Average]
[info]   (min, avg, max) = (849.068, 921.600, 994.413), stdev = 63.388
[info]   CI (99.9%): [677.514, 1165.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   22936.320 ±(99.9%) 8088.045 B/op [Average]
[info]   (min, avg, max) = (20808.800, 22936.320, 25186.752), stdev = 2100.440
[info]   CI (99.9%): [14848.275, 31024.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   846.962 ±(99.9%) 683.274 MB/sec [Average]
[info]   (min, avg, max) = (648.894, 846.962, 983.568), stdev = 177.444
[info]   CI (99.9%): [163.689, 1530.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   21119.113 ±(99.9%) 18438.124 B/op [Average]
[info]   (min, avg, max) = (15859.718, 21119.113, 24959.554), stdev = 4788.322
[info]   CI (99.9%): [2680.989, 39557.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.840 ±(99.9%) 3.061 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.840, 1.691), stdev = 0.795
[info]   CI (99.9%): [≈ 0, 3.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   21.256 ±(99.9%) 78.284 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21.256, 43.587), stdev = 20.330
[info]   CI (99.9%): [≈ 0, 99.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 8.000), stdev = 1.924
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala
[info] # Run progress: 97.41% complete, ETA 00:02:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27115.536 ops/s
[info] # Warmup Iteration   2: 94559.658 ops/s
[info] # Warmup Iteration   3: 105951.707 ops/s
[info] Iteration   1: 109659.945 ops/s
[info]                  ·gc.alloc.rate:                   720.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              10341.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9431.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 109887.741 ops/s
[info]                  ·gc.alloc.rate:                   723.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              10357.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9421.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.596 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 110230.593 ops/s
[info]                  ·gc.alloc.rate:               726.471 MB/sec
[info]                  ·gc.alloc.rate.norm:          10370.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9401.945 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 110637.098 ops/s
[info]                  ·gc.alloc.rate:                   729.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              10377.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9376.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.114 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.289 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 110457.423 ops/s
[info]                  ·gc.alloc.rate:                   723.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              10302.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9368.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.568 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala":
[info]   110174.560 ±(99.9%) 1545.287 ops/s [Average]
[info]   (min, avg, max) = (109659.945, 110174.560, 110637.098), stdev = 401.306
[info]   CI (99.9%): [108629.273, 111719.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   724.607 ±(99.9%) 13.594 MB/sec [Average]
[info]   (min, avg, max) = (720.522, 724.607, 729.670), stdev = 3.530
[info]   CI (99.9%): [711.012, 738.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   10349.688 ±(99.9%) 114.714 B/op [Average]
[info]   (min, avg, max) = (10302.321, 10349.688, 10377.355), stdev = 29.791
[info]   CI (99.9%): [10234.974, 10464.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   658.113 ±(99.9%) 3.370 MB/sec [Average]
[info]   (min, avg, max) = (657.126, 658.113, 659.320), stdev = 0.875
[info]   CI (99.9%): [654.743, 661.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9400.035 ±(99.9%) 105.230 B/op [Average]
[info]   (min, avg, max) = (9368.472, 9400.035, 9431.601), stdev = 27.328
[info]   CI (99.9%): [9294.805, 9505.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.798 ±(99.9%) 5.158 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.798, 3.114), stdev = 1.340
[info]   CI (99.9%): [≈ 0, 5.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.350 ±(99.9%) 73.355 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.350, 44.289), stdev = 19.050
[info]   CI (99.9%): [≈ 0, 84.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 9.000), stdev = 2.387
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 97.65% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32099.006 ops/s
[info] # Warmup Iteration   2: 89561.798 ops/s
[info] # Warmup Iteration   3: 117392.408 ops/s
[info] Iteration   1: 117342.839 ops/s
[info]                  ·gc.alloc.rate:      9.026 MB/sec
[info]                  ·gc.alloc.rate.norm: 121.066 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 118058.822 ops/s
[info]                  ·gc.alloc.rate:      1.863 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.839 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 118233.719 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 118439.491 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 117598.512 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   117934.677 ±(99.9%) 1746.591 ops/s [Average]
[info]   (min, avg, max) = (117342.839, 117934.677, 118439.491), stdev = 453.584
[info]   CI (99.9%): [116188.086, 119681.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2.178 ±(99.9%) 15.065 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.178, 9.026), stdev = 3.912
[info]   CI (99.9%): [≈ 0, 17.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   29.183 ±(99.9%) 202.074 B/op [Average]
[info]   (min, avg, max) = (0.004, 29.183, 121.066), stdev = 52.478
[info]   CI (99.9%): [≈ 0, 231.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 97.88% complete, ETA 00:01:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40649.008 ops/s
[info] # Warmup Iteration   2: 342669.990 ops/s
[info] # Warmup Iteration   3: 391168.297 ops/s
[info] Iteration   1: 385996.541 ops/s
[info]                  ·gc.alloc.rate:                   2222.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              9059.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1927.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7855.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.408 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 382113.758 ops/s
[info]                  ·gc.alloc.rate:                   2191.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              9024.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2249.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9265.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.091 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.732 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   3: 389878.838 ops/s
[info]                  ·gc.alloc.rate:                   2241.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              9046.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2255.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9103.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.168 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 391984.453 ops/s
[info]                  ·gc.alloc.rate:                   2278.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              9148.595 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2284.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9172.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.251 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 391487.873 ops/s
[info]                  ·gc.alloc.rate:                   2250.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              9048.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7978.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce":
[info]   388292.293 ±(99.9%) 16086.025 ops/s [Average]
[info]   (min, avg, max) = (382113.758, 388292.293, 391984.453), stdev = 4177.490
[info]   CI (99.9%): [372206.268, 404378.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2236.830 ±(99.9%) 125.266 MB/sec [Average]
[info]   (min, avg, max) = (2191.141, 2236.830, 2278.488), stdev = 32.531
[info]   CI (99.9%): [2111.564, 2362.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9065.500 ±(99.9%) 185.100 B/op [Average]
[info]   (min, avg, max) = (9024.952, 9065.500, 9148.595), stdev = 48.070
[info]   CI (99.9%): [8880.399, 9250.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2140.233 ±(99.9%) 654.563 MB/sec [Average]
[info]   (min, avg, max) = (1927.326, 2140.233, 2284.438), stdev = 169.988
[info]   CI (99.9%): [1485.669, 2794.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8675.071 ±(99.9%) 2680.184 B/op [Average]
[info]   (min, avg, max) = (7855.275, 8675.071, 9265.618), stdev = 696.035
[info]   CI (99.9%): [5994.887, 11355.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.256 ±(99.9%) 6.368 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.256, 3.091), stdev = 1.654
[info]   CI (99.9%): [≈ 0, 7.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.145 ±(99.9%) 26.103 B/op [Average]
[info]   (min, avg, max) = (0.167, 5.145, 12.732), stdev = 6.779
[info]   CI (99.9%): [≈ 0, 31.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.time":
[info]   76.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 15.200, 27.000), stdev = 8.349
[info]   CI (99.9%): [76.000, 76.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.12% complete, ETA 00:01:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34196.334 ops/s
[info] # Warmup Iteration   2: 572386.351 ops/s
[info] # Warmup Iteration   3: 780725.822 ops/s
[info] Iteration   1: 917436.157 ops/s
[info]                  ·gc.alloc.rate:                   642.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              1102.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1099.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 918609.845 ops/s
[info]                  ·gc.alloc.rate:                   647.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              1109.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1101.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 919270.871 ops/s
[info]                  ·gc.alloc.rate:                   647.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              1107.860 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1105.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 919954.704 ops/s
[info]                  ·gc.alloc.rate:               655.569 MB/sec
[info]                  ·gc.alloc.rate.norm:          1121.579 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1108.920 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 914269.428 ops/s
[info]                  ·gc.alloc.rate:                   646.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              1112.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1120.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.860 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala":
[info]   917908.201 ±(99.9%) 8610.482 ops/s [Average]
[info]   (min, avg, max) = (914269.428, 917908.201, 919954.704), stdev = 2236.115
[info]   CI (99.9%): [909297.719, 926518.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   647.751 ±(99.9%) 18.486 MB/sec [Average]
[info]   (min, avg, max) = (642.459, 647.751, 655.569), stdev = 4.801
[info]   CI (99.9%): [629.265, 666.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1110.653 ±(99.9%) 27.445 B/op [Average]
[info]   (min, avg, max) = (1102.188, 1110.653, 1121.579), stdev = 7.127
[info]   CI (99.9%): [1083.208, 1138.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   645.631 ±(99.9%) 15.475 MB/sec [Average]
[info]   (min, avg, max) = (640.808, 645.631, 650.845), stdev = 4.019
[info]   CI (99.9%): [630.156, 661.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1107.033 ±(99.9%) 31.956 B/op [Average]
[info]   (min, avg, max) = (1099.355, 1107.033, 1120.360), stdev = 8.299
[info]   CI (99.9%): [1075.077, 1138.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.121 ±(99.9%) 0.818 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.121, 0.500), stdev = 0.213
[info]   CI (99.9%): [≈ 0, 0.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.208 ±(99.9%) 1.409 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.208, 0.860), stdev = 0.366
[info]   CI (99.9%): [≈ 0, 1.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.35% complete, ETA 00:01:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 591557.749 ops/s
[info] # Warmup Iteration   2: 1783268.663 ops/s
[info] # Warmup Iteration   3: 2000972.187 ops/s
[info] Iteration   1: 1949242.046 ops/s
[info]                  ·gc.alloc.rate:                   987.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              797.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     796.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1983050.135 ops/s
[info]                  ·gc.alloc.rate:                   1008.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              800.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     784.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2008590.424 ops/s
[info]                  ·gc.alloc.rate:                   1014.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              794.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     774.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.173 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1977007.055 ops/s
[info]                  ·gc.alloc.rate:                   1007.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              802.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     782.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2020453.423 ops/s
[info]                  ·gc.alloc.rate:                   1022.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              796.273 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     763.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala":
[info]   1987668.616 ±(99.9%) 107614.409 ops/s [Average]
[info]   (min, avg, max) = (1949242.046, 1987668.616, 2020453.423), stdev = 27947.120
[info]   CI (99.9%): [1880054.207, 2095283.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1008.096 ±(99.9%) 50.379 MB/sec [Average]
[info]   (min, avg, max) = (987.377, 1008.096, 1022.592), stdev = 13.083
[info]   CI (99.9%): [957.717, 1058.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   798.136 ±(99.9%) 11.192 B/op [Average]
[info]   (min, avg, max) = (794.980, 798.136, 802.072), stdev = 2.906
[info]   CI (99.9%): [786.944, 809.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   985.107 ±(99.9%) 13.514 MB/sec [Average]
[info]   (min, avg, max) = (980.285, 985.107, 988.133), stdev = 3.510
[info]   CI (99.9%): [971.593, 998.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   780.058 ±(99.9%) 47.540 B/op [Average]
[info]   (min, avg, max) = (763.329, 780.058, 796.597), stdev = 12.346
[info]   CI (99.9%): [732.518, 827.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.838 ±(99.9%) 6.914 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.838, 4.050), stdev = 1.795
[info]   CI (99.9%): [≈ 0, 7.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.657 ±(99.9%) 5.415 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.657, 3.173), stdev = 1.406
[info]   CI (99.9%): [≈ 0, 6.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 12.000), stdev = 4.037
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 98.59% complete, ETA 00:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9088.384 ops/s
[info] # Warmup Iteration   2: 99308.744 ops/s
[info] # Warmup Iteration   3: 160504.950 ops/s
[info] Iteration   1: 178699.047 ops/s
[info]                  ·gc.alloc.rate:                   4363.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              38435.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4292.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37808.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.384 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 180421.725 ops/s
[info]                  ·gc.alloc.rate:                   4453.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              38847.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4356.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38003.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.363 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 180734.358 ops/s
[info]                  ·gc.alloc.rate:                   4462.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              38865.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4398.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38304.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.269 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   4: 181957.684 ops/s
[info]                  ·gc.alloc.rate:                   4479.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              38746.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4075.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35251.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 184266.028 ops/s
[info]                  ·gc.alloc.rate:                   4548.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              38849.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4423.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37785.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.711 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson":
[info]   181215.769 ±(99.9%) 7950.127 ops/s [Average]
[info]   (min, avg, max) = (178699.047, 181215.769, 184266.028), stdev = 2064.623
[info]   CI (99.9%): [173265.641, 189165.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4461.653 ±(99.9%) 255.114 MB/sec [Average]
[info]   (min, avg, max) = (4363.607, 4461.653, 4548.577), stdev = 66.252
[info]   CI (99.9%): [4206.539, 4716.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   38749.028 ±(99.9%) 698.889 B/op [Average]
[info]   (min, avg, max) = (38435.424, 38749.028, 38865.817), stdev = 181.499
[info]   CI (99.9%): [38050.140, 39447.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4309.441 ±(99.9%) 538.838 MB/sec [Average]
[info]   (min, avg, max) = (4075.445, 4309.441, 4423.966), stdev = 139.935
[info]   CI (99.9%): [3770.603, 4848.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   37430.726 ±(99.9%) 4759.398 B/op [Average]
[info]   (min, avg, max) = (35251.191, 37430.726, 38304.385), stdev = 1236.001
[info]   CI (99.9%): [32671.328, 42190.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.112 ±(99.9%) 0.387 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.112, 0.271), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.981 ±(99.9%) 3.415 B/op [Average]
[info]   (min, avg, max) = (0.180, 0.981, 2.384), stdev = 0.887
[info]   CI (99.9%): [≈ 0, 4.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   64.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (12.000, 12.800, 13.000), stdev = 0.447
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   90.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 18.000, 20.000), stdev = 1.225
[info]   CI (99.9%): [90.000, 90.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 98.82% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 63993.845 ops/s
[info] # Warmup Iteration   2: 378975.404 ops/s
[info] # Warmup Iteration   3: 405560.944 ops/s
[info] Iteration   1: 439947.928 ops/s
[info]                  ·gc.alloc.rate:                   1445.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              5170.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4663.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.240 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.590 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 434161.383 ops/s
[info]                  ·gc.alloc.rate:                   1422.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              5154.367 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4713.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.773 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 444545.879 ops/s
[info]                  ·gc.alloc.rate:                   1457.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              5160.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1619.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5733.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 444161.235 ops/s
[info]                  ·gc.alloc.rate:                   1455.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              5154.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4614.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 440159.409 ops/s
[info]                  ·gc.alloc.rate:               1455.129 MB/sec
[info]                  ·gc.alloc.rate.norm:          5203.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1312.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4692.510 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce":
[info]   440595.167 ±(99.9%) 16146.019 ops/s [Average]
[info]   (min, avg, max) = (434161.383, 440595.167, 444545.879), stdev = 4193.070
[info]   CI (99.9%): [424449.148, 456741.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1447.155 ±(99.9%) 56.107 MB/sec [Average]
[info]   (min, avg, max) = (1422.481, 1447.155, 1457.681), stdev = 14.571
[info]   CI (99.9%): [1391.048, 1503.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5168.541 ±(99.9%) 78.710 B/op [Average]
[info]   (min, avg, max) = (5154.072, 5168.541, 5203.034), stdev = 20.441
[info]   CI (99.9%): [5089.831, 5247.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1367.821 ±(99.9%) 541.906 MB/sec [Average]
[info]   (min, avg, max) = (1300.870, 1367.821, 1619.445), stdev = 140.731
[info]   CI (99.9%): [825.915, 1909.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4883.530 ±(99.9%) 1834.310 B/op [Average]
[info]   (min, avg, max) = (4614.588, 4883.530, 5733.081), stdev = 476.365
[info]   CI (99.9%): [3049.219, 6717.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.869 ±(99.9%) 5.380 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.869, 3.240), stdev = 1.397
[info]   CI (99.9%): [≈ 0, 6.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.117 ±(99.9%) 19.255 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.117, 11.590), stdev = 5.000
[info]   CI (99.9%): [≈ 0, 22.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 18.000), stdev = 5.413
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.06% complete, ETA 00:00:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 206475.883 ops/s
[info] # Warmup Iteration   2: 800379.917 ops/s
[info] # Warmup Iteration   3: 895325.704 ops/s
[info] Iteration   1: 901415.903 ops/s
[info]                  ·gc.alloc.rate:                   434.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              758.655 B/op
[info]                  ·gc.churn.PS_Eden_Space:          638.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1114.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 895023.785 ops/s
[info]                  ·gc.alloc.rate:               421.479 MB/sec
[info]                  ·gc.alloc.rate.norm:          740.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 562.841 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 899111.664 ops/s
[info]                  ·gc.alloc.rate:               426.973 MB/sec
[info]                  ·gc.alloc.rate.norm:          747.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 560.308 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 897446.464 ops/s
[info]                  ·gc.alloc.rate:                   435.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              763.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1127.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 896294.206 ops/s
[info]                  ·gc.alloc.rate:               428.412 MB/sec
[info]                  ·gc.alloc.rate.norm:          752.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 566.762 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala":
[info]   897858.404 ±(99.9%) 9603.080 ops/s [Average]
[info]   (min, avg, max) = (895023.785, 897858.404, 901415.903), stdev = 2493.889
[info]   CI (99.9%): [888255.324, 907461.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   429.359 ±(99.9%) 22.115 MB/sec [Average]
[info]   (min, avg, max) = (421.479, 429.359, 435.414), stdev = 5.743
[info]   CI (99.9%): [407.244, 451.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   752.571 ±(99.9%) 34.399 B/op [Average]
[info]   (min, avg, max) = (740.973, 752.571, 763.574), stdev = 8.933
[info]   CI (99.9%): [718.172, 786.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   448.809 ±(99.9%) 673.912 MB/sec [Average]
[info]   (min, avg, max) = (320.082, 448.809, 642.857), stdev = 175.013
[info]   CI (99.9%): [≈ 0, 1122.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   786.301 ±(99.9%) 1175.971 B/op [Average]
[info]   (min, avg, max) = (560.308, 786.301, 1127.362), stdev = 305.396
[info]   CI (99.9%): [≈ 0, 1962.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.125 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.073), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.29% complete, ETA 00:00:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 517507.569 ops/s
[info] # Warmup Iteration   2: 1537324.132 ops/s
[info] # Warmup Iteration   3: 1578421.362 ops/s
[info] Iteration   1: 1607495.057 ops/s
[info]                  ·gc.alloc.rate:                   761.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     641.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1552358.602 ops/s
[info]                  ·gc.alloc.rate:               739.844 MB/sec
[info]                  ·gc.alloc.rate.norm:          749.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 665.956 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 1595448.303 ops/s
[info]                  ·gc.alloc.rate:                   766.546 MB/sec
[info]                  ·gc.alloc.rate.norm:              756.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     973.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1607010.099 ops/s
[info]                  ·gc.alloc.rate:                   762.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              746.368 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     645.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.094 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1604306.933 ops/s
[info]                  ·gc.alloc.rate:                   775.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     645.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.960 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala":
[info]   1593323.799 ±(99.9%) 90129.532 ops/s [Average]
[info]   (min, avg, max) = (1552358.602, 1593323.799, 1607495.057), stdev = 23406.353
[info]   CI (99.9%): [1503194.266, 1683453.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   761.106 ±(99.9%) 50.642 MB/sec [Average]
[info]   (min, avg, max) = (739.844, 761.106, 775.567), stdev = 13.152
[info]   CI (99.9%): [710.463, 811.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   751.663 ±(99.9%) 24.871 B/op [Average]
[info]   (min, avg, max) = (745.565, 751.663, 760.556), stdev = 6.459
[info]   CI (99.9%): [726.792, 776.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   723.180 ±(99.9%) 567.306 MB/sec [Average]
[info]   (min, avg, max) = (655.471, 723.180, 986.718), stdev = 147.328
[info]   CI (99.9%): [155.874, 1290.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   714.236 ±(99.9%) 558.629 B/op [Average]
[info]   (min, avg, max) = (641.773, 714.236, 973.184), stdev = 145.074
[info]   CI (99.9%): [155.606, 1272.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.828 ±(99.9%) 5.133 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.828, 3.094), stdev = 1.333
[info]   CI (99.9%): [≈ 0, 5.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.811 ±(99.9%) 5.027 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.811, 3.030), stdev = 1.306
[info]   CI (99.9%): [≈ 0, 5.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 10.000), stdev = 2.490
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 99.53% complete, ETA 00:00:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 825175.891 ops/s
[info] # Warmup Iteration   2: 1635825.389 ops/s
[info] # Warmup Iteration   3: 1698726.138 ops/s
[info] Iteration   1: 1697711.824 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1683188.528 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1684723.048 ops/s
[info]                  ·gc.alloc.rate:      3.294 MB/sec
[info]                  ·gc.alloc.rate.norm: 3.077 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1688258.131 ops/s
[info]                  ·gc.alloc.rate:      0.253 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.236 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1693282.177 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   1689432.742 ±(99.9%) 23256.781 ops/s [Average]
[info]   (min, avg, max) = (1683188.528, 1689432.742, 1697711.824), stdev = 6039.712
[info]   CI (99.9%): [1666175.961, 1712689.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.710 ±(99.9%) 5.579 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.710, 3.294), stdev = 1.449
[info]   CI (99.9%): [≈ 0, 6.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.663 ±(99.9%) 5.212 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.663, 3.077), stdev = 1.354
[info]   CI (99.9%): [≈ 0, 5.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 99.76% complete, ETA 00:00:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44690.666 ops/s
[info] # Warmup Iteration   2: 495239.764 ops/s
[info] # Warmup Iteration   3: 538051.077 ops/s
[info] Iteration   1: 582942.493 ops/s
[info]                  ·gc.alloc.rate:                   1319.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              3561.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3489.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.808 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.880 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 630796.859 ops/s
[info]                  ·gc.alloc.rate:                   931.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              2324.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2411.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.198 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.965 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 651820.200 ops/s
[info]                  ·gc.alloc.rate:                   913.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              2204.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:          961.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2320.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.251 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 652423.074 ops/s
[info]                  ·gc.alloc.rate:                   912.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              2199.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          959.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2314.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.452 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 640598.943 ops/s
[info]                  ·gc.alloc.rate:                   906.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              2226.942 B/op
[info]                  ·gc.churn.PS_Eden_Space:          960.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2360.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.696 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.167 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson":
[info]   631716.314 ±(99.9%) 110459.939 ops/s [Average]
[info]   (min, avg, max) = (582942.493, 631716.314, 652423.074), stdev = 28686.095
[info]   CI (99.9%): [521256.375, 742176.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   996.665 ±(99.9%) 696.179 MB/sec [Average]
[info]   (min, avg, max) = (906.416, 996.665, 1319.633), stdev = 180.796
[info]   CI (99.9%): [300.485, 1692.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2503.420 ±(99.9%) 2285.437 B/op [Average]
[info]   (min, avg, max) = (2199.692, 2503.420, 3561.316), stdev = 593.521
[info]   CI (99.9%): [217.983, 4788.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1028.252 ±(99.9%) 569.653 MB/sec [Average]
[info]   (min, avg, max) = (959.655, 1028.252, 1292.843), stdev = 147.937
[info]   CI (99.9%): [458.599, 1597.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2579.152 ±(99.9%) 1964.249 B/op [Average]
[info]   (min, avg, max) = (2314.077, 2579.152, 3489.019), stdev = 510.109
[info]   CI (99.9%): [614.903, 4543.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.799 ±(99.9%) 7.946 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 1.799, 5.198), stdev = 2.063
[info]   CI (99.9%): [≈ 0, 9.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.543 ±(99.9%) 19.855 B/op [Average]
[info]   (min, avg, max) = (0.251, 4.543, 12.965), stdev = 5.156
[info]   CI (99.9%): [≈ 0, 24.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.200, 23.000), stdev = 7.563
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # Run complete. Total time: 01:30:49
[info] Benchmark                                                                                (size)   Mode  Cnt         Score         Error   Units
[info] AdtBenchmark.readCirce                                                                      N/A  thrpt    5   1042080.605 ±   84078.557   ops/s
[info] AdtBenchmark.readCirce:·gc.alloc.rate                                                       N/A  thrpt    5      2186.181 ±     177.240  MB/sec
[info] AdtBenchmark.readCirce:·gc.alloc.rate.norm                                                  N/A  thrpt    5      3300.935 ±      58.823    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      2161.408 ±     718.082  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5      3267.388 ±    1250.463    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         1.022 ±       7.799  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         1.588 ±      12.183    B/op
[info] AdtBenchmark.readCirce:·gc.count                                                            N/A  thrpt    5        33.000                counts
[info] AdtBenchmark.readCirce:·gc.time                                                             N/A  thrpt    5        60.000                    ms
[info] AdtBenchmark.readJacksonScala                                                               N/A  thrpt    5   1976101.198 ±  184033.891   ops/s
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5      1280.327 ±     124.353  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5      1019.560 ±      18.186    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1242.056 ±     586.242  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5       990.203 ±     496.871    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.348 ±       2.749  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.286 ±       2.268    B/op
[info] AdtBenchmark.readJacksonScala:·gc.count                                                     N/A  thrpt    5        19.000                counts
[info] AdtBenchmark.readJacksonScala:·gc.time                                                      N/A  thrpt    5        32.000                    ms
[info] AdtBenchmark.readJsoniterScala                                                              N/A  thrpt    5   5272889.709 ±   45845.565   ops/s
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5       359.755 ±      17.658  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5       107.378 ±       5.948    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       380.055 ±     608.296  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5       113.510 ±     182.929    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.011 ±       0.060  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.003 ±       0.018    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.count                                                    N/A  thrpt    5         6.000                counts
[info] AdtBenchmark.readJsoniterScala:·gc.time                                                     N/A  thrpt    5        21.000                    ms
[info] AdtBenchmark.readPlayJson                                                                   N/A  thrpt    5    465409.887 ±   18608.224   ops/s
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate                                                    N/A  thrpt    5      2510.972 ±      74.214  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate.norm                                               N/A  thrpt    5      8491.449 ±     297.757    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2452.902 ±     691.527  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5      8295.024 ±    2333.575    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.643 ±       4.959  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         2.168 ±      16.721    B/op
[info] AdtBenchmark.readPlayJson:·gc.count                                                         N/A  thrpt    5        37.000                counts
[info] AdtBenchmark.readPlayJson:·gc.time                                                          N/A  thrpt    5        61.000                    ms
[info] AdtBenchmark.writeCirce                                                                     N/A  thrpt    5   1071455.487 ±   45767.896   ops/s
[info] AdtBenchmark.writeCirce:·gc.alloc.rate                                                      N/A  thrpt    5      2843.578 ±     145.087  MB/sec
[info] AdtBenchmark.writeCirce:·gc.alloc.rate.norm                                                 N/A  thrpt    5      4176.683 ±      77.044    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      2755.077 ±     586.449  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5      4048.452 ±     982.462    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         1.819 ±       9.325  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         2.689 ±      13.816    B/op
[info] AdtBenchmark.writeCirce:·gc.count                                                           N/A  thrpt    5        43.000                counts
[info] AdtBenchmark.writeCirce:·gc.time                                                            N/A  thrpt    5       103.000                    ms
[info] AdtBenchmark.writeJacksonScala                                                              N/A  thrpt    5   3114409.133 ±  188093.936   ops/s
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate                                               N/A  thrpt    5      1235.600 ±      68.743  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          N/A  thrpt    5       624.410 ±      10.369    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      1177.726 ±     682.890  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5       595.959 ±     367.289    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.379 ±       2.906  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.195 ±       1.502    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.count                                                    N/A  thrpt    5        18.000                counts
[info] AdtBenchmark.writeJacksonScala:·gc.time                                                     N/A  thrpt    5        33.000                    ms
[info] AdtBenchmark.writeJsoniterScala                                                             N/A  thrpt    5  20532778.182 ± 2005593.882   ops/s
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate                                              N/A  thrpt    5      1075.401 ±     109.341  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         N/A  thrpt    5        82.411 ±       1.753    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1048.067 ±     571.547  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5        80.296 ±      41.896    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.855 ±       7.105  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.068 ±       0.562    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.count                                                   N/A  thrpt    5        16.000                counts
[info] AdtBenchmark.writeJsoniterScala:·gc.time                                                    N/A  thrpt    5        44.000                    ms
[info] AdtBenchmark.writeJsoniterScalaPrealloc                                                     N/A  thrpt    5  20112174.514 ±  674902.884   ops/s
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           N/A  thrpt    5           ≈ 0                counts
[info] AdtBenchmark.writePlayJson                                                                  N/A  thrpt    5   1065373.498 ±   48848.912   ops/s
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate                                                   N/A  thrpt    5      2510.080 ±      87.601  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate.norm                                              N/A  thrpt    5      3707.839 ±     112.918    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      2392.639 ±     526.473  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      3534.712 ±     804.326    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.471 ±       3.222  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.698 ±       4.785    B/op
[info] AdtBenchmark.writePlayJson:·gc.count                                                        N/A  thrpt    5        36.000                counts
[info] AdtBenchmark.writePlayJson:·gc.time                                                         N/A  thrpt    5        59.000                    ms
[info] AnyRefsBenchmark.readCirce                                                                  N/A  thrpt    5   3797623.286 ±  150056.177   ops/s
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      3480.666 ±     178.301  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5      1442.271 ±      37.519    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      3383.212 ±     426.998  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      1402.283 ±     219.754    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.679 ±       5.446  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.285 ±       2.285    B/op
[info] AnyRefsBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        51.000                counts
[info] AnyRefsBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        73.000                    ms
[info] AnyRefsBenchmark.readDslJsonJava                                                            N/A  thrpt    5  11249449.684 ±  460225.797   ops/s
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate                                             N/A  thrpt    5      1414.226 ±      73.602  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        N/A  thrpt    5       197.818 ±       3.747    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      1364.863 ±     547.182  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5       190.875 ±      73.749    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         1.008 ±       8.285  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.143 ±       1.178    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.count                                                  N/A  thrpt    5        21.000                counts
[info] AnyRefsBenchmark.readDslJsonJava:·gc.time                                                   N/A  thrpt    5        46.000                    ms
[info] AnyRefsBenchmark.readJacksonScala                                                           N/A  thrpt    5   3607658.139 ±  318792.535   ops/s
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5      2216.334 ±     158.630  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5       967.047 ±      62.476    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      2189.172 ±     708.228  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5       956.541 ±     375.600    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.421 ±       3.178  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         0.188 ±       1.426    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5        33.000                counts
[info] AnyRefsBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        51.000                    ms
[info] AnyRefsBenchmark.readJsoniterScala                                                          N/A  thrpt    5  15014853.584 ±  982594.845   ops/s
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5      1971.604 ±      85.263  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5       206.657 ±       5.347    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5      1919.779 ±     529.451  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5       201.207 ±      54.162    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.791 ±       6.279  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.083 ±       0.659    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5        29.000                counts
[info] AnyRefsBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5        47.000                    ms
[info] AnyRefsBenchmark.readPlayJson                                                               N/A  thrpt    5   1975502.881 ±   86144.303   ops/s
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate                                                N/A  thrpt    5      3275.319 ±     147.189  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           N/A  thrpt    5      2609.219 ±      85.764    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      3139.930 ±     726.096  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      2502.138 ±     636.354    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.598 ±       4.520  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.476 ±       3.602    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.count                                                     N/A  thrpt    5        47.000                counts
[info] AnyRefsBenchmark.readPlayJson:·gc.time                                                      N/A  thrpt    5        71.000                    ms
[info] AnyRefsBenchmark.writeCirce                                                                 N/A  thrpt    5   4894969.295 ±  224087.224   ops/s
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate                                                  N/A  thrpt    5      2466.024 ±     150.375  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm                                             N/A  thrpt    5       792.804 ±      22.450    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      2378.714 ±     591.161  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5       764.911 ±     199.186    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         1.658 ±       8.992  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.540 ±       2.938    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.count                                                       N/A  thrpt    5        37.000                counts
[info] AnyRefsBenchmark.writeCirce:·gc.time                                                        N/A  thrpt    5        77.000                    ms
[info] AnyRefsBenchmark.writeDslJsonJava                                                           N/A  thrpt    5  24313294.273 ± 2047511.041   ops/s
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate                                            N/A  thrpt    5       761.323 ±      71.800  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       N/A  thrpt    5        49.276 ±       0.949    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       782.387 ±     686.747  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5        50.569 ±      42.464    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         1.067 ±       9.001  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         0.068 ±       0.574    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.count                                                 N/A  thrpt    5        12.000                counts
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.time                                                  N/A  thrpt    5        41.000                    ms
[info] AnyRefsBenchmark.writeJacksonScala                                                          N/A  thrpt    5  10559739.165 ±  998102.537   ops/s
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate                                           N/A  thrpt    5       333.685 ±      27.167  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      N/A  thrpt    5        49.742 ±       3.976    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       322.237 ±       3.242  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5        48.050 ±       4.958    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.001 ±       0.007    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.count                                                N/A  thrpt    5         5.000                counts
[info] AnyRefsBenchmark.writeJacksonScala:·gc.time                                                 N/A  thrpt    5        12.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScala                                                         N/A  thrpt    5  33969099.134 ± 3035283.154   ops/s
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          N/A  thrpt    5      1069.946 ±     109.578  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     N/A  thrpt    5        49.567 ±       1.842    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5      1046.609 ±     557.773  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5        48.458 ±      24.069    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.849 ±       7.067  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         0.040 ±       0.329    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.count                                               N/A  thrpt    5        16.000                counts
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.time                                                N/A  thrpt    5        40.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc                                                 N/A  thrpt    5  38274493.063 ± 1468388.083   ops/s
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  N/A  thrpt    5         1.187 ±      10.217  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             N/A  thrpt    5         0.049 ±       0.421    B/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       N/A  thrpt    5           ≈ 0                counts
[info] AnyRefsBenchmark.writePlayJson                                                              N/A  thrpt    5   2322000.293 ±  119951.426   ops/s
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate                                               N/A  thrpt    5      3242.013 ±     137.404  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm                                          N/A  thrpt    5      2197.252 ±      59.930    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      3148.948 ±     668.790  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5      2135.480 ±     555.012    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.142 ±       0.776  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.096 ±       0.527    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.count                                                    N/A  thrpt    5        47.000                counts
[info] AnyRefsBenchmark.writePlayJson:·gc.time                                                     N/A  thrpt    5        77.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readCirce                                                    128  thrpt    5    369122.094 ±   10519.826   ops/s
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      2193.917 ±      92.966  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5      9354.018 ±     339.056    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      2150.537 ±     715.427  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      9169.410 ±    3055.748    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.872 ±       6.714  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         3.739 ±      28.836    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.count                                          128  thrpt    5        33.000                counts
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.time                                           128  thrpt    5        51.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala                                             128  thrpt    5    907527.862 ±   52261.897   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5       789.076 ±      50.615  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5      1368.188 ±      29.379    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       777.131 ±     674.241  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5      1344.360 ±    1091.885    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.452 ±       2.742  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.775 ±       4.669    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5        12.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        21.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala                                            128  thrpt    5   1661454.599 ±  131799.986   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5      1149.297 ±      96.864  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5      1089.026 ±     119.016    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1116.736 ±     694.728  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5      1057.913 ±     655.320    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.839 ±       5.271  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.808 ±       5.101    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5        17.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        38.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readPlayJson                                                 128  thrpt    5    218109.257 ±   12097.224   ops/s
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5      4011.951 ±     267.627  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5     28945.121 ±     566.467    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      3888.483 ±     700.358  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     28049.829 ±    4201.486    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.062 ±       0.150  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.450 ±       1.066    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count                                       128  thrpt    5        58.000                counts
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        80.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeCirce                                                   128  thrpt    5    437518.112 ±   13347.322   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1435.227 ±      76.663  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5      5162.322 ±     119.818    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1373.599 ±     543.977  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      4942.776 ±    2051.460    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.899 ±       6.018  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         3.224 ±      21.536    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count                                         128  thrpt    5        21.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time                                          128  thrpt    5        41.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala                                            128  thrpt    5    997859.397 ±   76556.849   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5       474.971 ±      35.423  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5       749.075 ±      37.179    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       448.467 ±     675.603  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5       708.279 ±    1078.652    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.020 ±       0.112    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5         7.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5        12.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala                                           128  thrpt    5   2724753.443 ±  279404.966   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1311.620 ±      76.565  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5       757.785 ±      46.655    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1313.270 ±      14.081  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5       758.962 ±      81.937    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.823 ±       6.301  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         0.468 ±       3.575    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        20.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        39.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5   2808366.544 ±   19112.087   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson                                                128  thrpt    5    664588.674 ±   93664.054   ops/s
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5      1139.817 ±     652.477  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5      2712.817 ±    1898.394    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1093.699 ±     690.943  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2602.203 ±    1950.477    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         2.428 ±       8.880  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         5.840 ±      21.722    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        17.000                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time                                       128  thrpt    5        47.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readCirce                                                       128  thrpt    5     21036.919 ±    2386.345   ops/s
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1777.355 ±     440.228  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5    133086.394 ±   39981.829    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1760.357 ±     697.592  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    131673.405 ±   50491.633    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         6.808 ±      28.337  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       511.547 ±    2137.102    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.count                                             128  thrpt    5        29.000                counts
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.time                                              128  thrpt    5        70.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala                                                128  thrpt    5     41442.558 ±    4967.083   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1256.281 ±     614.963  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     47762.112 ±   24559.036    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1234.847 ±    1044.093  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     46922.628 ±   39410.813    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.150 ±       5.302  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        44.313 ±     204.504    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        19.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        61.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala                                               128  thrpt    5     50419.289 ±    7038.543   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5       805.672 ±     366.033  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5     25194.495 ±   12606.275    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       780.216 ±     640.873  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     24449.603 ±   21752.326    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         4.246 ±      14.100  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5       135.120 ±     452.831    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        13.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        85.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readPlayJson                                                    128  thrpt    5     37934.422 ±    3778.547   ops/s
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1657.583 ±     216.818  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     68811.826 ±   12436.133    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1648.871 ±      55.637  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     68431.737 ±    5629.313    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.566 ±       4.208  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        24.382 ±     182.372    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        25.000                counts
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        42.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeCirce                                                      128  thrpt    5     34045.819 ±    8963.118   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      2344.192 ±     325.705  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5    108968.144 ±   45187.679    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      2265.768 ±     890.523  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    105486.301 ±   65311.482    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         2.211 ±       7.172  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       105.474 ±     346.293    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count                                            128  thrpt    5        35.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time                                             128  thrpt    5        67.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala                                               128  thrpt    5     32708.240 ±    6221.591   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      1909.760 ±     260.411  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     92142.057 ±   26822.580    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space              128  thrpt    5         0.006 ±       0.052  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm         128  thrpt    5         0.277 ±       2.381    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.Metaspace                           128  thrpt    5         0.016 ±       0.141  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                      128  thrpt    5         0.756 ±       6.505    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1835.500 ±     557.970  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     88538.670 ±   34669.315    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen                          128  thrpt    5         1.149 ±       9.889  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm                     128  thrpt    5        52.948 ±     455.902    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         2.497 ±      13.262  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5       121.566 ±     660.749    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        30.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5       123.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala                                              128  thrpt    5     38549.452 ±    3407.530   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      2099.732 ±     288.895  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5     85769.661 ±   16850.038    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      2044.988 ±     644.480  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     83527.228 ±   28537.378    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         5.640 ±      19.778  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5       233.616 ±     820.975    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        32.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        71.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5     39973.022 ±    6172.294   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5      2088.378 ±      57.343  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5     82328.184 ±   14960.049    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space              128  thrpt    5      2031.053 ±     539.476  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm         128  thrpt    5     80174.380 ±   31930.595    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space          128  thrpt    5         1.928 ±      11.595  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5        79.489 ±     481.234    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5        31.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time                             128  thrpt    5        63.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writePlayJson                                                   128  thrpt    5      9265.997 ±     484.530   ops/s
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1262.956 ±      62.419  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5    214486.859 ±    2112.442    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1229.771 ±     565.069  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    209050.245 ±  102118.984    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.029 ±       7.386  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       173.576 ±    1244.586    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        19.000                counts
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        47.000                    ms
[info] ArrayOfBigIntsBenchmark.readCirce                                                           128  thrpt    5     21680.065 ±    3064.762   ops/s
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1860.908 ±     506.286  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5    135424.791 ±   52603.489    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1837.024 ±     484.938  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    133501.260 ±   40643.650    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         4.433 ±      29.101  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       325.204 ±    2123.074    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.count                                                 128  thrpt    5        31.000                counts
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.time                                                  128  thrpt    5        77.000                    ms
[info] ArrayOfBigIntsBenchmark.readJacksonScala                                                    128  thrpt    5     47769.248 ±   10701.347   ops/s
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1502.411 ±     773.003  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     49500.218 ±   23744.062    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1439.593 ±    1095.861  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     47260.383 ±   29079.913    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         4.029 ±      11.807  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       130.091 ±     359.467    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        23.000                counts
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5       123.000                    ms
[info] ArrayOfBigIntsBenchmark.readJsoniterScala                                                   128  thrpt    5     66945.490 ±    2622.559   ops/s
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       764.937 ±      22.114  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     17978.900 ±     618.747    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       704.445 ±     546.002  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     16583.321 ±   13613.280    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.066 ±       4.997  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        25.291 ±     119.554    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        11.000                counts
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        58.000                    ms
[info] ArrayOfBigIntsBenchmark.readPlayJson                                                        128  thrpt    5     41164.937 ±    3346.471   ops/s
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      2489.276 ±     319.854  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     95204.360 ±   14538.715    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      2445.968 ±     681.238  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     93487.746 ±   22767.113    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.392 ±       4.960  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        53.236 ±     188.623    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        37.000                counts
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        76.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJacksonScala                                                   128  thrpt    5     41595.685 ±    6070.736   ops/s
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1880.848 ±     253.405  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     71291.278 ±   19305.507    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1780.802 ±     648.773  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     67501.687 ±   29404.322    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.045 ±       7.916  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        40.003 ±     302.377    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        27.000                counts
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        44.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala                                                  128  thrpt    5     55172.282 ±    4963.032   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1753.025 ±     143.237  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5     50016.805 ±    5117.600    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1711.812 ±     581.551  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     48794.176 ±   13782.035    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         1.126 ±       9.248  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        33.072 ±     271.942    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        26.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        40.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5     54882.660 ±    7027.147   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5      1638.749 ±     100.148  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5     47013.751 ±    3595.865    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                  128  thrpt    5      1557.242 ±     527.725  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm             128  thrpt    5     44696.459 ±   16494.081    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space              128  thrpt    5         1.382 ±       8.116  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5        41.143 ±     245.727    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5        24.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                 128  thrpt    5        42.000                    ms
[info] ArrayOfBooleansBenchmark.readCirce                                                          128  thrpt    5    420086.515 ±    2916.061   ops/s
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      2297.332 ±      65.630  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5      8603.326 ±     292.392    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2245.786 ±     583.748  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      8410.701 ±    2219.092    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.250 ±       1.841  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.936 ±       6.891    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.count                                                128  thrpt    5        34.000                counts
[info] ArrayOfBooleansBenchmark.readCirce:·gc.time                                                 128  thrpt    5        47.000                    ms
[info] ArrayOfBooleansBenchmark.readDslJsonJava                                                    128  thrpt    5   1876834.276 ±   74006.573   ops/s
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate                                     128  thrpt    5       612.560 ±      40.913  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                128  thrpt    5       513.525 ±      38.060    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                            128  thrpt    5       585.606 ±     560.742  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       491.412 ±     476.635    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.025 ±       0.076  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.021 ±       0.064    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count                                          128  thrpt    5         9.000                counts
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time                                           128  thrpt    5        33.000                    ms
[info] ArrayOfBooleansBenchmark.readJacksonScala                                                   128  thrpt    5    806512.681 ±   41988.390   ops/s
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5       303.981 ±      23.367  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5       593.133 ±      23.710    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       323.768 ±       0.123  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       631.864 ±      33.229    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.008 ±       0.047  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.016 ±       0.090    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5         5.000                counts
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5        21.000                    ms
[info] ArrayOfBooleansBenchmark.readJsoniterScala                                                  128  thrpt    5   2101010.420 ±  149571.130   ops/s
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       417.720 ±      35.419  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5       312.888 ±      17.692    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       394.402 ±     564.941  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       295.878 ±     431.024    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.018 ±       0.074  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.013 ±       0.056    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         6.000                counts
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5        21.000                    ms
[info] ArrayOfBooleansBenchmark.readPlayJson                                                       128  thrpt    5    168950.026 ±    4405.154   ops/s
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      4423.664 ±     203.768  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     41203.980 ±     930.804    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      4253.053 ±     692.718  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     39615.523 ±    6329.565    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.112 ±       0.263  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.049 ±       2.486    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        63.000                counts
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.time                                              128  thrpt    5        88.000                    ms
[info] ArrayOfBooleansBenchmark.writeCirce                                                         128  thrpt    5    461906.521 ±   12943.437   ops/s
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      1520.390 ±      58.822  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5      5179.395 ±     124.648    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1439.801 ±     678.752  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      4903.943 ±    2268.530    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.918 ±       5.795  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         3.158 ±      19.981    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.count                                               128  thrpt    5        22.000                counts
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.time                                                128  thrpt    5        40.000                    ms
[info] ArrayOfBooleansBenchmark.writeDslJsonJava                                                   128  thrpt    5   2638150.286 ±  125179.652   ops/s
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate                                    128  thrpt    5      1259.477 ±      78.863  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                               128  thrpt    5       751.365 ±      26.524    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                           128  thrpt    5      1233.153 ±     568.239  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       735.201 ±     321.295    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.038 ±       8.589  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.608 ±       5.030    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count                                         128  thrpt    5        19.000                counts
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time                                          128  thrpt    5        45.000                    ms
[info] ArrayOfBooleansBenchmark.writeJacksonScala                                                  128  thrpt    5   1204291.176 ±   15752.922   ops/s
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5       571.767 ±      18.513  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5       747.212 ±      29.700    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       518.006 ±     682.154  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       677.446 ±     897.627    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.016 ±       0.057    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5         8.000                counts
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5        14.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScala                                                 128  thrpt    5   2996610.075 ±  132181.884   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1429.795 ±      82.945  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5       750.912 ±      27.841    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1387.176 ±     615.142  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       728.323 ±     310.540    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.025 ±       0.036  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.013 ±       0.019    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5        21.000                counts
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5        27.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   3236407.448 ±    7973.433   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5         0.162 ±       1.396  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5         0.079 ±       0.678    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayOfBooleansBenchmark.writePlayJson                                                      128  thrpt    5   1000134.595 ±   62022.195   ops/s
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5      1075.060 ±      87.992  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5      1691.613 ±      69.501    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1025.525 ±     557.171  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1612.870 ±     833.132    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.337 ±       3.930  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         2.101 ±       6.119    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.count                                            128  thrpt    5        16.000                counts
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.time                                             128  thrpt    5        43.000                    ms
[info] ArrayOfBytesBenchmark.readCirce                                                             128  thrpt    5    222702.143 ±    9704.063   ops/s
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      2830.759 ±     535.599  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     19999.411 ±    3238.316    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      2712.567 ±     465.076  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     19166.713 ±    2987.852    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.660 ±       3.245  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         4.621 ±      22.693    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.count                                                   128  thrpt    5        41.000                counts
[info] ArrayOfBytesBenchmark.readCirce:·gc.time                                                    128  thrpt    5        60.000                    ms
[info] ArrayOfBytesBenchmark.readJacksonScala                                                      128  thrpt    5    437204.955 ±   39736.642   ops/s
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       304.697 ±      24.407  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      1096.952 ±      31.399    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       317.881 ±       4.206  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1144.898 ±     115.883    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.431 ±       3.621  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.533 ±      12.882    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         5.000                counts
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5         9.000                    ms
[info] ArrayOfBytesBenchmark.readJsoniterScala                                                     128  thrpt    5   1293060.207 ±  127596.112   ops/s
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       255.661 ±      36.948  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       311.095 ±      17.074    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       247.955 ±     547.138  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       299.500 ±     655.243    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.003 ±       0.017  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.003 ±       0.022    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         4.000                counts
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        14.000                    ms
[info] ArrayOfBytesBenchmark.readPlayJson                                                          128  thrpt    5    123918.005 ±    6475.808   ops/s
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      4090.281 ±     173.113  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     51946.562 ±    1114.848    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      3902.952 ±     630.477  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     49588.839 ±   10038.164    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.096 ±       0.338  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.214 ±       4.253    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        58.000                counts
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        81.000                    ms
[info] ArrayOfBytesBenchmark.writeCirce                                                            128  thrpt    5    344122.322 ±   13345.949   ops/s
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1881.428 ±      38.714  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5      8604.664 ±     270.876    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1823.248 ±     658.771  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      8341.834 ±    3180.808    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.748 ±       2.603  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         3.414 ±      11.892    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        28.000                counts
[info] ArrayOfBytesBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        53.000                    ms
[info] ArrayOfBytesBenchmark.writeJacksonScala                                                     128  thrpt    5   2261366.405 ±  116560.208   ops/s
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       630.209 ±      34.272  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       438.566 ±      16.992    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       652.391 ±       6.366  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       454.061 ±      26.341    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.765 ±       6.420  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.540 ±       4.538    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        10.000                counts
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        39.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScala                                                    128  thrpt    5   3458146.208 ±  212210.849   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       961.545 ±      33.610  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       437.581 ±      14.234    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       985.551 ±      11.410  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       448.571 ±      32.822    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.794 ±       5.981  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.368 ±       2.787    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        15.000                counts
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        38.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   3642261.617 ±   50883.966   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         4.940 ±      37.550  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         2.141 ±      16.278    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfBytesBenchmark.writePlayJson                                                         128  thrpt    5     57269.465 ±   13567.554   ops/s
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      2107.177 ±     162.800  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     58139.494 ±   19000.097    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2087.982 ±     722.911  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     57706.631 ±   30924.524    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.378 ±       9.369  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        37.300 ±     247.597    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        32.000                counts
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        68.000                    ms
[info] ArrayOfCharsBenchmark.readCirce                                                             128  thrpt    5    288693.544 ±   29474.507   ops/s
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      3137.672 ±     106.281  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     17110.879 ±    1368.952    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      3063.838 ±     527.431  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     16702.521 ±    2466.964    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.409 ±       2.986  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         2.319 ±      17.104    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        46.000                counts
[info] ArrayOfCharsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        63.000                    ms
[info] ArrayOfCharsBenchmark.readJacksonScala                                                      128  thrpt    5    683432.636 ±   23429.429   ops/s
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1883.881 ±      44.008  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      4338.538 ±     148.200    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1786.090 ±     704.231  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      4113.816 ±    1650.910    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.196 ±       1.290  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.450 ±       2.961    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        27.000                counts
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        41.000                    ms
[info] ArrayOfCharsBenchmark.readJsoniterScala                                                     128  thrpt    5   2874709.727 ±  144139.807   ops/s
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1022.496 ±      44.968  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       559.687 ±       6.029    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       987.185 ±      13.999  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       540.408 ±      22.467    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.806 ±       6.674  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.437 ±       3.616    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        15.000                counts
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        36.000                    ms
[info] ArrayOfCharsBenchmark.readPlayJson                                                          128  thrpt    5    131634.014 ±    9364.489   ops/s
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      4324.779 ±     272.180  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     51725.170 ±    6839.798    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      4221.464 ±     617.196  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     50483.887 ±    8776.397    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.115 ±       8.158  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        13.707 ±     100.891    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        63.000                counts
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5       102.000                    ms
[info] ArrayOfCharsBenchmark.writeCirce                                                            128  thrpt    5    316691.348 ±    6328.429   ops/s
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      2506.730 ±     122.828  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     12457.311 ±     424.078    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2373.639 ±     571.930  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     11796.962 ±    2898.656    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.339 ±       2.262  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.696 ±      11.332    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        36.000                counts
[info] ArrayOfCharsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        63.000                    ms
[info] ArrayOfCharsBenchmark.writeJacksonScala                                                     128  thrpt    5   2099016.959 ±  112609.796   ops/s
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       743.688 ±      48.507  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       557.662 ±      36.557    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       716.383 ±     558.659  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       537.082 ±     415.262    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.902 ±       5.928  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.683 ±       4.521    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        11.000                counts
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        42.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScala                                                    128  thrpt    5   2778509.536 ±   92187.684   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       973.805 ±      41.224  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       551.554 ±       9.877    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       985.036 ±      13.523  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       557.965 ±      25.115    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.852 ±       6.281  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.483 ±       3.565    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        15.000                counts
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        37.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   2918137.068 ±   94486.558   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.160 ±       1.378  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.087 ±       0.749    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfCharsBenchmark.writePlayJson                                                         128  thrpt    5    752018.448 ±   11440.744   ops/s
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      4584.999 ±     136.322  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      9594.171 ±     187.697    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      4390.780 ±     168.202  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      9187.891 ±     352.757    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.050 ±       0.193  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.105 ±       0.405    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        65.000                counts
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        99.000                    ms
[info] ArrayOfDoublesBenchmark.readCirce                                                           128  thrpt    5     28896.297 ±    1749.119   ops/s
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1781.079 ±     136.176  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     97027.659 ±   11331.477    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1753.772 ±     667.702  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     95555.662 ±   38143.034    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         2.047 ±       9.053  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       112.693 ±     504.062    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.count                                                 128  thrpt    5        27.000                counts
[info] ArrayOfDoublesBenchmark.readCirce:·gc.time                                                  128  thrpt    5        69.000                    ms
[info] ArrayOfDoublesBenchmark.readDslJsonJava                                                     128  thrpt    5     97224.505 ±   12113.275   ops/s
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       853.329 ±     318.822  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5     13843.964 ±    6365.903    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       802.777 ±     484.409  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     13041.225 ±    8807.461    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         4.895 ±       9.906  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        79.120 ±     156.806    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count                                           128  thrpt    5        14.000                counts
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time                                            128  thrpt    5       136.000                    ms
[info] ArrayOfDoublesBenchmark.readJacksonScala                                                    128  thrpt    5     83032.952 ±   21373.267   ops/s
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1375.923 ±     522.815  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     26311.066 ±   17227.136    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1362.420 ±    1034.072  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     26116.415 ±   25383.280    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         2.930 ±      10.463  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        58.093 ±     216.137    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        21.000                counts
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        47.000                    ms
[info] ArrayOfDoublesBenchmark.readJsoniterScala                                                   128  thrpt    5    132697.468 ±   22966.148   ops/s
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1041.334 ±     810.408  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     12402.063 ±   10480.377    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1014.947 ±     632.684  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     12067.123 ±    8093.067    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         7.679 ±      25.487  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        92.179 ±     304.801    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        17.000                counts
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5       108.000                    ms
[info] ArrayOfDoublesBenchmark.readPlayJson                                                        128  thrpt    5     48254.614 ±    4820.405   ops/s
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      2081.284 ±      71.487  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     67920.555 ±    7508.738    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      2018.688 ±     530.787  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     65867.590 ±   17950.948    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.381 ±      11.354  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        45.117 ±     371.121    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        31.000                counts
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        55.000                    ms
[info] ArrayOfDoublesBenchmark.writeCirce                                                          128  thrpt    5     42192.645 ±    7289.595   ops/s
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5       862.327 ±     521.348  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     32384.900 ±   24589.047    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5       833.932 ±     683.270  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     31371.856 ±   30172.220    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         3.083 ±       9.038  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       115.596 ±     337.725    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.count                                                128  thrpt    5        13.000                counts
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        64.000                    ms
[info] ArrayOfDoublesBenchmark.writeJacksonScala                                                   128  thrpt    5     43156.722 ±    7191.379   ops/s
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       639.437 ±     680.285  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     23560.550 ±   29356.700    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       648.226 ±     879.092  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     23920.978 ±   35969.173    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.957 ±       3.617  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        36.088 ±     138.015    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        10.000                counts
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        50.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScala                                                  128  thrpt    5     48127.552 ±    4128.021   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       523.976 ±     203.001  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5     17161.747 ±    8126.213    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       520.139 ±     683.914  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     17067.919 ±   23134.278    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.788 ±       4.698  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        25.656 ±     150.995    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5         8.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        43.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5     49196.936 ±    5792.853   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5       572.370 ±     160.810  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5     18348.539 ±    7270.146    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                  128  thrpt    5       521.823 ±     687.708  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm             128  thrpt    5     16769.358 ±   22938.701    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space              128  thrpt    5         1.128 ±       6.528  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5        36.078 ±     206.438    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5         8.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                 128  thrpt    5        36.000                    ms
[info] ArrayOfDurationsBenchmark.readCirce                                                         128  thrpt    5     16744.119 ±    2162.900   ops/s
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      1269.370 ±     371.222  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5    119545.042 ±   46500.918    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1242.463 ±     828.585  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    116983.286 ±   84754.346    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         2.056 ±      11.444  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       190.485 ±    1049.647    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.count                                               128  thrpt    5        20.000                counts
[info] ArrayOfDurationsBenchmark.readCirce:·gc.time                                                128  thrpt    5       103.000                    ms
[info] ArrayOfDurationsBenchmark.readJacksonScala                                                  128  thrpt    5     16815.440 ±    1652.640   ops/s
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1236.635 ±     765.442  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5    116114.732 ±   83250.737    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1235.560 ±     853.079  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5    116055.845 ±   91253.058    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         1.614 ±       8.973  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5       149.061 ±     825.198    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        20.000                counts
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5       110.000                    ms
[info] ArrayOfDurationsBenchmark.readJsoniterScala                                                 128  thrpt    5    159339.744 ±    4254.514   ops/s
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       426.663 ±      29.137  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      4213.366 ±     203.101    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       390.681 ±     558.504  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      3853.271 ±    5417.520    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.096 ±       0.694  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.949 ±       6.879    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5         6.000                counts
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5         8.000                    ms
[info] ArrayOfDurationsBenchmark.readPlayJson                                                      128  thrpt    5     15785.431 ±    1218.015   ops/s
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      1448.603 ±     425.352  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    144428.022 ±   42337.039    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1393.712 ±     721.391  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    138811.081 ±   66324.775    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.999 ±       8.466  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       101.395 ±     859.764    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        22.000                counts
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        35.000                    ms
[info] ArrayOfDurationsBenchmark.writeCirce                                                        128  thrpt    5     66950.281 ±    6046.234   ops/s
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1585.336 ±     121.617  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     37294.098 ±    6254.505    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1564.760 ±     560.509  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     36822.331 ±   14688.013    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.488 ±      11.410  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        36.322 ±     279.726    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.count                                              128  thrpt    5        24.000                counts
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.time                                               128  thrpt    5        46.000                    ms
[info] ArrayOfDurationsBenchmark.writeJacksonScala                                                 128  thrpt    5    106928.388 ±    5345.956   ops/s
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1424.876 ±      57.454  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     20969.918 ±     628.576    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1366.765 ±     554.568  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     20111.319 ±    7942.517    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.936 ±       5.455  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        13.917 ±      81.643    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        21.000                counts
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        45.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScala                                                128  thrpt    5    271912.688 ±    5211.735   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       444.053 ±       9.885  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      2570.119 ±      89.606    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       460.070 ±     693.360  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2666.968 ±    4071.654    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.072 ±       0.414    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         7.000                counts
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        27.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    286107.007 ±    2080.691   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         0.728 ±       6.262  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         3.997 ±      34.399    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] ArrayOfDurationsBenchmark.writePlayJson                                                     128  thrpt    5     87603.001 ±   35592.668   ops/s
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1870.588 ±     856.687  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     34064.377 ±   25418.091    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1873.089 ±     666.703  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     34057.943 ±   21839.635    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5        17.194 ±      68.882  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       339.106 ±    1473.738    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        37.000                counts
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.time                                            128  thrpt    5       239.000                    ms
[info] ArrayOfEnumsBenchmark.readCirce                                                             128  thrpt    5    126713.577 ±   10654.152   ops/s
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      1655.806 ±     466.784  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     20595.073 ±    7637.932    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1630.183 ±     875.697  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     20291.847 ±   12459.524    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         1.238 ±       4.736  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        15.341 ±      58.056    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        25.000                counts
[info] ArrayOfEnumsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        52.000                    ms
[info] ArrayOfEnumsBenchmark.readJacksonScala                                                      128  thrpt    5    153234.532 ±   12077.498   ops/s
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       913.369 ±      72.877  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      9381.333 ±     329.398    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       839.358 ±     686.290  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      8620.906 ±    7019.975    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.069 ±       5.457  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        10.846 ±      54.846    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        13.000                counts
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        46.000                    ms
[info] ArrayOfEnumsBenchmark.readJsoniterScala                                                     128  thrpt    5    220211.660 ±   16122.417   ops/s
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       149.506 ±      44.144  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1068.042 ±     275.316    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       116.172 ±     619.761  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       820.533 ±    4374.862    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.153 ±       1.314  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.081 ±       9.310    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         2.000                counts
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5         9.000                    ms
[info] ArrayOfEnumsBenchmark.readPlayJson                                                          128  thrpt    5     81944.956 ±    5794.993   ops/s
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2602.946 ±     122.184  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     49991.960 ±    2552.348    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2527.316 ±     642.603  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     48566.810 ±   14192.865    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.640 ±       5.062  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        12.658 ±     100.457    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        38.000                counts
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        62.000                    ms
[info] ArrayOfEnumsBenchmark.writeCirce                                                            128  thrpt    5    230144.204 ±    8862.305   ops/s
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1496.870 ±      70.032  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     10237.142 ±     139.991    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1434.198 ±     680.355  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      9808.343 ±    4622.624    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.885 ±       5.096  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         6.125 ±      35.360    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        22.000                counts
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        49.000                    ms
[info] ArrayOfEnumsBenchmark.writeJacksonScala                                                     128  thrpt    5    770354.150 ±   22570.373   ops/s
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       608.238 ±      27.435  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1242.590 ±      32.945    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       580.968 ±     553.048  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1185.893 ±    1116.869    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.021 ±       0.098  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.043 ±       0.202    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        15.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScala                                                    128  thrpt    5    671633.810 ±   45166.161   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       532.251 ±      22.995  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1247.259 ±      47.053    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       526.263 ±     694.855  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1237.260 ±    1676.868    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.020 ±       0.062  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.048 ±       0.147    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5         8.000                counts
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        28.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    668568.537 ±   51064.496   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.836 ±       5.554  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         1.988 ±      13.264    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfEnumsBenchmark.writePlayJson                                                         128  thrpt    5    598629.865 ±   99011.204   ops/s
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1498.378 ±      84.296  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      3943.231 ±     508.592    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1448.005 ±     668.571  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      3819.948 ±    2176.060    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.494 ±       3.315  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.286 ±       8.457    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        22.000                counts
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        38.000                    ms
[info] ArrayOfFloatsBenchmark.readCirce                                                            128  thrpt    5     41229.378 ±    7118.618   ops/s
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      2031.475 ±     384.566  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5     77781.267 ±   27242.686    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2032.218 ±     529.928  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     77879.176 ±   33874.972    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         1.706 ±      13.706  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        68.609 ±     553.938    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.count                                                  128  thrpt    5        32.000                counts
[info] ArrayOfFloatsBenchmark.readCirce:·gc.time                                                   128  thrpt    5        75.000                    ms
[info] ArrayOfFloatsBenchmark.readDslJsonJava                                                      128  thrpt    5    303415.324 ±    3879.653   ops/s
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       319.819 ±       7.447  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5      1658.678 ±      57.861    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       260.226 ±     560.157  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1351.572 ±    2909.387    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.006 ±       0.048  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.032 ±       0.247    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count                                            128  thrpt    5         4.000                counts
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time                                             128  thrpt    5        16.000                    ms
[info] ArrayOfFloatsBenchmark.readJacksonScala                                                     128  thrpt    5    121786.694 ±    7150.145   ops/s
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1134.067 ±      82.682  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     14654.500 ±     473.880    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1104.791 ±     695.136  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     14263.515 ±    8514.346    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.574 ±       3.520  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         7.397 ±      44.981    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        17.000                counts
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        27.000                    ms
[info] ArrayOfFloatsBenchmark.readJsoniterScala                                                    128  thrpt    5    556983.205 ±   34765.470   ops/s
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       373.172 ±      21.038  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1054.265 ±      15.217    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       327.956 ±       1.737  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       926.691 ±      56.210    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.007 ±       0.058  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.019 ±       0.163    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        19.000                    ms
[info] ArrayOfFloatsBenchmark.readPlayJson                                                         128  thrpt    5     52473.591 ±    4503.305   ops/s
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      2315.719 ±     367.629  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     69496.082 ±   14464.545    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2254.852 ±     581.241  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     67674.347 ±   19591.020    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.742 ±       5.765  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        22.838 ±     177.843    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        34.000                counts
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        54.000                    ms
[info] ArrayOfFloatsBenchmark.writeCirce                                                           128  thrpt    5     93257.173 ±    2691.873   ops/s
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5       744.225 ±      24.463  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5     12559.093 ±     286.807    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5       710.295 ±     553.899  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     11997.399 ±    9666.454    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         1.096 ±       6.385  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        18.351 ±     106.671    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        11.000                counts
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        51.000                    ms
[info] ArrayOfFloatsBenchmark.writeDslJsonJava                                                     128  thrpt    5    122405.034 ±    4611.146   ops/s
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       466.774 ±      17.629  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5      6001.727 ±     316.962    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       455.302 ±     687.790  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      5867.455 ±    9031.888    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.014 ±       0.049  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.178 ±       0.640    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count                                           128  thrpt    5         7.000                counts
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time                                            128  thrpt    5        26.000                    ms
[info] ArrayOfFloatsBenchmark.writeJacksonScala                                                    128  thrpt    5    104201.504 ±    7842.694   ops/s
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       394.381 ±      27.377  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5      5956.681 ±     230.233    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       390.048 ±     562.069  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      5916.801 ±    8962.477    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.037 ±       0.280  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.577 ±       4.337    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         6.000                counts
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        28.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScala                                                   128  thrpt    5    123458.723 ±    6453.924   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       471.066 ±      42.269  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      6003.685 ±     378.608    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       459.647 ±     692.523  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      5855.438 ±    8777.779    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.115 ±       0.932  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.503 ±      12.162    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        28.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    122867.516 ±    1049.008   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5       366.569 ±       8.209  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5      4695.348 ±      93.621    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                   128  thrpt    5       327.217 ±       2.091  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm              128  thrpt    5      4191.309 ±      26.684    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.011 ±       0.070  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         0.140 ±       0.888    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                  128  thrpt    5        19.000                    ms
[info] ArrayOfInstantsBenchmark.readCirce                                                          128  thrpt    5     12586.614 ±    4978.889   ops/s
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      2147.766 ±    1242.086  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5    274822.117 ±  300369.692    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2101.980 ±    1273.142  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    269043.517 ±  295846.176    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         5.237 ±      27.564  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       729.459 ±    4019.360    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.count                                                128  thrpt    5        35.000                counts
[info] ArrayOfInstantsBenchmark.readCirce:·gc.time                                                 128  thrpt    5       136.000                    ms
[info] ArrayOfInstantsBenchmark.readJacksonScala                                                   128  thrpt    5     13030.779 ±    1583.707   ops/s
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1881.809 ±     144.982  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5    227558.288 ±   46704.946    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1828.548 ±     669.881  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    221266.174 ±   97609.597    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.224 ±       6.366  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       151.750 ±     796.118    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5        28.000                counts
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5        52.000                    ms
[info] ArrayOfInstantsBenchmark.readJsoniterScala                                                  128  thrpt    5    221129.889 ±   17764.449   ops/s
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       602.723 ±      75.636  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      4291.340 ±     689.255    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       583.255 ±     554.996  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      4154.273 ±    3990.972    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.599 ±       4.992  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         4.243 ±      35.381    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         9.000                counts
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5        35.000                    ms
[info] ArrayOfInstantsBenchmark.readPlayJson                                                       128  thrpt    5      6973.513 ±      74.023   ops/s
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      1787.389 ±      54.865  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5    403381.043 ±   13451.358    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1783.442 ±     681.770  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    402575.413 ±  158166.017    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.677 ±       4.003  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       153.003 ±     906.031    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        27.000                counts
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.time                                              128  thrpt    5        46.000                    ms
[info] ArrayOfInstantsBenchmark.writeCirce                                                         128  thrpt    5     33118.167 ±    7977.470   ops/s
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      2212.380 ±     713.734  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5    105598.157 ±   49065.203    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2176.400 ±     853.710  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    104042.433 ±   60374.996    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         8.858 ±      46.173  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       443.884 ±    2313.395    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.count                                               128  thrpt    5        38.000                counts
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.time                                                128  thrpt    5       242.000                    ms
[info] ArrayOfInstantsBenchmark.writeJacksonScala                                                  128  thrpt    5     37786.940 ±    7046.394   ops/s
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1991.099 ±     773.211  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5     83269.668 ±   44000.613    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1987.532 ±     517.711  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     82977.165 ±   29098.288    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         7.765 ±      30.408  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5       333.029 ±    1303.724    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5        34.000                counts
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5       125.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScala                                                 128  thrpt    5    316423.614 ±   12246.083   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       723.814 ±      24.556  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      3599.737 ±     135.425    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       724.114 ±     571.539  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      3599.882 ±    2801.402    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.803 ±       5.092  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         3.973 ±      25.211    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5        11.000                counts
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5        37.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    353466.407 ±   14900.713   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayOfInstantsBenchmark.writePlayJson                                                      128  thrpt    5     37518.256 ±   14060.718   ops/s
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5      2598.634 ±     603.237  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    110242.287 ±   66269.503    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      2622.937 ±     723.992  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    111504.841 ±   78228.894    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5        27.522 ±     126.140  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5      1279.520 ±    6412.940    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.count                                            128  thrpt    5        48.000                counts
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.time                                             128  thrpt    5       363.000                    ms
[info] ArrayOfIntsBenchmark.readCirce                                                              128  thrpt    5    179248.308 ±   10412.088   ops/s
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      2524.097 ±     206.694  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5     22160.999 ±     729.885    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2443.347 ±     702.782  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     21450.545 ±    5851.393    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.183 ±       0.892  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.633 ±       8.051    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.count                                                    128  thrpt    5        37.000                counts
[info] ArrayOfIntsBenchmark.readCirce:·gc.time                                                     128  thrpt    5        57.000                    ms
[info] ArrayOfIntsBenchmark.readDslJsonJava                                                        128  thrpt    5    548403.754 ±   49610.864   ops/s
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate                                         128  thrpt    5       585.107 ±      67.457  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                    128  thrpt    5      1678.822 ±      62.329    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                128  thrpt    5       585.369 ±     560.234  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1677.088 ±    1571.772    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.023 ±       0.107  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.066 ±       0.303    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.count                                              128  thrpt    5         9.000                counts
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.time                                               128  thrpt    5        35.000                    ms
[info] ArrayOfIntsBenchmark.readJacksonScala                                                       128  thrpt    5    519352.184 ±   16203.555   ops/s
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5       507.129 ±      27.844  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1536.621 ±      45.523    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       507.974 ±     668.966  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1536.531 ±    1992.985    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.360 ±       2.967  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.085 ±       8.936    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5         8.000                counts
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5        12.000                    ms
[info] ArrayOfIntsBenchmark.readJsoniterScala                                                      128  thrpt    5    676980.022 ±   63010.203   ops/s
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       457.416 ±      19.067  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      1063.636 ±      72.559    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       459.720 ±     691.064  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1070.246 ±    1625.246    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.019 ±       0.109  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.044 ±       0.248    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5        30.000                    ms
[info] ArrayOfIntsBenchmark.readPlayJson                                                           128  thrpt    5    106122.413 ±    1572.629   ops/s
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      3470.455 ±      88.531  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     51463.053 ±    1038.930    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      3355.073 ±     779.704  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     49747.107 ±   11147.898    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.699 ±       5.706  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        10.344 ±      84.433    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        50.000                counts
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        71.000                    ms
[info] ArrayOfIntsBenchmark.writeCirce                                                             128  thrpt    5    241481.490 ±   11380.244   ops/s
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate                                              128  thrpt    5      1726.797 ±      95.940  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                         128  thrpt    5     11253.154 ±     232.655    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1636.561 ±      36.136  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     10666.331 ±     483.065    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.582 ±       2.649  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         3.792 ±      17.209    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.count                                                   128  thrpt    5        25.000                counts
[info] ArrayOfIntsBenchmark.writeCirce:·gc.time                                                    128  thrpt    5        43.000                    ms
[info] ArrayOfIntsBenchmark.writeDslJsonJava                                                       128  thrpt    5   1190891.454 ±  116820.053   ops/s
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate                                        128  thrpt    5       667.930 ±      68.870  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                   128  thrpt    5       882.689 ±      28.435    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                               128  thrpt    5       650.050 ±       6.128  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       859.541 ±      90.992    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.872 ±       7.336  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.195 ±      10.059    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count                                             128  thrpt    5        10.000                counts
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time                                              128  thrpt    5        36.000                    ms
[info] ArrayOfIntsBenchmark.writeJacksonScala                                                      128  thrpt    5   1224562.943 ±   20739.580   ops/s
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5       684.455 ±      19.685  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5       879.611 ±      13.353    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       650.205 ±       7.850  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       835.619 ±      20.588    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.844 ±       7.102  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.091 ±       9.183    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5        10.000                counts
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5        38.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScala                                                     128  thrpt    5   1123493.303 ±   72528.594   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       629.225 ±      30.996  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       881.381 ±      20.000    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       592.371 ±     566.772  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       831.645 ±     818.090    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.587 ±       4.968  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.832 ±       7.042    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5        36.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5   1133323.089 ±   81375.186   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5         9.645 ±      66.690  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5        13.712 ±      95.638    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] ArrayOfIntsBenchmark.writePlayJson                                                          128  thrpt    5     38275.462 ±    5535.129   ops/s
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5      1880.547 ±     243.850  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     77431.122 ±   17718.549    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1881.038 ±     553.447  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     77437.052 ±   25996.147    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.714 ±       8.508  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        72.514 ±     359.218    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.count                                                128  thrpt    5        29.000                counts
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5        65.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readCirce                                                         128  thrpt    5    140438.676 ±    8058.658   ops/s
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      1806.709 ±     221.542  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5     20256.557 ±    3588.189    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1753.397 ±     677.705  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     19657.568 ±    7927.928    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         2.565 ±       6.117  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        28.740 ±      68.118    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.count                                               128  thrpt    5        28.000                counts
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.time                                                128  thrpt    5       100.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala                                                  128  thrpt    5    204656.641 ±   19984.359   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1221.884 ±     103.995  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      9396.033 ±     192.322    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1218.015 ±     539.785  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      9379.163 ±    4551.748    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         1.751 ±       6.876  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        13.444 ±      52.631    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        19.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5        61.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala                                                 128  thrpt    5    246732.681 ±   14542.977   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1321.522 ±      57.864  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      8429.746 ±     145.828    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1291.248 ±      16.944  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      8238.038 ±     575.297    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.324 ±       5.526  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         8.442 ±      35.171    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        20.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        48.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readPlayJson                                                      128  thrpt    5     98547.915 ±   14226.806   ops/s
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      3329.457 ±     123.116  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     53218.997 ±    6571.599    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      3274.039 ±     535.924  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     52340.405 ±   11214.086    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.244 ±       6.554  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        20.539 ±     110.154    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        49.000                counts
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        79.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeCirce                                                        128  thrpt    5    245664.216 ±    5896.272   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1601.750 ±      58.753  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     10259.283 ±     227.922    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1569.332 ±     565.249  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     10049.072 ±    3492.302    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.145 ±       7.471  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         7.353 ±      47.992    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count                                              128  thrpt    5        24.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time                                               128  thrpt    5        48.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala                                                 128  thrpt    5    859961.656 ±   15512.628   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       680.530 ±      37.016  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5      1245.414 ±      52.175    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       648.304 ±      15.531  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      1186.511 ±      48.158    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.031 ±       0.123    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        10.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        16.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala                                                128  thrpt    5    673341.061 ±   36964.278   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       536.109 ±      51.982  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      1253.106 ±     124.902    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       525.953 ±     694.209  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      1229.717 ±    1627.236    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.029 ±       0.103    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         8.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        27.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    682051.844 ±   37952.034   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         0.168 ±       1.447  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         0.386 ±       3.314    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson                                                     128  thrpt    5    617823.004 ±   18721.896   ops/s
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1527.682 ±      32.008  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5      3891.309 ±     138.791    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1452.259 ±     698.971  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      3701.595 ±    1878.303    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.406 ±       3.184  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.037 ±       8.140    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        22.000                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        37.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readCirce                                                    128  thrpt    5     11715.193 ±     575.359   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      1495.502 ±     237.984  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5    200917.918 ±   35024.374    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      1427.105 ±     674.660  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    191754.684 ±   92583.588    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.575 ±       7.237  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       213.144 ±     990.860    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count                                          128  thrpt    5        22.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time                                           128  thrpt    5        50.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala                                             128  thrpt    5     11857.064 ±     622.936   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5      1386.560 ±      91.384  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5    184016.023 ±    3708.462    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5      1298.296 ±      53.274  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5    172326.016 ±    9220.466    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.121 ±       0.776  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5        16.029 ±     102.777    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5        20.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        31.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala                                            128  thrpt    5    319488.748 ±    8413.799   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5      2150.251 ±      83.170  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5     10592.085 ±     318.708    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      2096.886 ±     697.263  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     10328.569 ±    3384.969    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.964 ±       6.533  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         4.759 ±      32.311    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5        32.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        53.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson                                                 128  thrpt    5      9973.439 ±    1715.326   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5      1747.413 ±     109.890  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5    276065.971 ±   38032.600    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      1711.931 ±     595.375  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5    270333.946 ±   90745.273    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.423 ±       1.430  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        67.984 ±     230.741    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count                                       128  thrpt    5        26.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        43.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeCirce                                                   128  thrpt    5     27533.832 ±    4545.698   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1540.600 ±     599.249  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5     88276.329 ±   42027.008    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1529.654 ±     543.510  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     87686.298 ±   39384.180    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.912 ±       6.690  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       112.315 ±     396.364    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count                                         128  thrpt    5        24.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time                                          128  thrpt    5       130.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala                                            128  thrpt    5     30950.089 ±    7986.914   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5      1300.142 ±     338.362  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5     66534.845 ±   33001.411    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1294.199 ±     898.140  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     66582.219 ±   62159.345    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.553 ±       4.403  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5        30.764 ±     247.379    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5        20.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5        59.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala                                           128  thrpt    5    772015.174 ±   62381.859   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1438.719 ±     102.140  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5      2933.238 ±      81.950    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1380.308 ±     564.425  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5      2820.154 ±    1418.282    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.841 ±       5.131  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         1.718 ±      10.382    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        21.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        39.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5    928676.264 ±    4783.321   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson                                                128  thrpt    5     30352.655 ±    4386.225   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5      1499.786 ±     595.566  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5     77853.845 ±   33619.456    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1465.043 ±     623.667  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     76116.161 ±   37128.191    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         3.115 ±       9.986  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       162.508 ±     527.596    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        24.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time                                       128  thrpt    5       160.000                    ms
[info] ArrayOfLocalDatesBenchmark.readCirce                                                        128  thrpt    5     46527.610 ±    9392.550   ops/s
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate                                         128  thrpt    5      2270.927 ±    1472.065  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm                                    128  thrpt    5     76508.895 ±   38792.581    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      2215.126 ±    1106.614  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     74800.024 ±   29832.245    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         5.375 ±      15.717  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       177.483 ±     512.965    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.count                                              128  thrpt    5        36.000                counts
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.time                                               128  thrpt    5        97.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJacksonScala                                                 128  thrpt    5     42273.096 ±   16337.722   ops/s
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1597.151 ±     909.535  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     59529.556 ±   27526.449    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm           128  thrpt    5         0.134 ±       1.152    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Metaspace                             128  thrpt    5         0.012 ±       0.101  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                        128  thrpt    5         0.376 ±       3.238    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1586.555 ±    1408.999  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     58873.838 ±   39810.380    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                            128  thrpt    5         0.260 ±       2.240  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                       128  thrpt    5         8.365 ±      72.025    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         3.604 ±      14.178  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5       126.194 ±     473.114    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count                                       128  thrpt    5        26.000                counts
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time                                        128  thrpt    5       142.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala                                                128  thrpt    5    529848.448 ±   28382.106   ops/s
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      1421.074 ±      69.612  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      4220.748 ±     104.558    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1373.947 ±     555.967  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4084.737 ±    1837.286    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.827 ±       4.882  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.489 ±      14.689    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count                                      128  thrpt    5        21.000                counts
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time                                       128  thrpt    5        36.000                    ms
[info] ArrayOfLocalDatesBenchmark.readPlayJson                                                     128  thrpt    5     21504.763 ±    3535.358   ops/s
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate                                      128  thrpt    5      2109.373 ±     406.854  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm                                 128  thrpt    5    154666.338 ±   44655.413    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      2091.506 ±     668.415  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5    153258.455 ±   54229.248    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.904 ±       3.153  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        67.922 ±     238.818    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count                                           128  thrpt    5        32.000                counts
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time                                            128  thrpt    5        51.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeCirce                                                       128  thrpt    5     68449.706 ±    8527.276   ops/s
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate                                        128  thrpt    5      1832.674 ±      92.900  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm                                   128  thrpt    5     42161.754 ±    4206.136    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1756.528 ±     681.050  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     40379.324 ±   14422.242    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.742 ±       8.798  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        41.405 ±     214.616    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.count                                             128  thrpt    5        27.000                counts
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.time                                              128  thrpt    5        60.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala                                                128  thrpt    5    203183.248 ±   13286.822   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1584.933 ±     123.522  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     12275.305 ±     338.877    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1503.408 ±     689.829  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     11653.928 ±    5653.472    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.054 ±       0.108  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.417 ±       0.799    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count                                      128  thrpt    5        23.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time                                       128  thrpt    5        33.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala                                               128  thrpt    5    857453.557 ±   51951.833   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate                                128  thrpt    5       952.934 ±      69.642  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1748.920 ±      48.143    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       920.648 ±     562.307  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1689.453 ±    1024.226    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.840 ±       5.313  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.542 ±       9.805    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count                                     128  thrpt    5        14.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time                                      128  thrpt    5        36.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5    918314.409 ±    5504.992   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                        128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                   128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count                             128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson                                                    128  thrpt    5     92924.645 ±    2912.150   ops/s
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate                                     128  thrpt    5      1938.144 ±      87.958  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm                                128  thrpt    5     32826.187 ±    1048.779    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1833.889 ±     660.218  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     31057.283 ±   10988.098    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.108 ±       8.783  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        18.976 ±     150.665    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count                                          128  thrpt    5        28.000                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time                                           128  thrpt    5        44.000                    ms
[info] ArrayOfLocalTimesBenchmark.readCirce                                                        128  thrpt    5     17406.592 ±    4062.444   ops/s
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate                                         128  thrpt    5      1732.209 ±     698.947  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm                                    128  thrpt    5    157794.513 ±   99211.477    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1722.348 ±     682.847  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    156889.974 ±   97725.386    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         2.436 ±      14.150  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       235.497 ±    1409.569    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.count                                              128  thrpt    5        27.000                counts
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.time                                               128  thrpt    5       130.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJacksonScala                                                 128  thrpt    5     18200.598 ±    2161.848   ops/s
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1546.917 ±     420.725  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5    133819.661 ±   39325.701    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1494.504 ±     678.146  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5    129394.952 ±   64311.203    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.561 ±       8.018  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5       134.890 ±     692.229    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count                                       128  thrpt    5        23.000                counts
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time                                        128  thrpt    5        61.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala                                                128  thrpt    5    798035.224 ±   35642.349   ops/s
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      2150.789 ±     111.524  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      4241.099 ±     163.823    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      2050.659 ±     523.049  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4042.505 ±     926.337    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.241 ±       1.766  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.481 ±       3.523    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count                                      128  thrpt    5        31.000                counts
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time                                       128  thrpt    5        42.000                    ms
[info] ArrayOfLocalTimesBenchmark.readPlayJson                                                     128  thrpt    5     14364.796 ±    1061.667   ops/s
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate                                      128  thrpt    5      1990.977 ±     228.438  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                 128  thrpt    5    218282.069 ±   40696.201    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1895.429 ±     505.657  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5    207821.681 ±   63287.445    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.579 ±       3.466  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        64.931 ±     393.457    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count                                           128  thrpt    5        29.000                counts
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time                                            128  thrpt    5        46.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeCirce                                                       128  thrpt    5     45371.608 ±    2618.326   ops/s
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate                                        128  thrpt    5      1827.432 ±     748.408  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                   128  thrpt    5     63413.305 ±   27264.210    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1793.532 ±    1059.747  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     62283.176 ±   39307.837    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         5.123 ±      16.570  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       178.724 ±     578.603    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.count                                             128  thrpt    5        30.000                counts
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.time                                              128  thrpt    5       201.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala                                                128  thrpt    5     52029.356 ±    6036.481   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1577.153 ±     757.731  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     47862.834 ±   27962.193    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1542.244 ±     848.357  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     46844.789 ±   30819.864    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         4.291 ±      16.173  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       132.559 ±     503.905    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count                                      128  thrpt    5        26.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time                                       128  thrpt    5        99.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala                                               128  thrpt    5    986862.979 ±  103697.915   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                128  thrpt    5       927.658 ±      97.071  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1479.216 ±      40.786    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       921.455 ±     563.261  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1468.098 ±     862.961    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.848 ±       5.372  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.344 ±       8.595    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count                                     128  thrpt    5        14.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time                                      128  thrpt    5        37.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5   1102611.934 ±   74176.391   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                        128  thrpt    5         0.025 ±       0.212  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                   128  thrpt    5         0.036 ±       0.305    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                             128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson                                                    128  thrpt    5      3778.091 ±    1067.206   ops/s
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate                                     128  thrpt    5       799.544 ±    1559.951  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                128  thrpt    5    344265.325 ±  789816.224    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5       775.213 ±    1364.574  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    332588.549 ±  680825.787    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         4.142 ±      31.855  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5      1609.982 ±   12255.350    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count                                          128  thrpt    5        14.000                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time                                           128  thrpt    5       210.000                    ms
[info] ArrayOfLongsBenchmark.readCirce                                                             128  thrpt    5    141772.555 ±   13024.687   ops/s
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      2276.265 ±     333.853  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     25286.096 ±    5565.744    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      2214.711 ±     551.503  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     24606.161 ±    7406.598    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         2.275 ±      12.255  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        25.911 ±     140.959    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        34.000                counts
[info] ArrayOfLongsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        71.000                    ms
[info] ArrayOfLongsBenchmark.readDslJsonJava                                                       128  thrpt    5    383291.116 ±   16169.729   ops/s
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate                                        128  thrpt    5       790.437 ±      28.986  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                   128  thrpt    5      3245.092 ±     123.589    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                               128  thrpt    5       780.073 ±     685.108  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      3201.980 ±    2799.100    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.960 ±       6.749  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         3.938 ±      27.701    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.count                                             128  thrpt    5        12.000                counts
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.time                                              128  thrpt    5        36.000                    ms
[info] ArrayOfLongsBenchmark.readJacksonScala                                                      128  thrpt    5    282389.109 ±    6084.012   ops/s
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       587.526 ±      25.916  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      3274.394 ±     154.153    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       581.372 ±     555.961  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      3242.913 ±    3134.885    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.699 ±       5.872  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         3.891 ±      32.670    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         9.000                counts
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        41.000                    ms
[info] ArrayOfLongsBenchmark.readJsoniterScala                                                     128  thrpt    5    489399.575 ±   13218.610   ops/s
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       640.284 ±      39.960  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      2058.736 ±     161.621    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       658.471 ±       4.919  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      2117.144 ±      67.576    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.616 ±       5.111  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.999 ±      16.601    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        10.000                counts
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        40.000                    ms
[info] ArrayOfLongsBenchmark.readPlayJson                                                          128  thrpt    5    105774.146 ±    4267.930   ops/s
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      3708.521 ±     166.286  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     55173.452 ±    1289.252    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      3561.916 ±     711.277  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     52976.586 ±    8802.854    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.585 ±       4.676  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         8.619 ±      68.851    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        53.000                counts
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        72.000                    ms
[info] ArrayOfLongsBenchmark.writeCirce                                                            128  thrpt    5    214319.070 ±    7009.411   ops/s
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1849.903 ±      55.439  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     13583.381 ±     264.030    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1771.392 ±     665.862  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     13008.537 ±    4961.089    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.921 ±       7.306  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         6.800 ±      54.012    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        27.000                counts
[info] ArrayOfLongsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        46.000                    ms
[info] ArrayOfLongsBenchmark.writeDslJsonJava                                                      128  thrpt    5    923686.237 ±   45273.348   ops/s
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       743.257 ±      51.932  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5      1266.194 ±      39.756    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       716.236 ±     558.492  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1219.165 ±     916.192    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.963 ±       8.005  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.660 ±      13.804    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count                                            128  thrpt    5        11.000                counts
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time                                             128  thrpt    5        37.000                    ms
[info] ArrayOfLongsBenchmark.writeJacksonScala                                                     128  thrpt    5    612716.036 ±   22679.720   ops/s
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       496.122 ±      29.923  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1274.205 ±      86.936    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       454.711 ±     684.732  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1169.968 ±    1788.570    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.025 ±       0.132  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.065 ±       0.340    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5         7.000                counts
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        27.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScala                                                    128  thrpt    5    766361.622 ±  171568.579   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       625.085 ±     148.367  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1283.695 ±     105.648    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       657.983 ±       4.656  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1355.122 ±     323.395    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.554 ±       4.679  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         1.087 ±       9.159    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        10.000                counts
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        38.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    835744.471 ±   22440.808   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfLongsBenchmark.writePlayJson                                                         128  thrpt    5     34900.126 ±    3963.780   ops/s
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1661.459 ±     511.476  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     75106.247 ±   32517.954    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1630.783 ±      33.757  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     73578.400 ±    8125.264    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.914 ±       7.684  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        87.998 ±     356.824    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        25.000                counts
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        53.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readCirce                                                   128  thrpt    5      9405.781 ±     412.398   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate                                    128  thrpt    5      1325.599 ±      59.487  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                               128  thrpt    5    221775.792 ±    1168.514    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1298.703 ±      23.779  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    217307.290 ±   13188.434    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.290 ±       7.198  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       217.284 ±    1210.202    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count                                         128  thrpt    5        20.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time                                          128  thrpt    5        51.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala                                            128  thrpt    5      9253.555 ±     487.400   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                             128  thrpt    5      1214.981 ±      71.992  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5    206622.675 ±    3578.412    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1168.219 ±     677.368  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5    198898.635 ±  121413.567    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.025 ±       0.036  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         4.250 ±       6.118    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count                                  128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time                                   128  thrpt    5        33.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala                                           128  thrpt    5    200881.316 ±    9473.089   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1747.881 ±      84.523  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5     13693.165 ±     303.204    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1677.890 ±     549.329  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5     13138.959 ±    3867.524    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         1.722 ±       6.033  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5        13.539 ±      47.608    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count                                 128  thrpt    5        26.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time                                  128  thrpt    5        63.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson                                                128  thrpt    5      8689.484 ±     829.323   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                 128  thrpt    5      1363.491 ±     134.582  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                            128  thrpt    5    246895.254 ±    3698.235    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1367.178 ±     575.597  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5    247492.499 ±   96948.154    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.669 ±       3.654  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       122.603 ±     676.831    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count                                      128  thrpt    5        21.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time                                       128  thrpt    5        36.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce                                                  128  thrpt    5     21251.487 ±    2945.467   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate                                   128  thrpt    5      1336.568 ±     555.653  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                              128  thrpt    5     99376.377 ±   55231.382    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                          128  thrpt    5      1260.875 ±     876.607  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     93669.679 ±   70942.698    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                      128  thrpt    5         2.040 ±       9.068  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5       155.464 ±     711.065    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count                                        128  thrpt    5        20.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time                                         128  thrpt    5        98.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala                                           128  thrpt    5     24065.743 ±    1986.461   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                            128  thrpt    5      1131.272 ±     629.529  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                       128  thrpt    5     74111.500 ±   45462.715    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1138.329 ±     676.970  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5     74490.044 ±   45563.434    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         4.053 ±      15.219  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5       267.485 ±    1015.162    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count                                 128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time                                  128  thrpt    5        61.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala                                          128  thrpt    5    516287.214 ±   43651.086   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                           128  thrpt    5      1221.255 ±      80.675  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                      128  thrpt    5      3723.587 ±     294.330    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                  128  thrpt    5      1182.346 ±     692.981  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm             128  thrpt    5      3605.015 ±    2126.192    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space              128  thrpt    5         0.880 ±       5.770  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5         2.714 ±      17.799    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count                                128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time                                 128  thrpt    5        37.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc                                  128  thrpt    5    613590.771 ±    3775.640   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                   128  thrpt    5         0.012 ±       0.098  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm              128  thrpt    5         0.030 ±       0.253    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson                                               128  thrpt    5     24350.890 ±    2069.865   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                128  thrpt    5      1298.475 ±     586.781  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                           128  thrpt    5     84087.354 ±   44425.533    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                       128  thrpt    5      1271.918 ±     677.390  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     82381.384 ±   49984.618    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                   128  thrpt    5        12.651 ±      43.554  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5       817.448 ±    2807.150    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count                                     128  thrpt    5        22.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time                                      128  thrpt    5       130.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readCirce                                                       128  thrpt    5     13148.849 ±     864.403   ops/s
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1269.647 ±     113.797  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5    151943.194 ±    8220.261    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1261.077 ±      23.291  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    150962.417 ±   11957.246    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         2.370 ±       8.642  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       285.295 ±    1032.871    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.count                                             128  thrpt    5        20.000                counts
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.time                                              128  thrpt    5        91.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala                                                128  thrpt    5     13735.490 ±     184.006   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1229.753 ±      21.860  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5    140876.205 ±    3918.548    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1168.068 ±     673.802  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5    133848.413 ±   78387.649    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         1.430 ±       5.026    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        18.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        27.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala                                               128  thrpt    5    325778.747 ±   13715.608   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1944.802 ±      98.782  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      9392.446 ±     232.478    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1837.446 ±     969.577  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      8868.887 ±    4469.640    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.831 ±       9.988  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         8.813 ±      48.071    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        29.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        82.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readPlayJson                                                    128  thrpt    5     13601.153 ±     450.379   ops/s
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1570.395 ±      57.185  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5    181704.595 ±    4662.958    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1499.962 ±     677.029  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    173608.724 ±   80327.349    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.070 ±       7.279  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       125.362 ±     856.033    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        23.000                counts
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        44.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeCirce                                                      128  thrpt    5     34585.996 ±    5694.785   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      1585.018 ±     661.355  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5     72432.867 ±   40429.803    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      1529.269 ±    1085.133  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     70106.364 ±   61414.407    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         2.244 ±       9.616  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       103.506 ±     439.866    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count                                            128  thrpt    5        24.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time                                             128  thrpt    5        91.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala                                               128  thrpt    5    128959.999 ±   10561.464   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      2435.852 ±     225.153  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     29722.644 ±     624.663    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      2392.543 ±     646.624  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     29197.867 ±    7691.486    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.067 ±       0.222  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.819 ±       2.725    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        36.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        51.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala                                              128  thrpt    5    864991.006 ±   14893.938   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1224.339 ±      36.089  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      2227.542 ±      56.346    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1184.500 ±     689.803  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      2155.061 ±    1254.559    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.810 ±       5.470  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         1.475 ±       9.971    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        18.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        37.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5    974818.323 ±   62945.370   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson                                                   128  thrpt    5    122267.950 ±    4099.964   ops/s
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      2749.984 ±      89.801  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5     35395.398 ±     920.667    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      2657.105 ±     149.094  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     34198.816 ±    1341.173    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.413 ±       3.152  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         5.340 ±      40.799    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        40.000                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        59.000                    ms
[info] ArrayOfPeriodsBenchmark.readCirce                                                           128  thrpt    5     18141.068 ±    2129.575   ops/s
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1070.294 ±     498.051  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     93108.369 ±   51622.996    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1032.315 ±     533.447  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     89753.829 ±   52811.473    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         1.201 ±       7.444  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       106.437 ±     663.689    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.count                                                 128  thrpt    5        16.000                counts
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.time                                                  128  thrpt    5        85.000                    ms
[info] ArrayOfPeriodsBenchmark.readJacksonScala                                                    128  thrpt    5     18387.138 ±    3441.175   ops/s
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5       987.951 ±     652.686  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     85194.010 ±   69509.383    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       972.649 ±       7.175  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     83395.386 ±   15886.460    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.551 ±       9.402  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       137.668 ±     857.598    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        15.000                counts
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        52.000                    ms
[info] ArrayOfPeriodsBenchmark.readJsoniterScala                                                   128  thrpt    5    163363.672 ±    5018.364   ops/s
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       418.882 ±      17.219  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      4034.988 ±     109.018    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       386.165 ±     554.231  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      3718.468 ±    5309.674    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.298 ±       2.468  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         2.843 ±      23.572    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5         6.000                counts
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        23.000                    ms
[info] ArrayOfPeriodsBenchmark.readPlayJson                                                        128  thrpt    5     17212.832 ±    1784.521   ops/s
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      1253.067 ±     465.524  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5    114566.957 ±   41617.039    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space                       128  thrpt    5         0.005 ±       0.047  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space.norm                  128  thrpt    5         0.507 ±       4.365    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.Metaspace                                    128  thrpt    5         0.015 ±       0.128  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.Metaspace.norm                               128  thrpt    5         1.388 ±      11.949    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1266.922 ±     145.189  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    115865.377 ±   15067.532    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen                                   128  thrpt    5         0.654 ±       5.629  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen.norm                              128  thrpt    5        61.259 ±     527.459    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         2.069 ±       9.972  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       192.843 ±     935.345    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        21.000                counts
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        70.000                    ms
[info] ArrayOfPeriodsBenchmark.writeCirce                                                          128  thrpt    5     64231.129 ±    7596.748   ops/s
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1874.475 ±      42.669  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     45958.021 ±    4981.665    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1831.967 ±     682.871  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     44856.532 ±   14325.708    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.970 ±      16.290  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        50.840 ±     421.595    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.count                                                128  thrpt    5        28.000                counts
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        51.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJacksonScala                                                   128  thrpt    5     99430.880 ±    4724.117   ops/s
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1904.198 ±      61.057  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     30142.286 ±     791.064    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1850.192 ±     719.685  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     29296.055 ±   11807.065    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.357 ±       2.469  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         5.654 ±      39.234    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        28.000                counts
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        44.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala                                                  128  thrpt    5    345937.190 ±    6964.814   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       682.553 ±      16.687  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      3105.026 ±      60.327    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       658.479 ±       4.141  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      2995.570 ±      73.735    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.683 ±       5.699  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         3.099 ±      25.875    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        10.000                counts
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        36.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5    386010.395 ±    2045.340   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson                                                       128  thrpt    5     87576.886 ±   11676.996   ops/s
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5      1885.934 ±     234.506  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     33953.778 ±    9025.792    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1886.239 ±     542.653  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     33952.462 ±   11986.796    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.746 ±      14.185  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        33.309 ±     271.734    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        29.000                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        53.000                    ms
[info] ArrayOfShortsBenchmark.readCirce                                                            128  thrpt    5    217912.432 ±    5870.831   ops/s
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      2818.636 ±     169.995  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5     20354.677 ±     740.763    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2715.735 ±     675.170  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     19610.882 ±    4721.784    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.142 ±       0.871  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.022 ±       6.295    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.count                                                  128  thrpt    5        41.000                counts
[info] ArrayOfShortsBenchmark.readCirce:·gc.time                                                   128  thrpt    5        57.000                    ms
[info] ArrayOfShortsBenchmark.readDslJsonJava                                                      128  thrpt    5    825076.898 ±   24825.091   ops/s
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       470.238 ±      16.415  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5       896.945 ±      36.490    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       455.280 ±     685.655  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       870.197 ±    1332.869    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.016 ±       0.048  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.031 ±       0.091    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.time                                             128  thrpt    5        28.000                    ms
[info] ArrayOfShortsBenchmark.readJacksonScala                                                     128  thrpt    5    385576.223 ±   37032.482   ops/s
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5       346.451 ±      50.883  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1413.633 ±      75.630    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       322.057 ±       1.282  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1315.032 ±     118.524    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.103 ±       0.432    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5         5.000                counts
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        30.000                    ms
[info] ArrayOfShortsBenchmark.readJsoniterScala                                                    128  thrpt    5   1089490.119 ±   53003.525   ops/s
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       396.739 ±      67.038  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       573.446 ±     125.087    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       393.951 ±     566.447  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       568.738 ±     810.167    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.008 ±       0.037  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.011 ±       0.053    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         6.000                counts
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        24.000                    ms
[info] ArrayOfShortsBenchmark.readPlayJson                                                         128  thrpt    5    119358.054 ±    6069.613   ops/s
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      3984.109 ±     225.680  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     52529.405 ±     808.711    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3829.343 ±     625.924  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     50483.029 ±    7018.776    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.171 ±       1.026  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.250 ±      13.496    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        57.000                counts
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        82.000                    ms
[info] ArrayOfShortsBenchmark.writeCirce                                                           128  thrpt    5    308303.430 ±   12744.605   ops/s
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1823.834 ±     106.458  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5      9308.713 ±     262.194    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1765.781 ±     673.121  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      9006.593 ±    3094.963    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         1.133 ±       6.973  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         5.826 ±      36.044    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        27.000                counts
[info] ArrayOfShortsBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        49.000                    ms
[info] ArrayOfShortsBenchmark.writeDslJsonJava                                                     128  thrpt    5   1973926.439 ±  365553.120   ops/s
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       698.569 ±      63.961  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5       557.484 ±      57.474    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       650.920 ±       5.732  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       519.921 ±      99.224    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.834 ±       6.972  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.652 ±       5.443    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count                                           128  thrpt    5        10.000                counts
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time                                            128  thrpt    5        36.000                    ms
[info] ArrayOfShortsBenchmark.writeJacksonScala                                                    128  thrpt    5   1801234.730 ±  125415.489   ops/s
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       640.119 ±      65.658  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5       559.208 ±      66.325    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       586.865 ±     558.410  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       512.459 ±     486.283    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.702 ±       5.867  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.616 ±       5.149    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         9.000                counts
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        37.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScala                                                   128  thrpt    5   2178127.503 ±  268753.829   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       785.329 ±      70.576  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       567.803 ±      77.627    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       790.127 ±     695.295  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       570.857 ±     494.899    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.812 ±       5.557  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.581 ±       4.000    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        12.000                counts
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        35.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   2357182.444 ±   95872.885   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayOfShortsBenchmark.writePlayJson                                                        128  thrpt    5     45892.677 ±    9494.545   ops/s
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1921.506 ±     339.645  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     66186.353 ±   26331.013    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1875.132 ±     563.826  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     64550.405 ±   27728.031    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         2.624 ±       4.495  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        91.488 ±     169.674    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        29.000                counts
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        99.000                    ms
[info] ArrayOfUUIDsBenchmark.readCirce                                                             128  thrpt    5     17894.752 ±    2288.245   ops/s
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      2135.247 ±     361.715  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5    188151.614 ±   54832.920    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      2049.544 ±     573.877  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    180676.216 ±   70509.016    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         4.796 ±      39.692  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       422.949 ±    3503.906    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        34.000                counts
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        66.000                    ms
[info] ArrayOfUUIDsBenchmark.readJacksonScala                                                      128  thrpt    5    107417.992 ±    4917.117   ops/s
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1184.244 ±      73.820  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     17350.574 ±     412.553    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1111.591 ±     688.315  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     16281.041 ±    9863.810    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.275 ±       1.817  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         4.007 ±      26.497    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        17.000                counts
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        27.000                    ms
[info] ArrayOfUUIDsBenchmark.readJsoniterScala                                                     128  thrpt    5    268664.825 ±   17755.829   ops/s
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       900.084 ±      62.639  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      5272.010 ±      81.478    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       912.611 ±     559.962  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      5342.348 ±    3196.242    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.766 ±       4.920  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         4.396 ±      28.025    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        14.000                counts
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        37.000                    ms
[info] ArrayOfUUIDsBenchmark.readPlayJson                                                          128  thrpt    5     16645.923 ±    2149.618   ops/s
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2168.361 ±     211.839  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5    205316.382 ±   47215.626    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2092.950 ±     530.102  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    198292.119 ±   71874.874    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         4.088 ±      34.792  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       384.216 ±    3270.418    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        35.000                counts
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        76.000                    ms
[info] ArrayOfUUIDsBenchmark.writeCirce                                                            128  thrpt    5     41538.138 ±   11888.493   ops/s
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      3325.524 ±     481.360  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5    126309.602 ±   20302.277    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      3209.516 ±     786.888  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    121832.997 ±   24918.947    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.355 ±       1.672  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        14.425 ±      71.754    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        48.000                counts
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        70.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJacksonScala                                                     128  thrpt    5    143936.001 ±    2947.511   ops/s
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1997.759 ±      36.080  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     21844.994 ±     646.390    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1929.006 ±     635.892  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     21093.529 ±    6991.848    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.150 ±       0.585  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.639 ±       6.397    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        29.000                counts
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        43.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala                                                    128  thrpt    5    248506.306 ±    9359.817   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       818.933 ±      48.525  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      5185.546 ±     176.302    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       789.528 ±     692.968  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      4999.921 ±    4395.305    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.798 ±       5.265  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         5.046 ±      33.379    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        12.000                counts
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        35.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    276944.202 ±    3976.706   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         2.622 ±      14.493  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5        14.960 ±      82.787    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson                                                         128  thrpt    5     59449.634 ±    3780.718   ops/s
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      3911.785 ±     215.369  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    103562.116 ±    4460.732    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3823.104 ±     684.044  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    101231.978 ±   19533.823    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.743 ±       5.596  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        20.156 ±     152.385    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        57.000                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        83.000                    ms
[info] ArrayOfYearMonthsBenchmark.readCirce                                                        128  thrpt    5     40272.875 ±    4326.487   ops/s
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate                                         128  thrpt    5      1970.891 ±    1014.655  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm                                    128  thrpt    5     77051.628 ±   40478.318    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1947.891 ±    1186.656  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     76099.987 ±   45549.608    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         5.198 ±      19.490  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       201.299 ±     740.245    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.count                                              128  thrpt    5        31.000                counts
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.time                                               128  thrpt    5        69.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJacksonScala                                                 128  thrpt    5     38285.517 ±   12026.926   ops/s
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1308.935 ±     832.537  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     53653.894 ±   23436.753    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1283.809 ±    1269.505  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     52654.421 ±   48034.355    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.683 ±       8.558  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        71.232 ±     358.630    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count                                       128  thrpt    5        20.000                counts
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time                                        128  thrpt    5        77.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala                                                128  thrpt    5    653189.124 ±   21013.728   ops/s
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      1750.269 ±      85.882  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      4215.792 ±      81.792    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1710.220 ±     551.481  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4119.132 ±    1301.114    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.838 ±       6.902  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.013 ±      16.580    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count                                      128  thrpt    5        26.000                counts
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time                                       128  thrpt    5        40.000                    ms
[info] ArrayOfYearMonthsBenchmark.readPlayJson                                                     128  thrpt    5     34483.032 ±    5173.124   ops/s
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate                                      128  thrpt    5      2139.937 ±     323.931  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     97791.127 ±   21478.735    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      2068.277 ±     659.261  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     94580.890 ±   36697.626    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         2.643 ±       6.278  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       121.276 ±     287.966    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count                                           128  thrpt    5        32.000                counts
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time                                            128  thrpt    5        76.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeCirce                                                       128  thrpt    5     94186.031 ±    5259.772   ops/s
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate                                        128  thrpt    5      2109.146 ±      79.859  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm                                   128  thrpt    5     35244.391 ±     997.014    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      2040.923 ±     516.665  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     34108.410 ±    8846.996    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.358 ±       2.689  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         5.937 ±      44.556    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.count                                             128  thrpt    5        31.000                counts
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.time                                              128  thrpt    5        47.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala                                                128  thrpt    5    247910.297 ±    9843.026   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1712.255 ±      64.804  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     10869.815 ±     302.755    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1700.687 ±     539.739  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     10794.866 ±    3311.103    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.971 ±       6.985  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         6.243 ±      45.096    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count                                      128  thrpt    5        26.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time                                       128  thrpt    5        48.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala                                               128  thrpt    5   1096086.809 ±   72007.609   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate                                128  thrpt    5       946.109 ±      70.437  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1358.825 ±     156.824    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       920.989 ±     560.139  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1322.269 ±     800.760    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.863 ±       5.264  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.251 ±       7.592    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count                                     128  thrpt    5        14.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time                                      128  thrpt    5        35.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5   1140531.589 ±   11056.582   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                        128  thrpt    5         0.392 ±       2.094  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                   128  thrpt    5         0.540 ±       2.884    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count                             128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson                                                    128  thrpt    5    230040.349 ±    3919.551   ops/s
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate                                     128  thrpt    5      2440.408 ±     100.681  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm                                128  thrpt    5     16694.052 ±     456.013    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      2324.213 ±     104.216  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     15899.256 ±     548.485    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.588 ±       4.836  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         4.044 ±      33.301    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count                                          128  thrpt    5        35.000                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time                                           128  thrpt    5        60.000                    ms
[info] ArrayOfYearsBenchmark.readJacksonScala                                                      128  thrpt    5     52668.691 ±    6142.049   ops/s
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1501.200 ±     533.108  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     44880.850 ±   16620.973    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                     128  thrpt    5         0.003 ±       0.030  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm                128  thrpt    5         0.109 ±       0.936    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Metaspace                                  128  thrpt    5         0.010 ±       0.085  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                             128  thrpt    5         0.307 ±       2.646    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1490.430 ±    1072.034  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     44620.833 ±   33887.259    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                                 128  thrpt    5         1.086 ±       9.353  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                            128  thrpt    5        33.965 ±     292.450    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         2.418 ±      14.477  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        74.901 ±     452.088    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        25.000                counts
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        96.000                    ms
[info] ArrayOfYearsBenchmark.readJsoniterScala                                                     128  thrpt    5    785091.467 ±   24853.027   ops/s
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1587.506 ±      85.996  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      3182.194 ±     177.369    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1579.611 ±     581.861  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      3165.299 ±    1119.565    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.841 ±       5.361  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.679 ±      10.717    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        24.000                counts
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        43.000                    ms
[info] ArrayOfYearsBenchmark.readPlayJson                                                          128  thrpt    5     47271.437 ±    6111.215   ops/s
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2706.390 ±     727.490  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     90040.489 ±   17065.217    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2618.380 ±    1166.510  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     87021.411 ±   30583.014    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         2.282 ±       9.725  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        75.393 ±     326.460    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        40.000                counts
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        90.000                    ms
[info] ArrayOfYearsBenchmark.writeJacksonScala                                                     128  thrpt    5    404629.068 ±   27651.129   ops/s
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1059.577 ±      91.466  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      4121.142 ±     228.909    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space                    128  thrpt    5         0.003 ±       0.029  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm               128  thrpt    5         0.013 ±       0.115    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.Metaspace                                 128  thrpt    5         0.010 ±       0.082  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                            128  thrpt    5         0.038 ±       0.328    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1045.574 ±     564.451  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      4068.631 ±    2249.385    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen                                128  thrpt    5         0.550 ±       4.733  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm                           128  thrpt    5         2.200 ±      18.939    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.990 ±       5.115  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         3.813 ±      19.576    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        18.000                counts
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        75.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScala                                                    128  thrpt    5   1599127.287 ±  123809.416   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       971.511 ±      62.306  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       956.223 ±      60.954    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       920.705 ±     573.374  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       906.797 ±     579.038    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.840 ±       5.568  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.832 ±       5.485    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        14.000                counts
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        41.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   1747456.130 ±   10120.408   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearsBenchmark.writePlayJson                                                         128  thrpt    5    358252.649 ±   46454.381   ops/s
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      2289.404 ±     137.917  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     10062.805 ±     862.908    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2267.831 ±     579.765  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      9977.825 ±    3201.801    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.337 ±       2.638  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.563 ±      12.299    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        34.000                counts
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        52.000                    ms
[info] ArrayOfZoneIdsBenchmark.readCirce                                                           128  thrpt    5     82247.363 ±   17197.138   ops/s
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1800.912 ±     441.450  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     34643.618 ±   16494.930    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1722.745 ±     676.605  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     33174.652 ±   19811.602    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         3.073 ±      20.174  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        60.394 ±     389.948    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.count                                                 128  thrpt    5        27.000                counts
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.time                                                  128  thrpt    5        75.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJacksonScala                                                    128  thrpt    5     93468.827 ±    4438.558   ops/s
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1210.899 ±      53.845  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     20387.445 ±     359.664    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1226.783 ±     549.614  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     20671.089 ±    9784.365    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.491 ±       5.550  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        25.196 ±      95.027    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        19.000                counts
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        55.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala                                                   128  thrpt    5     98860.508 ±   14413.922   ops/s
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1296.316 ±     210.500  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     20682.065 ±    6157.511    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1300.224 ±      15.299  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     20722.683 ±    3107.710    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.481 ±       8.458  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        24.633 ±     142.391    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        20.000                counts
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        47.000                    ms
[info] ArrayOfZoneIdsBenchmark.readPlayJson                                                        128  thrpt    5     58253.351 ±   13926.209   ops/s
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      2355.069 ±     130.710  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     63806.783 ±   14760.999    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      2318.000 ±     112.733  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     62796.111 ±   13869.175    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.004 ±       5.276  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        29.011 ±     157.482    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        35.000                counts
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        59.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeCirce                                                          128  thrpt    5    150399.689 ±    5397.802   ops/s
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1420.740 ±      79.958  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     14865.321 ±     531.415    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1382.910 ±     606.363  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     14466.154 ±    6144.205    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.205 ±       1.456  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         2.166 ±      15.407    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.count                                                128  thrpt    5        21.000                counts
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        33.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala                                                   128  thrpt    5    393615.034 ±    8045.426   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       510.658 ±      62.885  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5      2041.759 ±     247.018    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       512.780 ±     676.142  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      2048.903 ±    2686.418    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.067 ±       0.268    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5         8.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        12.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala                                                  128  thrpt    5    927121.677 ±   38990.682   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1187.589 ±      50.941  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      2015.960 ±      52.055    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1180.026 ±     690.740  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      2002.043 ±    1138.266    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.905 ±       5.866  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         1.537 ±       9.952    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        18.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        39.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5   1110235.035 ±   13172.305   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson                                                       128  thrpt    5    309112.291 ±    3305.795   ops/s
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5       942.201 ±      28.073  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5      4796.477 ±     112.734    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5       892.648 ±     549.295  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      4543.511 ±    2778.381    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.986 ±       6.219  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         5.003 ±      31.531    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        14.000                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        32.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readCirce                                                       128  thrpt    5    141165.342 ±    6884.587   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1904.094 ±     650.348  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5     21243.886 ±    8286.775    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1820.605 ±     635.195  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     20304.933 ±    7652.123    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         2.452 ±      14.347  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        27.660 ±     162.096    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count                                             128  thrpt    5        28.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time                                              128  thrpt    5        56.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala                                                128  thrpt    5    209531.522 ±    7181.394   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1193.482 ±      16.909  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5      8964.530 ±     260.819    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1158.526 ±     666.387  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      8706.216 ±    5138.577    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.259 ±       4.230  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         9.459 ±      31.679    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        18.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        61.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala                                               128  thrpt    5    568350.399 ±   24087.126   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1141.244 ±      78.829  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      3159.899 ±     192.615    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1103.293 ±     680.849  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      3056.672 ±    1939.724    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.817 ±       5.342  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         2.275 ±      14.888    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        17.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        45.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson                                                    128  thrpt    5     96075.388 ±   10038.207   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      3120.841 ±     269.768  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     51175.068 ±   10017.377    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      3005.430 ±     138.958  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     49249.599 ±    4064.786    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.946 ±       5.222  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        15.966 ±      89.565    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        45.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        73.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeCirce                                                      128  thrpt    5    235734.076 ±    5153.685   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      1500.195 ±      50.036  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5     10014.604 ±     134.163    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      1436.183 ±     679.017  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      9586.716 ±    4499.527    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.900 ±       5.052  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         6.032 ±      33.909    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count                                            128  thrpt    5        22.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time                                             128  thrpt    5        42.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala                                               128  thrpt    5    768309.990 ±   17717.590   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5       587.564 ±      30.007  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5      1203.505 ±      53.509    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       579.518 ±     556.167  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1186.446 ±    1131.521    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.026 ±       0.090    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5         9.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        13.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala                                              128  thrpt    5   1376348.010 ±   73209.771   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1061.461 ±      63.934  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      1213.847 ±      70.347    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1051.845 ±     570.929  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      1203.105 ±     662.009    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.807 ±       4.775  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.913 ±       5.352    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        16.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        38.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5   1504341.953 ±    9963.561   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5         0.262 ±       2.253  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5         0.274 ±       2.355    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson                                                   128  thrpt    5    620088.782 ±    4947.938   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1517.880 ±      36.057  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5      3852.466 ±      68.650    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1449.297 ±     696.022  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      3678.919 ±    1786.595    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.468 ±       3.699  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.190 ±       9.401    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        22.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        39.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readCirce                                                    128  thrpt    5       920.944 ±      76.132   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      1981.246 ±     149.171  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5   3384893.082 ±   79998.591    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      1933.696 ±     108.304  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5   3304481.334 ±  283998.978    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.788 ±       2.622  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5      1340.971 ±    4441.560    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count                                          128  thrpt    5        30.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time                                           128  thrpt    5        54.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala                                             128  thrpt    5       869.423 ±      71.467   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5      1871.247 ±      77.082  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5   3387273.560 ±  344205.274    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5      1778.260 ±     705.906  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5   3218138.252 ± 1265945.122    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.230 ±       0.785  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5       419.377 ±    1432.029    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5        27.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        44.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala                                            128  thrpt    5     44684.247 ±    2238.784   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5       779.708 ±     245.366  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5     27482.721 ±   10068.007    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       751.701 ±     659.004  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     26435.709 ±   22333.065    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         2.232 ±       9.150  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5        79.211 ±     328.684    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5        12.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        69.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson                                                 128  thrpt    5       854.006 ±      77.352   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5      1904.217 ±      70.790  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5   3509330.507 ±  308737.436    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      1842.128 ±     674.819  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5   3393796.648 ± 1217821.913    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.483 ±       1.832  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5       896.886 ±    3435.987    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count                                       128  thrpt    5        28.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        47.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeCirce                                                   128  thrpt    5     16943.596 ±    1561.229   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1366.424 ±     652.895  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5    127250.522 ±   73773.869    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1348.476 ±     623.455  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    125540.994 ±   68618.421    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         2.271 ±       8.196  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       208.080 ±     751.894    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count                                         128  thrpt    5        22.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time                                          128  thrpt    5       110.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala                                            128  thrpt    5     19100.211 ±    1386.978   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5      1237.837 ±     649.321  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5    102219.688 ±   61211.799    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1225.640 ±     852.871  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5    101215.509 ±   76313.844    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         1.954 ±       9.407  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5       162.451 ±     789.832    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5        20.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5       107.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala                                           128  thrpt    5    335520.602 ±   14881.176   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1221.605 ±      44.118  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5      5730.651 ±     214.758    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1170.012 ±     684.220  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5      5491.183 ±    3286.506    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         1.191 ±       8.882  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         5.548 ±      41.229    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        18.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        41.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5    383584.251 ±   19137.482   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5         0.684 ±       5.884  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5         2.789 ±      24.008    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson                                                128  thrpt    5     18505.272 ±    5680.566   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5      1420.989 ±     983.298  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5    122722.463 ±  125560.668    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1413.474 ±    1256.774  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5    122161.458 ±  141504.009    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5        10.342 ±      38.584  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       933.468 ±    3654.138    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        24.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time                                       128  thrpt    5        87.000                    ms
[info] BitSetBenchmark.readJsoniterScala                                                           128  thrpt    5   1400626.140 ±   12303.466   ops/s
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5        58.212 ±      10.264  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5        65.411 ±      12.148    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5        51.163 ±     440.532  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5        57.723 ±     497.014    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.008 ±       0.072  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.009 ±       0.081    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         1.000                counts
[info] BitSetBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         4.000                    ms
[info] BitSetBenchmark.readPlayJson                                                                128  thrpt    5    129337.289 ±    8231.965   ops/s
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      4267.417 ±     279.028  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     51927.957 ±     857.097    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      4092.055 ±     549.209  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     49816.833 ±    8814.312    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.415 ±       3.129  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         5.038 ±      37.902    B/op
[info] BitSetBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        61.000                counts
[info] BitSetBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        91.000                    ms
[info] BitSetBenchmark.writeJacksonScala                                                           128  thrpt    5   2195891.536 ±  188591.544   ops/s
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       609.251 ±      50.236  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5       436.644 ±       8.097    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space                          128  thrpt    5         0.005 ±       0.043  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm                     128  thrpt    5         0.004 ±       0.032    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.Metaspace                                       128  thrpt    5         0.014 ±       0.120  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                                  128  thrpt    5         0.010 ±       0.089    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       586.814 ±     559.889  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       421.236 ±     410.622    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.999 ±       8.497  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.746 ±       6.344    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5        11.000                counts
[info] BitSetBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        78.000                    ms
[info] BitSetBenchmark.writeJsoniterScala                                                          128  thrpt    5   1875319.976 ±   54735.105   ops/s
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       518.860 ±      15.873  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       435.456 ±      17.033    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       460.060 ±     693.576  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       386.788 ±     591.636    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.017 ±       0.088  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.014 ±       0.074    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] BitSetBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        26.000                    ms
[info] BitSetBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   1961083.136 ±    4753.604   ops/s
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] BitSetBenchmark.writePlayJson                                                               128  thrpt    5     56312.148 ±   10748.139   ops/s
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      2025.892 ±     538.912  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     56814.073 ±   23539.573    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1986.259 ±     879.370  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     55708.073 ±   30856.514    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.823 ±       3.935  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        23.071 ±     112.803    B/op
[info] BitSetBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        30.000                counts
[info] BitSetBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        53.000                    ms
[info] ExtractFieldsBenchmark.readCirce                                                            N/A  thrpt    5   1205434.891 ±   50784.135   ops/s
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate                                             N/A  thrpt    5      3495.089 ±     205.009  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm                                        N/A  thrpt    5      4562.953 ±      97.353    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      3378.317 ±     720.557  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5      4410.628 ±     921.309    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.638 ±       4.999  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.846 ±       6.646    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.count                                                  N/A  thrpt    5        51.000                counts
[info] ExtractFieldsBenchmark.readCirce:·gc.time                                                   N/A  thrpt    5        78.000                    ms
[info] ExtractFieldsBenchmark.readDslJsonJava                                                      N/A  thrpt    5   5289675.050 ±  443125.095   ops/s
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate                                       N/A  thrpt    5       343.134 ±      79.060  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  N/A  thrpt    5       102.233 ±      32.900    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       325.849 ±       0.513  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5        96.981 ±       8.324    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.083 ±       0.623  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.024 ±       0.183    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.count                                            N/A  thrpt    5         5.000                counts
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.time                                             N/A  thrpt    5        20.000                    ms
[info] ExtractFieldsBenchmark.readJacksonScala                                                     N/A  thrpt    5   1104909.570 ±   25116.632   ops/s
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate                                      N/A  thrpt    5      1251.208 ±      60.499  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 N/A  thrpt    5      1782.323 ±     109.694    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             N/A  thrpt    5      1178.039 ±     681.025  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        N/A  thrpt    5      1678.178 ±     974.486    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         N/A  thrpt    5         0.275 ±       1.774  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    N/A  thrpt    5         0.391 ±       2.524    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.count                                           N/A  thrpt    5        18.000                counts
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.time                                            N/A  thrpt    5        31.000                    ms
[info] ExtractFieldsBenchmark.readJsoniterScala                                                    N/A  thrpt    5  10320206.238 ±  492126.157   ops/s
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate                                     N/A  thrpt    5       485.502 ±      28.421  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                N/A  thrpt    5        74.034 ±       2.142    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       461.066 ±     693.924  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5        70.231 ±     104.662    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5         0.001 ±       0.005    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.count                                          N/A  thrpt    5         7.000                counts
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.time                                           N/A  thrpt    5        25.000                    ms
[info] ExtractFieldsBenchmark.readPlayJson                                                         N/A  thrpt    5    773045.334 ±   30227.648   ops/s
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate                                          N/A  thrpt    5      2852.866 ±      88.172  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     N/A  thrpt    5      5807.588 ±     124.015    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5      2726.422 ±     512.354  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5      5550.162 ±    1027.531    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.587 ±       4.654  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         1.186 ±       9.393    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.count                                               N/A  thrpt    5        41.000                counts
[info] ExtractFieldsBenchmark.readPlayJson:·gc.time                                                N/A  thrpt    5        67.000                    ms
[info] GeoJSONBenchmark.readCirce                                                                  N/A  thrpt    5      5052.061 ±     241.680   ops/s
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      2257.103 ±     110.789  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5    703070.304 ±   20325.784    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      2240.498 ±     589.988  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5    698268.386 ±  204322.402    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         1.019 ±       6.390  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5       317.653 ±    1990.786    B/op
[info] GeoJSONBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        34.000                counts
[info] GeoJSONBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        60.000                    ms
[info] GeoJSONBenchmark.readJacksonScala                                                           N/A  thrpt    5      7796.867 ±     140.805   ops/s
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5      3195.948 ±      78.681  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5    645069.304 ±   13306.995    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      3067.217 ±     445.083  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5    619068.587 ±   86947.791    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.225 ±       1.445  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5        45.312 ±     290.788    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5        46.000                counts
[info] GeoJSONBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        70.000                    ms
[info] GeoJSONBenchmark.readJsoniterScala                                                          N/A  thrpt    5     57419.987 ±    1968.231   ops/s
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5       954.502 ±      25.187  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5     26161.220 ±     593.016    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       916.964 ±     558.790  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5     25150.928 ±   15755.202    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.012 ±       0.072  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.345 ±       1.985    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5        14.000                counts
[info] GeoJSONBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5        19.000                    ms
[info] GeoJSONBenchmark.writeCirce                                                                 N/A  thrpt    5      5457.266 ±     179.882   ops/s
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate                                                  N/A  thrpt    5       980.306 ±      44.902  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm                                             N/A  thrpt    5    282689.685 ±   12695.627    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       976.901 ±      17.752  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5    281714.957 ±    9734.679    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.682 ±       2.455  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5       197.150 ±     710.033    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.count                                                       N/A  thrpt    5        15.000                counts
[info] GeoJSONBenchmark.writeCirce:·gc.time                                                        N/A  thrpt    5        29.000                    ms
[info] GeoJSONBenchmark.writeJacksonScala                                                          N/A  thrpt    5      5270.007 ±     144.634   ops/s
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate                                           N/A  thrpt    5       572.750 ±      29.715  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      N/A  thrpt    5    171011.428 ±    8111.621    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       519.021 ±     686.442  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5    154933.088 ±  204519.194    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.017 ±       0.067  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         4.982 ±      20.117    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.count                                                N/A  thrpt    5         8.000                counts
[info] GeoJSONBenchmark.writeJacksonScala:·gc.time                                                 N/A  thrpt    5        21.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScala                                                         N/A  thrpt    5      6988.217 ±      87.918   ops/s
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate                                          N/A  thrpt    5       231.055 ±      13.967  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     N/A  thrpt    5     52029.838 ±    3582.531    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5       247.034 ±     544.654  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5     55706.502 ±  122842.480    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.012 ±       0.072  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         2.817 ±      16.161    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.count                                               N/A  thrpt    5         4.000                counts
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.time                                                N/A  thrpt    5        18.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc                                                 N/A  thrpt    5      6869.844 ±     434.676   ops/s
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  N/A  thrpt    5       175.106 ±      11.686  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             N/A  thrpt    5     40125.349 ±    5007.034    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                         N/A  thrpt    5       116.604 ±     622.410  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                    N/A  thrpt    5     27012.283 ±  143760.453    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       N/A  thrpt    5         2.000                counts
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time                                        N/A  thrpt    5         9.000                    ms
[info] GoogleMapsAPIBenchmark.readCirce                                                            N/A  thrpt    5      8805.889 ±     689.059   ops/s
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate                                             N/A  thrpt    5      2061.950 ±     195.491  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm                                        N/A  thrpt    5    368503.290 ±   12632.676    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      1985.265 ±     533.728  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5    354741.491 ±   84588.145    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         1.659 ±       5.928  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5       296.956 ±    1053.035    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.count                                                  N/A  thrpt    5        31.000                counts
[info] GoogleMapsAPIBenchmark.readCirce:·gc.time                                                   N/A  thrpt    5        91.000                    ms
[info] GoogleMapsAPIBenchmark.readDslJsonJava                                                      N/A  thrpt    5     17008.849 ±    1839.858   ops/s
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate                                       N/A  thrpt    5       457.717 ±     214.583  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  N/A  thrpt    5     42437.132 ±   23196.629    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       452.617 ±     683.173  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5     42118.300 ±   66378.581    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.238 ±       1.956  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5        22.731 ±     187.164    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count                                            N/A  thrpt    5         7.000                counts
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time                                             N/A  thrpt    5        27.000                    ms
[info] GoogleMapsAPIBenchmark.readJacksonScala                                                     N/A  thrpt    5     14734.636 ±     665.032   ops/s
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate                                      N/A  thrpt    5       404.201 ±      29.040  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 N/A  thrpt    5     43173.334 ±    2932.017    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             N/A  thrpt    5       386.711 ±     554.984  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        N/A  thrpt    5     41289.033 ±   58925.294    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         N/A  thrpt    5         0.025 ±       0.105  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    N/A  thrpt    5         2.647 ±      11.064    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.count                                           N/A  thrpt    5         6.000                counts
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.time                                            N/A  thrpt    5        17.000                    ms
[info] GoogleMapsAPIBenchmark.readJsoniterScala                                                    N/A  thrpt    5     22576.949 ±    2266.169   ops/s
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                     N/A  thrpt    5       492.801 ±     298.836  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                N/A  thrpt    5     34476.601 ±   24297.290    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       517.081 ±     681.332  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5     36268.177 ±   50094.135    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.523 ±       2.750  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5        35.812 ±     188.365    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count                                          N/A  thrpt    5         8.000                counts
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time                                           N/A  thrpt    5        37.000                    ms
[info] GoogleMapsAPIBenchmark.readPlayJson                                                         N/A  thrpt    5      7633.913 ±     166.700   ops/s
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate                                          N/A  thrpt    5      2716.675 ±      59.929  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                     N/A  thrpt    5    560052.591 ±   17161.168    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5      2650.772 ±     144.497  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5    546474.406 ±   34371.340    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.687 ±       4.775  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5       141.479 ±     983.864    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.count                                               N/A  thrpt    5        40.000                counts
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.time                                                N/A  thrpt    5        71.000                    ms
[info] GoogleMapsAPIBenchmark.writeCirce                                                           N/A  thrpt    5     11807.709 ±    1276.851   ops/s
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate                                            N/A  thrpt    5      2263.192 ±     145.107  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm                                       N/A  thrpt    5    301737.855 ±   20355.721    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      2246.093 ±     534.454  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5    299243.382 ±   54517.599    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.532 ±       3.044  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5        72.768 ±     424.892    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.count                                                 N/A  thrpt    5        34.000                counts
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.time                                                  N/A  thrpt    5        51.000                    ms
[info] GoogleMapsAPIBenchmark.writeDslJsonJava                                                     N/A  thrpt    5     67390.765 ±    6697.505   ops/s
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate                                      N/A  thrpt    5       672.878 ±     191.802  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 N/A  thrpt    5     15714.464 ±    4393.535    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             N/A  thrpt    5       649.061 ±       6.166  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        N/A  thrpt    5     15163.475 ±    1435.222    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         N/A  thrpt    5         1.161 ±       6.612  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    N/A  thrpt    5        26.780 ±     150.296    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count                                           N/A  thrpt    5        10.000                counts
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time                                            N/A  thrpt    5        39.000                    ms
[info] GoogleMapsAPIBenchmark.writeJacksonScala                                                    N/A  thrpt    5     42820.652 ±    3140.839   ops/s
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                     N/A  thrpt    5       694.197 ±     483.654  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                N/A  thrpt    5     25567.915 ±   19463.038    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       714.067 ±     542.041  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5     26307.475 ±   21748.990    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.569 ±       3.086  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5        20.567 ±     111.006    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count                                          N/A  thrpt    5        11.000                counts
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time                                           N/A  thrpt    5        27.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScala                                                   N/A  thrpt    5    102901.545 ±    3146.887   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                    N/A  thrpt    5       797.677 ±      34.064  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               N/A  thrpt    5     12200.107 ±     311.664    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           N/A  thrpt    5       782.597 ±     688.873  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      N/A  thrpt    5     11961.039 ±   10331.101    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       N/A  thrpt    5         0.992 ±       6.305  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  N/A  thrpt    5        15.082 ±      95.855    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count                                         N/A  thrpt    5        12.000                counts
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time                                          N/A  thrpt    5        40.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc                                           N/A  thrpt    5    138339.761 ±     998.171   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       N/A  thrpt    5         0.003 ±       0.002    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 N/A  thrpt    5           ≈ 0                counts
[info] GoogleMapsAPIBenchmark.writePlayJson                                                        N/A  thrpt    5      9130.831 ±     370.409   ops/s
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate                                         N/A  thrpt    5      2385.556 ±      59.278  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm                                    N/A  thrpt    5    411157.735 ±   10450.186    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                N/A  thrpt    5      2324.879 ±     104.053  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5    400720.668 ±   25272.145    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.531 ±       3.306  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5        91.718 ±     572.741    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.count                                              N/A  thrpt    5        35.000                counts
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.time                                               N/A  thrpt    5        59.000                    ms
[info] IntBenchmark.readCirce                                                                      N/A  thrpt    5  13054331.168 ±  421641.081   ops/s
[info] IntBenchmark.readCirce:·gc.alloc.rate                                                       N/A  thrpt    5      5775.469 ±     226.625  MB/sec
[info] IntBenchmark.readCirce:·gc.alloc.rate.norm                                                  N/A  thrpt    5       696.248 ±      11.539    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      5623.972 ±     679.991  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       678.095 ±      94.165    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.158 ±       0.419  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.019 ±       0.051    B/op
[info] IntBenchmark.readCirce:·gc.count                                                            N/A  thrpt    5        83.000                counts
[info] IntBenchmark.readCirce:·gc.time                                                             N/A  thrpt    5       111.000                    ms
[info] IntBenchmark.readDslJsonJava                                                                N/A  thrpt    5  42682751.876 ±  935536.527   ops/s
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate                                                 N/A  thrpt    5         0.022 ±       0.191  MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                            N/A  thrpt    5         0.001 ±       0.007    B/op
[info] IntBenchmark.readDslJsonJava:·gc.count                                                      N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readJacksonScala                                                               N/A  thrpt    5  26182724.878 ±  216536.681   ops/s
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] IntBenchmark.readJacksonScala:·gc.count                                                     N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readJsoniterScala                                                              N/A  thrpt    5  47650600.587 ±  451707.083   ops/s
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5         0.895 ±       7.703  MB/sec
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5         0.030 ±       0.255    B/op
[info] IntBenchmark.readJsoniterScala:·gc.count                                                    N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readNaiveScala                                                                 N/A  thrpt    5  30895946.341 ± 2556971.092   ops/s
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate                                                  N/A  thrpt    5       813.719 ±      12.792  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate.norm                                             N/A  thrpt    5        41.465 ±       3.572    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       791.306 ±     698.493  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5        40.428 ±      38.119    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.783 ±       6.472  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.040 ±       0.327    B/op
[info] IntBenchmark.readNaiveScala:·gc.count                                                       N/A  thrpt    5        12.000                counts
[info] IntBenchmark.readNaiveScala:·gc.time                                                        N/A  thrpt    5        35.000                    ms
[info] IntBenchmark.readPlayJson                                                                   N/A  thrpt    5  25267187.374 ±   36950.646   ops/s
[info] IntBenchmark.readPlayJson:·gc.alloc.rate                                                    N/A  thrpt    5         0.018 ±       0.152  MB/sec
[info] IntBenchmark.readPlayJson:·gc.alloc.rate.norm                                               N/A  thrpt    5         0.001 ±       0.009    B/op
[info] IntBenchmark.readPlayJson:·gc.count                                                         N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeCirce                                                                     N/A  thrpt    5  21785399.992 ± 1283880.880   ops/s
[info] IntBenchmark.writeCirce:·gc.alloc.rate                                                      N/A  thrpt    5      1727.786 ±      87.463  MB/sec
[info] IntBenchmark.writeCirce:·gc.alloc.rate.norm                                                 N/A  thrpt    5       124.847 ±      10.579    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1709.481 ±     572.032  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5       123.639 ±      48.661    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.841 ±       6.457  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.061 ±       0.469    B/op
[info] IntBenchmark.writeCirce:·gc.count                                                           N/A  thrpt    5        26.000                counts
[info] IntBenchmark.writeCirce:·gc.time                                                            N/A  thrpt    5        46.000                    ms
[info] IntBenchmark.writeDslJsonJava                                                               N/A  thrpt    5  58058365.535 ±  957322.783   ops/s
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate                                                N/A  thrpt    5      1217.553 ±      24.018  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                           N/A  thrpt    5        33.002 ±       0.925    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1170.854 ±     683.421  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5        31.742 ±      18.705    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.941 ±       6.778  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.025 ±       0.183    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.count                                                     N/A  thrpt    5        18.000                counts
[info] IntBenchmark.writeDslJsonJava:·gc.time                                                      N/A  thrpt    5        43.000                    ms
[info] IntBenchmark.writeJacksonScala                                                              N/A  thrpt    5  27320865.453 ± 3047798.780   ops/s
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate                                               N/A  thrpt    5       582.618 ±      74.776  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          N/A  thrpt    5        33.575 ±       5.542    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       581.790 ±     554.494  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5        33.442 ±      31.057    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.028 ±       0.077  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.002 ±       0.004    B/op
[info] IntBenchmark.writeJacksonScala:·gc.count                                                    N/A  thrpt    5         9.000                counts
[info] IntBenchmark.writeJacksonScala:·gc.time                                                     N/A  thrpt    5        16.000                    ms
[info] IntBenchmark.writeJsoniterScala                                                             N/A  thrpt    5  50276158.643 ± 1239831.438   ops/s
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate                                              N/A  thrpt    5      1050.287 ±      41.921  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         N/A  thrpt    5        32.876 ±       0.552    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       983.292 ±      14.865  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5        30.780 ±       0.902    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.872 ±       7.182  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.027 ±       0.226    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.count                                                   N/A  thrpt    5        15.000                counts
[info] IntBenchmark.writeJsoniterScala:·gc.time                                                    N/A  thrpt    5        38.000                    ms
[info] IntBenchmark.writeJsoniterScalaPrealloc                                                     N/A  thrpt    5  65141253.245 ± 1486450.594   ops/s
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      N/A  thrpt    5         2.318 ±      16.898  MB/sec
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 N/A  thrpt    5         0.056 ±       0.413    B/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeNaiveScala                                                                N/A  thrpt    5  26382809.683 ±  744268.391   ops/s
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate                                                 N/A  thrpt    5      2080.893 ±      83.620  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm                                            N/A  thrpt    5       124.110 ±       3.471    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1998.614 ±      54.251  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5       119.210 ±       5.721    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.658 ±       5.308  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.039 ±       0.317    B/op
[info] IntBenchmark.writeNaiveScala:·gc.count                                                      N/A  thrpt    5        30.000                counts
[info] IntBenchmark.writeNaiveScala:·gc.time                                                       N/A  thrpt    5        41.000                    ms
[info] IntBenchmark.writePlayJson                                                                  N/A  thrpt    5   3684006.139 ±  251396.918   ops/s
[info] IntBenchmark.writePlayJson:·gc.alloc.rate                                                   N/A  thrpt    5      1529.395 ±      65.629  MB/sec
[info] IntBenchmark.writePlayJson:·gc.alloc.rate.norm                                              N/A  thrpt    5       653.483 ±      34.947    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1503.875 ±     698.063  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       643.410 ±     329.663    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.900 ±       5.803  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.389 ±       2.531    B/op
[info] IntBenchmark.writePlayJson:·gc.count                                                        N/A  thrpt    5        23.000                counts
[info] IntBenchmark.writePlayJson:·gc.time                                                         N/A  thrpt    5        46.000                    ms
[info] IntMapOfBooleansBenchmark.readJsoniterScala                                                 128  thrpt    5    177169.640 ±    5756.086   ops/s
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      3359.090 ±     169.059  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5     29836.152 ±     648.839    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      3284.375 ±     536.141  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     29168.610 ±    4109.577    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.108 ±       0.356  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.965 ±       3.202    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        49.000                counts
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        64.000                    ms
[info] IntMapOfBooleansBenchmark.readPlayJson                                                      128  thrpt    5     45199.159 ±    5270.212   ops/s
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      2874.616 ±      73.079  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    100154.029 ±   12302.340    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      2794.773 ±     576.642  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     97496.517 ±   31681.106    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.805 ±       4.208  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        28.924 ±     152.160    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        42.000                counts
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        68.000                    ms
[info] IntMapOfBooleansBenchmark.writeJacksonScala                                                 128  thrpt    5    228435.252 ±   14188.046   ops/s
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       836.721 ±      51.183  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5      5764.234 ±     145.034    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       843.988 ±     685.638  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      5812.450 ±    4671.093    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.164 ±       1.015  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         1.149 ±       7.144    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        13.000                counts
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        21.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScala                                                128  thrpt    5    523567.677 ±   19449.933   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       963.714 ±      39.759  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      2896.815 ±      27.293    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       974.734 ±       9.774  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2930.178 ±     112.013    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.249 ±       4.391  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         3.756 ±      13.194    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5        15.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        54.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    517701.613 ±   13871.635   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5       367.662 ±      22.586  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5      1117.686 ±      54.104    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                128  thrpt    5       327.751 ±       0.056  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm           128  thrpt    5       996.415 ±      26.833    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space            128  thrpt    5         0.010 ±       0.053  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm       128  thrpt    5         0.030 ±       0.161    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5         5.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                               128  thrpt    5        21.000                    ms
[info] IntMapOfBooleansBenchmark.writePlayJson                                                     128  thrpt    5     84595.416 ±   23160.658   ops/s
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1454.358 ±     182.460  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     27228.442 ±   11818.929    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1379.867 ±     559.880  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     25757.903 ±   11707.328    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.131 ±       5.209  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        22.360 ±     105.978    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        21.000                counts
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        41.000                    ms
[info] ListOfBooleansBenchmark.readCirce                                                           128  thrpt    5    374326.273 ±    9215.551   ops/s
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      2723.922 ±      61.530  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     11452.386 ±     261.227    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2647.677 ±     863.910  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     11127.407 ±    3371.696    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.108 ±       0.536  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.455 ±       2.254    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.count                                                 128  thrpt    5        40.000                counts
[info] ListOfBooleansBenchmark.readCirce:·gc.time                                                  128  thrpt    5        51.000                    ms
[info] ListOfBooleansBenchmark.readJacksonScala                                                    128  thrpt    5    813885.856 ±   45154.828   ops/s
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1767.039 ±     135.364  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5      3416.428 ±      92.936    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1714.065 ±     495.426  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      3313.783 ±     906.978    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.315 ±       2.492  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.605 ±       4.781    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        26.000                counts
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        38.000                    ms
[info] ListOfBooleansBenchmark.readJsoniterScala                                                   128  thrpt    5   1608847.107 ±  109265.806   ops/s
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      3252.801 ±     195.732  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      3181.896 ±      92.142    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      3153.228 ±     635.968  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      3083.241 ±     462.691    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.146 ±       0.765  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.144 ±       0.768    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        47.000                counts
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        60.000                    ms
[info] ListOfBooleansBenchmark.readPlayJson                                                        128  thrpt    5    186265.925 ±    5866.923   ops/s
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      4873.536 ±     196.971  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     41175.013 ±     674.468    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      4658.006 ±     570.028  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     39354.985 ±    4743.128    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.108 ±       0.323  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.914 ±       2.729    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        69.000                counts
[info] ListOfBooleansBenchmark.readPlayJson:·gc.time                                               128  thrpt    5       104.000                    ms
[info] ListOfBooleansBenchmark.writeCirce                                                          128  thrpt    5    438286.428 ±   41125.158   ops/s
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1444.232 ±     105.934  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5      5186.464 ±     218.810    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1368.954 ±     544.981  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      4919.487 ±    2095.317    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.898 ±       5.682  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         3.315 ±      21.200    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.count                                                128  thrpt    5        21.000                counts
[info] ListOfBooleansBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        42.000                    ms
[info] ListOfBooleansBenchmark.writeJacksonScala                                                   128  thrpt    5    986338.397 ±   82342.173   ops/s
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       469.517 ±      51.768  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5       749.102 ±      38.424    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       450.546 ±     683.246  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       717.361 ±    1066.515    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.020 ±       0.071    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        12.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScala                                                  128  thrpt    5   2714300.822 ±  115503.151   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1303.210 ±      34.596  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5       755.640 ±      47.439    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1248.363 ±     573.709  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       724.274 ±     349.413    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.829 ±       6.958  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.484 ±       4.066    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        19.000                counts
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        38.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5   2883213.922 ±   62689.032   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5         0.170 ±       1.458  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5         0.092 ±       0.792    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ListOfBooleansBenchmark.writePlayJson                                                       128  thrpt    5    672656.462 ±  159876.743   ops/s
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5      1044.548 ±     589.269  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5      2470.435 ±    2131.513    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1017.323 ±     549.065  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      2405.405 ±    2018.528    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         2.224 ±      10.393  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         5.536 ±      27.553    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        16.000                counts
[info] ListOfBooleansBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        39.000                    ms
[info] MapOfIntsToBooleansBenchmark.readCirce                                                      128  thrpt    5     75904.320 ±    9514.122   ops/s
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                       128  thrpt    5      2247.981 ±     111.661  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                  128  thrpt    5     46632.221 ±    5828.892    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      2257.169 ±     537.788  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     46786.361 ±    9624.376    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.447 ±       3.322  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         9.655 ±      72.250    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.count                                            128  thrpt    5        34.000                counts
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.time                                             128  thrpt    5        49.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJacksonScala                                               128  thrpt    5    103042.821 ±    2390.665   ops/s
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                128  thrpt    5      1882.931 ±      59.406  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     28760.285 ±    1060.647    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1844.629 ±     722.112  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     28183.718 ±   11432.645    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.932 ±       6.626  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5        14.243 ±     101.285    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                     128  thrpt    5        28.000                counts
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                      128  thrpt    5        46.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala                                              128  thrpt    5    158546.481 ±    5979.450   ops/s
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                               128  thrpt    5      2507.519 ±     119.814  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5     24888.885 ±     875.773    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      2419.950 ±     691.895  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     24029.541 ±    7445.999    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         1.009 ±       6.639  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5        10.031 ±      65.962    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                    128  thrpt    5        37.000                counts
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                     128  thrpt    5        71.000                    ms
[info] MapOfIntsToBooleansBenchmark.readPlayJson                                                   128  thrpt    5     43409.446 ±    4810.694   ops/s
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                    128  thrpt    5      2492.106 ±     152.663  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                               128  thrpt    5     90433.522 ±   14921.587    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      2453.339 ±     700.799  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     89078.351 ±   31824.263    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.167 ±       5.859  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        43.328 ±     218.892    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                         128  thrpt    5        37.000                counts
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                          128  thrpt    5        65.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala                                              128  thrpt    5    238216.881 ±    3189.763   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                               128  thrpt    5      1078.751 ±      26.489  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                          128  thrpt    5      7126.922 ±     208.385    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1044.699 ±     552.384  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      6903.942 ±    3732.115    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.262 ±       1.783  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         1.739 ±      11.836    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                    128  thrpt    5        16.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                     128  thrpt    5        26.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala                                             128  thrpt    5    547651.017 ±   24371.864   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                              128  thrpt    5       627.271 ±      34.868  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                         128  thrpt    5      1802.509 ±      58.168    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       651.154 ±       3.173  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5      1871.346 ±      86.514    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.701 ±       4.733  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         2.011 ±      13.588    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                   128  thrpt    5        10.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                    128  thrpt    5        34.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5    627753.954 ±   52410.791   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                      128  thrpt    5         6.384 ±       0.531  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                 128  thrpt    5        16.001 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                           128  thrpt    5           ≈ 0                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson                                                  128  thrpt    5     89748.131 ±   15801.254   ops/s
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                   128  thrpt    5      1482.017 ±     290.069  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                              128  thrpt    5     26077.488 ±    9868.828    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                          128  thrpt    5      1442.674 ±     697.138  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     25416.274 ±   15760.500    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                      128  thrpt    5         1.424 ±       3.691  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        24.846 ±      62.815    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                        128  thrpt    5        22.000                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                         128  thrpt    5        68.000                    ms
[info] MissingReqFieldBenchmark.readCirce                                                          N/A  thrpt    5   8187410.810 ±  221171.632   ops/s
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate                                           N/A  thrpt    5      7209.441 ±     248.647  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm                                      N/A  thrpt    5      1385.837 ±      28.443    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5      6970.539 ±     675.204  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5      1339.917 ±     124.783    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.167 ±       0.409  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.032 ±       0.079    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.count                                                N/A  thrpt    5       103.000                counts
[info] MissingReqFieldBenchmark.readCirce:·gc.time                                                 N/A  thrpt    5       134.000                    ms
[info] MissingReqFieldBenchmark.readDslJsonJava                                                    N/A  thrpt    5    990671.636 ±  143448.832   ops/s
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate                                     N/A  thrpt    5       626.897 ±      72.861  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                N/A  thrpt    5       996.025 ±      42.504    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       646.931 ±       3.595  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5      1028.776 ±     150.901    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.834 ±       7.039  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5         1.348 ±      11.380    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.count                                          N/A  thrpt    5        10.000                counts
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.time                                           N/A  thrpt    5        38.000                    ms
[info] MissingReqFieldBenchmark.readJacksonScala                                                   N/A  thrpt    5    439585.608 ±   29158.664   ops/s
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate                                    N/A  thrpt    5       968.670 ±      77.605  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm                               N/A  thrpt    5      3467.865 ±      83.285    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           N/A  thrpt    5       973.911 ±      21.234  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      N/A  thrpt    5      3487.846 ±     303.331    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       N/A  thrpt    5         0.329 ±       1.511  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  N/A  thrpt    5         1.177 ±       5.381    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.count                                         N/A  thrpt    5        15.000                counts
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.time                                          N/A  thrpt    5        29.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterScala                                                  N/A  thrpt    5    814742.996 ±   92733.320   ops/s
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate                                   N/A  thrpt    5       745.392 ±      94.199  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              N/A  thrpt    5      1439.571 ±      77.016    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          N/A  thrpt    5       727.972 ±     572.416  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     N/A  thrpt    5      1408.357 ±    1157.634    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      N/A  thrpt    5         0.750 ±       4.081  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 N/A  thrpt    5         1.476 ±       8.009    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.count                                        N/A  thrpt    5        11.000                counts
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.time                                         N/A  thrpt    5        33.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStackless                                              N/A  thrpt    5   3970243.768 ±  213900.225   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate                               N/A  thrpt    5      2405.441 ±     148.731  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm                          N/A  thrpt    5       953.452 ±      18.522    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space                      N/A  thrpt    5      2328.663 ±      96.573  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm                 N/A  thrpt    5       923.157 ±      56.903    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space                  N/A  thrpt    5         0.302 ±       1.848  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm             N/A  thrpt    5         0.122 ±       0.748    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.count                                    N/A  thrpt    5        35.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.time                                     N/A  thrpt    5        43.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump                                        N/A  thrpt    5  29625560.157 ±  553877.165   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate                         N/A  thrpt    5      2656.097 ±      70.489  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm                    N/A  thrpt    5       141.098 ±       2.401    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space                N/A  thrpt    5      2593.722 ±     546.903  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm           N/A  thrpt    5       137.774 ±      28.145    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space            N/A  thrpt    5         0.760 ±       6.146  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm       N/A  thrpt    5         0.040 ±       0.327    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count                              N/A  thrpt    5        39.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time                               N/A  thrpt    5        56.000                    ms
[info] MissingReqFieldBenchmark.readPlayJson                                                       N/A  thrpt    5    394131.072 ±   27538.814   ops/s
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate                                        N/A  thrpt    5      2769.527 ±     124.065  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm                                   N/A  thrpt    5     11060.540 ±     395.298    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               N/A  thrpt    5      2723.457 ±     447.278  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     10874.980 ±    1545.316    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.202 ±       1.220  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         0.803 ±       4.842    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.count                                             N/A  thrpt    5        41.000                counts
[info] MissingReqFieldBenchmark.readPlayJson:·gc.time                                              N/A  thrpt    5        64.000                    ms
[info] MutableBitSetBenchmark.readJsoniterScala                                                    128  thrpt    5   1465172.695 ±   44115.990   ops/s
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5        46.106 ±       8.211  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5        49.542 ±      10.370    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5        51.158 ±     440.485  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5        55.712 ±     479.701    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.267 ±       2.297  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.290 ±       2.501    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         1.000                counts
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5         4.000                    ms
[info] MutableBitSetBenchmark.readPlayJson                                                         128  thrpt    5    119147.828 ±    7064.446   ops/s
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      4262.007 ±     279.119  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     56295.727 ±    1186.280    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      4100.758 ±     692.462  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     54169.585 ±    8887.609    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.501 ±       3.731  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         6.636 ±      49.427    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        61.000                counts
[info] MutableBitSetBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        90.000                    ms
[info] MutableBitSetBenchmark.writeJacksonScala                                                    128  thrpt    5   2049319.164 ±  361442.558   ops/s
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       567.914 ±      86.979  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5       436.240 ±      15.881    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space                   128  thrpt    5         0.003 ±       0.025  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm              128  thrpt    5         0.002 ±       0.021    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.Metaspace                                128  thrpt    5         0.008 ±       0.069  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                           128  thrpt    5         0.007 ±       0.057    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       583.662 ±     561.024  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       450.397 ±     458.829    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.237 ±       1.954  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.198 ±       1.635    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        11.000                counts
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5       107.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScala                                                   128  thrpt    5   1950614.880 ±  157844.685   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       543.063 ±      43.727  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       438.175 ±      13.301    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       525.745 ±     693.636  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       424.857 ±     567.234    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.011 ±       0.070  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.009 ±       0.057    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         8.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        29.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   2041222.538 ±   28616.467   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         5.010 ±      43.137  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         3.886 ±      33.461    B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] MutableBitSetBenchmark.writePlayJson                                                        128  thrpt    5     54834.949 ±    7370.059   ops/s
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1999.359 ±     473.963  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     57533.590 ±   21975.540    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1982.432 ±     864.306  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     57117.169 ±   32510.512    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.802 ±       3.909  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        23.472 ±     114.182    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        30.000                counts
[info] MutableBitSetBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        51.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala                                         128  thrpt    5    269210.437 ±    8151.929   ops/s
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                          128  thrpt    5      1083.487 ±      42.999  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                     128  thrpt    5      6333.901 ±      96.526    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                 128  thrpt    5      1048.045 ±     566.456  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm            128  thrpt    5      6124.371 ±    3205.210    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space             128  thrpt    5         0.837 ±       4.980  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm        128  thrpt    5         4.872 ±      29.015    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count                               128  thrpt    5        16.000                counts
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                128  thrpt    5        38.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readPlayJson                                              128  thrpt    5     50473.338 ±    6550.852   ops/s
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                               128  thrpt    5      2174.397 ±      61.798  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                          128  thrpt    5     67865.612 ±   10712.425    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                      128  thrpt    5      2112.874 ±     653.403  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     66014.699 ±   26524.350    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                  128  thrpt    5         1.248 ±       7.016  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5        40.361 ±     232.246    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count                                    128  thrpt    5        32.000                counts
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time                                     128  thrpt    5        59.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala                                         128  thrpt    5    155812.465 ±    7108.568   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                          128  thrpt    5      1570.078 ±      64.870  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                     128  thrpt    5     15859.061 ±     293.433    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                 128  thrpt    5      1511.764 ±     678.822  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm            128  thrpt    5     15265.738 ±    6663.864    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space             128  thrpt    5         0.225 ±       1.452  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm        128  thrpt    5         2.290 ±      14.856    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count                               128  thrpt    5        23.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                128  thrpt    5        38.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala                                        128  thrpt    5    513538.025 ±   19726.492   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                         128  thrpt    5       706.419 ±      28.244  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                    128  thrpt    5      2164.558 ±      48.685    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                128  thrpt    5       722.538 ±     569.136  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm           128  thrpt    5      2216.425 ±    1814.515    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space            128  thrpt    5         0.833 ±       5.377  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm       128  thrpt    5         2.575 ±      16.667    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                              128  thrpt    5        11.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                               128  thrpt    5        38.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                128  thrpt    5    584793.137 ±   21458.758   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                 128  thrpt    5         0.168 ±       1.444  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm            128  thrpt    5         0.458 ±       3.932    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                      128  thrpt    5           ≈ 0                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson                                             128  thrpt    5     84206.204 ±   16429.773   ops/s
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                              128  thrpt    5      1623.968 ±     266.109  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                         128  thrpt    5     30474.762 ±   11686.982    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                     128  thrpt    5      1633.347 ±     886.529  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                128  thrpt    5     30746.051 ±   22781.255    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                 128  thrpt    5         1.982 ±       9.837  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5        38.084 ±     188.445    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count                                   128  thrpt    5        25.000                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time                                    128  thrpt    5        55.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readCirce                                               128  thrpt    5    101754.688 ±    8301.886   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                128  thrpt    5      1600.653 ±     130.001  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                           128  thrpt    5     24753.868 ±     717.544    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                       128  thrpt    5      1554.130 ±     561.377  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     24055.584 ±    9478.969    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.559 ±       8.797  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5        24.702 ±     141.421    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count                                     128  thrpt    5        24.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time                                      128  thrpt    5        57.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala                                        128  thrpt    5    151504.718 ±   17794.532   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                         128  thrpt    5       760.096 ±     125.168  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                    128  thrpt    5      7908.867 ±    2178.384    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                128  thrpt    5       710.683 ±     550.349  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm           128  thrpt    5      7413.274 ±    6521.986    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space            128  thrpt    5         0.502 ±       1.879  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm       128  thrpt    5         5.259 ±      19.605    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                              128  thrpt    5        11.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                               128  thrpt    5        20.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala                                       128  thrpt    5    346865.060 ±   20904.278   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                        128  thrpt    5      1472.513 ±      84.150  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                   128  thrpt    5      6681.689 ±     172.392    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space               128  thrpt    5      1375.005 ±     546.938  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm          128  thrpt    5      6238.319 ±    2402.479    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space           128  thrpt    5         0.895 ±       7.092  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm      128  thrpt    5         4.056 ±      32.121    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                             128  thrpt    5        21.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                              128  thrpt    5        47.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson                                            128  thrpt    5     44101.941 ±    5160.326   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                             128  thrpt    5      2379.836 ±     127.370  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                        128  thrpt    5     84957.230 ±    7235.624    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                    128  thrpt    5      2309.624 ±      62.491  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     82476.860 ±   10794.594    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                128  thrpt    5         5.552 ±       6.819  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5       197.736 ±     237.282    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                  128  thrpt    5        35.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                   128  thrpt    5        78.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala                                       128  thrpt    5    251166.040 ±   17584.217   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                        128  thrpt    5       891.298 ±      73.273  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                   128  thrpt    5      5584.321 ±     199.041    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space               128  thrpt    5       848.404 ±     693.513  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm          128  thrpt    5      5312.089 ±    4257.352    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space           128  thrpt    5         0.221 ±       1.331  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm      128  thrpt    5         1.375 ±       8.287    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                             128  thrpt    5        13.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                              128  thrpt    5        22.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala                                      128  thrpt    5    678425.858 ±   81014.243   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                       128  thrpt    5       764.659 ±      64.241  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                  128  thrpt    5      1774.205 ±      82.959    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space              128  thrpt    5       722.458 ±     566.549  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm         128  thrpt    5      1679.826 ±    1405.902    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space          128  thrpt    5         0.865 ±       5.268  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5         2.012 ±      12.347    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                            128  thrpt    5        11.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                             128  thrpt    5        37.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                              128  thrpt    5    749383.234 ±    1149.351   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm          128  thrpt    5         0.001 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                    128  thrpt    5           ≈ 0                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson                                           128  thrpt    5     85452.573 ±    7565.973   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                            128  thrpt    5      1729.515 ±     768.836  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                       128  thrpt    5     31837.687 ±   13815.493    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                   128  thrpt    5      1730.610 ±     732.482  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm              128  thrpt    5     31884.474 ±   14337.938    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space               128  thrpt    5         4.091 ±      11.341  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5        75.477 ±     209.491    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                 128  thrpt    5        27.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                  128  thrpt    5       122.000                    ms
[info] MutableSetOfIntsBenchmark.readCirce                                                         128  thrpt    5    121903.815 ±   20391.156   ops/s
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      2057.673 ±     334.800  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5     26645.969 ±    9124.723    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1960.624 ±      76.054  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     25348.675 ±    4128.881    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.150 ±       5.656  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        15.455 ±      77.345    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.count                                               128  thrpt    5        30.000                counts
[info] MutableSetOfIntsBenchmark.readCirce:·gc.time                                                128  thrpt    5        50.000                    ms
[info] MutableSetOfIntsBenchmark.readJacksonScala                                                  128  thrpt    5    199989.425 ±    8631.453   ops/s
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5       841.239 ±      24.847  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      6619.992 ±     157.698    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       842.298 ±     682.381  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      6640.105 ±    5613.003    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.701 ±       4.823  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         5.490 ±      37.602    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        13.000                counts
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5        30.000                    ms
[info] MutableSetOfIntsBenchmark.readJsoniterScala                                                 128  thrpt    5    282740.740 ±    8873.653   ops/s
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1036.948 ±      51.360  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      5771.812 ±     172.746    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1041.492 ±     570.039  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      5802.213 ±    3364.055    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.932 ±       4.487  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         5.180 ±      24.947    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        16.000                counts
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        42.000                    ms
[info] MutableSetOfIntsBenchmark.readPlayJson                                                      128  thrpt    5     95133.855 ±   30050.624   ops/s
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      3136.771 ±     646.361  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     52003.442 ±    6613.697    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      3052.599 ±    1130.119  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     50500.435 ±    9429.889    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.497 ±      12.266  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        28.811 ±     238.074    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        46.000                counts
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        69.000                    ms
[info] MutableSetOfIntsBenchmark.writeCirce                                                        128  thrpt    5    250036.780 ±    7568.627   ops/s
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1704.970 ±      80.801  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     10731.158 ±     261.399    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1634.697 ±      53.129  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     10289.284 ±     317.232    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.885 ±       7.177  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         5.555 ±      45.026    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.count                                              128  thrpt    5        25.000                counts
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.time                                               128  thrpt    5        43.000                    ms
[info] MutableSetOfIntsBenchmark.writeJacksonScala                                                 128  thrpt    5    761974.912 ±   25277.759   ops/s
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       417.266 ±      19.914  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5       861.746 ±      43.616    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       385.044 ±     555.342  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       794.493 ±    1133.158    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.008 ±       0.072  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.017 ±       0.147    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5         6.000                counts
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        10.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScala                                                128  thrpt    5    873732.792 ±   64212.613   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       476.548 ±      40.742  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5       858.392 ±      56.612    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       458.900 ±     691.474  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       828.951 ±    1276.912    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.018 ±       0.071  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.033 ±       0.128    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         7.000                counts
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        26.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    896123.369 ±   13495.625   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         0.052 ±       0.441  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         0.090 ±       0.774    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] MutableSetOfIntsBenchmark.writePlayJson                                                     128  thrpt    5     36627.851 ±    3221.001   ops/s
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1918.647 ±     121.459  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     82462.733 ±    7722.957    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1897.419 ±     576.442  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     81647.358 ±   30071.918    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         2.545 ±       7.118  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       108.779 ±     299.324    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        29.000                counts
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        79.000                    ms
[info] PrimitivesBenchmark.readCirce                                                               N/A  thrpt    5   1117621.382 ±   62085.118   ops/s
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate                                                N/A  thrpt    5      2576.173 ±     178.494  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm                                           N/A  thrpt    5      3626.463 ±     106.751    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      2491.058 ±     672.705  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      3508.423 ±    1038.251    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         1.106 ±       6.640  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         1.583 ±       9.568    B/op
[info] PrimitivesBenchmark.readCirce:·gc.count                                                     N/A  thrpt    5        38.000                counts
[info] PrimitivesBenchmark.readCirce:·gc.time                                                      N/A  thrpt    5        66.000                    ms
[info] PrimitivesBenchmark.readJacksonScala                                                        N/A  thrpt    5   1855657.869 ±   54853.762   ops/s
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate                                         N/A  thrpt    5      1154.645 ±      24.609  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    N/A  thrpt    5       979.309 ±      32.375    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                N/A  thrpt    5      1178.082 ±     690.076  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5       999.587 ±     597.479    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.275 ±       1.923  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5         0.234 ±       1.640    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.count                                              N/A  thrpt    5        18.000                counts
[info] PrimitivesBenchmark.readJacksonScala:·gc.time                                               N/A  thrpt    5        32.000                    ms
[info] PrimitivesBenchmark.readJsoniterScala                                                       N/A  thrpt    5   9646444.261 ±  521956.596   ops/s
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate                                        N/A  thrpt    5       302.665 ±      13.815  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   N/A  thrpt    5        49.382 ±       3.448    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       248.767 ±     549.353  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5        40.730 ±      89.966    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         0.001 ±       0.007    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.count                                             N/A  thrpt    5         4.000                counts
[info] PrimitivesBenchmark.readJsoniterScala:·gc.time                                              N/A  thrpt    5        16.000                    ms
[info] PrimitivesBenchmark.readPlayJson                                                            N/A  thrpt    5    495111.647 ±   28921.334   ops/s
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate                                             N/A  thrpt    5      2261.454 ±     149.968  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm                                        N/A  thrpt    5      7187.651 ±     151.245    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      2178.856 ±     678.757  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5      6930.437 ±    2408.205    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.654 ±       4.770  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         2.123 ±      15.565    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.count                                                  N/A  thrpt    5        33.000                counts
[info] PrimitivesBenchmark.readPlayJson:·gc.time                                                   N/A  thrpt    5        60.000                    ms
[info] PrimitivesBenchmark.writeCirce                                                              N/A  thrpt    5   2037138.374 ±   93937.992   ops/s
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate                                               N/A  thrpt    5      2096.027 ±     145.309  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm                                          N/A  thrpt    5      1619.115 ±      53.409    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      2021.098 ±     553.745  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5      1561.301 ±     421.617    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.999 ±       7.899  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.786 ±       6.225    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.count                                                    N/A  thrpt    5        31.000                counts
[info] PrimitivesBenchmark.writeCirce:·gc.time                                                     N/A  thrpt    5        49.000                    ms
[info] PrimitivesBenchmark.writeJacksonScala                                                       N/A  thrpt    5   3064376.829 ±   97281.565   ops/s
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate                                        N/A  thrpt    5      1200.122 ±      64.378  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   N/A  thrpt    5       616.309 ±      15.746    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5      1168.210 ±     664.412  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5       599.554 ±     328.600    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.283 ±       2.302  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         0.145 ±       1.180    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.count                                             N/A  thrpt    5        18.000                counts
[info] PrimitivesBenchmark.writeJacksonScala:·gc.time                                              N/A  thrpt    5        27.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScala                                                      N/A  thrpt    5   8844245.271 ±  321705.414   ops/s
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate                                       N/A  thrpt    5       748.395 ±      36.979  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  N/A  thrpt    5       133.174 ±       5.911    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       785.974 ±     688.798  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5       139.954 ±     124.684    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.850 ±       7.228  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.153 ±       1.306    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.count                                            N/A  thrpt    5        12.000                counts
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.time                                             N/A  thrpt    5        42.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc                                              N/A  thrpt    5   8689050.939 ±  144188.853   ops/s
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               N/A  thrpt    5       278.661 ±      53.305  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          N/A  thrpt    5        50.482 ±      10.345    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                      N/A  thrpt    5       247.339 ±     545.478  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                 N/A  thrpt    5        44.835 ±      98.791    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                  N/A  thrpt    5         0.008 ±       0.072  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm             N/A  thrpt    5         0.002 ±       0.013    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    N/A  thrpt    5         4.000                counts
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                     N/A  thrpt    5        16.000                    ms
[info] PrimitivesBenchmark.writePlayJson                                                           N/A  thrpt    5    510128.922 ±   13215.975   ops/s
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate                                            N/A  thrpt    5      2602.245 ±     112.224  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm                                       N/A  thrpt    5      8028.314 ±     261.750    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      2514.217 ±     685.099  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5      7757.507 ±    2152.105    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.629 ±       4.971  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         1.960 ±      15.499    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.count                                                 N/A  thrpt    5        38.000                counts
[info] PrimitivesBenchmark.writePlayJson:·gc.time                                                  N/A  thrpt    5        62.000                    ms
[info] SetOfIntsBenchmark.readCirce                                                                128  thrpt    5     92746.869 ±   16846.465   ops/s
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      2647.609 ±     172.167  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5     45037.014 ±   11586.068    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2557.439 ±     961.491  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     43538.057 ±   21127.443    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         3.918 ±      26.882  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        66.247 ±     445.655    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.count                                                      128  thrpt    5        41.000                counts
[info] SetOfIntsBenchmark.readCirce:·gc.time                                                       128  thrpt    5       115.000                    ms
[info] SetOfIntsBenchmark.readJacksonScala                                                         128  thrpt    5    143688.196 ±    6873.124   ops/s
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      2258.694 ±     152.154  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     24737.859 ±     808.632    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2191.834 ±     739.094  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     23998.153 ±    7542.254    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.212 ±       1.175  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.321 ±      12.805    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        33.000                counts
[info] SetOfIntsBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        50.000                    ms
[info] SetOfIntsBenchmark.readJsoniterScala                                                        128  thrpt    5    175682.563 ±    6920.023   ops/s
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      2663.808 ±     159.819  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5     23860.492 ±     676.514    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      2575.594 ±     151.390  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     23072.213 ±    1390.472    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         2.266 ±      12.244  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        20.455 ±     110.289    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        40.000                counts
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        93.000                    ms
[info] SetOfIntsBenchmark.readPlayJson                                                             128  thrpt    5     77908.555 ±    8561.772   ops/s
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      3447.641 ±     305.771  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     69655.459 ±    2778.388    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      3343.791 ±     178.945  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     67570.188 ±    4102.482    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         1.093 ±       7.202  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        22.915 ±     152.150    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        50.000                counts
[info] SetOfIntsBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        71.000                    ms
[info] SetOfIntsBenchmark.writeCirce                                                               128  thrpt    5    254263.102 ±    9359.118   ops/s
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1752.043 ±      81.158  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     10842.449 ±     355.997    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1702.075 ±     580.915  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     10531.159 ±    3442.843    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.927 ±       7.404  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         5.752 ±      45.927    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        26.000                counts
[info] SetOfIntsBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        45.000                    ms
[info] SetOfIntsBenchmark.writeJacksonScala                                                        128  thrpt    5    805256.972 ±   44689.647   ops/s
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5       482.087 ±      33.511  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5       942.214 ±      64.886    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       449.742 ±     677.057  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       880.116 ±    1338.654    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.021 ±       0.080  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.041 ±       0.158    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5         7.000                counts
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        12.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScala                                                       128  thrpt    5    813427.116 ±   19520.491   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       452.471 ±      35.163  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5       875.530 ±      82.363    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       456.445 ±     687.328  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       884.802 ±    1352.884    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.015 ±       0.067  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.029 ±       0.130    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5         7.000                counts
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        25.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5    837133.576 ±   15570.457   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5         8.947 ±       3.585  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5        16.825 ±       7.098    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                       128  thrpt    5        51.161 ±     440.508  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5        97.010 ±     835.284    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.229 ±       1.974  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.435 ±       3.742    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5         1.000                counts
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                      128  thrpt    5         5.000                    ms
[info] SetOfIntsBenchmark.writePlayJson                                                            128  thrpt    5     37380.709 ±    5448.274   ops/s
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1834.044 ±     329.945  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     77406.913 ±   25652.718    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1794.602 ±     656.897  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     75772.036 ±   35621.154    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         2.651 ±       6.762  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       111.668 ±     279.372    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        28.000                counts
[info] SetOfIntsBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        66.000                    ms
[info] StringOfAsciiCharsBenchmark.readCirce                                                       128  thrpt    5   4210524.605 ±  171480.321   ops/s
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      3273.912 ±     118.840  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5      1223.557 ±      32.952    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      3213.364 ±     709.908  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1201.226 ±     287.836    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.079 ±       0.154  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.030 ±       0.058    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.count                                             128  thrpt    5        48.000                counts
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.time                                              128  thrpt    5        68.000                    ms
[info] StringOfAsciiCharsBenchmark.readDslJsonJava                                                 128  thrpt    5   6413918.485 ±  233957.363   ops/s
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                  128  thrpt    5      1244.093 ±      41.777  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                             128  thrpt    5       305.245 ±      11.810    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                         128  thrpt    5      1236.105 ±     551.400  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       303.329 ±     137.029    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.985 ±       5.091  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.242 ±       1.249    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count                                       128  thrpt    5        19.000                counts
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time                                        128  thrpt    5        46.000                    ms
[info] StringOfAsciiCharsBenchmark.readJacksonScala                                                128  thrpt    5   5061406.634 ±  642305.753   ops/s
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1036.688 ±      87.683  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5       322.465 ±      17.676    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space               128  thrpt    5         0.005 ±       0.044  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm          128  thrpt    5         0.002 ±       0.014    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.Metaspace                            128  thrpt    5         0.014 ±       0.121  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                       128  thrpt    5         0.005 ±       0.040    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       980.310 ±      33.300  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       305.175 ±      50.863    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                           128  thrpt    5         0.467 ±       4.023  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                      128  thrpt    5         0.154 ±       1.326    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.046 ±       5.975  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.324 ±       1.846    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        17.000                counts
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        79.000                    ms
[info] StringOfAsciiCharsBenchmark.readJsoniterScala                                               128  thrpt    5   6554158.874 ±  320452.466   ops/s
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1276.904 ±      66.397  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5       306.643 ±      28.601    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1250.132 ±     561.320  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5       300.281 ±     138.849    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.823 ±       5.498  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.197 ±       1.312    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        19.000                counts
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        39.000                    ms
[info] StringOfAsciiCharsBenchmark.readPlayJson                                                    128  thrpt    5   5337698.573 ±  322804.002   ops/s
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1037.747 ±      30.275  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5       306.014 ±      14.077    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1043.302 ±     562.057  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       307.604 ±     163.771    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.154 ±       6.945  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.346 ±       2.098    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        16.000                counts
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        40.000                    ms
[info] StringOfAsciiCharsBenchmark.writeCirce                                                      128  thrpt    5   3608214.682 ±   91149.661   ops/s
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      1992.095 ±      72.358  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5       868.821 ±      16.972    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      1909.406 ±     551.876  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       833.002 ±     253.090    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.883 ±       7.380  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.388 ±       3.248    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.count                                            128  thrpt    5        29.000                counts
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.time                                             128  thrpt    5        45.000                    ms
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava                                                128  thrpt    5   6720228.205 ±  306974.700   ops/s
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                 128  thrpt    5       679.690 ±      43.117  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                            128  thrpt    5       159.185 ±      15.479    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                        128  thrpt    5       650.550 ±       7.121  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       152.347 ±       7.149    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.802 ±       6.673  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.188 ±       1.561    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                      128  thrpt    5        10.000                counts
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                       128  thrpt    5        36.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJacksonScala                                               128  thrpt    5   6338984.621 ±  115571.770   ops/s
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5       638.532 ±      40.134  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5       158.521 ±      10.318    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       650.701 ±       7.044  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5       161.544 ±       4.311    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.793 ±       6.678  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.197 ±       1.659    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        10.000                counts
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        38.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala                                              128  thrpt    5   6931101.310 ±  446820.757   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5       693.986 ±      45.376  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5       157.600 ±       9.949    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5       657.886 ±       5.315  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5       149.422 ±      10.212    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.727 ±       6.126  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.166 ±       1.395    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        10.000                counts
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        34.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5   7359027.068 ±   32131.555   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5         0.167 ±       1.435  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5         0.036 ±       0.307    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5           ≈ 0                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson                                                   128  thrpt    5   6352911.475 ±   66395.416   ops/s
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5       633.000 ±      14.978  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5       156.810 ±       3.863    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5       589.194 ±     562.800  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       145.935 ±     139.127    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.889 ±       5.717  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.220 ±       1.415    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.count                                         128  thrpt    5         9.000                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        31.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readCirce                                                    128  thrpt    5   1741497.861 ±   49772.771   ops/s
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      2252.757 ±      45.999  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5      2035.823 ±      61.847    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      2163.511 ±     640.624  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1955.449 ±     598.536    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.660 ±       5.367  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.597 ±       4.860    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.count                                          128  thrpt    5        33.000                counts
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.time                                           128  thrpt    5        50.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava                                              128  thrpt    5   2966033.244 ±  187837.004   ops/s
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                               128  thrpt    5       572.840 ±      39.048  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                          128  thrpt    5       303.940 ±      12.032    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                      128  thrpt    5       521.782 ±     687.655  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5       276.884 ±     365.074    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.009 ±       0.068  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.005 ±       0.036    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count                                    128  thrpt    5         8.000                counts
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time                                     128  thrpt    5        29.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala                                             128  thrpt    5   1902232.010 ±   44950.376   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5       386.261 ±      12.126  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5       319.471 ±       6.766    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       389.875 ±     556.256  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5       322.710 ±     464.782    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.279 ±       2.297  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.232 ±       1.909    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        25.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala                                            128  thrpt    5   2289205.105 ±  114894.031   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5       441.351 ±      23.454  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5       303.428 ±       9.052    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       395.049 ±     566.409  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5       271.376 ±     384.763    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.004 ±       0.036  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.003 ±       0.024    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        20.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readPlayJson                                                 128  thrpt    5   1960778.110 ±   55550.780   ops/s
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5       380.148 ±      27.093  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5       305.121 ±      22.372    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5       388.253 ±     555.195  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       311.535 ±     443.823    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.162 ±       1.310  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.129 ±       1.044    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count                                       128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        10.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeCirce                                                   128  thrpt    5   2439208.816 ±   75631.360   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1746.956 ±      59.103  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5      1127.187 ±      30.752    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1707.548 ±     539.062  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      1101.665 ±     340.637    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.885 ±       6.265  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.578 ±       4.101    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count                                         128  thrpt    5        26.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time                                          128  thrpt    5        44.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava                                             128  thrpt    5   3552369.236 ±  140712.335   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                              128  thrpt    5       951.575 ±      53.315  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                         128  thrpt    5       421.530 ±      11.231    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                     128  thrpt    5       976.047 ±      13.731  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                128  thrpt    5       432.425 ±      21.067    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                 128  thrpt    5         1.024 ±       5.817  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.452 ±       2.563    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                   128  thrpt    5        15.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                    128  thrpt    5        44.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala                                            128  thrpt    5   3301064.731 ±  187274.967   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5       884.759 ±      27.335  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5       421.799 ±      21.850    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       848.589 ±     688.111  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5       405.255 ±     343.079    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.921 ±       5.067  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.441 ±       2.439    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5        13.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5        40.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala                                           128  thrpt    5   3582297.031 ±  100674.476   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5       956.314 ±      31.252  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5       420.140 ±       7.185    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5       919.693 ±     568.860  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5       403.938 ±     247.073    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.842 ±       6.500  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         0.368 ±       2.841    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        38.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5   3890611.331 ±   11510.434   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson                                                128  thrpt    5   3306200.834 ±  150717.173   ops/s
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5       883.911 ±      43.305  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5       420.700 ±      17.807    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5       851.909 ±     692.377  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       405.678 ±     333.638    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.859 ±       5.652  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.412 ±       2.723    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        13.000                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time                                       128  thrpt    5        38.000                    ms
[info] TwitterAPIBenchmark.readCirce                                                               N/A  thrpt    5     12274.830 ±     532.570   ops/s
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate                                                N/A  thrpt    5      1589.437 ±     236.368  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm                                           N/A  thrpt    5    203790.867 ±   31240.792    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1567.010 ±     584.024  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5    200795.985 ±   69798.195    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.866 ±       3.005  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5       110.584 ±     380.513    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.count                                                     N/A  thrpt    5        24.000                counts
[info] TwitterAPIBenchmark.readCirce:·gc.time                                                      N/A  thrpt    5        39.000                    ms
[info] TwitterAPIBenchmark.readJacksonScala                                                        N/A  thrpt    5     21753.134 ±    1695.333   ops/s
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate                                         N/A  thrpt    5       370.871 ±     186.662  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    N/A  thrpt    5     26869.807 ±   14765.397    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                N/A  thrpt    5       321.686 ±       4.290  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5     23281.709 ±    1969.374    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.010 ±       0.089  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5         0.733 ±       6.311    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.count                                              N/A  thrpt    5         5.000                counts
[info] TwitterAPIBenchmark.readJacksonScala:·gc.time                                               N/A  thrpt    5        17.000                    ms
[info] TwitterAPIBenchmark.readJsoniterScala                                                       N/A  thrpt    5     21415.644 ±     748.637   ops/s
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                        N/A  thrpt    5       261.471 ±     210.505  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   N/A  thrpt    5     19238.968 ±   16154.467    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       261.655 ±     563.231  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     19280.140 ±   41507.067    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         0.307 ±       2.646    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.count                                             N/A  thrpt    5         4.000                counts
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.time                                              N/A  thrpt    5        16.000                    ms
[info] TwitterAPIBenchmark.readPlayJson                                                            N/A  thrpt    5      9079.595 ±     997.262   ops/s
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate                                             N/A  thrpt    5      1968.288 ±      72.849  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                        N/A  thrpt    5    341402.601 ±   48736.901    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      1957.165 ±      65.788  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5    339411.273 ±   38582.624    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         1.556 ±       7.364  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5       274.828 ±    1312.890    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.count                                                  N/A  thrpt    5        30.000                counts
[info] TwitterAPIBenchmark.readPlayJson:·gc.time                                                   N/A  thrpt    5        68.000                    ms
[info] TwitterAPIBenchmark.writeJacksonScala                                                       N/A  thrpt    5     63348.049 ±    6502.198   ops/s
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                        N/A  thrpt    5       921.600 ±     244.086  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   N/A  thrpt    5     22936.320 ±    8088.045    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       846.962 ±     683.274  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     21119.113 ±   18438.124    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.840 ±       3.061  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5        21.256 ±      78.284    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.count                                             N/A  thrpt    5        13.000                counts
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.time                                              N/A  thrpt    5        29.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScala                                                      N/A  thrpt    5    110174.560 ±    1545.287   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                       N/A  thrpt    5       724.607 ±      13.594  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  N/A  thrpt    5     10349.688 ±     114.714    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       658.113 ±       3.370  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5      9400.035 ±     105.230    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.798 ±       5.158  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5        11.350 ±      73.355    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.count                                            N/A  thrpt    5        10.000                counts
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.time                                             N/A  thrpt    5        36.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc                                              N/A  thrpt    5    117934.677 ±    1746.591   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               N/A  thrpt    5         2.178 ±      15.065  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          N/A  thrpt    5        29.183 ±     202.074    B/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    N/A  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.readCirce                                                         128  thrpt    5    388292.293 ±   16086.025   ops/s
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      2236.830 ±     125.266  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5      9065.500 ±     185.100    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2140.233 ±     654.563  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      8675.071 ±    2680.184    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.256 ±       6.368  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         5.145 ±      26.103    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.count                                               128  thrpt    5        33.000                counts
[info] VectorOfBooleansBenchmark.readCirce:·gc.time                                                128  thrpt    5        76.000                    ms
[info] VectorOfBooleansBenchmark.readJacksonScala                                                  128  thrpt    5    917908.201 ±    8610.482   ops/s
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5       647.751 ±      18.486  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      1110.653 ±      27.445    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       645.631 ±      15.475  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      1107.033 ±      31.956    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.121 ±       0.818  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.208 ±       1.409    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        10.000                counts
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5        18.000                    ms
[info] VectorOfBooleansBenchmark.readJsoniterScala                                                 128  thrpt    5   1987668.616 ±  107614.409   ops/s
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1008.096 ±      50.379  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5       798.136 ±      11.192    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       985.107 ±      13.514  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       780.058 ±      47.540    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.838 ±       6.914  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.657 ±       5.415    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        15.000                counts
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        37.000                    ms
[info] VectorOfBooleansBenchmark.readPlayJson                                                      128  thrpt    5    181215.769 ±    7950.127   ops/s
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      4461.653 ±     255.114  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     38749.028 ±     698.889    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      4309.441 ±     538.838  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     37430.726 ±    4759.398    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.112 ±       0.387  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.981 ±       3.415    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        64.000                counts
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        90.000                    ms
[info] VectorOfBooleansBenchmark.writeCirce                                                        128  thrpt    5    440595.167 ±   16146.019   ops/s
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1447.155 ±      56.107  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5      5168.541 ±      78.710    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1367.821 ±     541.906  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      4883.530 ±    1834.310    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.869 ±       5.380  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         3.117 ±      19.255    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.count                                              128  thrpt    5        21.000                counts
[info] VectorOfBooleansBenchmark.writeCirce:·gc.time                                               128  thrpt    5        42.000                    ms
[info] VectorOfBooleansBenchmark.writeJacksonScala                                                 128  thrpt    5    897858.404 ±    9603.080   ops/s
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       429.359 ±      22.115  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5       752.571 ±      34.399    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       448.809 ±     673.912  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       786.301 ±    1175.971    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.012 ±       0.072  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.022 ±       0.125    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        11.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScala                                                128  thrpt    5   1593323.799 ±   90129.532   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       761.106 ±      50.642  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5       751.663 ±      24.871    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       723.180 ±     567.306  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       714.236 ±     558.629    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.828 ±       5.133  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.811 ±       5.027    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5        11.000                counts
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        34.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5   1689432.742 ±   23256.781   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         0.710 ±       5.579  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         0.663 ±       5.212    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.writePlayJson                                                     128  thrpt    5    631716.314 ±  110459.939   ops/s
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5       996.665 ±     696.179  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5      2503.420 ±    2285.437    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1028.252 ±     569.653  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      2579.152 ±    1964.249    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.799 ±       7.946  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         4.543 ±      19.855    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        16.000                counts
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        51.000                    ms
[info] Benchmark result is saved to graalvm1.json
[success] Total time: 5716 s, completed Apr 27, 2018 4:23:12 PM
