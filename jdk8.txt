[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[info] Setting Scala version to 2.12.6 on 4 projects.
[info] Reapplying settings...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed May 13, 2018 9:36:40 PM
[info] Updating core...
[info] Done updating.
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 5 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1395:83: dead code following this construct
[warn]       yearDigits < 10 && ((b >= '0' && b <= '9') || (b != '-' && tokenOrDigitError('-')))
[warn]                                                                                   ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1423:86: dead code following this construct
[warn]           nanoDigits < 9 && ((b >= '0' && b <= '9') || (b != 'Z' && tokenOrDigitError('Z')))
[warn]                                                                                      ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1459:83: dead code following this construct
[warn]       yearDigits < 10 && ((b >= '0' && b <= '9') || (b != '-' && tokenOrDigitError('-')))
[warn]                                                                                   ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1490:83: dead code following this construct
[warn]       yearDigits < 10 && ((b >= '0' && b <= '9') || (b != '-' && tokenOrDigitError('-')))
[warn]                                                                                   ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1518:86: dead code following this construct
[warn]           nanoDigits < 9 && ((b >= '0' && b <= '9') || (b != '"' && tokenOrDigitError('"')))
[warn]                                                                                      ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1554:86: dead code following this construct
[warn]           nanoDigits < 9 && ((b >= '0' && b <= '9') || (b != '"' && tokenOrDigitError('"')))
[warn]                                                                                      ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1599:83: dead code following this construct
[warn]       yearDigits < 10 && ((b >= '0' && b <= '9') || (b != '-' && tokenOrDigitError('-')))
[warn]                                                                                   ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1902:83: dead code following this construct
[warn]       yearDigits < 10 && ((b >= '0' && b <= '9') || (b != '"' && tokenOrDigitError('"')))
[warn]                                                                                   ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1929:83: dead code following this construct
[warn]       yearDigits < 10 && ((b >= '0' && b <= '9') || (b != '-' && tokenOrDigitError('-')))
[warn]                                                                                   ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1958:83: dead code following this construct
[warn]       yearDigits < 10 && ((b >= '0' && b <= '9') || (b != '-' && tokenOrDigitError('-')))
[warn]                                                                                   ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:987:79: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toDouble(pos: Int): Double = java.lang.Double.parseDouble(new String(buf, 0, mark, pos - mark))
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1073:75: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toFloat(pos: Int): Float = java.lang.Float.parseFloat(new String(buf, 0, mark, pos - mark))
[warn]                                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:445:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:453:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:964:14: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       zoneId.getBytes(0, len, buf, pos)
[warn]              ^
[warn] 15 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.25.5-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.25.5-SNAPSHOT.jar ...
[info] Compiling 57 Scala sources and 1 Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:48: Generated JSON codec for type 'Int':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Int] {
[info]       def nullValue: Int = 0;
[info]       def decodeValue(in: JsonReader, default: Int): Int = in.readInt();
[info]       def encodeValue(x: Int, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intCodec: JsonValueCodec[Int] = make[Int](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:57: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[String] {
[info]       def nullValue: String = null;
[info]       def decodeValue(in: JsonReader, default: String): String = in.readString(default);
[info]       def encodeValue(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonValueCodec[String] = make[String](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:56: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val f0: Array[String] = Array("a");
[info]       private[this] val f1: Array[String] = Array("b");
[info]       private[this] val f2: Array[String] = Array("l", "r");
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _a = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readString(_b)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = d0(in, _l)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _r = d0(in, _r)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d2(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d3(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("A")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("a");
[info]           out.writeVal(x.a)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("B")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("C")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           e0(x.l, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("r");
[info]           e0(x.r, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonValueCodec[AdtBase] = make[AdtBase](CodecMakerConfig()) // don't define implicit for recursive structures
[info]                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:60: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val f0: Array[String] = Array("properties", "geometry");
[info]       private[this] val f1: Array[String] = Array("coordinates");
[info]       private[this] def d2(in: JsonReader, default: scala.collection.immutable.Map[String,String]): scala.collection.immutable.Map[String,String] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[String, String];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: (Double, Double)): (Double, Double) = if (in.isNextToken('['))
[info]         {
[info]           val _1: Double = in.readDouble();
[info]           val _2: Double = if (in.isNextToken(','))
[info]             in.readDouble()
[info]           else
[info]             in.commaError();
[info]           if (in.isNextToken(']'))
[info]             new (Double, Double)(_1, _2)
[info]           else
[info]             in.arrayEndError()
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: IndexedSeq[(Double, Double)]): IndexedSeq[(Double, Double)] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[(Double, Double)];
[info]             do 
[info]               x.+=(d7(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: IndexedSeq[IndexedSeq[(Double, Double)]]): IndexedSeq[IndexedSeq[(Double, Double)]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[(Double, Double)]];
[info]             do 
[info]               x.+=(d6(in, IndexedSeq.empty[(Double, Double)]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d4(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]]): IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]             do 
[info]               x.+=(d5(in, IndexedSeq.empty[IndexedSeq[(Double, Double)]]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = IndexedSeq.empty[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _geometries: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 203916432 => if (in.isCharBufEqualsTo(l, "geometries"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometries = d11(in, _geometries)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection(geometries = _geometries)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.LineString): com.github.plokhotnyuk.jsoniter_scala.macros.LineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.LineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Polygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d14(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Point): com.github.plokhotnyuk.jsoniter_scala.macros.Point = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: (Double, Double) = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Point(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d15(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry): com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case -627102946 => if (in.isCharBufEqualsTo(l, "MultiLineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d4(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -2116761119 => if (in.isCharBufEqualsTo(l, "MultiPolygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d8(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1950410960 => if (in.isCharBufEqualsTo(l, "GeometryCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d10(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1806700869 => if (in.isCharBufEqualsTo(l, "LineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d12(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1267133722 => if (in.isCharBufEqualsTo(l, "Polygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d13(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 77292912 => if (in.isCharBufEqualsTo(l, "Point"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d14(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1065891849 => if (in.isCharBufEqualsTo(l, "MultiPoint"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d15(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Feature): com.github.plokhotnyuk.jsoniter_scala.macros.Feature = if (in.isNextToken('{'))
[info]         {
[info]           var _properties: scala.collection.immutable.Map[String,String] = Map.empty[String, String];
[info]           var _geometry: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -926053069 => if (in.isCharBufEqualsTo(l, "properties"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _properties = d2(in, _properties)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1846020210 => if (in.isCharBufEqualsTo(l, "geometry"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometry = d3(in, _geometry)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(2).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Feature(properties = _properties, geometry = _geometry)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d17(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]             do 
[info]               x.+=(d0(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d16(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _features: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -290659267 => if (in.isCharBufEqualsTo(l, "features"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _features = d17(in, _features)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection(features = _features)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 685445846 => if (in.isCharBufEqualsTo(l, "Feature"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1377727980 => if (in.isCharBufEqualsTo(l, "FeatureCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d16(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e2(x: scala.collection.immutable.Map[String,String], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: (Double, Double), out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._1)
[info]         };
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._2)
[info]         };
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: IndexedSeq[(Double, Double)], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e7(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: IndexedSeq[IndexedSeq[(Double, Double)]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e6(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e4(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiLineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPolygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e9(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("GeometryCollection")
[info]         };
[info]         {
[info]           val v = x.geometries;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geometries");
[info]               e11(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.LineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("LineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Polygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e14(x: com.github.plokhotnyuk.jsoniter_scala.macros.Point, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Point")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("coordinates");
[info]           e7(x.coordinates, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e15(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPoint")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString)) => e4(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon)) => e8(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection)) => e10(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.LineString)) => e12(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon)) => e13(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Point)) => e14(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint)) => e15(x, out)
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Feature, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Feature")
[info]         };
[info]         {
[info]           val v = x.properties;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("properties");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geometry");
[info]           e3(x.geometry, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e17(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e0(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e16(x: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("FeatureCollection")
[info]         };
[info]         {
[info]           val v = x.features;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("features");
[info]               e17(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Feature)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection)) => e16(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val geoJSONCodec: JsonValueCodec[GeoJSON] = make[GeoJSON](CodecMakerConfig()) // don't define implicit for recursive structures
[info]                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val f0: Array[String] = Array("s", "bd", "os");
[info]       private[this] def d1(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _os = d1(in, _os)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bd");
[info]           out.writeVal(x.bd)
[info]         };
[info]         {
[info]           val v = x.os;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("os");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val anyRefsCodec: JsonValueCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:97: Generated JSON codec for type 'Array[BigDecimal]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigDecimal]] {
[info]       def nullValue: Array[BigDecimal] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = d0(in, default);
[info]       def encodeValue(x: Array[BigDecimal], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigDecimal] = new Array[scala.math.BigDecimal](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigDecimal](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigDecimal(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigDecimal], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigDecimalArrayCodec: JsonValueCodec[Array[BigDecimal]] = make[Array[BigDecimal]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:85: Generated JSON codec for type 'Array[BigInt]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigInt]] {
[info]       def nullValue: Array[BigInt] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigInt]): Array[BigInt] = d0(in, default);
[info]       def encodeValue(x: Array[BigInt], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigIntArrayCodec: JsonValueCodec[Array[BigInt]] = make[Array[BigInt]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:122: Generated JSON codec for type 'scala.collection.mutable.ArrayBuffer[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.ArrayBuffer[Boolean]] {
[info]       def nullValue: scala.collection.mutable.ArrayBuffer[Boolean] = ArrayBuffer.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               ArrayBuffer.empty[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayBufferCodec: JsonValueCodec[mutable.ArrayBuffer[Boolean]] = make[mutable.ArrayBuffer[Boolean]](CodecMakerConfig())
[info]                                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:88: Generated JSON codec for type 'Array[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Boolean]] {
[info]       def nullValue: Array[Boolean] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Boolean]): Array[Boolean] = d0(in, default);
[info]       def encodeValue(x: Array[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Boolean] = new Array[Boolean](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Boolean]): Array[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Boolean](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBoolean());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayCodec: JsonValueCodec[Array[Boolean]] = make[Array[Boolean]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:85: Generated JSON codec for type 'List[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[List[Boolean]] {
[info]       def nullValue: List[Boolean] = List.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: List[Boolean]): List[Boolean] = d0(in, default);
[info]       def encodeValue(x: List[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: List[Boolean]): List[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: List[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var l = x;
[info]         while (l.isEmpty.`unary_!`) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(l.head);
[info]             l = l.tail
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanListCodec: JsonValueCodec[List[Boolean]] = make[List[Boolean]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:91: Generated JSON codec for type 'scala.collection.immutable.Vector[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Vector[Boolean]] {
[info]       def nullValue: scala.collection.immutable.Vector[Boolean] = Vector.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanVectorCodec: JsonValueCodec[Vector[Boolean]] = make[Vector[Boolean]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:28:79: Generated JSON codec for type 'Array[Byte]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Byte]] {
[info]       def nullValue: Array[Byte] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Byte]): Array[Byte] = d0(in, default);
[info]       def encodeValue(x: Array[Byte], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Byte] = new Array[Byte](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Byte]): Array[Byte] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Byte](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readByte());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Byte], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val byteArrayCodec: JsonValueCodec[Array[Byte]] = make[Array[Byte]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:29:79: Generated JSON codec for type 'Array[Char]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Char]] {
[info]       def nullValue: Array[Char] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Char]): Array[Char] = d0(in, default);
[info]       def encodeValue(x: Array[Char], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Char] = new Array[Char](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Char]): Array[Char] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Char](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readChar());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Char], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val charArrayCodec: JsonValueCodec[Array[Char]] = make[Array[Char]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:30:85: Generated JSON codec for type 'Array[Double]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Double]] {
[info]       def nullValue: Array[Double] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Double]): Array[Double] = d0(in, default);
[info]       def encodeValue(x: Array[Double], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Double] = new Array[Double](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Double]): Array[Double] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Double](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDouble());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Double], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val doubleArrayCodec: JsonValueCodec[Array[Double]] = make[Array[Double]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:31:91: Generated JSON codec for type 'Array[java.time.Duration]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Duration]] {
[info]       def nullValue: Array[java.time.Duration] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Duration], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Duration] = new Array[java.time.Duration](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Duration](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDuration(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Duration], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val durationArrayCodec: JsonValueCodec[Array[Duration]] = make[Array[Duration]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:32:87: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value): com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val len = in.readStringAsCharBuf();
[info]           SuitEnum.values.iterator.find(((e) => in.isCharBufEqualsTo(len, e.toString))).getOrElse(in.enumValueError(len))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value, out: JsonWriter): Unit = out.writeVal(x.toString);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val enumArrayCodec: JsonValueCodec[Array[SuitEnum]] = make[Array[SuitEnum]](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:33:82: Generated JSON codec for type 'Array[Float]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Float]] {
[info]       def nullValue: Array[Float] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Float]): Array[Float] = d0(in, default);
[info]       def encodeValue(x: Array[Float], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Float] = new Array[Float](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Float]): Array[Float] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Float](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readFloat());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Float], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val floatArrayCodec: JsonValueCodec[Array[Float]] = make[Array[Float]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:34:88: Generated JSON codec for type 'Array[java.time.Instant]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Instant]] {
[info]       def nullValue: Array[java.time.Instant] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Instant], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Instant] = new Array[java.time.Instant](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Instant](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInstant(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Instant], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val instantArrayCodec: JsonValueCodec[Array[Instant]] = make[Array[Instant]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:35:76: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encodeValue(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Int] = new Array[Int](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intArrayCodec: JsonValueCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:36:83: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Suit): com.github.plokhotnyuk.jsoniter_scala.macros.Suit = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val v = in.readString(null);
[info]           try {
[info]             Suit.valueOf(v)
[info]           } catch {
[info]             case ((_): IllegalArgumentException) => in.enumValueError(v)
[info]           }
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Suit, out: JsonWriter): Unit = out.writeVal(x.name);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val javaEnumArrayCodec: JsonValueCodec[Array[Suit]] = make[Array[Suit]](CodecMakerConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:37:79: Generated JSON codec for type 'Array[Long]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Long]] {
[info]       def nullValue: Array[Long] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Long]): Array[Long] = d0(in, default);
[info]       def encodeValue(x: Array[Long], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Long] = new Array[Long](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Long]): Array[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLong());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val longArrayCodec: JsonValueCodec[Array[Long]] = make[Array[Long]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:38:94: Generated JSON codec for type 'Array[java.time.LocalDate]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDate]] {
[info]       def nullValue: Array[java.time.LocalDate] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDate], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDate] = new Array[java.time.LocalDate](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDate](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDate(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDate], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateArrayCodec: JsonValueCodec[Array[LocalDate]] = make[Array[LocalDate]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:39:106: Generated JSON codec for type 'Array[java.time.LocalDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDateTime]] {
[info]       def nullValue: Array[java.time.LocalDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDateTime] = new Array[java.time.LocalDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateTimeArrayCodec: JsonValueCodec[Array[LocalDateTime]] = make[Array[LocalDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:40:94: Generated JSON codec for type 'Array[java.time.LocalTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalTime]] {
[info]       def nullValue: Array[java.time.LocalTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalTime] = new Array[java.time.LocalTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localTimeArrayCodec: JsonValueCodec[Array[LocalTime]] = make[Array[LocalTime]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:41:109: Generated JSON codec for type 'Array[java.time.OffsetDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetDateTime]] {
[info]       def nullValue: Array[java.time.OffsetDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetDateTime] = new Array[java.time.OffsetDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetDateTimeArrayCodec: JsonValueCodec[Array[OffsetDateTime]] = make[Array[OffsetDateTime]](CodecMakerConfig())
[info]                                                                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:42:97: Generated JSON codec for type 'Array[java.time.OffsetTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetTime]] {
[info]       def nullValue: Array[java.time.OffsetTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetTime] = new Array[java.time.OffsetTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetTimeArrayCodec: JsonValueCodec[Array[OffsetTime]] = make[Array[OffsetTime]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:43:85: Generated JSON codec for type 'Array[java.time.Period]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Period]] {
[info]       def nullValue: Array[java.time.Period] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Period], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Period] = new Array[java.time.Period](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Period](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readPeriod(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Period], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val periodArrayCodec: JsonValueCodec[Array[Period]] = make[Array[Period]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:44:82: Generated JSON codec for type 'Array[Short]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Short]] {
[info]       def nullValue: Array[Short] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Short]): Array[Short] = d0(in, default);
[info]       def encodeValue(x: Array[Short], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Short] = new Array[Short](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Short]): Array[Short] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Short](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readShort());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Short], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val shortArrayCodec: JsonValueCodec[Array[Short]] = make[Array[Short]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:45:79: Generated JSON codec for type 'Array[java.util.UUID]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.util.UUID]] {
[info]       def nullValue: Array[java.util.UUID] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = d0(in, default);
[info]       def encodeValue(x: Array[java.util.UUID], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.util.UUID] = new Array[java.util.UUID](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.util.UUID](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readUUID(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.util.UUID], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val uuidArrayCodec: JsonValueCodec[Array[UUID]] = make[Array[UUID]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:46:79: Generated JSON codec for type 'Array[java.time.Year]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Year]] {
[info]       def nullValue: Array[java.time.Year] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Year], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Year] = new Array[java.time.Year](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Year](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYear(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Year], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearArrayCodec: JsonValueCodec[Array[Year]] = make[Array[Year]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:47:94: Generated JSON codec for type 'Array[java.time.YearMonth]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.YearMonth]] {
[info]       def nullValue: Array[java.time.YearMonth] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.YearMonth], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.YearMonth] = new Array[java.time.YearMonth](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.YearMonth](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYearMonth(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.YearMonth], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearMonthArrayCodec: JsonValueCodec[Array[YearMonth]] = make[Array[YearMonth]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:48:106: Generated JSON codec for type 'Array[java.time.ZonedDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZonedDateTime]] {
[info]       def nullValue: Array[java.time.ZonedDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZonedDateTime] = new Array[java.time.ZonedDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZonedDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZonedDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zonedDateTimeArrayCodec: JsonValueCodec[Array[ZonedDateTime]] = make[Array[ZonedDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:49:85: Generated JSON codec for type 'Array[java.time.ZoneId]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneId]] {
[info]       def nullValue: Array[java.time.ZoneId] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneId], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneId] = new Array[java.time.ZoneId](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneId](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneId(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneId], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneIdArrayCodec: JsonValueCodec[Array[ZoneId]] = make[Array[ZoneId]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:50:97: Generated JSON codec for type 'Array[java.time.ZoneOffset]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneOffset]] {
[info]       def nullValue: Array[java.time.ZoneOffset] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneOffset] = new Array[java.time.ZoneOffset](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneOffset](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneOffset(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneOffsetArrayCodec: JsonValueCodec[Array[ZoneOffset]] = make[Array[ZoneOffset]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:51:66: Generated JSON codec for type 'scala.collection.immutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.BitSet] {
[info]       def nullValue: scala.collection.immutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             var mi = 0;
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>(mi))
[info]                   {
[info]                     mi = i;
[info]                     if (i.>=(x.length))
[info]                       x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                     else
[info]                       ()
[info]                   }
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               {
[info]                 if (mi.>(1).&&(mi.+(1).!=(x.length)))
[info]                   x = java.util.Arrays.copyOf(x, mi.+(1))
[info]                 else
[info]                   ();
[info]                 BitSet.fromBitMaskNoCopy(x)
[info]               }
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bitSetCodec: JsonValueCodec[BitSet] = make[BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:52:87: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val f0: Array[String] = Array("s", "l");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val extractFieldsCodec: JsonValueCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:53:94: Generated JSON codec for type 'scala.collection.immutable.IntMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.IntMap[Boolean]] {
[info]       def nullValue: scala.collection.immutable.IntMap[Boolean] = IntMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intMapOfBooleansCodec: JsonValueCodec[IntMap[Boolean]] = make[IntMap[Boolean]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:54:89: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val f0: Array[String] = Array("destination_addresses", "origin_addresses", "rows", "status");
[info]       private[this] val f1: Array[String] = Array("distance", "duration", "status");
[info]       private[this] val f2: Array[String] = Array("text", "value");
[info]       private[this] def d1(in: JsonReader, default: IndexedSeq[String]): IndexedSeq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _value = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _distance = d6(in, _distance)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _duration = d6(in, _duration)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _elements = d4(in, _elements)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _origin_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _rows: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _destination_addresses = d1(in, _destination_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _origin_addresses = d1(in, _origin_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _rows = d2(in, _rows)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(8).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e1(x: IndexedSeq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("value");
[info]           out.writeVal(x.value)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("distance");
[info]           e6(x.distance, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("duration");
[info]           e6(x.duration, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.elements;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("elements");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.destination_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("destination_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.origin_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("origin_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.rows;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("rows");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val googleMapsAPICodec: JsonValueCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:55:101: Generated JSON codec for type 'scala.collection.immutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.immutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mapOfIntsToBooleansCodec: JsonValueCodec[Map[Int, Boolean]] = make[Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:56:95: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val f0: Array[String] = Array("s", "i");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val missingReqFieldCodec: JsonValueCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:57:89: Generated JSON codec for type 'scala.collection.mutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.BitSet] {
[info]       def nullValue: scala.collection.mutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>=(x.length))
[info]                   x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               BitSet.fromBitMaskNoCopy(x)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableBitSetCodec: JsonValueCodec[mutable.BitSet] = make[mutable.BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:58:120: Generated JSON codec for type 'scala.collection.mutable.LongMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.LongMap[Boolean]] {
[info]       def nullValue: scala.collection.mutable.LongMap[Boolean] = LongMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[Boolean];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableLongMapOfBooleansCodec: JsonValueCodec[mutable.LongMap[Boolean]] = make[mutable.LongMap[Boolean]](CodecMakerConfig())
[info]                                                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:59:124: Generated JSON codec for type 'scala.collection.mutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.mutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, Boolean];
[info]             do 
[info]               x.update(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableMapOfIntsToBooleansCodec: JsonValueCodec[mutable.Map[Int, Boolean]] = make[mutable.Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:60:96: Generated JSON codec for type 'scala.collection.mutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Set[Int]] {
[info]       def nullValue: scala.collection.mutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Set.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableSetOfIntsCodec: JsonValueCodec[mutable.Set[Int]] = make[mutable.Set[Int]](CodecMakerConfig())
[info]                                                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:61:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val f0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = ((0): Byte);
[info]           var _s: Short = ((0): Short);
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = '\u0000';
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var p0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(255).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val primitivesCodec: JsonValueCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:62:73: Generated JSON codec for type 'scala.collection.immutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Set[Int]] {
[info]       def nullValue: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val setOfIntsCodec: JsonValueCodec[Set[Int]] = make[Set[Int]](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:63:78: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decodeValue(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encodeValue(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val f0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "in_reply_to_status_id", "in_reply_to_status_id_str", "in_reply_to_user_id", "in_reply_to_user_id_str", "in_reply_to_screen_name", "user", "geo", "coordinates", "place", "contributors", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] val f1: Array[String] = Array("screen_name", "name", "id", "id_str", "indices");
[info]       private[this] val f2: Array[String] = Array("url", "expanded_url", "display_url", "indices");
[info]       private[this] val f3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private[this] val f4: Array[String] = Array("url", "description");
[info]       private[this] val f5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "in_reply_to_status_id", "in_reply_to_status_id_str", "in_reply_to_user_id", "in_reply_to_user_id_str", "in_reply_to_screen_name", "user", "geo", "coordinates", "place", "contributors", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 31;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(15).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _expanded_url = in.readString(_expanded_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _display_url = in.readString(_display_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _hashtags = d3(in, _hashtags)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _symbols = d3(in, _symbols)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user_mentions = d4(in, _user_mentions)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = d12(in, _url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = d12(in, _description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f4(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var p0 = -1;
[info]           var p1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _location = in.readString(_location)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = in.readString(_description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d11(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _protected = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _followers_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _friends_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _listed_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favourites_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _utc_offset = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _time_zone = in.readString(_time_zone)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _verified = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _statuses_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translator = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translation_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_color = in.readString(_profile_background_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         if (p0.&(33554432).!=(0))
[info]                           p0.^=(33554432)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         if (p0.&(67108864).!=(0))
[info]                           p0.^=(67108864)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_tile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         if (p0.&(134217728).!=(0))
[info]                           p0.^=(134217728)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url = in.readString(_profile_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         if (p0.&(268435456).!=(0))
[info]                           p0.^=(268435456)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         if (p0.&(536870912).!=(0))
[info]                           p0.^=(536870912)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_banner_url = in.readString(_profile_banner_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         if (p0.&(1073741824).!=(0))
[info]                           p0.^=(1073741824)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_link_color = in.readString(_profile_link_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         if (p0.&(-2147483648).!=(0))
[info]                           p0.^=(-2147483648)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         if (p1.&(1).!=(0))
[info]                           p1.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         if (p1.&(2).!=(0))
[info]                           p1.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_text_color = in.readString(_profile_text_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         if (p1.&(4).!=(0))
[info]                           p1.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_use_background_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         if (p1.&(8).!=(0))
[info]                           p1.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _has_extended_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         if (p1.&(16).!=(0))
[info]                           p1.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         if (p1.&(32).!=(0))
[info]                           p1.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         if (p1.&(64).!=(0))
[info]                           p1.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _following = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         if (p1.&(128).!=(0))
[info]                           p1.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _follow_request_sent = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         if (p1.&(256).!=(0))
[info]                           p1.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _notifications = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         if (p1.&(512).!=(0))
[info]                           p1.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _translator_type = in.readString(_translator_type)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(-1).!=(0))
[info]             in.requiredFieldError(f3(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           if (p1.&(1023).!=(0))
[info]             in.requiredFieldError(f3(Integer.numberOfTrailingZeros(p1).+(32)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 16777215;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(16650367).!=(0))
[info]             in.requiredFieldError(f5(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 33554431;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted_status = d13(in, _retweeted_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(33427583).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("expanded_url");
[info]           out.writeVal(x.expanded_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("display_url");
[info]           out.writeVal(x.display_url)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.hashtags;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("hashtags");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.symbols;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("symbols");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.user_mentions;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("user_mentions");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           e11(x.url, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           e11(x.description, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("location");
[info]           out.writeVal(x.location)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           out.writeVal(x.description)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e10(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("protected");
[info]           out.writeVal(x.`protected`)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("followers_count");
[info]           out.writeVal(x.followers_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("friends_count");
[info]           out.writeVal(x.friends_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("listed_count");
[info]           out.writeVal(x.listed_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favourites_count");
[info]           out.writeVal(x.favourites_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("utc_offset");
[info]           out.writeVal(x.utc_offset)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("time_zone");
[info]           out.writeVal(x.time_zone)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geo_enabled");
[info]           out.writeVal(x.geo_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("verified");
[info]           out.writeVal(x.verified)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("statuses_count");
[info]           out.writeVal(x.statuses_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("contributors_enabled");
[info]           out.writeVal(x.contributors_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translator");
[info]           out.writeVal(x.is_translator)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]           out.writeVal(x.is_translation_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_color");
[info]           out.writeVal(x.profile_background_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]           out.writeVal(x.profile_background_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]           out.writeVal(x.profile_background_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_tile");
[info]           out.writeVal(x.profile_background_tile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url");
[info]           out.writeVal(x.profile_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]           out.writeVal(x.profile_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_banner_url");
[info]           out.writeVal(x.profile_banner_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_link_color");
[info]           out.writeVal(x.profile_link_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]           out.writeVal(x.profile_sidebar_border_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]           out.writeVal(x.profile_sidebar_fill_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_text_color");
[info]           out.writeVal(x.profile_text_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]           out.writeVal(x.profile_use_background_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("has_extended_profile");
[info]           out.writeVal(x.has_extended_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile");
[info]           out.writeVal(x.default_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile_image");
[info]           out.writeVal(x.default_profile_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("following");
[info]           out.writeVal(x.following)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("follow_request_sent");
[info]           out.writeVal(x.follow_request_sent)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("notifications");
[info]           out.writeVal(x.notifications)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("translator_type");
[info]           out.writeVal(x.translator_type)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted_status");
[info]           e12(x.retweeted_status, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val twitterAPICodec: JsonValueCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:35:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:42:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:44:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:64:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:65:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:66:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:70:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:71:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:72:18: local val v3 in value twitterAPIFormat is never used
[warn]     implicit val v3: OFormat[UserEntities] = Json.format[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:73:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:74:18: local val v5 in value twitterAPIFormat is never used
[warn]     implicit val v5: OFormat[Entities] = Json.format[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:75:18: local val v6 in value twitterAPIFormat is never used
[warn]     implicit val v6: Format[User] = Jsonx.formatCaseClass[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:76:18: local val v7 in value twitterAPIFormat is never used
[warn]     implicit val v7: Format[RetweetedStatus] = Jsonx.formatCaseClass[RetweetedStatus]
[warn]                  ^
[warn] 14 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.5-SNAPSHOT.jar ...
[info] Compiling 49 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 421 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 617 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.5-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.5-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -p size=128 -jvm /usr/lib/jvm/java-8-oracle/bin/java -prof gc -rf json -rff jdk8.json .*Benchmark.*
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce
[info] # Run progress: 0.00% complete, ETA 01:10:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 312909.638 ops/s
[info] # Warmup Iteration   2: 755833.772 ops/s
[info] # Warmup Iteration   3: 788230.275 ops/s
[info] # Warmup Iteration   4: 755680.192 ops/s
[info] # Warmup Iteration   5: 788756.316 ops/s
[info] Iteration   1: 787889.493 ops/s
[info]                  ·gc.alloc.rate:                   2074.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2688.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5369.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 790068.974 ops/s
[info]                  ·gc.alloc.rate:                   2080.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4024.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 791557.041 ops/s
[info]                  ·gc.alloc.rate:                   2084.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4023.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 788587.598 ops/s
[info]                  ·gc.alloc.rate:                   2076.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4047.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 779050.769 ops/s
[info]                  ·gc.alloc.rate:                   2051.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4102.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.168 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce":
[info]   787430.775 ±(99.9%) 18840.565 ops/s [Average]
[info]   (min, avg, max) = (779050.769, 787430.775, 791557.041), stdev = 4892.835
[info]   CI (99.9%): [768590.210, 806271.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate":
[info]   2073.593 ±(99.9%) 50.253 MB/sec [Average]
[info]   (min, avg, max) = (2051.219, 2073.593, 2084.760), stdev = 13.051
[info]   CI (99.9%): [2023.339, 2123.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4144.001, 4144.001, 4144.001), stdev = 0.001
[info]   CI (99.9%): [4144.000, 4144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2158.456 ±(99.9%) 1141.212 MB/sec [Average]
[info]   (min, avg, max) = (2020.239, 2158.456, 2688.569), stdev = 296.369
[info]   CI (99.9%): [1017.244, 3299.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4313.580 ±(99.9%) 2276.093 B/op [Average]
[info]   (min, avg, max) = (4023.718, 4313.580, 5369.404), stdev = 591.094
[info]   CI (99.9%): [2037.487, 6589.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.150 ±(99.9%) 0.183 B/op [Average]
[info]   (min, avg, max) = (0.083, 0.150, 0.207), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala
[info] # Run progress: 0.24% complete, ETA 01:52:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 538510.922 ops/s
[info] # Warmup Iteration   2: 1617458.098 ops/s
[info] # Warmup Iteration   3: 1535186.840 ops/s
[info] # Warmup Iteration   4: 1574259.403 ops/s
[info] # Warmup Iteration   5: 1597716.303 ops/s
[info] Iteration   1: 1645985.286 ops/s
[info]                  ·gc.alloc.rate:                   1171.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1273.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1628246.687 ops/s
[info]                  ·gc.alloc.rate:                   1158.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1289.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1635957.362 ops/s
[info]                  ·gc.alloc.rate:                   1164.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1284.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1654514.084 ops/s
[info]                  ·gc.alloc.rate:               1177.379 MB/sec
[info]                  ·gc.alloc.rate.norm:          1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 635.904 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1652725.212 ops/s
[info]                  ·gc.alloc.rate:                   1176.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1274.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala":
[info]   1643485.726 ±(99.9%) 43143.761 ops/s [Average]
[info]   (min, avg, max) = (1628246.687, 1643485.726, 1654514.084), stdev = 11204.298
[info]   CI (99.9%): [1600341.965, 1686629.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1169.699 ±(99.9%) 30.246 MB/sec [Average]
[info]   (min, avg, max) = (1158.843, 1169.699, 1177.379), stdev = 7.855
[info]   CI (99.9%): [1139.452, 1199.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1201.718 ±(99.9%) 1147.860 MB/sec [Average]
[info]   (min, avg, max) = (668.482, 1201.718, 1338.271), stdev = 298.096
[info]   CI (99.9%): [53.858, 2349.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1151.533 ±(99.9%) 1110.211 B/op [Average]
[info]   (min, avg, max) = (635.904, 1151.533, 1289.084), stdev = 288.318
[info]   CI (99.9%): [41.322, 2261.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.048 ±(99.9%) 0.141 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.048, 0.101), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala
[info] # Run progress: 0.47% complete, ETA 01:52:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2786187.129 ops/s
[info] # Warmup Iteration   2: 3683231.963 ops/s
[info] # Warmup Iteration   3: 3704673.656 ops/s
[info] # Warmup Iteration   4: 3705355.869 ops/s
[info] # Warmup Iteration   5: 3602142.000 ops/s
[info] Iteration   1: 3708682.801 ops/s
[info]                  ·gc.alloc.rate:      245.070 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3696389.486 ops/s
[info]                  ·gc.alloc.rate:               244.249 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 217.836 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3715920.578 ops/s
[info]                  ·gc.alloc.rate:      245.548 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3579452.619 ops/s
[info]                  ·gc.alloc.rate:                   236.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     224.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3715391.979 ops/s
[info]                  ·gc.alloc.rate:      245.575 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala":
[info]   3683167.492 ±(99.9%) 225302.236 ops/s [Average]
[info]   (min, avg, max) = (3579452.619, 3683167.492, 3715920.578), stdev = 58510.275
[info]   CI (99.9%): [3457865.257, 3908469.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   243.393 ±(99.9%) 14.929 MB/sec [Average]
[info]   (min, avg, max) = (236.525, 243.393, 245.575), stdev = 3.877
[info]   CI (99.9%): [228.464, 258.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (104.000, 104.000, 104.000), stdev = 0.001
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   204.637 ±(99.9%) 1078.993 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.637, 511.599), stdev = 280.211
[info]   CI (99.9%): [≈ 0, 1283.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   88.556 ±(99.9%) 467.032 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 88.556, 224.945), stdev = 121.287
[info]   CI (99.9%): [≈ 0, 555.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.090 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.039 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.023), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson
[info] # Run progress: 0.71% complete, ETA 01:52:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36520.372 ops/s
[info] # Warmup Iteration   2: 169592.575 ops/s
[info] # Warmup Iteration   3: 168559.378 ops/s
[info] # Warmup Iteration   4: 170551.821 ops/s
[info] # Warmup Iteration   5: 170346.473 ops/s
[info] Iteration   1: 172663.607 ops/s
[info]                  ·gc.alloc.rate:                   1455.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              13264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12156.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.380 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 170113.894 ops/s
[info]                  ·gc.alloc.rate:                   1433.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              13264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12350.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 173595.150 ops/s
[info]                  ·gc.alloc.rate:                   1462.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              13264.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18194.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.377 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 173394.513 ops/s
[info]                  ·gc.alloc.rate:                   1461.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              13264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12168.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 174107.969 ops/s
[info]                  ·gc.alloc.rate:               1467.321 MB/sec
[info]                  ·gc.alloc.rate.norm:          13264.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12136.310 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson":
[info]   172775.027 ±(99.9%) 6066.184 ops/s [Average]
[info]   (min, avg, max) = (170113.894, 172775.027, 174107.969), stdev = 1575.369
[info]   CI (99.9%): [166708.843, 178841.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1456.089 ±(99.9%) 51.075 MB/sec [Average]
[info]   (min, avg, max) = (1433.679, 1456.089, 1467.321), stdev = 13.264
[info]   CI (99.9%): [1405.014, 1507.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   13264.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13264.002, 13264.003, 13264.003), stdev = 0.001
[info]   CI (99.9%): [13264.002, 13264.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1471.719 ±(99.9%) 1151.545 MB/sec [Average]
[info]   (min, avg, max) = (1333.680, 1471.719, 2006.639), stdev = 299.053
[info]   CI (99.9%): [320.174, 2623.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   13401.378 ±(99.9%) 10322.624 B/op [Average]
[info]   (min, avg, max) = (12136.310, 13401.378, 18194.378), stdev = 2680.753
[info]   CI (99.9%): [3078.754, 23724.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.265 ±(99.9%) 0.650 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.265, 0.380), stdev = 0.169
[info]   CI (99.9%): [≈ 0, 0.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce
[info] # Run progress: 0.94% complete, ETA 01:51:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 165723.169 ops/s
[info] # Warmup Iteration   2: 552676.524 ops/s
[info] # Warmup Iteration   3: 550800.975 ops/s
[info] # Warmup Iteration   4: 565093.335 ops/s
[info] # Warmup Iteration   5: 554824.262 ops/s
[info] Iteration   1: 564017.017 ops/s
[info]                  ·gc.alloc.rate:                   1884.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              5256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5622.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 565139.960 ops/s
[info]                  ·gc.alloc.rate:                   1887.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              5256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5621.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.348 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 564552.158 ops/s
[info]                  ·gc.alloc.rate:                   1885.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              5256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3757.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 554122.093 ops/s
[info]                  ·gc.alloc.rate:                   1850.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              5256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5750.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 564371.267 ops/s
[info]                  ·gc.alloc.rate:                   1884.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              5256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5656.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce":
[info]   562440.499 ±(99.9%) 17974.234 ops/s [Average]
[info]   (min, avg, max) = (554122.093, 562440.499, 565139.960), stdev = 4667.852
[info]   CI (99.9%): [544466.265, 580414.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate":
[info]   1878.530 ±(99.9%) 59.928 MB/sec [Average]
[info]   (min, avg, max) = (1850.763, 1878.530, 1887.315), stdev = 15.563
[info]   CI (99.9%): [1818.601, 1938.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5256.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5256.001, 5256.001, 5256.001), stdev = 0.001
[info]   CI (99.9%): [5256.001, 5256.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1887.072 ±(99.9%) 1160.587 MB/sec [Average]
[info]   (min, avg, max) = (1347.986, 1887.072, 2028.290), stdev = 301.401
[info]   CI (99.9%): [726.486, 3047.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5281.635 ±(99.9%) 3286.628 B/op [Average]
[info]   (min, avg, max) = (3757.728, 5281.635, 5750.782), stdev = 853.527
[info]   CI (99.9%): [1995.007, 8568.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.163 ±(99.9%) 0.428 B/op [Average]
[info]   (min, avg, max) = (0.059, 0.163, 0.348), stdev = 0.111
[info]   CI (99.9%): [≈ 0, 0.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala
[info] # Run progress: 1.18% complete, ETA 01:51:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 715140.167 ops/s
[info] # Warmup Iteration   2: 2073242.696 ops/s
[info] # Warmup Iteration   3: 2097052.533 ops/s
[info] # Warmup Iteration   4: 2106471.847 ops/s
[info] # Warmup Iteration   5: 2043900.061 ops/s
[info] Iteration   1: 2096001.365 ops/s
[info]                  ·gc.alloc.rate:                   873.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     500.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2112654.063 ops/s
[info]                  ·gc.alloc.rate:               880.582 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 496.779 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2115267.545 ops/s
[info]                  ·gc.alloc.rate:                   881.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     992.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2095101.097 ops/s
[info]                  ·gc.alloc.rate:               873.221 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 500.918 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2124798.800 ops/s
[info]                  ·gc.alloc.rate:               885.631 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 494.663 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala":
[info]   2108764.574 ±(99.9%) 49615.934 ops/s [Average]
[info]   (min, avg, max) = (2095101.097, 2108764.574, 2124798.800), stdev = 12885.101
[info]   CI (99.9%): [2059148.640, 2158380.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   878.988 ±(99.9%) 20.593 MB/sec [Average]
[info]   (min, avg, max) = (873.221, 878.988, 885.631), stdev = 5.348
[info]   CI (99.9%): [858.395, 899.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   800.358 ±(99.9%) 1148.142 MB/sec [Average]
[info]   (min, avg, max) = (666.596, 800.358, 1333.738), stdev = 298.169
[info]   CI (99.9%): [≈ 0, 1948.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   597.022 ±(99.9%) 850.930 B/op [Average]
[info]   (min, avg, max) = (494.663, 597.022, 992.303), stdev = 220.984
[info]   CI (99.9%): [≈ 0, 1447.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.107 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala
[info] # Run progress: 1.41% complete, ETA 01:51:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12177722.946 ops/s
[info] # Warmup Iteration   2: 17929557.484 ops/s
[info] # Warmup Iteration   3: 17764975.255 ops/s
[info] # Warmup Iteration   4: 18728736.814 ops/s
[info] # Warmup Iteration   5: 19083363.889 ops/s
[info] Iteration   1: 18971082.024 ops/s
[info]                  ·gc.alloc.rate:                   964.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 18628582.367 ops/s
[info]                  ·gc.alloc.rate:               946.914 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56.787 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 18713863.304 ops/s
[info]                  ·gc.alloc.rate:                   951.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 18704247.634 ops/s
[info]                  ·gc.alloc.rate:               950.752 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56.613 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 18783244.742 ops/s
[info]                  ·gc.alloc.rate:                   955.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala":
[info]   18760204.014 ±(99.9%) 500595.730 ops/s [Average]
[info]   (min, avg, max) = (18628582.367, 18760204.014, 18971082.024), stdev = 130003.121
[info]   CI (99.9%): [18259608.284, 19260799.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   953.700 ±(99.9%) 25.789 MB/sec [Average]
[info]   (min, avg, max) = (946.914, 953.700, 964.492), stdev = 6.697
[info]   CI (99.9%): [927.911, 979.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   941.592 ±(99.9%) 1419.269 MB/sec [Average]
[info]   (min, avg, max) = (672.160, 941.592, 1346.405), stdev = 368.580
[info]   CI (99.9%): [≈ 0, 2360.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   78.999 ±(99.9%) 119.232 B/op [Average]
[info]   (min, avg, max) = (55.763, 78.999, 113.059), stdev = 30.964
[info]   CI (99.9%): [≈ 0, 198.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 1.65% complete, ETA 01:50:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12350187.315 ops/s
[info] # Warmup Iteration   2: 18114469.931 ops/s
[info] # Warmup Iteration   3: 19886863.755 ops/s
[info] # Warmup Iteration   4: 19882948.039 ops/s
[info] # Warmup Iteration   5: 19932995.986 ops/s
[info] Iteration   1: 19368551.135 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 19877865.893 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 19765315.104 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 19175652.762 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 19310596.533 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc":
[info]   19499596.286 ±(99.9%) 1173542.619 ops/s [Average]
[info]   (min, avg, max) = (19175652.762, 19499596.286, 19877865.893), stdev = 304765.291
[info]   CI (99.9%): [18326053.667, 20673138.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson
[info] # Run progress: 1.88% complete, ETA 01:50:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 76902.340 ops/s
[info] # Warmup Iteration   2: 305537.777 ops/s
[info] # Warmup Iteration   3: 309240.318 ops/s
[info] # Warmup Iteration   4: 311505.228 ops/s
[info] # Warmup Iteration   5: 315729.866 ops/s
[info] Iteration   1: 316392.207 ops/s
[info]                  ·gc.alloc.rate:                   1003.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              4992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6632.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.518 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 316225.478 ops/s
[info]                  ·gc.alloc.rate:               1003.426 MB/sec
[info]                  ·gc.alloc.rate.norm:          4992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3318.604 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 311368.434 ops/s
[info]                  ·gc.alloc.rate:                   987.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              4992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6741.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.421 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 315765.213 ops/s
[info]                  ·gc.alloc.rate:               1001.518 MB/sec
[info]                  ·gc.alloc.rate.norm:          4992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3328.639 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 311778.751 ops/s
[info]                  ·gc.alloc.rate:                   989.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              4992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6745.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.420 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson":
[info]   314306.016 ±(99.9%) 9661.633 ops/s [Average]
[info]   (min, avg, max) = (311368.434, 314306.016, 316392.207), stdev = 2509.096
[info]   CI (99.9%): [304644.383, 323967.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate":
[info]   997.152 ±(99.9%) 30.946 MB/sec [Average]
[info]   (min, avg, max) = (987.575, 997.152, 1003.957), stdev = 8.037
[info]   CI (99.9%): [966.206, 1028.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4992.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4992.001, 4992.001, 4992.001), stdev = 0.001
[info]   CI (99.9%): [4992.001, 4992.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1067.823 ±(99.9%) 1407.430 MB/sec [Average]
[info]   (min, avg, max) = (667.062, 1067.823, 1336.762), stdev = 365.505
[info]   CI (99.9%): [≈ 0, 2475.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   5353.248 ±(99.9%) 7136.568 B/op [Average]
[info]   (min, avg, max) = (3318.604, 5353.248, 6745.395), stdev = 1853.344
[info]   CI (99.9%): [≈ 0, 12489.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.272 ±(99.9%) 0.968 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.272, 0.518), stdev = 0.251
[info]   CI (99.9%): [≈ 0, 1.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce
[info] # Run progress: 2.12% complete, ETA 01:50:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 976699.320 ops/s
[info] # Warmup Iteration   2: 1673797.793 ops/s
[info] # Warmup Iteration   3: 1715110.185 ops/s
[info] # Warmup Iteration   4: 1705626.556 ops/s
[info] # Warmup Iteration   5: 1718884.110 ops/s
[info] Iteration   1: 1684500.193 ops/s
[info]                  ·gc.alloc.rate:                   2629.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2701.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2523.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1712482.863 ops/s
[info]                  ·gc.alloc.rate:                   2672.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2706.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2486.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1680546.258 ops/s
[info]                  ·gc.alloc.rate:                   2622.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2710.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2538.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1682981.344 ops/s
[info]                  ·gc.alloc.rate:                   2626.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2715.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2538.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1682839.224 ops/s
[info]                  ·gc.alloc.rate:                   2626.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2718.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2541.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce":
[info]   1688669.976 ±(99.9%) 51546.650 ops/s [Average]
[info]   (min, avg, max) = (1680546.258, 1688669.976, 1712482.863), stdev = 13386.501
[info]   CI (99.9%): [1637123.326, 1740216.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate":
[info]   2635.547 ±(99.9%) 80.309 MB/sec [Average]
[info]   (min, avg, max) = (2622.431, 2635.547, 2672.603), stdev = 20.856
[info]   CI (99.9%): [2555.238, 2715.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2456.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2456.000, 2456.000, 2456.000), stdev = 0.001
[info]   CI (99.9%): [2456.000, 2456.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2710.423 ±(99.9%) 27.081 MB/sec [Average]
[info]   (min, avg, max) = (2701.090, 2710.423, 2718.764), stdev = 7.033
[info]   CI (99.9%): [2683.342, 2737.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2525.916 ±(99.9%) 88.531 B/op [Average]
[info]   (min, avg, max) = (2486.911, 2525.916, 2541.883), stdev = 22.991
[info]   CI (99.9%): [2437.385, 2614.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.058 ±(99.9%) 0.074 B/op [Average]
[info]   (min, avg, max) = (0.039, 0.058, 0.078), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava
[info] # Run progress: 2.35% complete, ETA 01:50:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.911 ops/s
[info] # Warmup Iteration   2: 9504244.902 ops/s
[info] # Warmup Iteration   3: 9814729.932 ops/s
[info] # Warmup Iteration   4: 10066730.000 ops/s
[info] # Warmup Iteration   5: 9924234.685 ops/s
[info] Iteration   1: 9767952.095 ops/s
[info]                  ·gc.alloc.rate:                   1191.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 9937577.054 ops/s
[info]                  ·gc.alloc.rate:                   1212.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 9872648.666 ops/s
[info]                  ·gc.alloc.rate:               1204.367 MB/sec
[info]                  ·gc.alloc.rate.norm:          192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 106.463 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 10014594.199 ops/s
[info]                  ·gc.alloc.rate:                   1222.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 9834488.430 ops/s
[info]                  ·gc.alloc.rate:                   1199.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.327 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.372 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava":
[info]   9885452.089 ±(99.9%) 365112.157 ops/s [Average]
[info]   (min, avg, max) = (9767952.095, 9885452.089, 10014594.199), stdev = 94818.468
[info]   CI (99.9%): [9520339.932, 10250564.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1206.061 ±(99.9%) 45.041 MB/sec [Average]
[info]   (min, avg, max) = (1191.655, 1206.061, 1222.033), stdev = 11.697
[info]   CI (99.9%): [1161.020, 1251.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (192.000, 192.000, 192.000), stdev = 0.001
[info]   CI (99.9%): [192.000, 192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1202.317 ±(99.9%) 1150.618 MB/sec [Average]
[info]   (min, avg, max) = (667.815, 1202.317, 1339.637), stdev = 298.812
[info]   CI (99.9%): [51.699, 2352.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   191.388 ±(99.9%) 182.954 B/op [Average]
[info]   (min, avg, max) = (106.463, 191.388, 214.559), stdev = 47.513
[info]   CI (99.9%): [8.434, 374.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.485 ±(99.9%) 3.965 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.485, 2.327), stdev = 1.030
[info]   CI (99.9%): [≈ 0, 4.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.078 ±(99.9%) 0.635 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.078, 0.372), stdev = 0.165
[info]   CI (99.9%): [≈ 0, 0.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala
[info] # Run progress: 2.59% complete, ETA 01:49:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 904360.932 ops/s
[info] # Warmup Iteration   2: 2509915.270 ops/s
[info] # Warmup Iteration   3: 2575841.211 ops/s
[info] # Warmup Iteration   4: 2621522.088 ops/s
[info] # Warmup Iteration   5: 2544142.757 ops/s
[info] Iteration   1: 2647509.368 ops/s
[info]                  ·gc.alloc.rate:                   1857.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1191.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2574145.316 ops/s
[info]                  ·gc.alloc.rate:                   1805.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     819.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2577924.686 ops/s
[info]                  ·gc.alloc.rate:                   1808.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1229.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2622491.603 ops/s
[info]                  ·gc.alloc.rate:                   1839.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1211.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2648584.780 ops/s
[info]                  ·gc.alloc.rate:                   1857.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     801.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala":
[info]   2614131.150 ±(99.9%) 139911.839 ops/s [Average]
[info]   (min, avg, max) = (2574145.316, 2614131.150, 2648584.780), stdev = 36334.660
[info]   CI (99.9%): [2474219.312, 2754042.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1833.696 ±(99.9%) 98.115 MB/sec [Average]
[info]   (min, avg, max) = (1805.639, 1833.696, 1857.800), stdev = 25.480
[info]   CI (99.9%): [1735.581, 1931.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1745.239 ±(99.9%) 1409.636 MB/sec [Average]
[info]   (min, avg, max) = (1339.630, 1745.239, 2018.397), stdev = 366.078
[info]   CI (99.9%): [335.603, 3154.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1050.722 ±(99.9%) 846.916 B/op [Average]
[info]   (min, avg, max) = (801.596, 1050.722, 1229.836), stdev = 219.941
[info]   CI (99.9%): [203.806, 1897.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.094 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.040, 0.076), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala
[info] # Run progress: 2.82% complete, ETA 01:49:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9063045.300 ops/s
[info] # Warmup Iteration   2: 10144691.520 ops/s
[info] # Warmup Iteration   3: 10534521.895 ops/s
[info] # Warmup Iteration   4: 10802102.609 ops/s
[info] # Warmup Iteration   5: 10813121.147 ops/s
[info] Iteration   1: 10804910.898 ops/s
[info]                  ·gc.alloc.rate:                   1373.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 10796507.346 ops/s
[info]                  ·gc.alloc.rate:                   1372.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 10675961.331 ops/s
[info]                  ·gc.alloc.rate:                   1356.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 10724955.123 ops/s
[info]                  ·gc.alloc.rate:                   1362.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 10742831.168 ops/s
[info]                  ·gc.alloc.rate:                   1365.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala":
[info]   10749033.173 ±(99.9%) 204970.654 ops/s [Average]
[info]   (min, avg, max) = (10675961.331, 10749033.173, 10804910.898), stdev = 53230.228
[info]   CI (99.9%): [10544062.520, 10954003.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1366.057 ±(99.9%) 26.096 MB/sec [Average]
[info]   (min, avg, max) = (1356.890, 1366.057, 1373.365), stdev = 6.777
[info]   CI (99.9%): [1339.961, 1392.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1351.317 ±(99.9%) 4.695 MB/sec [Average]
[info]   (min, avg, max) = (1349.938, 1351.317, 1352.914), stdev = 1.219
[info]   CI (99.9%): [1346.621, 1356.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   197.846 ±(99.9%) 4.257 B/op [Average]
[info]   (min, avg, max) = (196.588, 197.846, 199.207), stdev = 1.106
[info]   CI (99.9%): [193.589, 202.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.010 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.008, 0.012), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson
[info] # Run progress: 3.06% complete, ETA 01:49:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 164580.918 ops/s
[info] # Warmup Iteration   2: 620262.233 ops/s
[info] # Warmup Iteration   3: 629495.565 ops/s
[info] # Warmup Iteration   4: 632455.496 ops/s
[info] # Warmup Iteration   5: 632511.452 ops/s
[info] Iteration   1: 633557.992 ops/s
[info]                  ·gc.alloc.rate:                   1675.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3317.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 632175.129 ops/s
[info]                  ·gc.alloc.rate:                   1670.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4996.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 632085.886 ops/s
[info]                  ·gc.alloc.rate:                   1671.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3338.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 636939.193 ops/s
[info]                  ·gc.alloc.rate:                   1683.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4978.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 636649.449 ops/s
[info]                  ·gc.alloc.rate:                   1682.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3328.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson":
[info]   634281.530 ±(99.9%) 9122.755 ops/s [Average]
[info]   (min, avg, max) = (632085.886, 634281.530, 636939.193), stdev = 2369.151
[info]   CI (99.9%): [625158.775, 643404.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1676.853 ±(99.9%) 23.753 MB/sec [Average]
[info]   (min, avg, max) = (1670.970, 1676.853, 1683.875), stdev = 6.169
[info]   CI (99.9%): [1653.101, 1700.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1609.167 ±(99.9%) 1412.426 MB/sec [Average]
[info]   (min, avg, max) = (1336.189, 1609.167, 2015.112), stdev = 366.803
[info]   CI (99.9%): [196.741, 3021.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3991.876 ±(99.9%) 3498.814 B/op [Average]
[info]   (min, avg, max) = (3317.990, 3991.876, 4996.030), stdev = 908.631
[info]   CI (99.9%): [493.062, 7490.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.124 ±(99.9%) 0.303 B/op [Average]
[info]   (min, avg, max) = (0.051, 0.124, 0.207), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce
[info] # Run progress: 3.29% complete, ETA 01:49:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 947695.932 ops/s
[info] # Warmup Iteration   2: 1896208.477 ops/s
[info] # Warmup Iteration   3: 1962042.078 ops/s
[info] # Warmup Iteration   4: 1938004.131 ops/s
[info] # Warmup Iteration   5: 1954783.624 ops/s
[info] Iteration   1: 1955384.006 ops/s
[info]                  ·gc.alloc.rate:                   1918.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              1544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1622.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1986043.231 ops/s
[info]                  ·gc.alloc.rate:                   1948.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              1544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1599.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1997112.070 ops/s
[info]                  ·gc.alloc.rate:                   1959.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              1544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1062.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1993464.783 ops/s
[info]                  ·gc.alloc.rate:                   1956.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              1544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1599.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1955501.469 ops/s
[info]                  ·gc.alloc.rate:                   1919.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              1544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1632.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce":
[info]   1977501.112 ±(99.9%) 79044.889 ops/s [Average]
[info]   (min, avg, max) = (1955384.006, 1977501.112, 1997112.070), stdev = 20527.707
[info]   CI (99.9%): [1898456.223, 2056546.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1940.325 ±(99.9%) 77.495 MB/sec [Average]
[info]   (min, avg, max) = (1918.170, 1940.325, 1959.255), stdev = 20.125
[info]   CI (99.9%): [1862.830, 2017.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1544.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1544.000, 1544.000, 1544.000), stdev = 0.001
[info]   CI (99.9%): [1544.000, 1544.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1887.926 ±(99.9%) 1161.797 MB/sec [Average]
[info]   (min, avg, max) = (1348.292, 1887.926, 2029.515), stdev = 301.715
[info]   CI (99.9%): [726.130, 3049.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1503.477 ±(99.9%) 950.810 B/op [Average]
[info]   (min, avg, max) = (1062.528, 1503.477, 1632.734), stdev = 246.922
[info]   CI (99.9%): [552.667, 2454.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.050 ±(99.9%) 0.044 B/op [Average]
[info]   (min, avg, max) = (0.034, 0.050, 0.066), stdev = 0.011
[info]   CI (99.9%): [0.005, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava
[info] # Run progress: 3.53% complete, ETA 01:48:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.894 ops/s
[info] # Warmup Iteration   2: 17958723.900 ops/s
[info] # Warmup Iteration   3: 18508111.029 ops/s
[info] # Warmup Iteration   4: 18764237.021 ops/s
[info] # Warmup Iteration   5: 18641271.805 ops/s
[info] Iteration   1: 18439918.994 ops/s
[info]                  ·gc.alloc.rate:                   562.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 19010053.992 ops/s
[info]                  ·gc.alloc.rate:               579.831 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54.960 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 19170285.552 ops/s
[info]                  ·gc.alloc.rate:                   584.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 18693324.474 ops/s
[info]                  ·gc.alloc.rate:                   570.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 18289285.705 ops/s
[info]                  ·gc.alloc.rate:      557.776 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava":
[info]   18720573.744 ±(99.9%) 1429878.578 ops/s [Average]
[info]   (min, avg, max) = (18289285.705, 18720573.744, 19170285.552), stdev = 371334.926
[info]   CI (99.9%): [17290695.166, 20150452.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   570.954 ±(99.9%) 43.686 MB/sec [Average]
[info]   (min, avg, max) = (557.776, 570.954, 584.672), stdev = 11.345
[info]   CI (99.9%): [527.269, 614.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   500.898 ±(99.9%) 1107.875 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 500.898, 665.172), stdev = 287.712
[info]   CI (99.9%): [≈ 0, 1608.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   41.825 ±(99.9%) 92.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41.825, 56.003), stdev = 23.911
[info]   CI (99.9%): [≈ 0, 133.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.022 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.012), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala
[info] # Run progress: 3.76% complete, ETA 01:48:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2283156.275 ops/s
[info] # Warmup Iteration   2: 6053156.411 ops/s
[info] # Warmup Iteration   3: 5995345.461 ops/s
[info] # Warmup Iteration   4: 6177456.533 ops/s
[info] # Warmup Iteration   5: 6179945.711 ops/s
[info] Iteration   1: 5984689.830 ops/s
[info]                  ·gc.alloc.rate:                   1642.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     526.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5963858.298 ops/s
[info]                  ·gc.alloc.rate:                   1637.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     352.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 5910583.227 ops/s
[info]                  ·gc.alloc.rate:                   1622.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     356.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6034134.136 ops/s
[info]                  ·gc.alloc.rate:                   1656.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     525.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 6058864.554 ops/s
[info]                  ·gc.alloc.rate:                   1663.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     349.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala":
[info]   5990426.009 ±(99.9%) 225417.726 ops/s [Average]
[info]   (min, avg, max) = (5910583.227, 5990426.009, 6058864.554), stdev = 58540.268
[info]   CI (99.9%): [5765008.283, 6215843.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1644.430 ±(99.9%) 61.337 MB/sec [Average]
[info]   (min, avg, max) = (1622.553, 1644.430, 1663.025), stdev = 15.929
[info]   CI (99.9%): [1583.093, 1705.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1607.528 ±(99.9%) 1407.256 MB/sec [Average]
[info]   (min, avg, max) = (1337.308, 1607.528, 2014.060), stdev = 365.460
[info]   CI (99.9%): [200.272, 3014.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   422.110 ±(99.9%) 364.745 B/op [Average]
[info]   (min, avg, max) = (349.366, 422.110, 526.341), stdev = 94.723
[info]   CI (99.9%): [57.365, 786.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.012, 0.022), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 10.000), stdev = 3.647
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala
[info] # Run progress: 4.00% complete, ETA 01:48:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18169049.988 ops/s
[info] # Warmup Iteration   2: 26443933.920 ops/s
[info] # Warmup Iteration   3: 27662313.950 ops/s
[info] # Warmup Iteration   4: 27462152.711 ops/s
[info] # Warmup Iteration   5: 27343330.410 ops/s
[info] Iteration   1: 27439814.243 ops/s
[info]                  ·gc.alloc.rate:                   836.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 27242010.848 ops/s
[info]                  ·gc.alloc.rate:               830.885 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38.832 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 28104969.117 ops/s
[info]                  ·gc.alloc.rate:                   857.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 27732382.897 ops/s
[info]                  ·gc.alloc.rate:               845.899 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38.165 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 28193231.894 ops/s
[info]                  ·gc.alloc.rate:                   859.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala":
[info]   27742481.800 ±(99.9%) 1583866.690 ops/s [Average]
[info]   (min, avg, max) = (27242010.848, 27742481.800, 28193231.894), stdev = 411325.150
[info]   CI (99.9%): [26158615.110, 29326348.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   846.186 ±(99.9%) 48.525 MB/sec [Average]
[info]   (min, avg, max) = (830.885, 846.186, 859.812), stdev = 12.602
[info]   CI (99.9%): [797.660, 894.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   807.099 ±(99.9%) 1158.196 MB/sec [Average]
[info]   (min, avg, max) = (672.182, 807.099, 1345.150), stdev = 300.780
[info]   CI (99.9%): [≈ 0, 1965.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   45.689 ±(99.9%) 63.762 B/op [Average]
[info]   (min, avg, max) = (37.559, 45.689, 75.297), stdev = 16.559
[info]   CI (99.9%): [≈ 0, 109.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.009 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.006), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 4.24% complete, ETA 01:48:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18109893.903 ops/s
[info] # Warmup Iteration   2: 26606021.056 ops/s
[info] # Warmup Iteration   3: 27019934.156 ops/s
[info] # Warmup Iteration   4: 26996155.711 ops/s
[info] # Warmup Iteration   5: 26934460.091 ops/s
[info] Iteration   1: 26946938.410 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 27006705.337 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 26947278.979 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 26959815.421 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 26919273.532 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc":
[info]   26956002.336 ±(99.9%) 123169.313 ops/s [Average]
[info]   (min, avg, max) = (26919273.532, 26956002.336, 27006705.337), stdev = 31986.679
[info]   CI (99.9%): [26832833.023, 27079171.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson
[info] # Run progress: 4.47% complete, ETA 01:47:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 326279.474 ops/s
[info] # Warmup Iteration   2: 1111542.043 ops/s
[info] # Warmup Iteration   3: 1116853.081 ops/s
[info] # Warmup Iteration   4: 1126932.833 ops/s
[info] # Warmup Iteration   5: 1123487.608 ops/s
[info] Iteration   1: 1126504.768 ops/s
[info]                  ·gc.alloc.rate:                   1712.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2800.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1128131.641 ops/s
[info]                  ·gc.alloc.rate:               1714.562 MB/sec
[info]                  ·gc.alloc.rate.norm:          2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1867.513 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1127288.654 ops/s
[info]                  ·gc.alloc.rate:                   1713.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2809.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1129531.824 ops/s
[info]                  ·gc.alloc.rate:               1716.670 MB/sec
[info]                  ·gc.alloc.rate.norm:          2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1874.042 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1123448.608 ops/s
[info]                  ·gc.alloc.rate:                   1708.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2830.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson":
[info]   1126981.099 ±(99.9%) 8744.845 ops/s [Average]
[info]   (min, avg, max) = (1123448.608, 1126981.099, 1129531.824), stdev = 2271.009
[info]   CI (99.9%): [1118236.253, 1135725.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1712.947 ±(99.9%) 12.261 MB/sec [Average]
[info]   (min, avg, max) = (1708.127, 1712.947, 1716.670), stdev = 3.184
[info]   CI (99.9%): [1700.686, 1725.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2392.000, 2392.000, 2392.000), stdev = 0.001
[info]   CI (99.9%): [2392.000, 2392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1744.314 ±(99.9%) 1415.177 MB/sec [Average]
[info]   (min, avg, max) = (1338.615, 1744.314, 2021.455), stdev = 367.517
[info]   CI (99.9%): [329.137, 3159.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2436.396 ±(99.9%) 1988.704 B/op [Average]
[info]   (min, avg, max) = (1867.513, 2436.396, 2830.774), stdev = 516.460
[info]   CI (99.9%): [447.693, 4425.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.232 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.145), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 4.000), stdev = 1.140
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 4.71% complete, ETA 01:47:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 277232.524 ops/s
[info] # Warmup Iteration   2: 337155.800 ops/s
[info] # Warmup Iteration   3: 341738.906 ops/s
[info] # Warmup Iteration   4: 342240.683 ops/s
[info] # Warmup Iteration   5: 335330.640 ops/s
[info] Iteration   1: 341286.426 ops/s
[info]                  ·gc.alloc.rate:                   2040.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              9408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9329.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.384 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 340701.491 ops/s
[info]                  ·gc.alloc.rate:                   2037.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              9408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9357.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.481 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 341906.251 ops/s
[info]                  ·gc.alloc.rate:                   2043.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              9408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9340.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 341623.424 ops/s
[info]                  ·gc.alloc.rate:                   2042.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              9408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9360.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 341247.111 ops/s
[info]                  ·gc.alloc.rate:                   2039.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              9408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2034.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9381.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce":
[info]   341352.941 ±(99.9%) 1742.735 ops/s [Average]
[info]   (min, avg, max) = (340701.491, 341352.941, 341906.251), stdev = 452.583
[info]   CI (99.9%): [339610.205, 343095.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2040.641 ±(99.9%) 9.668 MB/sec [Average]
[info]   (min, avg, max) = (2037.222, 2040.641, 2043.874), stdev = 2.511
[info]   CI (99.9%): [2030.973, 2050.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9408.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9408.001, 9408.001, 9408.001), stdev = 0.001
[info]   CI (99.9%): [9408.001, 9408.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2028.877 ±(99.9%) 16.516 MB/sec [Average]
[info]   (min, avg, max) = (2023.171, 2028.877, 2034.034), stdev = 4.289
[info]   CI (99.9%): [2012.362, 2045.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9353.774 ±(99.9%) 77.226 B/op [Average]
[info]   (min, avg, max) = (9329.400, 9353.774, 9381.488), stdev = 20.055
[info]   CI (99.9%): [9276.548, 9431.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.288 ±(99.9%) 0.586 B/op [Average]
[info]   (min, avg, max) = (0.096, 0.288, 0.481), stdev = 0.152
[info]   CI (99.9%): [≈ 0, 0.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.94% complete, ETA 01:47:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 290206.772 ops/s
[info] # Warmup Iteration   2: 474678.824 ops/s
[info] # Warmup Iteration   3: 496514.601 ops/s
[info] # Warmup Iteration   4: 500661.745 ops/s
[info] # Warmup Iteration   5: 492230.280 ops/s
[info] Iteration   1: 502856.196 ops/s
[info]                  ·gc.alloc.rate:                   685.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              2144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2087.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.407 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.532 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 491192.671 ops/s
[info]                  ·gc.alloc.rate:               669.148 MB/sec
[info]                  ·gc.alloc.rate.norm:          2144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2136.588 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 486613.103 ops/s
[info]                  ·gc.alloc.rate:                   663.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              2144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2156.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 491251.893 ops/s
[info]                  ·gc.alloc.rate:                   669.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              2144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2136.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 504791.462 ops/s
[info]                  ·gc.alloc.rate:                   687.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              2144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2080.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala":
[info]   495341.065 ±(99.9%) 30798.834 ops/s [Average]
[info]   (min, avg, max) = (486613.103, 495341.065, 504791.462), stdev = 7998.360
[info]   CI (99.9%): [464542.230, 526139.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   674.850 ±(99.9%) 41.718 MB/sec [Average]
[info]   (min, avg, max) = (663.170, 674.850, 687.715), stdev = 10.834
[info]   CI (99.9%): [633.132, 716.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   2144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2144.001, 2144.001, 2144.001), stdev = 0.001
[info]   CI (99.9%): [2144.001, 2144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   666.950 ±(99.9%) 0.716 MB/sec [Average]
[info]   (min, avg, max) = (666.801, 666.950, 667.204), stdev = 0.186
[info]   CI (99.9%): [666.234, 667.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2119.335 ±(99.9%) 130.155 B/op [Average]
[info]   (min, avg, max) = (2080.055, 2119.335, 2156.686), stdev = 33.801
[info]   CI (99.9%): [1989.180, 2249.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.498 ±(99.9%) 4.109 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.498, 2.407), stdev = 1.067
[info]   CI (99.9%): [≈ 0, 4.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.559 ±(99.9%) 12.859 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.559, 7.532), stdev = 3.339
[info]   CI (99.9%): [≈ 0, 14.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.18% complete, ETA 01:47:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1214709.518 ops/s
[info] # Warmup Iteration   2: 1304938.728 ops/s
[info] # Warmup Iteration   3: 1325663.443 ops/s
[info] # Warmup Iteration   4: 1308695.047 ops/s
[info] # Warmup Iteration   5: 1286396.522 ops/s
[info] Iteration   1: 1293721.709 ops/s
[info]                  ·gc.alloc.rate:                   861.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              1048.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1637.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1336200.630 ops/s
[info]                  ·gc.alloc.rate:               889.928 MB/sec
[info]                  ·gc.alloc.rate.norm:          1048.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 792.472 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1332190.977 ops/s
[info]                  ·gc.alloc.rate:                   887.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              1048.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     795.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 1314988.683 ops/s
[info]                  ·gc.alloc.rate:                   875.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              1048.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1611.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1331834.476 ops/s
[info]                  ·gc.alloc.rate:               886.856 MB/sec
[info]                  ·gc.alloc.rate.norm:          1048.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 795.877 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala":
[info]   1321787.295 ±(99.9%) 68092.869 ops/s [Average]
[info]   (min, avg, max) = (1293721.709, 1321787.295, 1336200.630), stdev = 17683.502
[info]   CI (99.9%): [1253694.426, 1389880.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   880.192 ±(99.9%) 45.477 MB/sec [Average]
[info]   (min, avg, max) = (861.456, 880.192, 889.928), stdev = 11.810
[info]   CI (99.9%): [834.715, 925.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1048.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1048.000, 1048.000, 1048.000), stdev = 0.001
[info]   CI (99.9%): [1048.000, 1048.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.495 ±(99.9%) 1419.976 MB/sec [Average]
[info]   (min, avg, max) = (672.941, 942.495, 1346.700), stdev = 368.763
[info]   CI (99.9%): [≈ 0, 2362.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1126.613 ±(99.9%) 1751.328 B/op [Average]
[info]   (min, avg, max) = (792.472, 1126.613, 1637.726), stdev = 454.814
[info]   CI (99.9%): [≈ 0, 2877.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.171 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.045, 0.098), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 5.41% complete, ETA 01:46:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80328.173 ops/s
[info] # Warmup Iteration   2: 116064.044 ops/s
[info] # Warmup Iteration   3: 116213.035 ops/s
[info] # Warmup Iteration   4: 119233.095 ops/s
[info] # Warmup Iteration   5: 119599.292 ops/s
[info] Iteration   1: 119759.494 ops/s
[info]                  ·gc.alloc.rate:                   4146.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              54496.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4068.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53463.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.641 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 118838.121 ops/s
[info]                  ·gc.alloc.rate:                   4115.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              54496.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4075.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53972.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.378 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 117439.498 ops/s
[info]                  ·gc.alloc.rate:                   4066.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              54496.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4081.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54696.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.837 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 119346.857 ops/s
[info]                  ·gc.alloc.rate:                   4132.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              54496.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4084.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53866.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 115348.791 ops/s
[info]                  ·gc.alloc.rate:                   3995.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              54496.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4088.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55771.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.568 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson":
[info]   118146.552 ±(99.9%) 6901.137 ops/s [Average]
[info]   (min, avg, max) = (115348.791, 118146.552, 119759.494), stdev = 1792.203
[info]   CI (99.9%): [111245.416, 125047.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4091.299 ±(99.9%) 237.304 MB/sec [Average]
[info]   (min, avg, max) = (3995.304, 4091.299, 4146.775), stdev = 61.627
[info]   CI (99.9%): [3853.995, 4328.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   54496.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (54496.004, 54496.004, 54496.004), stdev = 0.001
[info]   CI (99.9%): [54496.003, 54496.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4079.823 ±(99.9%) 30.936 MB/sec [Average]
[info]   (min, avg, max) = (4068.181, 4079.823, 4088.840), stdev = 8.034
[info]   CI (99.9%): [4048.887, 4110.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   54354.056 ±(99.9%) 3500.139 B/op [Average]
[info]   (min, avg, max) = (53463.133, 54354.056, 55771.838), stdev = 908.975
[info]   CI (99.9%): [50853.918, 57854.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.940 ±(99.9%) 2.175 B/op [Average]
[info]   (min, avg, max) = (0.275, 0.940, 1.641), stdev = 0.565
[info]   CI (99.9%): [≈ 0, 3.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 5.65% complete, ETA 01:46:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 274298.602 ops/s
[info] # Warmup Iteration   2: 366459.449 ops/s
[info] # Warmup Iteration   3: 377109.850 ops/s
[info] # Warmup Iteration   4: 376286.561 ops/s
[info] # Warmup Iteration   5: 379976.036 ops/s
[info] Iteration   1: 379830.521 ops/s
[info]                  ·gc.alloc.rate:                   1292.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              5352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5556.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 371877.446 ops/s
[info]                  ·gc.alloc.rate:                   1264.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              5352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5678.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.441 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 370487.675 ops/s
[info]                  ·gc.alloc.rate:                   1259.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              5352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5708.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 358224.202 ops/s
[info]                  ·gc.alloc.rate:                   1218.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              5352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5909.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.274 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 378312.087 ops/s
[info]                  ·gc.alloc.rate:               1286.447 MB/sec
[info]                  ·gc.alloc.rate.norm:          5352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2801.864 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce":
[info]   371746.386 ±(99.9%) 32951.291 ops/s [Average]
[info]   (min, avg, max) = (358224.202, 371746.386, 379830.521), stdev = 8557.346
[info]   CI (99.9%): [338795.095, 404697.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1264.294 ±(99.9%) 112.535 MB/sec [Average]
[info]   (min, avg, max) = (1218.215, 1264.294, 1292.280), stdev = 29.225
[info]   CI (99.9%): [1151.759, 1376.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5352.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5352.001, 5352.001, 5352.001), stdev = 0.001
[info]   CI (99.9%): [5352.001, 5352.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1209.129 ±(99.9%) 1153.044 MB/sec [Average]
[info]   (min, avg, max) = (673.477, 1209.129, 1345.065), stdev = 299.442
[info]   CI (99.9%): [56.085, 2362.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5130.799 ±(99.9%) 5036.901 B/op [Average]
[info]   (min, avg, max) = (2801.864, 5130.799, 5909.292), stdev = 1308.067
[info]   CI (99.9%): [93.899, 10167.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.195 ±(99.9%) 0.657 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.195, 0.441), stdev = 0.171
[info]   CI (99.9%): [≈ 0, 0.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.88% complete, ETA 01:46:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 436784.761 ops/s
[info] # Warmup Iteration   2: 663236.680 ops/s
[info] # Warmup Iteration   3: 673351.992 ops/s
[info] # Warmup Iteration   4: 673428.228 ops/s
[info] # Warmup Iteration   5: 674769.057 ops/s
[info] Iteration   1: 653215.593 ops/s
[info]                  ·gc.alloc.rate:               488.321 MB/sec
[info]                  ·gc.alloc.rate.norm:          1176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1232.543 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 651200.778 ops/s
[info]                  ·gc.alloc.rate:               486.680 MB/sec
[info]                  ·gc.alloc.rate.norm:          1176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1236.464 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 651580.678 ops/s
[info]                  ·gc.alloc.rate:                   486.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              1176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1610.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.401 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.799 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 654094.636 ops/s
[info]                  ·gc.alloc.rate:      488.845 MB/sec
[info]                  ·gc.alloc.rate.norm: 1176.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 652643.323 ops/s
[info]                  ·gc.alloc.rate:                   487.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              1176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1607.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala":
[info]   652547.002 ±(99.9%) 4555.152 ops/s [Average]
[info]   (min, avg, max) = (651200.778, 652547.002, 654094.636), stdev = 1182.959
[info]   CI (99.9%): [647991.849, 657102.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   487.679 ±(99.9%) 3.569 MB/sec [Average]
[info]   (min, avg, max) = (486.680, 487.679, 488.845), stdev = 0.927
[info]   CI (99.9%): [484.109, 491.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1176.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1176.001, 1176.001, 1176.001), stdev = 0.001
[info]   CI (99.9%): [1176.001, 1176.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   471.430 ±(99.9%) 1057.799 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 471.430, 666.825), stdev = 274.707
[info]   CI (99.9%): [≈ 0, 1529.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1137.535 ±(99.9%) 2552.772 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1137.535, 1610.691), stdev = 662.947
[info]   CI (99.9%): [≈ 0, 3690.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.488 ±(99.9%) 4.117 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.488, 2.401), stdev = 1.069
[info]   CI (99.9%): [≈ 0, 4.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.180 ±(99.9%) 9.944 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.180, 5.799), stdev = 2.583
[info]   CI (99.9%): [≈ 0, 11.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.12% complete, ETA 01:46:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1964024.811 ops/s
[info] # Warmup Iteration   2: 2126834.562 ops/s
[info] # Warmup Iteration   3: 2127562.113 ops/s
[info] # Warmup Iteration   4: 2108696.174 ops/s
[info] # Warmup Iteration   5: 2139669.253 ops/s
[info] Iteration   1: 2133630.977 ops/s
[info]                  ·gc.alloc.rate:                   986.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     991.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2150244.831 ops/s
[info]                  ·gc.alloc.rate:               994.595 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 491.984 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2151280.856 ops/s
[info]                  ·gc.alloc.rate:                   995.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     983.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2152547.093 ops/s
[info]                  ·gc.alloc.rate:               995.686 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 491.929 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2154292.860 ops/s
[info]                  ·gc.alloc.rate:                   996.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     983.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala":
[info]   2148399.323 ±(99.9%) 32317.374 ops/s [Average]
[info]   (min, avg, max) = (2133630.977, 2148399.323, 2154292.860), stdev = 8392.719
[info]   CI (99.9%): [2116081.949, 2180716.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   993.761 ±(99.9%) 15.048 MB/sec [Average]
[info]   (min, avg, max) = (986.894, 993.761, 996.555), stdev = 3.908
[info]   CI (99.9%): [978.713, 1008.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   728.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (728.000, 728.000, 728.000), stdev = 0.001
[info]   CI (99.9%): [728.000, 728.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1076.122 ±(99.9%) 1418.858 MB/sec [Average]
[info]   (min, avg, max) = (672.150, 1076.122, 1346.408), stdev = 368.473
[info]   CI (99.9%): [≈ 0, 2494.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   788.619 ±(99.9%) 1042.883 B/op [Average]
[info]   (min, avg, max) = (491.929, 788.619, 991.625), stdev = 270.833
[info]   CI (99.9%): [≈ 0, 1831.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.137 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.076), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 6.35% complete, ETA 01:46:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2409706.860 ops/s
[info] # Warmup Iteration   2: 2653288.302 ops/s
[info] # Warmup Iteration   3: 2660734.292 ops/s
[info] # Warmup Iteration   4: 2659768.814 ops/s
[info] # Warmup Iteration   5: 2658824.405 ops/s
[info] Iteration   1: 2660460.922 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2661889.545 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2658519.173 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2653408.210 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2630126.768 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2652880.924 ±(99.9%) 50516.542 ops/s [Average]
[info]   (min, avg, max) = (2630126.768, 2652880.924, 2661889.545), stdev = 13118.986
[info]   CI (99.9%): [2602364.381, 2703397.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 6.59% complete, ETA 01:45:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 319245.231 ops/s
[info] # Warmup Iteration   2: 389617.694 ops/s
[info] # Warmup Iteration   3: 394076.555 ops/s
[info] # Warmup Iteration   4: 384213.353 ops/s
[info] # Warmup Iteration   5: 388269.193 ops/s
[info] Iteration   1: 393441.367 ops/s
[info]                  ·gc.alloc.rate:                   565.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2046.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 394985.217 ops/s
[info]                  ·gc.alloc.rate:                   568.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2669.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.972 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 395751.505 ops/s
[info]                  ·gc.alloc.rate:                   569.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2663.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.248 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 393942.855 ops/s
[info]                  ·gc.alloc.rate:      566.667 MB/sec
[info]                  ·gc.alloc.rate.norm: 2264.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 395700.277 ops/s
[info]                  ·gc.alloc.rate:               569.193 MB/sec
[info]                  ·gc.alloc.rate.norm:          2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2662.786 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson":
[info]   394764.244 ±(99.9%) 4003.723 ops/s [Average]
[info]   (min, avg, max) = (393441.367, 394764.244, 395751.505), stdev = 1039.754
[info]   CI (99.9%): [390760.522, 398767.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   567.868 ±(99.9%) 5.720 MB/sec [Average]
[info]   (min, avg, max) = (565.999, 567.868, 569.294), stdev = 1.485
[info]   CI (99.9%): [562.148, 573.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2264.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2264.001, 2264.001, 2264.001), stdev = 0.001
[info]   CI (99.9%): [2264.001, 2264.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   504.150 ±(99.9%) 1116.766 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 504.150, 669.836), stdev = 290.021
[info]   CI (99.9%): [≈ 0, 1620.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2008.437 ±(99.9%) 4444.677 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2008.437, 2669.000), stdev = 1154.269
[info]   CI (99.9%): [≈ 0, 6453.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.417 ±(99.9%) 3.411 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.417, 2.001), stdev = 0.886
[info]   CI (99.9%): [≈ 0, 3.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.661 ±(99.9%) 13.591 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.661, 7.972), stdev = 3.530
[info]   CI (99.9%): [≈ 0, 15.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.517
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 6.82% complete, ETA 01:45:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15803.238 ops/s
[info] # Warmup Iteration   2: 19211.538 ops/s
[info] # Warmup Iteration   3: 18588.992 ops/s
[info] # Warmup Iteration   4: 19090.153 ops/s
[info] # Warmup Iteration   5: 19240.558 ops/s
[info] Iteration   1: 19067.468 ops/s
[info]                  ·gc.alloc.rate:                   1350.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              111448.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110982.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.718 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 18621.142 ops/s
[info]                  ·gc.alloc.rate:                   1319.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              111472.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113730.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.519 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 18387.048 ops/s
[info]                  ·gc.alloc.rate:               1302.384 MB/sec
[info]                  ·gc.alloc.rate.norm:          111472.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 115292.043 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 19260.592 ops/s
[info]                  ·gc.alloc.rate:                   1364.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              111472.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110170.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 19074.488 ops/s
[info]                  ·gc.alloc.rate:                   1350.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              111472.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     111354.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.718 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce":
[info]   18882.148 ±(99.9%) 1398.751 ops/s [Average]
[info]   (min, avg, max) = (18387.048, 18882.148, 19260.592), stdev = 363.251
[info]   CI (99.9%): [17483.397, 20280.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate":
[info]   1337.443 ±(99.9%) 98.421 MB/sec [Average]
[info]   (min, avg, max) = (1302.384, 1337.443, 1364.179), stdev = 25.560
[info]   CI (99.9%): [1239.021, 1435.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   111467.351 ±(99.9%) 40.233 B/op [Average]
[info]   (min, avg, max) = (111448.660, 111467.351, 111472.025), stdev = 10.448
[info]   CI (99.9%): [111427.118, 111507.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1347.115 ±(99.9%) 7.366 MB/sec [Average]
[info]   (min, avg, max) = (1344.554, 1347.115, 1349.556), stdev = 1.913
[info]   CI (99.9%): [1339.749, 1354.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   112305.982 ±(99.9%) 8205.954 B/op [Average]
[info]   (min, avg, max) = (110170.153, 112305.982, 115292.043), stdev = 2131.060
[info]   CI (99.9%): [104100.028, 120511.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.412 ±(99.9%) 7.518 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.412, 5.103), stdev = 1.952
[info]   CI (99.9%): [≈ 0, 9.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.06% complete, ETA 01:45:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21390.710 ops/s
[info] # Warmup Iteration   2: 31842.745 ops/s
[info] # Warmup Iteration   3: 31667.039 ops/s
[info] # Warmup Iteration   4: 31527.335 ops/s
[info] # Warmup Iteration   5: 31904.966 ops/s
[info] Iteration   1: 32023.868 ops/s
[info]                  ·gc.alloc.rate:               859.749 MB/sec
[info]                  ·gc.alloc.rate.norm:          42248.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32821.201 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 31988.167 ops/s
[info]                  ·gc.alloc.rate:                   858.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              42248.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65749.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.073 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 31878.595 ops/s
[info]                  ·gc.alloc.rate:               855.778 MB/sec
[info]                  ·gc.alloc.rate.norm:          42248.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32985.878 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 31919.868 ops/s
[info]                  ·gc.alloc.rate:                   856.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              42248.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32942.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 31942.515 ops/s
[info]                  ·gc.alloc.rate:                   857.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              42248.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32952.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.077 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala":
[info]   31950.603 ±(99.9%) 219.301 ops/s [Average]
[info]   (min, avg, max) = (31878.595, 31950.603, 32023.868), stdev = 56.952
[info]   CI (99.9%): [31731.302, 32169.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   857.743 ±(99.9%) 6.104 MB/sec [Average]
[info]   (min, avg, max) = (855.778, 857.743, 859.749), stdev = 1.585
[info]   CI (99.9%): [851.639, 863.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   42248.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (42248.013, 42248.014, 42248.015), stdev = 0.001
[info]   CI (99.9%): [42248.012, 42248.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   801.928 ±(99.9%) 1151.021 MB/sec [Average]
[info]   (min, avg, max) = (667.913, 801.928, 1336.646), stdev = 298.917
[info]   CI (99.9%): [≈ 0, 1952.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   39490.246 ±(99.9%) 56524.556 B/op [Average]
[info]   (min, avg, max) = (32821.201, 39490.246, 65749.045), stdev = 14679.248
[info]   CI (99.9%): [≈ 0, 96014.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.435 ±(99.9%) 5.985 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.435, 3.077), stdev = 1.554
[info]   CI (99.9%): [≈ 0, 7.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.29% complete, ETA 01:45:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35365.952 ops/s
[info] # Warmup Iteration   2: 39333.096 ops/s
[info] # Warmup Iteration   3: 39310.267 ops/s
[info] # Warmup Iteration   4: 38990.781 ops/s
[info] # Warmup Iteration   5: 39027.710 ops/s
[info] Iteration   1: 39494.379 ops/s
[info]                  ·gc.alloc.rate:                   530.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              21144.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20386.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      ≈ 10⁻⁵ MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 39859.554 ops/s
[info]                  ·gc.alloc.rate:      535.545 MB/sec
[info]                  ·gc.alloc.rate.norm: 21144.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 38605.699 ops/s
[info]                  ·gc.alloc.rate:                   518.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              21144.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27441.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.605 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.436 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 38587.388 ops/s
[info]                  ·gc.alloc.rate:                   518.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              21144.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27455.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.698 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 38331.974 ops/s
[info]                  ·gc.alloc.rate:                   514.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              21144.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27625.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.855 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala":
[info]   38975.799 ±(99.9%) 2548.632 ops/s [Average]
[info]   (min, avg, max) = (38331.974, 38975.799, 39859.554), stdev = 661.872
[info]   CI (99.9%): [36427.167, 41524.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   523.668 ±(99.9%) 34.190 MB/sec [Average]
[info]   (min, avg, max) = (514.977, 523.668, 535.545), stdev = 8.879
[info]   CI (99.9%): [489.478, 557.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   21144.011 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (21144.011, 21144.011, 21144.012), stdev = 0.001
[info]   CI (99.9%): [21144.010, 21144.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   506.189 ±(99.9%) 1122.407 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 506.189, 673.378), stdev = 291.486
[info]   CI (99.9%): [≈ 0, 1628.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   20582.008 ±(99.9%) 45868.472 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20582.008, 27625.776), stdev = 11911.896
[info]   CI (99.9%): [≈ 0, 66450.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.334 ±(99.9%) 2.738 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.334, 1.605), stdev = 0.711
[info]   CI (99.9%): [≈ 0, 3.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   13.598 ±(99.9%) 111.619 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.598, 65.436), stdev = 28.987
[info]   CI (99.9%): [≈ 0, 125.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 7.53% complete, ETA 01:44:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14725.392 ops/s
[info] # Warmup Iteration   2: 24951.877 ops/s
[info] # Warmup Iteration   3: 25897.025 ops/s
[info] # Warmup Iteration   4: 25938.252 ops/s
[info] # Warmup Iteration   5: 25702.375 ops/s
[info] Iteration   1: 26000.618 ops/s
[info]                  ·gc.alloc.rate:                   1345.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              81456.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80966.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.520 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 25995.733 ops/s
[info]                  ·gc.alloc.rate:                   1345.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              81456.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81066.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.521 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 26059.321 ops/s
[info]                  ·gc.alloc.rate:               1348.738 MB/sec
[info]                  ·gc.alloc.rate.norm:          81456.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 80987.741 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 26030.370 ops/s
[info]                  ·gc.alloc.rate:                   1347.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              81456.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81155.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.776 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 26029.082 ops/s
[info]                  ·gc.alloc.rate:                   1347.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              81456.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81279.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.259 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson":
[info]   26023.025 ±(99.9%) 99.205 ops/s [Average]
[info]   (min, avg, max) = (25995.733, 26023.025, 26059.321), stdev = 25.763
[info]   CI (99.9%): [25923.820, 26122.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1346.870 ±(99.9%) 5.017 MB/sec [Average]
[info]   (min, avg, max) = (1345.568, 1346.870, 1348.738), stdev = 1.303
[info]   CI (99.9%): [1341.854, 1351.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   81456.017 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (81456.017, 81456.017, 81456.018), stdev = 0.001
[info]   CI (99.9%): [81456.015, 81456.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1340.836 ±(99.9%) 9.941 MB/sec [Average]
[info]   (min, avg, max) = (1337.604, 1340.836, 1344.177), stdev = 2.582
[info]   CI (99.9%): [1330.895, 1350.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   81091.069 ±(99.9%) 495.882 B/op [Average]
[info]   (min, avg, max) = (80966.761, 81091.069, 81279.341), stdev = 128.779
[info]   CI (99.9%): [80595.186, 81586.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.015 ±(99.9%) 5.528 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.015, 3.776), stdev = 1.436
[info]   CI (99.9%): [≈ 0, 7.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 7.76% complete, ETA 01:44:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17259.481 ops/s
[info] # Warmup Iteration   2: 27130.680 ops/s
[info] # Warmup Iteration   3: 27652.574 ops/s
[info] # Warmup Iteration   4: 28041.120 ops/s
[info] # Warmup Iteration   5: 26684.160 ops/s
[info] Iteration   1: 27247.976 ops/s
[info]                  ·gc.alloc.rate:                   1865.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              107728.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116446.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.202 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 27754.216 ops/s
[info]                  ·gc.alloc.rate:                   1899.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              107728.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114512.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.722 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 26965.504 ops/s
[info]                  ·gc.alloc.rate:               1845.788 MB/sec
[info]                  ·gc.alloc.rate.norm:          107728.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78691.799 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 27208.352 ops/s
[info]                  ·gc.alloc.rate:                   1862.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              107728.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117199.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.408 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 27257.831 ops/s
[info]                  ·gc.alloc.rate:                   1865.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              107728.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117138.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.404 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce":
[info]   27286.776 ±(99.9%) 1106.364 ops/s [Average]
[info]   (min, avg, max) = (26965.504, 27286.776, 27754.216), stdev = 287.319
[info]   CI (99.9%): [26180.412, 28393.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1867.752 ±(99.9%) 75.769 MB/sec [Average]
[info]   (min, avg, max) = (1845.788, 1867.752, 1899.788), stdev = 19.677
[info]   CI (99.9%): [1791.983, 1943.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   107728.016 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (107728.016, 107728.016, 107728.017), stdev = 0.001
[info]   CI (99.9%): [107728.015, 107728.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1887.717 ±(99.9%) 1161.323 MB/sec [Average]
[info]   (min, avg, max) = (1348.288, 1887.717, 2028.663), stdev = 301.592
[info]   CI (99.9%): [726.393, 3049.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   108797.935 ±(99.9%) 64940.776 B/op [Average]
[info]   (min, avg, max) = (78691.799, 108797.935, 117199.908), stdev = 16864.913
[info]   CI (99.9%): [43857.159, 173738.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.147 ±(99.9%) 6.743 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.147, 4.722), stdev = 1.751
[info]   CI (99.9%): [≈ 0, 8.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.00% complete, ETA 01:44:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12207.672 ops/s
[info] # Warmup Iteration   2: 26976.027 ops/s
[info] # Warmup Iteration   3: 26850.304 ops/s
[info] # Warmup Iteration   4: 27492.578 ops/s
[info] # Warmup Iteration   5: 27537.431 ops/s
[info] Iteration   1: 27759.285 ops/s
[info]                  ·gc.alloc.rate:               1628.407 MB/sec
[info]                  ·gc.alloc.rate.norm:          92288.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1334.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75650.965 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 27719.511 ops/s
[info]                  ·gc.alloc.rate:                   1626.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              92288.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113915.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.728 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 27703.558 ops/s
[info]                  ·gc.alloc.rate:               1624.505 MB/sec
[info]                  ·gc.alloc.rate.norm:          92288.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76122.803 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 27740.278 ops/s
[info]                  ·gc.alloc.rate:                   1626.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              92288.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76153.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.724 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 27843.631 ops/s
[info]                  ·gc.alloc.rate:                   1632.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              92288.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114071.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.883 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala":
[info]   27753.252 ±(99.9%) 210.741 ops/s [Average]
[info]   (min, avg, max) = (27703.558, 27753.252, 27843.631), stdev = 54.729
[info]   CI (99.9%): [27542.511, 27963.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1627.737 ±(99.9%) 12.270 MB/sec [Average]
[info]   (min, avg, max) = (1624.505, 1627.737, 1632.867), stdev = 3.186
[info]   CI (99.9%): [1615.467, 1640.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   92288.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (92288.016, 92288.016, 92288.017), stdev = 0.001
[info]   CI (99.9%): [92288.014, 92288.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1608.543 ±(99.9%) 1421.179 MB/sec [Average]
[info]   (min, avg, max) = (1334.849, 1608.543, 2018.285), stdev = 369.076
[info]   CI (99.9%): [187.364, 3029.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   91182.877 ±(99.9%) 80186.600 B/op [Average]
[info]   (min, avg, max) = (75650.965, 91182.877, 114071.423), stdev = 20824.205
[info]   CI (99.9%): [10996.278, 171369.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.067 ±(99.9%) 10.933 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.067, 5.883), stdev = 2.839
[info]   CI (99.9%): [≈ 0, 14.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.24% complete, ETA 01:44:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23314.097 ops/s
[info] # Warmup Iteration   2: 30439.965 ops/s
[info] # Warmup Iteration   3: 31249.957 ops/s
[info] # Warmup Iteration   4: 31007.028 ops/s
[info] # Warmup Iteration   5: 30634.880 ops/s
[info] Iteration   1: 31225.496 ops/s
[info]                  ·gc.alloc.rate:                   1732.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              87328.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101755.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.246 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 30919.176 ops/s
[info]                  ·gc.alloc.rate:                   1716.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              87328.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68598.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.418 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 31374.234 ops/s
[info]                  ·gc.alloc.rate:                   1740.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              87328.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101539.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.044 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 31391.590 ops/s
[info]                  ·gc.alloc.rate:               1741.820 MB/sec
[info]                  ·gc.alloc.rate.norm:          87328.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67729.787 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 31422.297 ops/s
[info]                  ·gc.alloc.rate:                   1743.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              87328.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101611.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.213 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala":
[info]   31266.559 ±(99.9%) 802.751 ops/s [Average]
[info]   (min, avg, max) = (30919.176, 31266.559, 31422.297), stdev = 208.472
[info]   CI (99.9%): [30463.808, 32069.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1735.040 ±(99.9%) 43.213 MB/sec [Average]
[info]   (min, avg, max) = (1716.392, 1735.040, 1743.446), stdev = 11.222
[info]   CI (99.9%): [1691.827, 1778.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   87328.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (87328.014, 87328.014, 87328.015), stdev = 0.001
[info]   CI (99.9%): [87328.012, 87328.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1754.176 ±(99.9%) 1422.224 MB/sec [Average]
[info]   (min, avg, max) = (1348.271, 1754.176, 2028.602), stdev = 369.347
[info]   CI (99.9%): [331.951, 3176.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   88246.757 ±(99.9%) 70603.877 B/op [Average]
[info]   (min, avg, max) = (67729.787, 88246.757, 101755.086), stdev = 18335.603
[info]   CI (99.9%): [17642.880, 158850.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.238 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.146), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.784 ±(99.9%) 12.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.784, 7.418), stdev = 3.131
[info]   CI (99.9%): [≈ 0, 15.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 8.47% complete, ETA 01:43:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24008.481 ops/s
[info] # Warmup Iteration   2: 30743.410 ops/s
[info] # Warmup Iteration   3: 30582.141 ops/s
[info] # Warmup Iteration   4: 30556.229 ops/s
[info] # Warmup Iteration   5: 30618.003 ops/s
[info] Iteration   1: 31233.047 ops/s
[info]                  ·gc.alloc.rate:               1671.896 MB/sec
[info]                  ·gc.alloc.rate.norm:          84248.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67820.603 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 31192.162 ops/s
[info]                  ·gc.alloc.rate:                   1669.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              84248.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101960.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 31065.913 ops/s
[info]                  ·gc.alloc.rate:                   1663.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              84248.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68336.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 30849.664 ops/s
[info]                  ·gc.alloc.rate:                   1651.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              84248.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103362.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.248 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 30951.613 ops/s
[info]                  ·gc.alloc.rate:                   1657.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              84248.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68760.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.176 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc":
[info]   31058.480 ±(99.9%) 619.176 ops/s [Average]
[info]   (min, avg, max) = (30849.664, 31058.480, 31233.047), stdev = 160.798
[info]   CI (99.9%): [30439.303, 31677.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1662.689 ±(99.9%) 32.947 MB/sec [Average]
[info]   (min, avg, max) = (1651.384, 1662.689, 1671.896), stdev = 8.556
[info]   CI (99.9%): [1629.742, 1695.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   84248.014 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (84248.014, 84248.014, 84248.014), stdev = 0.001
[info]   CI (99.9%): [84248.014, 84248.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1618.886 ±(99.9%) 1422.247 MB/sec [Average]
[info]   (min, avg, max) = (1345.895, 1618.886, 2026.052), stdev = 369.353
[info]   CI (99.9%): [196.639, 3041.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   82048.073 ±(99.9%) 72494.853 B/op [Average]
[info]   (min, avg, max) = (67820.603, 82048.073, 103362.304), stdev = 18826.683
[info]   CI (99.9%): [9553.220, 154542.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.536 ±(99.9%) 7.392 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.536, 4.248), stdev = 1.920
[info]   CI (99.9%): [≈ 0, 9.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 8.71% complete, ETA 01:43:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5107.034 ops/s
[info] # Warmup Iteration   2: 8297.411 ops/s
[info] # Warmup Iteration   3: 8449.688 ops/s
[info] # Warmup Iteration   4: 8451.155 ops/s
[info] # Warmup Iteration   5: 8451.662 ops/s
[info] Iteration   1: 8447.970 ops/s
[info]                  ·gc.alloc.rate:                   1194.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              222544.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     249424.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.634 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 8437.755 ops/s
[info]                  ·gc.alloc.rate:                   1193.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              222544.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     249844.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.530 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 8465.707 ops/s
[info]                  ·gc.alloc.rate:                   1197.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              222544.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     249327.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.870 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 8473.245 ops/s
[info]                  ·gc.alloc.rate:               1198.168 MB/sec
[info]                  ·gc.alloc.rate.norm:          222544.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 124653.725 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 8469.904 ops/s
[info]                  ·gc.alloc.rate:                   1197.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              222544.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     249643.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.736 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson":
[info]   8458.916 ±(99.9%) 59.022 ops/s [Average]
[info]   (min, avg, max) = (8437.755, 8458.916, 8473.245), stdev = 15.328
[info]   CI (99.9%): [8399.894, 8517.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1196.173 ±(99.9%) 8.307 MB/sec [Average]
[info]   (min, avg, max) = (1193.120, 1196.173, 1198.168), stdev = 2.157
[info]   CI (99.9%): [1187.866, 1204.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   222544.052 ±(99.9%) 0.006 B/op [Average]
[info]   (min, avg, max) = (222544.051, 222544.052, 222544.055), stdev = 0.002
[info]   CI (99.9%): [222544.045, 222544.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1206.885 ±(99.9%) 1153.273 MB/sec [Average]
[info]   (min, avg, max) = (671.130, 1206.885, 1343.571), stdev = 299.501
[info]   CI (99.9%): [53.612, 2360.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   224578.746 ±(99.9%) 215097.521 B/op [Average]
[info]   (min, avg, max) = (124653.725, 224578.746, 249844.353), stdev = 55860.143
[info]   CI (99.9%): [9481.225, 439676.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   7.754 ±(99.9%) 23.637 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.754, 15.530), stdev = 6.139
[info]   CI (99.9%): [≈ 0, 31.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 8.94% complete, ETA 01:43:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13615.681 ops/s
[info] # Warmup Iteration   2: 18343.303 ops/s
[info] # Warmup Iteration   3: 18308.774 ops/s
[info] # Warmup Iteration   4: 18440.006 ops/s
[info] # Warmup Iteration   5: 18437.340 ops/s
[info] Iteration   1: 18381.042 ops/s
[info]                  ·gc.alloc.rate:                   1586.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              135760.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172851.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 18239.567 ops/s
[info]                  ·gc.alloc.rate:                   1573.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              135760.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116221.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.796 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 18458.913 ops/s
[info]                  ·gc.alloc.rate:                   1592.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              135760.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114978.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.775 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 18040.870 ops/s
[info]                  ·gc.alloc.rate:                   1556.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              135760.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     176719.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.896 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 18428.281 ops/s
[info]                  ·gc.alloc.rate:               1589.568 MB/sec
[info]                  ·gc.alloc.rate.norm:          135760.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 115484.444 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce":
[info]   18309.735 ±(99.9%) 663.060 ops/s [Average]
[info]   (min, avg, max) = (18040.870, 18309.735, 18458.913), stdev = 172.195
[info]   CI (99.9%): [17646.675, 18972.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1579.542 ±(99.9%) 57.469 MB/sec [Average]
[info]   (min, avg, max) = (1556.218, 1579.542, 1592.342), stdev = 14.925
[info]   CI (99.9%): [1522.073, 1637.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   135760.026 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (135760.023, 135760.026, 135760.032), stdev = 0.004
[info]   CI (99.9%): [135760.011, 135760.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1618.601 ±(99.9%) 1420.371 MB/sec [Average]
[info]   (min, avg, max) = (1346.926, 1618.601, 2025.732), stdev = 368.866
[info]   CI (99.9%): [198.230, 3038.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   139250.940 ±(99.9%) 125031.512 B/op [Average]
[info]   (min, avg, max) = (114978.179, 139250.940, 176719.110), stdev = 32470.287
[info]   CI (99.9%): [14219.427, 264282.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.319 ±(99.9%) 17.503 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.319, 10.896), stdev = 4.546
[info]   CI (99.9%): [≈ 0, 21.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.18% complete, ETA 01:43:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29228.984 ops/s
[info] # Warmup Iteration   2: 41132.174 ops/s
[info] # Warmup Iteration   3: 42020.546 ops/s
[info] # Warmup Iteration   4: 42842.954 ops/s
[info] # Warmup Iteration   5: 42903.216 ops/s
[info] Iteration   1: 42883.001 ops/s
[info]                  ·gc.alloc.rate:                   1184.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              43448.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49041.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.764 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 42774.029 ops/s
[info]                  ·gc.alloc.rate:                   1181.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              43448.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49192.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.766 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 42651.373 ops/s
[info]                  ·gc.alloc.rate:                   1177.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              43448.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49394.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.304 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 42775.117 ops/s
[info]                  ·gc.alloc.rate:               1180.858 MB/sec
[info]                  ·gc.alloc.rate.norm:          43448.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24644.551 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 42743.460 ops/s
[info]                  ·gc.alloc.rate:                   1179.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              43448.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49375.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.300 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala":
[info]   42765.396 ±(99.9%) 319.177 ops/s [Average]
[info]   (min, avg, max) = (42651.373, 42765.396, 42883.001), stdev = 82.889
[info]   CI (99.9%): [42446.219, 43084.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1180.703 ±(99.9%) 9.198 MB/sec [Average]
[info]   (min, avg, max) = (1177.489, 1180.703, 1184.136), stdev = 2.389
[info]   CI (99.9%): [1171.505, 1189.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   43448.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (43448.010, 43448.010, 43448.011), stdev = 0.001
[info]   CI (99.9%): [43448.009, 43448.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1204.635 ±(99.9%) 1151.279 MB/sec [Average]
[info]   (min, avg, max) = (669.806, 1204.635, 1340.926), stdev = 298.984
[info]   CI (99.9%): [53.356, 2355.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   44329.553 ±(99.9%) 42377.093 B/op [Average]
[info]   (min, avg, max) = (24644.551, 44329.553, 49394.348), stdev = 11005.197
[info]   CI (99.9%): [1952.460, 86706.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.227 ±(99.9%) 3.966 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.227, 2.304), stdev = 1.030
[info]   CI (99.9%): [≈ 0, 5.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.41% complete, ETA 01:42:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56544.808 ops/s
[info] # Warmup Iteration   2: 60832.476 ops/s
[info] # Warmup Iteration   3: 60648.143 ops/s
[info] # Warmup Iteration   4: 61893.778 ops/s
[info] # Warmup Iteration   5: 62061.088 ops/s
[info] Iteration   1: 61874.112 ops/s
[info]                  ·gc.alloc.rate:                   799.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              20336.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17130.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.059 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 61921.231 ops/s
[info]                  ·gc.alloc.rate:                   800.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              20336.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17100.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.529 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 61505.270 ops/s
[info]                  ·gc.alloc.rate:               794.701 MB/sec
[info]                  ·gc.alloc.rate.norm:          20336.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17216.317 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 59242.107 ops/s
[info]                  ·gc.alloc.rate:                   765.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              20336.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35764.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.106 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 61349.618 ops/s
[info]                  ·gc.alloc.rate:                   792.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              20336.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17277.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.534 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala":
[info]   61178.468 ±(99.9%) 4271.093 ops/s [Average]
[info]   (min, avg, max) = (59242.107, 61178.468, 61921.231), stdev = 1109.189
[info]   CI (99.9%): [56907.375, 65449.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   790.526 ±(99.9%) 54.891 MB/sec [Average]
[info]   (min, avg, max) = (765.650, 790.526, 800.081), stdev = 14.255
[info]   CI (99.9%): [735.635, 845.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   20336.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (20336.007, 20336.007, 20336.007), stdev = 0.001
[info]   CI (99.9%): [20336.006, 20336.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   807.811 ±(99.9%) 1159.613 MB/sec [Average]
[info]   (min, avg, max) = (672.788, 807.811, 1346.521), stdev = 301.148
[info]   CI (99.9%): [≈ 0, 1967.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   20897.851 ±(99.9%) 32002.075 B/op [Average]
[info]   (min, avg, max) = (17100.673, 20897.851, 35764.203), stdev = 8310.837
[info]   CI (99.9%): [≈ 0, 52899.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.646 ±(99.9%) 1.750 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.646, 1.106), stdev = 0.454
[info]   CI (99.9%): [≈ 0, 2.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 9.65% complete, ETA 01:42:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13807.804 ops/s
[info] # Warmup Iteration   2: 31421.702 ops/s
[info] # Warmup Iteration   3: 31855.019 ops/s
[info] # Warmup Iteration   4: 31951.188 ops/s
[info] # Warmup Iteration   5: 31205.523 ops/s
[info] Iteration   1: 32000.912 ops/s
[info]                  ·gc.alloc.rate:                   2170.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              106744.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2679.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131768.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 31920.826 ops/s
[info]                  ·gc.alloc.rate:                   2164.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              106744.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99336.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.132 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 32034.942 ops/s
[info]                  ·gc.alloc.rate:                   2172.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              106744.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99261.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.068 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 32059.627 ops/s
[info]                  ·gc.alloc.rate:                   2174.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              106744.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99376.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.044 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 30988.902 ops/s
[info]                  ·gc.alloc.rate:                   2102.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              106744.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103017.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.172 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson":
[info]   31801.042 ±(99.9%) 1759.793 ops/s [Average]
[info]   (min, avg, max) = (30988.902, 31801.042, 32059.627), stdev = 457.013
[info]   CI (99.9%): [30041.249, 33560.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2157.036 ±(99.9%) 117.840 MB/sec [Average]
[info]   (min, avg, max) = (2102.674, 2157.036, 2174.545), stdev = 30.603
[info]   CI (99.9%): [2039.196, 2274.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   106744.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (106744.013, 106744.014, 106744.014), stdev = 0.001
[info]   CI (99.9%): [106744.012, 106744.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2153.586 ±(99.9%) 1131.327 MB/sec [Average]
[info]   (min, avg, max) = (2014.713, 2153.586, 2679.068), stdev = 293.802
[info]   CI (99.9%): [1022.258, 3284.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   106552.028 ±(99.9%) 54627.932 B/op [Average]
[info]   (min, avg, max) = (99261.267, 106552.028, 131768.189), stdev = 14186.700
[info]   CI (99.9%): [51924.096, 161179.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.502 ±(99.9%) 4.487 B/op [Average]
[info]   (min, avg, max) = (2.044, 3.502, 5.132), stdev = 1.165
[info]   CI (99.9%): [≈ 0, 7.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.88% complete, ETA 01:42:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16450.204 ops/s
[info] # Warmup Iteration   2: 28058.741 ops/s
[info] # Warmup Iteration   3: 28840.235 ops/s
[info] # Warmup Iteration   4: 28762.182 ops/s
[info] # Warmup Iteration   5: 29000.740 ops/s
[info] Iteration   1: 28916.926 ops/s
[info]                  ·gc.alloc.rate:               1685.490 MB/sec
[info]                  ·gc.alloc.rate.norm:          91736.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1336.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 72766.918 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 28550.490 ops/s
[info]                  ·gc.alloc.rate:                   1664.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              91736.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2009.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110733.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.885 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 28957.412 ops/s
[info]                  ·gc.alloc.rate:                   1687.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              91736.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72953.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.526 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 29021.403 ops/s
[info]                  ·gc.alloc.rate:               1691.925 MB/sec
[info]                  ·gc.alloc.rate.norm:          91736.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2018.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 109441.914 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 29102.220 ops/s
[info]                  ·gc.alloc.rate:                   1696.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              91736.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72878.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.252 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala":
[info]   28909.690 ±(99.9%) 818.888 ops/s [Average]
[info]   (min, avg, max) = (28550.490, 28909.690, 29102.220), stdev = 212.663
[info]   CI (99.9%): [28090.802, 29728.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1685.237 ±(99.9%) 47.058 MB/sec [Average]
[info]   (min, avg, max) = (1664.641, 1685.237, 1696.259), stdev = 12.221
[info]   CI (99.9%): [1638.179, 1732.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   91736.015 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (91736.015, 91736.015, 91736.016), stdev = 0.001
[info]   CI (99.9%): [91736.013, 91736.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1610.933 ±(99.9%) 1416.689 MB/sec [Average]
[info]   (min, avg, max) = (1336.966, 1610.933, 2018.482), stdev = 367.910
[info]   CI (99.9%): [194.244, 3027.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   87754.741 ±(99.9%) 78522.743 B/op [Average]
[info]   (min, avg, max) = (72766.918, 87754.741, 110733.004), stdev = 20392.107
[info]   CI (99.9%): [9231.997, 166277.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.732 ±(99.9%) 11.492 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.732, 6.885), stdev = 2.984
[info]   CI (99.9%): [≈ 0, 14.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 10.12% complete, ETA 01:42:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32792.775 ops/s
[info] # Warmup Iteration   2: 37014.364 ops/s
[info] # Warmup Iteration   3: 37477.894 ops/s
[info] # Warmup Iteration   4: 37690.027 ops/s
[info] # Warmup Iteration   5: 37411.469 ops/s
[info] Iteration   1: 37323.050 ops/s
[info]                  ·gc.alloc.rate:                   1720.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              72528.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56768.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.878 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 37588.386 ops/s
[info]                  ·gc.alloc.rate:                   1732.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              72528.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84666.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.230 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 37463.185 ops/s
[info]                  ·gc.alloc.rate:                   1726.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              72528.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56697.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.624 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 37594.150 ops/s
[info]                  ·gc.alloc.rate:                   1732.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              72528.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84848.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.871 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 37654.466 ops/s
[info]                  ·gc.alloc.rate:                   1735.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              72528.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56548.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.870 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala":
[info]   37524.647 ±(99.9%) 509.994 ops/s [Average]
[info]   (min, avg, max) = (37323.050, 37524.647, 37654.466), stdev = 132.444
[info]   CI (99.9%): [37014.654, 38034.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1729.356 ±(99.9%) 22.690 MB/sec [Average]
[info]   (min, avg, max) = (1720.520, 1729.356, 1735.229), stdev = 5.893
[info]   CI (99.9%): [1706.666, 1752.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   72528.012 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (72528.011, 72528.012, 72528.012), stdev = 0.001
[info]   CI (99.9%): [72528.010, 72528.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1619.600 ±(99.9%) 1423.013 MB/sec [Average]
[info]   (min, avg, max) = (1346.673, 1619.600, 2026.742), stdev = 369.552
[info]   CI (99.9%): [196.587, 3042.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   67905.869 ±(99.9%) 59236.650 B/op [Average]
[info]   (min, avg, max) = (56548.096, 67905.869, 84848.204), stdev = 15383.570
[info]   CI (99.9%): [8669.219, 127142.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.125), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.095 ±(99.9%) 7.353 B/op [Average]
[info]   (min, avg, max) = (0.870, 2.095, 5.230), stdev = 1.910
[info]   CI (99.9%): [≈ 0, 9.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 10.35% complete, ETA 01:41:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31884.293 ops/s
[info] # Warmup Iteration   2: 37260.175 ops/s
[info] # Warmup Iteration   3: 37598.779 ops/s
[info] # Warmup Iteration   4: 37499.802 ops/s
[info] # Warmup Iteration   5: 37098.068 ops/s
[info] Iteration   1: 37553.825 ops/s
[info]                  ·gc.alloc.rate:               1665.834 MB/sec
[info]                  ·gc.alloc.rate.norm:          69784.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56407.024 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 37326.733 ops/s
[info]                  ·gc.alloc.rate:                   1655.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              69784.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85204.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.144 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 36742.146 ops/s
[info]                  ·gc.alloc.rate:                   1629.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              69784.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57783.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.567 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 37161.600 ops/s
[info]                  ·gc.alloc.rate:                   1647.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              69784.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85808.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.763 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 37401.911 ops/s
[info]                  ·gc.alloc.rate:                   1658.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              69784.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56900.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.628 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   37237.243 ±(99.9%) 1196.477 ops/s [Average]
[info]   (min, avg, max) = (36742.146, 37237.243, 37553.825), stdev = 310.721
[info]   CI (99.9%): [36040.766, 38433.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1651.385 ±(99.9%) 53.964 MB/sec [Average]
[info]   (min, avg, max) = (1629.139, 1651.385, 1665.834), stdev = 14.014
[info]   CI (99.9%): [1597.421, 1705.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   69784.012 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (69784.012, 69784.012, 69784.012), stdev = 0.001
[info]   CI (99.9%): [69784.011, 69784.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1619.109 ±(99.9%) 1422.985 MB/sec [Average]
[info]   (min, avg, max) = (1346.509, 1619.109, 2026.117), stdev = 369.545
[info]   CI (99.9%): [196.125, 3042.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   68420.884 ±(99.9%) 60093.986 B/op [Average]
[info]   (min, avg, max) = (56407.024, 68420.884, 85808.483), stdev = 15606.217
[info]   CI (99.9%): [8326.898, 128514.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.208 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.146), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.820 ±(99.9%) 8.763 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.820, 6.144), stdev = 2.276
[info]   CI (99.9%): [≈ 0, 11.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 10.59% complete, ETA 01:41:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 272757.363 ops/s
[info] # Warmup Iteration   2: 321943.574 ops/s
[info] # Warmup Iteration   3: 330796.066 ops/s
[info] # Warmup Iteration   4: 329371.073 ops/s
[info] # Warmup Iteration   5: 329649.920 ops/s
[info] Iteration   1: 327977.719 ops/s
[info]                  ·gc.alloc.rate:                   1813.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9698.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.400 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 329140.566 ops/s
[info]                  ·gc.alloc.rate:                   1820.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6450.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 330023.299 ops/s
[info]                  ·gc.alloc.rate:                   1825.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9660.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.496 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 330908.091 ops/s
[info]                  ·gc.alloc.rate:                   1830.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9650.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 328945.054 ops/s
[info]                  ·gc.alloc.rate:                   1819.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9720.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce":
[info]   329398.946 ±(99.9%) 4287.896 ops/s [Average]
[info]   (min, avg, max) = (327977.719, 329398.946, 330908.091), stdev = 1113.553
[info]   CI (99.9%): [325111.050, 333686.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1821.808 ±(99.9%) 23.980 MB/sec [Average]
[info]   (min, avg, max) = (1813.906, 1821.808, 1830.031), stdev = 6.228
[info]   CI (99.9%): [1797.828, 1845.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   8704.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8704.001, 8704.001, 8704.001), stdev = 0.001
[info]   CI (99.9%): [8704.001, 8704.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1891.446 ±(99.9%) 1167.945 MB/sec [Average]
[info]   (min, avg, max) = (1348.910, 1891.446, 2031.673), stdev = 303.312
[info]   CI (99.9%): [723.501, 3059.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9036.209 ±(99.9%) 5567.494 B/op [Average]
[info]   (min, avg, max) = (6450.276, 9036.209, 9720.871), stdev = 1445.860
[info]   CI (99.9%): [3468.715, 14603.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.259 ±(99.9%) 0.696 B/op [Average]
[info]   (min, avg, max) = (0.099, 0.259, 0.496), stdev = 0.181
[info]   CI (99.9%): [≈ 0, 0.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 10.82% complete, ETA 01:41:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9146.505 ops/s
[info] # Warmup Iteration   2: 1407199.358 ops/s
[info] # Warmup Iteration   3: 1415884.605 ops/s
[info] # Warmup Iteration   4: 1419915.586 ops/s
[info] # Warmup Iteration   5: 1421380.294 ops/s
[info] Iteration   1: 1421582.464 ops/s
[info]                  ·gc.alloc.rate:               448.010 MB/sec
[info]                  ·gc.alloc.rate.norm:          496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 566.403 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1420766.879 ops/s
[info]                  ·gc.alloc.rate:               447.851 MB/sec
[info]                  ·gc.alloc.rate.norm:          496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 566.725 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1372674.242 ops/s
[info]                  ·gc.alloc.rate:      432.685 MB/sec
[info]                  ·gc.alloc.rate.norm: 496.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1373065.087 ops/s
[info]                  ·gc.alloc.rate:               432.721 MB/sec
[info]                  ·gc.alloc.rate.norm:          496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 760.867 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1372298.882 ops/s
[info]                  ·gc.alloc.rate:               432.471 MB/sec
[info]                  ·gc.alloc.rate.norm:          496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 761.342 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava":
[info]   1392077.511 ±(99.9%) 102291.966 ops/s [Average]
[info]   (min, avg, max) = (1372298.882, 1392077.511, 1421582.464), stdev = 26564.899
[info]   CI (99.9%): [1289785.545, 1494369.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   438.748 ±(99.9%) 32.282 MB/sec [Average]
[info]   (min, avg, max) = (432.471, 438.748, 448.010), stdev = 8.384
[info]   CI (99.9%): [406.466, 471.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   496.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (496.000, 496.000, 496.000), stdev = 0.001
[info]   CI (99.9%): [496.000, 496.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   470.187 ±(99.9%) 1053.657 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 470.187, 663.827), stdev = 273.631
[info]   CI (99.9%): [≈ 0, 1523.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   531.067 ±(99.9%) 1202.960 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 531.067, 761.342), stdev = 312.405
[info]   CI (99.9%): [≈ 0, 1734.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.06% complete, ETA 01:41:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 461131.144 ops/s
[info] # Warmup Iteration   2: 672360.637 ops/s
[info] # Warmup Iteration   3: 663662.293 ops/s
[info] # Warmup Iteration   4: 676472.702 ops/s
[info] # Warmup Iteration   5: 680195.674 ops/s
[info] Iteration   1: 679621.240 ops/s
[info]                  ·gc.alloc.rate:                   563.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1184.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 681080.052 ops/s
[info]                  ·gc.alloc.rate:                   564.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1543.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.089 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.826 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 682159.391 ops/s
[info]                  ·gc.alloc.rate:                   565.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1540.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 683607.519 ops/s
[info]                  ·gc.alloc.rate:      566.373 MB/sec
[info]                  ·gc.alloc.rate.norm: 1304.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 682625.599 ops/s
[info]                  ·gc.alloc.rate:               565.566 MB/sec
[info]                  ·gc.alloc.rate.norm:          1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1538.936 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala":
[info]   681818.760 ±(99.9%) 5884.517 ops/s [Average]
[info]   (min, avg, max) = (679621.240, 681818.760, 683607.519), stdev = 1528.190
[info]   CI (99.9%): [675934.243, 687703.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   564.960 ±(99.9%) 4.758 MB/sec [Average]
[info]   (min, avg, max) = (563.081, 564.960, 566.373), stdev = 1.236
[info]   CI (99.9%): [560.202, 569.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1304.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1304.001, 1304.001, 1304.001), stdev = 0.001
[info]   CI (99.9%): [1304.001, 1304.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   503.002 ±(99.9%) 1113.644 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 503.002, 668.136), stdev = 289.210
[info]   CI (99.9%): [≈ 0, 1616.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1161.529 ±(99.9%) 2569.871 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1161.529, 1543.205), stdev = 667.387
[info]   CI (99.9%): [≈ 0, 3731.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.432 ±(99.9%) 3.570 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.432, 2.089), stdev = 0.927
[info]   CI (99.9%): [≈ 0, 4.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.997 ±(99.9%) 8.246 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.997, 4.826), stdev = 2.142
[info]   CI (99.9%): [≈ 0, 9.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.29% complete, ETA 01:40:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1670345.292 ops/s
[info] # Warmup Iteration   2: 1734130.996 ops/s
[info] # Warmup Iteration   3: 1744835.646 ops/s
[info] # Warmup Iteration   4: 1711108.408 ops/s
[info] # Warmup Iteration   5: 1706841.523 ops/s
[info] Iteration   1: 1708477.608 ops/s
[info]                  ·gc.alloc.rate:                   329.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     471.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1750160.922 ops/s
[info]                  ·gc.alloc.rate:      338.070 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1746299.256 ops/s
[info]                  ·gc.alloc.rate:               337.317 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 461.094 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1744079.526 ops/s
[info]                  ·gc.alloc.rate:               336.875 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 461.669 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1749838.066 ops/s
[info]                  ·gc.alloc.rate:      338.065 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala":
[info]   1739771.076 ±(99.9%) 68063.717 ops/s [Average]
[info]   (min, avg, max) = (1708477.608, 1739771.076, 1750160.922), stdev = 17675.931
[info]   CI (99.9%): [1671707.359, 1807834.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   336.065 ±(99.9%) 13.205 MB/sec [Average]
[info]   (min, avg, max) = (329.999, 336.065, 338.070), stdev = 3.429
[info]   CI (99.9%): [322.860, 349.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.968 ±(99.9%) 1079.037 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.968, 511.627), stdev = 280.222
[info]   CI (99.9%): [≈ 0, 1386.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   278.815 ±(99.9%) 980.199 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 278.815, 471.313), stdev = 254.555
[info]   CI (99.9%): [≈ 0, 1259.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.007 ±(99.9%) 0.062 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.036), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.033), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 11.53% complete, ETA 01:40:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68384.887 ops/s
[info] # Warmup Iteration   2: 106124.439 ops/s
[info] # Warmup Iteration   3: 108887.071 ops/s
[info] # Warmup Iteration   4: 109133.840 ops/s
[info] # Warmup Iteration   5: 109311.078 ops/s
[info] Iteration   1: 110206.266 ops/s
[info]                  ·gc.alloc.rate:                   4004.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              57176.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4065.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58050.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.189 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 109626.359 ops/s
[info]                  ·gc.alloc.rate:                   3983.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              57176.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4074.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58481.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.793 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 108890.144 ops/s
[info]                  ·gc.alloc.rate:                   3955.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              57176.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4079.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58964.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.204 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 110124.922 ops/s
[info]                  ·gc.alloc.rate:                   4000.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              57176.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4084.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58367.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.893 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 109345.211 ops/s
[info]                  ·gc.alloc.rate:                   3972.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              57176.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4086.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58810.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.599 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson":
[info]   109638.580 ±(99.9%) 2113.620 ops/s [Average]
[info]   (min, avg, max) = (108890.144, 109638.580, 110206.266), stdev = 548.900
[info]   CI (99.9%): [107524.960, 111752.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3983.327 ±(99.9%) 77.359 MB/sec [Average]
[info]   (min, avg, max) = (3955.771, 3983.327, 4004.217), stdev = 20.090
[info]   CI (99.9%): [3905.968, 4060.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   57176.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (57176.004, 57176.004, 57176.004), stdev = 0.001
[info]   CI (99.9%): [57176.004, 57176.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4077.911 ±(99.9%) 31.877 MB/sec [Average]
[info]   (min, avg, max) = (4065.441, 4077.911, 4086.054), stdev = 8.278
[info]   CI (99.9%): [4046.034, 4109.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   58535.040 ±(99.9%) 1396.900 B/op [Average]
[info]   (min, avg, max) = (58050.215, 58535.040, 58964.587), stdev = 362.771
[info]   CI (99.9%): [57138.140, 59931.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.125), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.136 ±(99.9%) 1.708 B/op [Average]
[info]   (min, avg, max) = (0.599, 1.136, 1.793), stdev = 0.443
[info]   CI (99.9%): [≈ 0, 2.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 11.76% complete, ETA 01:40:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 242558.377 ops/s
[info] # Warmup Iteration   2: 307425.992 ops/s
[info] # Warmup Iteration   3: 313590.873 ops/s
[info] # Warmup Iteration   4: 310347.732 ops/s
[info] # Warmup Iteration   5: 320590.562 ops/s
[info] Iteration   1: 320413.735 ops/s
[info]                  ·gc.alloc.rate:               1094.620 MB/sec
[info]                  ·gc.alloc.rate.norm:          5376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3291.698 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 317592.833 ops/s
[info]                  ·gc.alloc.rate:                   1084.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              5376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6642.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 320636.528 ops/s
[info]                  ·gc.alloc.rate:                   1095.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              5376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6585.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.409 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 320528.507 ops/s
[info]                  ·gc.alloc.rate:               1094.860 MB/sec
[info]                  ·gc.alloc.rate.norm:          5376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3298.643 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 319130.093 ops/s
[info]                  ·gc.alloc.rate:                   1090.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              5376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6629.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce":
[info]   319660.339 ±(99.9%) 5031.691 ops/s [Average]
[info]   (min, avg, max) = (317592.833, 319660.339, 320636.528), stdev = 1306.714
[info]   CI (99.9%): [314628.648, 324692.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1091.913 ±(99.9%) 17.281 MB/sec [Average]
[info]   (min, avg, max) = (1084.845, 1091.913, 1095.228), stdev = 4.488
[info]   CI (99.9%): [1074.633, 1109.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5376.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5376.001, 5376.001, 5376.001), stdev = 0.001
[info]   CI (99.9%): [5376.001, 5376.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1073.622 ±(99.9%) 1415.246 MB/sec [Average]
[info]   (min, avg, max) = (670.230, 1073.622, 1344.165), stdev = 367.535
[info]   CI (99.9%): [≈ 0, 2488.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5289.439 ±(99.9%) 7010.611 B/op [Average]
[info]   (min, avg, max) = (3291.698, 5289.439, 6642.031), stdev = 1820.633
[info]   CI (99.9%): [≈ 0, 12300.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.164 ±(99.9%) 0.717 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.164, 0.409), stdev = 0.186
[info]   CI (99.9%): [≈ 0, 0.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 12.00% complete, ETA 01:40:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32278.802 ops/s
[info] # Warmup Iteration   2: 1511100.671 ops/s
[info] # Warmup Iteration   3: 1536283.672 ops/s
[info] # Warmup Iteration   4: 1490437.190 ops/s
[info] # Warmup Iteration   5: 1516274.627 ops/s
[info] Iteration   1: 1521098.967 ops/s
[info]                  ·gc.alloc.rate:                   703.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     686.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1516942.044 ops/s
[info]                  ·gc.alloc.rate:               701.691 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 688.735 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1515713.067 ops/s
[info]                  ·gc.alloc.rate:               701.094 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 690.664 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1516962.754 ops/s
[info]                  ·gc.alloc.rate:                   701.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     690.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1517539.679 ops/s
[info]                  ·gc.alloc.rate:                   702.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     691.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava":
[info]   1517651.302 ±(99.9%) 7852.093 ops/s [Average]
[info]   (min, avg, max) = (1515713.067, 1517651.302, 1521098.967), stdev = 2039.164
[info]   CI (99.9%): [1509799.209, 1525503.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   702.022 ±(99.9%) 3.644 MB/sec [Average]
[info]   (min, avg, max) = (701.094, 702.022, 703.599), stdev = 0.946
[info]   CI (99.9%): [698.377, 705.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   728.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (728.000, 728.000, 728.000), stdev = 0.001
[info]   CI (99.9%): [728.000, 728.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   664.904 ±(99.9%) 4.427 MB/sec [Average]
[info]   (min, avg, max) = (663.804, 664.904, 666.591), stdev = 1.150
[info]   CI (99.9%): [660.477, 669.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   689.510 ±(99.9%) 6.791 B/op [Average]
[info]   (min, avg, max) = (686.825, 689.510, 691.228), stdev = 1.764
[info]   CI (99.9%): [682.720, 696.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.061 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.037), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.063 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.039), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.24% complete, ETA 01:39:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 719763.144 ops/s
[info] # Warmup Iteration   2: 797921.660 ops/s
[info] # Warmup Iteration   3: 911040.200 ops/s
[info] # Warmup Iteration   4: 911767.468 ops/s
[info] # Warmup Iteration   5: 908693.599 ops/s
[info] Iteration   1: 913344.727 ops/s
[info]                  ·gc.alloc.rate:                   645.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              1112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1150.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.527 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 914696.852 ops/s
[info]                  ·gc.alloc.rate:      646.362 MB/sec
[info]                  ·gc.alloc.rate.norm: 1112.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 909605.546 ops/s
[info]                  ·gc.alloc.rate:                   642.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              1112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1155.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 909600.124 ops/s
[info]                  ·gc.alloc.rate:                   642.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              1112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1156.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 935383.630 ops/s
[info]                  ·gc.alloc.rate:               660.863 MB/sec
[info]                  ·gc.alloc.rate.norm:          1112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1124.226 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala":
[info]   916526.176 ±(99.9%) 41514.556 ops/s [Average]
[info]   (min, avg, max) = (909600.124, 916526.176, 935383.630), stdev = 10781.198
[info]   CI (99.9%): [875011.620, 958040.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   647.591 ±(99.9%) 29.260 MB/sec [Average]
[info]   (min, avg, max) = (642.655, 647.591, 660.863), stdev = 7.599
[info]   CI (99.9%): [618.331, 676.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1112.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1112.000, 1112.000, 1112.001), stdev = 0.001
[info]   CI (99.9%): [1112.000, 1112.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   534.387 ±(99.9%) 1150.309 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 534.387, 668.129), stdev = 298.732
[info]   CI (99.9%): [≈ 0, 1684.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   917.302 ±(99.9%) 1975.205 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 917.302, 1156.052), stdev = 512.955
[info]   CI (99.9%): [≈ 0, 2892.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.422 ±(99.9%) 3.499 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.422, 2.047), stdev = 0.909
[info]   CI (99.9%): [≈ 0, 3.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.727 ±(99.9%) 6.028 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.727, 3.527), stdev = 1.566
[info]   CI (99.9%): [≈ 0, 6.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.47% complete, ETA 01:39:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2037394.328 ops/s
[info] # Warmup Iteration   2: 2268371.935 ops/s
[info] # Warmup Iteration   3: 2569334.372 ops/s
[info] # Warmup Iteration   4: 2633588.336 ops/s
[info] # Warmup Iteration   5: 2638324.563 ops/s
[info] Iteration   1: 2632779.478 ops/s
[info]                  ·gc.alloc.rate:                   1217.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     803.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2551414.608 ops/s
[info]                  ·gc.alloc.rate:                   1180.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2615101.211 ops/s
[info]                  ·gc.alloc.rate:                   1210.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     810.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2629644.908 ops/s
[info]                  ·gc.alloc.rate:               1216.397 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 806.148 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2562008.258 ops/s
[info]                  ·gc.alloc.rate:                   1185.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     413.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala":
[info]   2598189.693 ±(99.9%) 148747.640 ops/s [Average]
[info]   (min, avg, max) = (2551414.608, 2598189.693, 2632779.478), stdev = 38629.290
[info]   CI (99.9%): [2449442.053, 2746937.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1201.999 ±(99.9%) 68.807 MB/sec [Average]
[info]   (min, avg, max) = (1180.200, 1201.999, 1217.856), stdev = 17.869
[info]   CI (99.9%): [1133.192, 1270.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   728.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (728.000, 728.000, 728.000), stdev = 0.001
[info]   CI (99.9%): [728.000, 728.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1211.375 ±(99.9%) 1156.803 MB/sec [Average]
[info]   (min, avg, max) = (673.974, 1211.375, 1346.973), stdev = 300.418
[info]   CI (99.9%): [54.572, 2368.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   732.680 ±(99.9%) 687.281 B/op [Average]
[info]   (min, avg, max) = (413.923, 732.680, 829.664), stdev = 178.485
[info]   CI (99.9%): [45.400, 1419.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.051), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 12.71% complete, ETA 01:39:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2053388.959 ops/s
[info] # Warmup Iteration   2: 2263429.799 ops/s
[info] # Warmup Iteration   3: 2268321.135 ops/s
[info] # Warmup Iteration   4: 2268440.519 ops/s
[info] # Warmup Iteration   5: 2268865.254 ops/s
[info] Iteration   1: 2268611.381 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2268317.271 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2262452.463 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2269034.088 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2267824.279 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2267247.897 ±(99.9%) 10460.991 ops/s [Average]
[info]   (min, avg, max) = (2262452.463, 2267247.897, 2269034.088), stdev = 2716.686
[info]   CI (99.9%): [2256786.906, 2277708.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 12.94% complete, ETA 01:38:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 386153.503 ops/s
[info] # Warmup Iteration   2: 497992.216 ops/s
[info] # Warmup Iteration   3: 514086.750 ops/s
[info] # Warmup Iteration   4: 505374.866 ops/s
[info] # Warmup Iteration   5: 506778.224 ops/s
[info] Iteration   1: 513093.341 ops/s
[info]                  ·gc.alloc.rate:               599.902 MB/sec
[info]                  ·gc.alloc.rate.norm:          1840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1569.232 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 513109.899 ops/s
[info]                  ·gc.alloc.rate:                   599.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              1840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2054.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.137 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 509228.023 ops/s
[info]                  ·gc.alloc.rate:                   595.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              1840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2070.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 508058.177 ops/s
[info]                  ·gc.alloc.rate:                   593.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              1840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2073.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 510207.193 ops/s
[info]                  ·gc.alloc.rate:               596.614 MB/sec
[info]                  ·gc.alloc.rate.norm:          1840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2065.210 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson":
[info]   510739.327 ±(99.9%) 8805.431 ops/s [Average]
[info]   (min, avg, max) = (508058.177, 510739.327, 513109.899), stdev = 2286.742
[info]   CI (99.9%): [501933.896, 519544.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   597.180 ±(99.9%) 10.289 MB/sec [Average]
[info]   (min, avg, max) = (593.971, 597.180, 599.940), stdev = 2.672
[info]   CI (99.9%): [586.891, 607.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1840.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1840.001, 1840.001, 1840.001), stdev = 0.001
[info]   CI (99.9%): [1840.001, 1840.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   638.111 ±(99.9%) 272.278 MB/sec [Average]
[info]   (min, avg, max) = (511.622, 638.111, 669.960), stdev = 70.710
[info]   CI (99.9%): [365.833, 910.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1966.588 ±(99.9%) 855.797 B/op [Average]
[info]   (min, avg, max) = (1569.232, 1966.588, 2073.834), stdev = 222.248
[info]   CI (99.9%): [1110.791, 2822.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.417 ±(99.9%) 3.411 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.417, 2.001), stdev = 0.886
[info]   CI (99.9%): [≈ 0, 3.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.279 ±(99.9%) 10.460 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.279, 6.137), stdev = 2.716
[info]   CI (99.9%): [≈ 0, 11.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 13.18% complete, ETA 01:38:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 132010.430 ops/s
[info] # Warmup Iteration   2: 154615.403 ops/s
[info] # Warmup Iteration   3: 155902.632 ops/s
[info] # Warmup Iteration   4: 158344.754 ops/s
[info] # Warmup Iteration   5: 156962.604 ops/s
[info] Iteration   1: 155575.898 ops/s
[info]                  ·gc.alloc.rate:                   1914.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              19368.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20445.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 158089.669 ops/s
[info]                  ·gc.alloc.rate:                   1945.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              19368.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20160.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.414 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 158230.518 ops/s
[info]                  ·gc.alloc.rate:                   1947.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              19368.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20169.383 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.414 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 157107.055 ops/s
[info]                  ·gc.alloc.rate:                   1933.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              19368.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13560.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.417 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 158461.237 ops/s
[info]                  ·gc.alloc.rate:                   1949.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              19368.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20189.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.827 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce":
[info]   157492.876 ±(99.9%) 4581.159 ops/s [Average]
[info]   (min, avg, max) = (155575.898, 157492.876, 158461.237), stdev = 1189.713
[info]   CI (99.9%): [152911.716, 162074.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate":
[info]   1938.143 ±(99.9%) 55.826 MB/sec [Average]
[info]   (min, avg, max) = (1914.816, 1938.143, 1949.922), stdev = 14.498
[info]   CI (99.9%): [1882.317, 1993.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   19368.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (19368.003, 19368.003, 19368.003), stdev = 0.001
[info]   CI (99.9%): [19368.002, 19368.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1892.077 ±(99.9%) 1159.219 MB/sec [Average]
[info]   (min, avg, max) = (1353.600, 1892.077, 2032.588), stdev = 301.046
[info]   CI (99.9%): [732.858, 3051.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   18905.046 ±(99.9%) 11514.348 B/op [Average]
[info]   (min, avg, max) = (13560.150, 18905.046, 20445.884), stdev = 2990.240
[info]   CI (99.9%): [7390.698, 30419.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.625 ±(99.9%) 1.149 B/op [Average]
[info]   (min, avg, max) = (0.414, 0.625, 1.053), stdev = 0.298
[info]   CI (99.9%): [≈ 0, 1.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.41% complete, ETA 01:38:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 300804.026 ops/s
[info] # Warmup Iteration   2: 424320.990 ops/s
[info] # Warmup Iteration   3: 429866.938 ops/s
[info] # Warmup Iteration   4: 418857.868 ops/s
[info] # Warmup Iteration   5: 417610.663 ops/s
[info] Iteration   1: 418110.307 ops/s
[info]                  ·gc.alloc.rate:               346.413 MB/sec
[info]                  ·gc.alloc.rate.norm:          1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1925.787 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 420060.474 ops/s
[info]                  ·gc.alloc.rate:      348.041 MB/sec
[info]                  ·gc.alloc.rate.norm: 1304.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 418923.821 ops/s
[info]                  ·gc.alloc.rate:               347.096 MB/sec
[info]                  ·gc.alloc.rate.norm:          1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1922.046 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 416223.755 ops/s
[info]                  ·gc.alloc.rate:                   344.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1934.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 430098.832 ops/s
[info]                  ·gc.alloc.rate:      356.384 MB/sec
[info]                  ·gc.alloc.rate.norm: 1304.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala":
[info]   420683.438 ±(99.9%) 20971.321 ops/s [Average]
[info]   (min, avg, max) = (416223.755, 420683.438, 430098.832), stdev = 5446.186
[info]   CI (99.9%): [399712.116, 441654.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   348.556 ±(99.9%) 17.435 MB/sec [Average]
[info]   (min, avg, max) = (344.848, 348.556, 356.384), stdev = 4.528
[info]   CI (99.9%): [331.121, 365.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1304.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1304.001, 1304.001, 1304.001), stdev = 0.001
[info]   CI (99.9%): [1304.001, 1304.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   306.954 ±(99.9%) 1078.987 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.954, 511.606), stdev = 280.209
[info]   CI (99.9%): [≈ 0, 1385.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1156.455 ±(99.9%) 4065.139 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1156.455, 1934.442), stdev = 1055.704
[info]   CI (99.9%): [≈ 0, 5221.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.002 ±(99.9%) 0.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.068 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.039), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.65% complete, ETA 01:38:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 934757.798 ops/s
[info] # Warmup Iteration   2: 1009624.351 ops/s
[info] # Warmup Iteration   3: 1006970.192 ops/s
[info] # Warmup Iteration   4: 1014233.213 ops/s
[info] # Warmup Iteration   5: 1010745.218 ops/s
[info] Iteration   1: 1007894.267 ops/s
[info]                  ·gc.alloc.rate:                   194.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     798.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.678 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.181 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1011160.189 ops/s
[info]                  ·gc.alloc.rate:      195.310 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1002582.874 ops/s
[info]                  ·gc.alloc.rate:               193.656 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 803.111 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1013614.915 ops/s
[info]                  ·gc.alloc.rate:      195.786 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1013468.805 ops/s
[info]                  ·gc.alloc.rate:      195.754 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala":
[info]   1009744.210 ±(99.9%) 17809.694 ops/s [Average]
[info]   (min, avg, max) = (1002582.874, 1009744.210, 1013614.915), stdev = 4625.121
[info]   CI (99.9%): [991934.515, 1027553.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   195.037 ±(99.9%) 3.437 MB/sec [Average]
[info]   (min, avg, max) = (193.656, 195.037, 195.786), stdev = 0.893
[info]   CI (99.9%): [191.599, 198.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   204.637 ±(99.9%) 1078.994 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.637, 511.601), stdev = 280.211
[info]   CI (99.9%): [≈ 0, 1283.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   320.397 ±(99.9%) 1689.370 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 320.397, 803.111), stdev = 438.724
[info]   CI (99.9%): [≈ 0, 2009.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.536 ±(99.9%) 4.611 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.536, 2.678), stdev = 1.197
[info]   CI (99.9%): [≈ 0, 5.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.836 ±(99.9%) 7.200 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.836, 4.181), stdev = 1.870
[info]   CI (99.9%): [≈ 0, 8.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 13.88% complete, ETA 01:37:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51061.295 ops/s
[info] # Warmup Iteration   2: 83165.111 ops/s
[info] # Warmup Iteration   3: 83855.426 ops/s
[info] # Warmup Iteration   4: 82764.336 ops/s
[info] # Warmup Iteration   5: 84396.021 ops/s
[info] Iteration   1: 83706.009 ops/s
[info]                  ·gc.alloc.rate:                   3454.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              64952.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3379.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63547.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.957 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 83239.166 ops/s
[info]                  ·gc.alloc.rate:                   3436.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              64952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3390.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64081.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.574 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 84047.184 ops/s
[info]                  ·gc.alloc.rate:                   3468.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              64952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3395.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63575.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.169 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 83197.664 ops/s
[info]                  ·gc.alloc.rate:                   3433.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              64952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3399.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64305.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.788 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 83967.309 ops/s
[info]                  ·gc.alloc.rate:                   3466.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              64952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3403.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63777.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.561 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson":
[info]   83631.466 ±(99.9%) 1532.115 ops/s [Average]
[info]   (min, avg, max) = (83197.664, 83631.466, 84047.184), stdev = 397.885
[info]   CI (99.9%): [82099.351, 85163.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3452.003 ±(99.9%) 62.789 MB/sec [Average]
[info]   (min, avg, max) = (3433.484, 3452.003, 3468.651), stdev = 16.306
[info]   CI (99.9%): [3389.214, 3514.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   64952.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (64952.005, 64952.005, 64952.006), stdev = 0.001
[info]   CI (99.9%): [64952.005, 64952.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3393.770 ±(99.9%) 35.324 MB/sec [Average]
[info]   (min, avg, max) = (3379.787, 3393.770, 3403.777), stdev = 9.174
[info]   CI (99.9%): [3358.446, 3429.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   63857.361 ±(99.9%) 1265.551 B/op [Average]
[info]   (min, avg, max) = (63547.593, 63857.361, 64305.000), stdev = 328.660
[info]   CI (99.9%): [62591.810, 65122.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.410 ±(99.9%) 1.716 B/op [Average]
[info]   (min, avg, max) = (0.788, 1.410, 1.957), stdev = 0.446
[info]   CI (99.9%): [≈ 0, 3.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 14.12% complete, ETA 01:37:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 186103.816 ops/s
[info] # Warmup Iteration   2: 240380.920 ops/s
[info] # Warmup Iteration   3: 238763.871 ops/s
[info] # Warmup Iteration   4: 232643.500 ops/s
[info] # Warmup Iteration   5: 236425.405 ops/s
[info] Iteration   1: 236312.061 ops/s
[info]                  ·gc.alloc.rate:                   1303.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              8680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8930.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.277 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 235267.542 ops/s
[info]                  ·gc.alloc.rate:                   1297.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              8680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8974.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.418 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 236214.439 ops/s
[info]                  ·gc.alloc.rate:                   1302.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              8680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8952.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.416 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 239441.226 ops/s
[info]                  ·gc.alloc.rate:                   1320.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              8680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8840.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.410 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 239651.403 ops/s
[info]                  ·gc.alloc.rate:                   1321.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              8680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8845.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce":
[info]   237377.334 ±(99.9%) 7789.680 ops/s [Average]
[info]   (min, avg, max) = (235267.542, 237377.334, 239651.403), stdev = 2022.955
[info]   CI (99.9%): [229587.654, 245167.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1309.148 ±(99.9%) 42.931 MB/sec [Average]
[info]   (min, avg, max) = (1297.604, 1309.148, 1321.709), stdev = 11.149
[info]   CI (99.9%): [1266.217, 1352.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   8680.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8680.002, 8680.002, 8680.002), stdev = 0.001
[info]   CI (99.9%): [8680.002, 8680.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1343.583 ±(99.9%) 9.306 MB/sec [Average]
[info]   (min, avg, max) = (1340.874, 1343.583, 1346.847), stdev = 2.417
[info]   CI (99.9%): [1334.277, 1352.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8908.735 ±(99.9%) 239.584 B/op [Average]
[info]   (min, avg, max) = (8840.447, 8908.735, 8974.947), stdev = 62.219
[info]   CI (99.9%): [8669.151, 9148.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.010, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.359 ±(99.9%) 0.294 B/op [Average]
[info]   (min, avg, max) = (0.273, 0.359, 0.418), stdev = 0.076
[info]   CI (99.9%): [0.065, 0.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.35% complete, ETA 01:37:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1159440.642 ops/s
[info] # Warmup Iteration   2: 1575625.710 ops/s
[info] # Warmup Iteration   3: 1613983.589 ops/s
[info] # Warmup Iteration   4: 1600587.331 ops/s
[info] # Warmup Iteration   5: 1643504.616 ops/s
[info] Iteration   1: 1659504.098 ops/s
[info]                  ·gc.alloc.rate:                   852.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     633.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1661214.994 ops/s
[info]                  ·gc.alloc.rate:               852.857 MB/sec
[info]                  ·gc.alloc.rate.norm:          808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 633.026 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1596933.602 ops/s
[info]                  ·gc.alloc.rate:                   819.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1317.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1653298.925 ops/s
[info]                  ·gc.alloc.rate:               848.773 MB/sec
[info]                  ·gc.alloc.rate.norm:          808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 636.354 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1654437.103 ops/s
[info]                  ·gc.alloc.rate:               849.566 MB/sec
[info]                  ·gc.alloc.rate.norm:          808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 636.539 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala":
[info]   1645077.744 ±(99.9%) 104422.307 ops/s [Average]
[info]   (min, avg, max) = (1596933.602, 1645077.744, 1661214.994), stdev = 27118.141
[info]   CI (99.9%): [1540655.438, 1749500.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   844.640 ±(99.9%) 53.765 MB/sec [Average]
[info]   (min, avg, max) = (819.850, 844.640, 852.857), stdev = 13.963
[info]   CI (99.9%): [790.875, 898.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   808.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (808.000, 808.000, 808.000), stdev = 0.001
[info]   CI (99.9%): [808.000, 808.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   802.243 ±(99.9%) 1150.386 MB/sec [Average]
[info]   (min, avg, max) = (668.169, 802.243, 1336.666), stdev = 298.752
[info]   CI (99.9%): [≈ 0, 1952.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   771.450 ±(99.9%) 1175.094 B/op [Average]
[info]   (min, avg, max) = (633.026, 771.450, 1317.345), stdev = 305.168
[info]   CI (99.9%): [≈ 0, 1946.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.181 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.103), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.59% complete, ETA 01:37:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1810452.136 ops/s
[info] # Warmup Iteration   2: 1996454.297 ops/s
[info] # Warmup Iteration   3: 1973229.084 ops/s
[info] # Warmup Iteration   4: 1951397.212 ops/s
[info] # Warmup Iteration   5: 2009837.250 ops/s
[info] Iteration   1: 1962945.224 ops/s
[info]                  ·gc.alloc.rate:                   528.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     410.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1965467.901 ops/s
[info]                  ·gc.alloc.rate:                   529.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     538.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.724 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.381 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1967804.098 ops/s
[info]                  ·gc.alloc.rate:      530.159 MB/sec
[info]                  ·gc.alloc.rate.norm: 424.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2011883.711 ops/s
[info]                  ·gc.alloc.rate:                   541.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     526.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1994245.029 ops/s
[info]                  ·gc.alloc.rate:               537.254 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 530.442 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala":
[info]   1980469.193 ±(99.9%) 83239.364 ops/s [Average]
[info]   (min, avg, max) = (1962945.224, 1980469.193, 2011883.711), stdev = 21616.999
[info]   CI (99.9%): [1897229.828, 2063708.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   533.547 ±(99.9%) 22.368 MB/sec [Average]
[info]   (min, avg, max) = (528.844, 533.547, 541.986), stdev = 5.809
[info]   CI (99.9%): [511.180, 555.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   424.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (424.000, 424.000, 424.000), stdev = 0.001
[info]   CI (99.9%): [424.000, 424.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   505.739 ±(99.9%) 1121.136 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 505.739, 672.487), stdev = 291.155
[info]   CI (99.9%): [≈ 0, 1626.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   401.042 ±(99.9%) 886.876 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 401.042, 538.503), stdev = 230.319
[info]   CI (99.9%): [≈ 0, 1287.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.363 ±(99.9%) 2.932 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.363, 1.724), stdev = 0.762
[info]   CI (99.9%): [≈ 0, 3.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.290 ±(99.9%) 2.349 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.290, 1.381), stdev = 0.610
[info]   CI (99.9%): [≈ 0, 2.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 14.82% complete, ETA 01:36:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1792202.645 ops/s
[info] # Warmup Iteration   2: 1962373.436 ops/s
[info] # Warmup Iteration   3: 1984573.076 ops/s
[info] # Warmup Iteration   4: 1983051.525 ops/s
[info] # Warmup Iteration   5: 1975283.405 ops/s
[info] Iteration   1: 1980288.614 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1982327.890 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1983249.464 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1983078.215 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1960846.820 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc":
[info]   1977958.201 ±(99.9%) 37111.119 ops/s [Average]
[info]   (min, avg, max) = (1960846.820, 1977958.201, 1983249.464), stdev = 9637.640
[info]   CI (99.9%): [1940847.082, 2015069.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 15.06% complete, ETA 01:36:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27538.774 ops/s
[info] # Warmup Iteration   2: 38428.257 ops/s
[info] # Warmup Iteration   3: 38081.237 ops/s
[info] # Warmup Iteration   4: 38759.617 ops/s
[info] # Warmup Iteration   5: 38994.990 ops/s
[info] Iteration   1: 39136.196 ops/s
[info]                  ·gc.alloc.rate:                   1707.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              68656.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53939.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.511 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 38348.640 ops/s
[info]                  ·gc.alloc.rate:                   1672.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              68656.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82685.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.417 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 39043.871 ops/s
[info]                  ·gc.alloc.rate:                   1703.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              68656.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54242.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.357 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 38574.558 ops/s
[info]                  ·gc.alloc.rate:               1682.678 MB/sec
[info]                  ·gc.alloc.rate.norm:          68656.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2022.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 82502.655 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 39004.366 ops/s
[info]                  ·gc.alloc.rate:                   1701.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              68656.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81725.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.680 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson":
[info]   38821.526 ±(99.9%) 1315.010 ops/s [Average]
[info]   (min, avg, max) = (38348.640, 38821.526, 39136.196), stdev = 341.504
[info]   CI (99.9%): [37506.516, 40136.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1693.505 ±(99.9%) 57.320 MB/sec [Average]
[info]   (min, avg, max) = (1672.933, 1693.505, 1707.210), stdev = 14.886
[info]   CI (99.9%): [1636.185, 1750.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   68656.011 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (68656.011, 68656.011, 68656.012), stdev = 0.001
[info]   CI (99.9%): [68656.010, 68656.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1749.829 ±(99.9%) 1428.503 MB/sec [Average]
[info]   (min, avg, max) = (1341.272, 1749.829, 2025.368), stdev = 370.978
[info]   CI (99.9%): [321.326, 3178.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   71019.305 ±(99.9%) 59522.278 B/op [Average]
[info]   (min, avg, max) = (53939.701, 71019.305, 82685.911), stdev = 15457.747
[info]   CI (99.9%): [11497.026, 130541.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.193 ±(99.9%) 5.455 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.193, 3.417), stdev = 1.417
[info]   CI (99.9%): [≈ 0, 7.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 15.29% complete, ETA 01:36:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 187456.311 ops/s
[info] # Warmup Iteration   2: 218163.613 ops/s
[info] # Warmup Iteration   3: 222633.614 ops/s
[info] # Warmup Iteration   4: 222350.982 ops/s
[info] # Warmup Iteration   5: 222153.178 ops/s
[info] Iteration   1: 219257.680 ops/s
[info]                  ·gc.alloc.rate:                   2334.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              16752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2701.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19385.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 221137.302 ops/s
[info]                  ·gc.alloc.rate:                   2353.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              16752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14441.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.593 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 221830.789 ops/s
[info]                  ·gc.alloc.rate:                   2361.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              16752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14415.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 222008.800 ops/s
[info]                  ·gc.alloc.rate:                   2363.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              16752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2713.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19233.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.443 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 222680.042 ops/s
[info]                  ·gc.alloc.rate:                   2370.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              16752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14397.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.736 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce":
[info]   221382.923 ±(99.9%) 5039.716 ops/s [Average]
[info]   (min, avg, max) = (219257.680, 221382.923, 222680.042), stdev = 1308.798
[info]   CI (99.9%): [216343.206, 226422.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2356.671 ±(99.9%) 52.767 MB/sec [Average]
[info]   (min, avg, max) = (2334.499, 2356.671, 2370.151), stdev = 13.703
[info]   CI (99.9%): [2303.904, 2409.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   16752.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16752.002, 16752.002, 16752.002), stdev = 0.001
[info]   CI (99.9%): [16752.002, 16752.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2302.634 ±(99.9%) 1422.556 MB/sec [Average]
[info]   (min, avg, max) = (2029.060, 2302.634, 2713.089), stdev = 369.433
[info]   CI (99.9%): [880.078, 3725.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   16374.663 ±(99.9%) 10318.697 B/op [Average]
[info]   (min, avg, max) = (14397.334, 16374.663, 19385.487), stdev = 2679.733
[info]   CI (99.9%): [6055.966, 26693.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.444 ±(99.9%) 0.895 B/op [Average]
[info]   (min, avg, max) = (0.148, 0.444, 0.736), stdev = 0.232
[info]   CI (99.9%): [≈ 0, 1.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.53% complete, ETA 01:36:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 220787.987 ops/s
[info] # Warmup Iteration   2: 314591.319 ops/s
[info] # Warmup Iteration   3: 320951.549 ops/s
[info] # Warmup Iteration   4: 321647.424 ops/s
[info] # Warmup Iteration   5: 312127.657 ops/s
[info] Iteration   1: 311941.200 ops/s
[info]                  ·gc.alloc.rate:                   1561.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              7880.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10127.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 309920.054 ops/s
[info]                  ·gc.alloc.rate:                   1551.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              7880.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6807.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 307657.976 ops/s
[info]                  ·gc.alloc.rate:                   1540.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              7880.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6868.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.426 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 309798.641 ops/s
[info]                  ·gc.alloc.rate:                   1551.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              7880.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6832.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.212 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 309281.970 ops/s
[info]                  ·gc.alloc.rate:                   1548.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              7880.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10283.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala":
[info]   309719.968 ±(99.9%) 5910.378 ops/s [Average]
[info]   (min, avg, max) = (307657.976, 309719.968, 311941.200), stdev = 1534.906
[info]   CI (99.9%): [303809.591, 315630.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1550.721 ±(99.9%) 29.228 MB/sec [Average]
[info]   (min, avg, max) = (1540.634, 1550.721, 1561.764), stdev = 7.590
[info]   CI (99.9%): [1521.493, 1579.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   7880.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7880.001, 7880.001, 7880.001), stdev = 0.001
[info]   CI (99.9%): [7880.001, 7880.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1611.246 ±(99.9%) 1415.581 MB/sec [Average]
[info]   (min, avg, max) = (1340.612, 1611.246, 2020.550), stdev = 367.622
[info]   CI (99.9%): [195.665, 3026.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   8183.962 ±(99.9%) 7109.572 B/op [Average]
[info]   (min, avg, max) = (6807.771, 8183.962, 10283.048), stdev = 1846.333
[info]   CI (99.9%): [1074.390, 15293.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.191 ±(99.9%) 0.536 B/op [Average]
[info]   (min, avg, max) = (0.105, 0.191, 0.426), stdev = 0.139
[info]   CI (99.9%): [≈ 0, 0.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 5.000), stdev = 1.517
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.76% complete, ETA 01:35:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1082479.745 ops/s
[info] # Warmup Iteration   2: 1137728.731 ops/s
[info] # Warmup Iteration   3: 1149723.397 ops/s
[info] # Warmup Iteration   4: 1148885.105 ops/s
[info] # Warmup Iteration   5: 1115186.749 ops/s
[info] Iteration   1: 1099297.733 ops/s
[info]                  ·gc.alloc.rate:                   379.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     732.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1110929.291 ops/s
[info]                  ·gc.alloc.rate:               383.990 MB/sec
[info]                  ·gc.alloc.rate.norm:          544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 724.790 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1111267.295 ops/s
[info]                  ·gc.alloc.rate:                   384.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     724.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1146015.904 ops/s
[info]                  ·gc.alloc.rate:      396.168 MB/sec
[info]                  ·gc.alloc.rate.norm: 544.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1112317.619 ops/s
[info]                  ·gc.alloc.rate:                   384.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     952.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.563 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.212 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala":
[info]   1115965.568 ±(99.9%) 67840.894 ops/s [Average]
[info]   (min, avg, max) = (1099297.733, 1115965.568, 1146015.904), stdev = 17618.065
[info]   CI (99.9%): [1048124.674, 1183806.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   385.736 ±(99.9%) 23.546 MB/sec [Average]
[info]   (min, avg, max) = (379.955, 385.736, 396.168), stdev = 6.115
[info]   CI (99.9%): [362.190, 409.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   544.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (544.000, 544.000, 544.000), stdev = 0.001
[info]   CI (99.9%): [544.000, 544.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   441.586 ±(99.9%) 987.969 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 441.586, 673.133), stdev = 256.572
[info]   CI (99.9%): [≈ 0, 1429.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   626.860 ±(99.9%) 1400.692 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 626.860, 952.481), stdev = 363.755
[info]   CI (99.9%): [≈ 0, 2027.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.319 ±(99.9%) 2.679 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.319, 1.563), stdev = 0.696
[info]   CI (99.9%): [≈ 0, 2.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.451 ±(99.9%) 3.791 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.451, 2.212), stdev = 0.985
[info]   CI (99.9%): [≈ 0, 4.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 16.00% complete, ETA 01:35:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35695.954 ops/s
[info] # Warmup Iteration   2: 79248.452 ops/s
[info] # Warmup Iteration   3: 80015.912 ops/s
[info] # Warmup Iteration   4: 80698.896 ops/s
[info] # Warmup Iteration   5: 78192.320 ops/s
[info] Iteration   1: 80489.641 ops/s
[info]                  ·gc.alloc.rate:                   3277.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              64064.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3372.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65927.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.221 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 79766.573 ops/s
[info]                  ·gc.alloc.rate:                   3246.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              64064.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2705.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53377.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 78721.130 ops/s
[info]                  ·gc.alloc.rate:                   3204.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              64064.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3389.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67769.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.832 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 78260.451 ops/s
[info]                  ·gc.alloc.rate:                   3185.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              64064.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3394.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68272.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.674 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 79649.426 ops/s
[info]                  ·gc.alloc.rate:                   3242.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              64064.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2719.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53730.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.645 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson":
[info]   79377.444 ±(99.9%) 3412.114 ops/s [Average]
[info]   (min, avg, max) = (78260.451, 79377.444, 80489.641), stdev = 886.115
[info]   CI (99.9%): [75965.330, 82789.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3231.250 ±(99.9%) 139.906 MB/sec [Average]
[info]   (min, avg, max) = (3185.658, 3231.250, 3277.243), stdev = 36.333
[info]   CI (99.9%): [3091.344, 3371.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   64064.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (64064.005, 64064.006, 64064.006), stdev = 0.001
[info]   CI (99.9%): [64064.005, 64064.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3116.318 ±(99.9%) 1420.982 MB/sec [Average]
[info]   (min, avg, max) = (2705.312, 3116.318, 3394.911), stdev = 369.025
[info]   CI (99.9%): [1695.335, 4537.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   61815.339 ±(99.9%) 29238.039 B/op [Average]
[info]   (min, avg, max) = (53377.128, 61815.339, 68272.109), stdev = 7593.026
[info]   CI (99.9%): [32577.300, 91053.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.485 ±(99.9%) 1.807 B/op [Average]
[info]   (min, avg, max) = (0.832, 1.485, 2.054), stdev = 0.469
[info]   CI (99.9%): [≈ 0, 3.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 16.24% complete, ETA 01:35:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 166552.391 ops/s
[info] # Warmup Iteration   2: 220278.275 ops/s
[info] # Warmup Iteration   3: 224016.938 ops/s
[info] # Warmup Iteration   4: 223694.007 ops/s
[info] # Warmup Iteration   5: 223853.699 ops/s
[info] Iteration   1: 223443.305 ops/s
[info]                  ·gc.alloc.rate:                   2200.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              15496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14223.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.733 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 218167.809 ops/s
[info]                  ·gc.alloc.rate:                   2148.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              15496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14602.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.751 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 219606.240 ops/s
[info]                  ·gc.alloc.rate:                   2163.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              15496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14525.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.448 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 221449.257 ops/s
[info]                  ·gc.alloc.rate:                   2180.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              15496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14427.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.444 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 221596.205 ops/s
[info]                  ·gc.alloc.rate:                   2181.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              15496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19256.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.591 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce":
[info]   220852.563 ±(99.9%) 7792.731 ops/s [Average]
[info]   (min, avg, max) = (218167.809, 220852.563, 223443.305), stdev = 2023.747
[info]   CI (99.9%): [213059.832, 228645.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2174.850 ±(99.9%) 76.767 MB/sec [Average]
[info]   (min, avg, max) = (2148.376, 2174.850, 2200.786), stdev = 19.936
[info]   CI (99.9%): [2098.083, 2251.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   15496.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (15496.002, 15496.002, 15496.002), stdev = 0.001
[info]   CI (99.9%): [15496.002, 15496.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2162.655 ±(99.9%) 1180.592 MB/sec [Average]
[info]   (min, avg, max) = (2020.128, 2162.655, 2711.070), stdev = 306.596
[info]   CI (99.9%): [982.063, 3343.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   15407.101 ±(99.9%) 8303.707 B/op [Average]
[info]   (min, avg, max) = (14223.968, 15407.101, 19256.334), stdev = 2156.446
[info]   CI (99.9%): [7103.395, 23710.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.083, 0.104), stdev = 0.021
[info]   CI (99.9%): [0.003, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.593 ±(99.9%) 0.571 B/op [Average]
[info]   (min, avg, max) = (0.444, 0.593, 0.751), stdev = 0.148
[info]   CI (99.9%): [0.022, 1.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.47% complete, ETA 01:35:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 797841.914 ops/s
[info] # Warmup Iteration   2: 1159848.192 ops/s
[info] # Warmup Iteration   3: 1127525.904 ops/s
[info] # Warmup Iteration   4: 1151478.830 ops/s
[info] # Warmup Iteration   5: 1150897.018 ops/s
[info] Iteration   1: 1150824.591 ops/s
[info]                  ·gc.alloc.rate:                   672.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     913.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.094 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.864 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1154849.305 ops/s
[info]                  ·gc.alloc.rate:                   675.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     910.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1151515.971 ops/s
[info]                  ·gc.alloc.rate:                   673.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     913.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1156183.824 ops/s
[info]                  ·gc.alloc.rate:               675.838 MB/sec
[info]                  ·gc.alloc.rate.norm:          920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 909.485 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1155059.550 ops/s
[info]                  ·gc.alloc.rate:                   675.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     910.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala":
[info]   1153686.648 ±(99.9%) 9107.349 ops/s [Average]
[info]   (min, avg, max) = (1150824.591, 1153686.648, 1156183.824), stdev = 2365.150
[info]   CI (99.9%): [1144579.299, 1162793.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   674.390 ±(99.9%) 5.295 MB/sec [Average]
[info]   (min, avg, max) = (672.692, 674.390, 675.838), stdev = 1.375
[info]   CI (99.9%): [669.095, 679.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   920.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (920.000, 920.000, 920.000), stdev = 0.001
[info]   CI (99.9%): [920.000, 920.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   668.084 ±(99.9%) 1.097 MB/sec [Average]
[info]   (min, avg, max) = (667.792, 668.084, 668.479), stdev = 0.285
[info]   CI (99.9%): [666.988, 669.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   911.401 ±(99.9%) 6.807 B/op [Average]
[info]   (min, avg, max) = (909.485, 911.401, 913.299), stdev = 1.768
[info]   CI (99.9%): [904.593, 918.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.436 ±(99.9%) 3.571 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.436, 2.094), stdev = 0.927
[info]   CI (99.9%): [≈ 0, 4.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.596 ±(99.9%) 4.884 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.596, 2.864), stdev = 1.268
[info]   CI (99.9%): [≈ 0, 5.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.71% complete, ETA 01:34:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2401053.329 ops/s
[info] # Warmup Iteration   2: 2597606.451 ops/s
[info] # Warmup Iteration   3: 2798338.777 ops/s
[info] # Warmup Iteration   4: 2851620.702 ops/s
[info] # Warmup Iteration   5: 2751788.159 ops/s
[info] Iteration   1: 2832360.490 ops/s
[info]                  ·gc.alloc.rate:                   964.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     373.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 2880353.777 ops/s
[info]                  ·gc.alloc.rate:                   980.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     734.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2901264.338 ops/s
[info]                  ·gc.alloc.rate:               988.077 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 364.629 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2891759.489 ops/s
[info]                  ·gc.alloc.rate:                   984.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     732.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2884464.484 ops/s
[info]                  ·gc.alloc.rate:               982.296 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 367.295 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala":
[info]   2878040.515 ±(99.9%) 102979.341 ops/s [Average]
[info]   (min, avg, max) = (2832360.490, 2878040.515, 2901264.338), stdev = 26743.408
[info]   CI (99.9%): [2775061.174, 2981019.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   980.163 ±(99.9%) 35.142 MB/sec [Average]
[info]   (min, avg, max) = (964.575, 980.163, 988.077), stdev = 9.126
[info]   CI (99.9%): [945.021, 1015.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   536.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (536.000, 536.000, 536.000), stdev = 0.001
[info]   CI (99.9%): [536.000, 536.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   941.513 ±(99.9%) 1418.551 MB/sec [Average]
[info]   (min, avg, max) = (672.144, 941.513, 1345.763), stdev = 368.393
[info]   CI (99.9%): [≈ 0, 2360.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   514.476 ±(99.9%) 769.925 B/op [Average]
[info]   (min, avg, max) = (364.629, 514.476, 734.555), stdev = 199.947
[info]   CI (99.9%): [≈ 0, 1284.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.100 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.057), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 16.94% complete, ETA 01:34:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2404185.384 ops/s
[info] # Warmup Iteration   2: 2607417.936 ops/s
[info] # Warmup Iteration   3: 2566149.270 ops/s
[info] # Warmup Iteration   4: 2565165.287 ops/s
[info] # Warmup Iteration   5: 2565968.264 ops/s
[info] Iteration   1: 2562846.052 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2560477.014 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2568096.581 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2566684.705 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2567404.031 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   2565101.677 ±(99.9%) 12662.064 ops/s [Average]
[info]   (min, avg, max) = (2560477.014, 2565101.677, 2568096.581), stdev = 3288.298
[info]   CI (99.9%): [2552439.613, 2577763.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 17.18% complete, ETA 01:34:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 160434.389 ops/s
[info] # Warmup Iteration   2: 273420.043 ops/s
[info] # Warmup Iteration   3: 277637.053 ops/s
[info] # Warmup Iteration   4: 277842.289 ops/s
[info] # Warmup Iteration   5: 272417.630 ops/s
[info] Iteration   1: 278113.602 ops/s
[info]                  ·gc.alloc.rate:                   2276.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              12880.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11386.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 278558.645 ops/s
[info]                  ·gc.alloc.rate:                   2280.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              12880.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11402.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.235 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 278652.130 ops/s
[info]                  ·gc.alloc.rate:                   2281.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              12880.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2698.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15234.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.353 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 277982.180 ops/s
[info]                  ·gc.alloc.rate:               2274.898 MB/sec
[info]                  ·gc.alloc.rate.norm:          12880.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2027.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11478.777 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 277205.765 ops/s
[info]                  ·gc.alloc.rate:                   2268.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              12880.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11532.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson":
[info]   278102.464 ±(99.9%) 2219.468 ops/s [Average]
[info]   (min, avg, max) = (277205.765, 278102.464, 278652.130), stdev = 576.389
[info]   CI (99.9%): [275882.996, 280321.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2276.390 ±(99.9%) 19.457 MB/sec [Average]
[info]   (min, avg, max) = (2268.582, 2276.390, 2281.175), stdev = 5.053
[info]   CI (99.9%): [2256.932, 2295.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   12880.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12880.002, 12880.002, 12880.002), stdev = 0.001
[info]   CI (99.9%): [12880.002, 12880.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2157.678 ±(99.9%) 1163.878 MB/sec [Average]
[info]   (min, avg, max) = (2012.884, 2157.678, 2698.217), stdev = 302.255
[info]   CI (99.9%): [993.800, 3321.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   12206.810 ±(99.9%) 6521.729 B/op [Average]
[info]   (min, avg, max) = (11386.338, 12206.810, 15234.707), stdev = 1693.672
[info]   CI (99.9%): [5685.081, 18728.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.212 ±(99.9%) 0.496 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.212, 0.353), stdev = 0.129
[info]   CI (99.9%): [≈ 0, 0.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 17.41% complete, ETA 01:33:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20142.667 ops/s
[info] # Warmup Iteration   2: 25429.923 ops/s
[info] # Warmup Iteration   3: 25450.826 ops/s
[info] # Warmup Iteration   4: 25119.798 ops/s
[info] # Warmup Iteration   5: 25590.300 ops/s
[info] Iteration   1: 25702.704 ops/s
[info]                  ·gc.alloc.rate:                   1619.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              99144.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123612.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.824 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 25452.818 ops/s
[info]                  ·gc.alloc.rate:                   1603.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              99144.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83286.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.574 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 25628.537 ops/s
[info]                  ·gc.alloc.rate:                   1615.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              99144.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124255.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.557 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 25764.339 ops/s
[info]                  ·gc.alloc.rate:                   1623.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              99144.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82522.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.543 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 25772.565 ops/s
[info]                  ·gc.alloc.rate:                   1623.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              99144.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82574.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.542 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce":
[info]   25664.193 ±(99.9%) 506.501 ops/s [Average]
[info]   (min, avg, max) = (25452.818, 25664.193, 25772.565), stdev = 131.537
[info]   CI (99.9%): [25157.692, 26170.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate":
[info]   1616.997 ±(99.9%) 31.839 MB/sec [Average]
[info]   (min, avg, max) = (1603.580, 1616.997, 1623.775), stdev = 8.269
[info]   CI (99.9%): [1585.158, 1648.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   99144.017 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (99144.017, 99144.017, 99144.018), stdev = 0.001
[info]   CI (99.9%): [99144.015, 99144.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1618.743 ±(99.9%) 1416.020 MB/sec [Average]
[info]   (min, avg, max) = (1347.094, 1618.743, 2024.214), stdev = 367.736
[info]   CI (99.9%): [202.723, 3034.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   99250.310 ±(99.9%) 86779.632 B/op [Average]
[info]   (min, avg, max) = (82522.105, 99250.310, 124255.826), stdev = 22536.395
[info]   CI (99.9%): [12470.678, 186029.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.808 ±(99.9%) 2.187 B/op [Average]
[info]   (min, avg, max) = (2.542, 2.808, 3.824), stdev = 0.568
[info]   CI (99.9%): [0.621, 4.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 17.65% complete, ETA 01:33:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 621.725 ops/s
[info] # Warmup Iteration   2: 85998.533 ops/s
[info] # Warmup Iteration   3: 89993.762 ops/s
[info] # Warmup Iteration   4: 90073.781 ops/s
[info] # Warmup Iteration   5: 90134.443 ops/s
[info] Iteration   1: 90453.633 ops/s
[info]                  ·gc.alloc.rate:                   852.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              14840.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11549.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 90396.306 ops/s
[info]                  ·gc.alloc.rate:               852.375 MB/sec
[info]                  ·gc.alloc.rate.norm:          14840.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11592.210 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 90182.727 ops/s
[info]                  ·gc.alloc.rate:                   850.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              14840.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23251.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.090 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 90338.474 ops/s
[info]                  ·gc.alloc.rate:               851.827 MB/sec
[info]                  ·gc.alloc.rate.norm:          14840.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11609.843 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 90342.237 ops/s
[info]                  ·gc.alloc.rate:               851.852 MB/sec
[info]                  ·gc.alloc.rate.norm:          14840.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11633.567 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava":
[info]   90342.675 ±(99.9%) 388.845 ops/s [Average]
[info]   (min, avg, max) = (90182.727, 90342.675, 90453.633), stdev = 100.982
[info]   CI (99.9%): [89953.831, 90731.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   851.912 ±(99.9%) 3.415 MB/sec [Average]
[info]   (min, avg, max) = (850.554, 851.912, 852.950), stdev = 0.887
[info]   CI (99.9%): [848.497, 855.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   14840.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (14840.005, 14840.005, 14840.005), stdev = 0.001
[info]   CI (99.9%): [14840.004, 14840.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   799.302 ±(99.9%) 1148.049 MB/sec [Average]
[info]   (min, avg, max) = (663.838, 799.302, 1332.633), stdev = 298.145
[info]   CI (99.9%): [≈ 0, 1947.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   13927.285 ±(99.9%) 20070.461 B/op [Average]
[info]   (min, avg, max) = (11549.751, 13927.285, 23251.053), stdev = 5212.235
[info]   CI (99.9%): [≈ 0, 33997.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.014 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.243 ±(99.9%) 1.835 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.243, 1.090), stdev = 0.476
[info]   CI (99.9%): [≈ 0, 2.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.88% complete, ETA 01:33:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37912.284 ops/s
[info] # Warmup Iteration   2: 57170.060 ops/s
[info] # Warmup Iteration   3: 56611.113 ops/s
[info] # Warmup Iteration   4: 57588.239 ops/s
[info] # Warmup Iteration   5: 56529.427 ops/s
[info] Iteration   1: 59099.729 ops/s
[info]                  ·gc.alloc.rate:                   1036.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              27584.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35541.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.107 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 57601.783 ops/s
[info]                  ·gc.alloc.rate:               1009.689 MB/sec
[info]                  ·gc.alloc.rate.norm:          27584.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18255.571 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 57371.784 ops/s
[info]                  ·gc.alloc.rate:                   1005.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              27584.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36675.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.426 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 57301.957 ops/s
[info]                  ·gc.alloc.rate:               1004.426 MB/sec
[info]                  ·gc.alloc.rate.norm:          27584.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18369.108 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 56540.431 ops/s
[info]                  ·gc.alloc.rate:               991.049 MB/sec
[info]                  ·gc.alloc.rate.norm:          27584.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37286.905 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala":
[info]   57583.137 ±(99.9%) 3607.791 ops/s [Average]
[info]   (min, avg, max) = (56540.431, 57583.137, 59099.729), stdev = 936.932
[info]   CI (99.9%): [53975.346, 61190.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1009.423 ±(99.9%) 64.031 MB/sec [Average]
[info]   (min, avg, max) = (991.049, 1009.423, 1036.411), stdev = 16.629
[info]   CI (99.9%): [945.392, 1073.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   27584.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (27584.007, 27584.008, 27584.008), stdev = 0.001
[info]   CI (99.9%): [27584.006, 27584.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1069.830 ±(99.9%) 1410.552 MB/sec [Average]
[info]   (min, avg, max) = (668.229, 1069.830, 1339.659), stdev = 366.316
[info]   CI (99.9%): [≈ 0, 2480.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   29225.859 ±(99.9%) 38438.549 B/op [Average]
[info]   (min, avg, max) = (18255.571, 29225.859, 37286.905), stdev = 9982.369
[info]   CI (99.9%): [≈ 0, 67664.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.907 ±(99.9%) 5.729 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.907, 3.426), stdev = 1.488
[info]   CI (99.9%): [≈ 0, 6.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.12% complete, ETA 01:33:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106377.675 ops/s
[info] # Warmup Iteration   2: 115052.664 ops/s
[info] # Warmup Iteration   3: 117220.484 ops/s
[info] # Warmup Iteration   4: 116821.520 ops/s
[info] # Warmup Iteration   5: 117479.330 ops/s
[info] Iteration   1: 117716.873 ops/s
[info]                  ·gc.alloc.rate:                   791.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              10584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9004.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.835 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 116858.934 ops/s
[info]                  ·gc.alloc.rate:               785.882 MB/sec
[info]                  ·gc.alloc.rate.norm:          10584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9069.997 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 117590.647 ops/s
[info]                  ·gc.alloc.rate:                   790.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              10584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9013.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 117583.710 ops/s
[info]                  ·gc.alloc.rate:                   790.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              10584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9014.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 117566.983 ops/s
[info]                  ·gc.alloc.rate:                   790.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              10584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18030.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.836 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala":
[info]   117463.429 ±(99.9%) 1321.370 ops/s [Average]
[info]   (min, avg, max) = (116858.934, 117463.429, 117716.873), stdev = 343.156
[info]   CI (99.9%): [116142.059, 118784.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   789.962 ±(99.9%) 8.975 MB/sec [Average]
[info]   (min, avg, max) = (785.882, 789.962, 791.806), stdev = 2.331
[info]   CI (99.9%): [780.987, 798.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10584.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10584.004, 10584.004, 10584.004), stdev = 0.001
[info]   CI (99.9%): [10584.003, 10584.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   808.184 ±(99.9%) 1159.610 MB/sec [Average]
[info]   (min, avg, max) = (673.464, 808.184, 1346.893), stdev = 301.147
[info]   CI (99.9%): [≈ 0, 1967.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10826.706 ±(99.9%) 15507.621 B/op [Average]
[info]   (min, avg, max) = (9004.284, 10826.706, 18030.774), stdev = 4027.280
[info]   CI (99.9%): [≈ 0, 26334.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.446 ±(99.9%) 1.439 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.446, 0.836), stdev = 0.374
[info]   CI (99.9%): [≈ 0, 1.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 18.35% complete, ETA 01:32:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19067.363 ops/s
[info] # Warmup Iteration   2: 33152.071 ops/s
[info] # Warmup Iteration   3: 33362.691 ops/s
[info] # Warmup Iteration   4: 33279.392 ops/s
[info] # Warmup Iteration   5: 34384.109 ops/s
[info] Iteration   1: 34461.286 ops/s
[info]                  ·gc.alloc.rate:                   1763.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              80536.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61193.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.951 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 33463.618 ops/s
[info]                  ·gc.alloc.rate:                   1712.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              80536.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94660.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.895 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 34166.151 ops/s
[info]                  ·gc.alloc.rate:                   1749.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              80536.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92960.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.753 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 33970.269 ops/s
[info]                  ·gc.alloc.rate:               1738.343 MB/sec
[info]                  ·gc.alloc.rate.norm:          80536.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62418.912 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 34218.579 ops/s
[info]                  ·gc.alloc.rate:                   1751.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              80536.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93108.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.745 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson":
[info]   34055.981 ±(99.9%) 1442.178 ops/s [Average]
[info]   (min, avg, max) = (33463.618, 34055.981, 34461.286), stdev = 374.529
[info]   CI (99.9%): [32613.802, 35498.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1742.905 ±(99.9%) 74.034 MB/sec [Average]
[info]   (min, avg, max) = (1712.423, 1742.905, 1763.423), stdev = 19.226
[info]   CI (99.9%): [1668.871, 1816.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   80536.013 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (80536.013, 80536.013, 80536.014), stdev = 0.001
[info]   CI (99.9%): [80536.011, 80536.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1748.697 ±(99.9%) 1424.126 MB/sec [Average]
[info]   (min, avg, max) = (1339.893, 1748.697, 2024.586), stdev = 369.841
[info]   CI (99.9%): [324.571, 3172.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   80868.249 ±(99.9%) 67075.886 B/op [Average]
[info]   (min, avg, max) = (61193.299, 80868.249, 94660.065), stdev = 17419.395
[info]   CI (99.9%): [13792.363, 147944.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.231 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.125), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.469 ±(99.9%) 10.686 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.469, 5.753), stdev = 2.775
[info]   CI (99.9%): [≈ 0, 14.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 18.59% complete, ETA 01:32:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27980.388 ops/s
[info] # Warmup Iteration   2: 39386.806 ops/s
[info] # Warmup Iteration   3: 39634.172 ops/s
[info] # Warmup Iteration   4: 38282.188 ops/s
[info] # Warmup Iteration   5: 39279.685 ops/s
[info] Iteration   1: 39306.652 ops/s
[info]                  ·gc.alloc.rate:               620.101 MB/sec
[info]                  ·gc.alloc.rate.norm:          24824.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20484.480 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 39597.024 ops/s
[info]                  ·gc.alloc.rate:                   624.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              24824.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26634.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.762 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 39608.761 ops/s
[info]                  ·gc.alloc.rate:                   624.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              24824.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26627.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.309 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 39645.982 ops/s
[info]                  ·gc.alloc.rate:               625.423 MB/sec
[info]                  ·gc.alloc.rate.norm:          24824.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26602.463 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 39653.721 ops/s
[info]                  ·gc.alloc.rate:                   625.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              24824.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26596.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.652 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce":
[info]   39562.428 ±(99.9%) 558.279 ops/s [Average]
[info]   (min, avg, max) = (39306.652, 39562.428, 39653.721), stdev = 144.983
[info]   CI (99.9%): [39004.149, 40120.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate":
[info]   624.083 ±(99.9%) 8.679 MB/sec [Average]
[info]   (min, avg, max) = (620.101, 624.083, 625.440), stdev = 2.254
[info]   CI (99.9%): [615.404, 632.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   24824.011 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (24824.011, 24824.011, 24824.012), stdev = 0.001
[info]   CI (99.9%): [24824.010, 24824.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   638.489 ±(99.9%) 272.922 MB/sec [Average]
[info]   (min, avg, max) = (511.700, 638.489, 670.270), stdev = 70.877
[info]   CI (99.9%): [365.567, 911.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   25389.211 ±(99.9%) 10557.988 B/op [Average]
[info]   (min, avg, max) = (20484.480, 25389.211, 26634.704), stdev = 2741.876
[info]   CI (99.9%): [14831.223, 35947.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.377 ±(99.9%) 2.983 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.377, 1.762), stdev = 0.775
[info]   CI (99.9%): [≈ 0, 3.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   14.992 ±(99.9%) 118.528 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.992, 70.001), stdev = 30.781
[info]   CI (99.9%): [≈ 0, 133.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.82% complete, ETA 01:32:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28240.760 ops/s
[info] # Warmup Iteration   2: 41261.324 ops/s
[info] # Warmup Iteration   3: 41367.214 ops/s
[info] # Warmup Iteration   4: 41433.595 ops/s
[info] # Warmup Iteration   5: 41457.985 ops/s
[info] Iteration   1: 40455.908 ops/s
[info]                  ·gc.alloc.rate:                   406.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              15824.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19902.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.405 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 41232.014 ops/s
[info]                  ·gc.alloc.rate:               414.630 MB/sec
[info]                  ·gc.alloc.rate.norm:          15824.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19527.313 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 40268.081 ops/s
[info]                  ·gc.alloc.rate:               405.046 MB/sec
[info]                  ·gc.alloc.rate.norm:          15824.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19995.689 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 41524.111 ops/s
[info]                  ·gc.alloc.rate:      417.516 MB/sec
[info]                  ·gc.alloc.rate.norm: 15824.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 40941.324 ops/s
[info]                  ·gc.alloc.rate:                   411.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              15824.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25670.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80.107 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala":
[info]   40884.288 ±(99.9%) 2016.320 ops/s [Average]
[info]   (min, avg, max) = (40268.081, 40884.288, 41524.111), stdev = 523.632
[info]   CI (99.9%): [38867.968, 42900.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   411.120 ±(99.9%) 20.109 MB/sec [Average]
[info]   (min, avg, max) = (405.046, 411.120, 417.516), stdev = 5.222
[info]   CI (99.9%): [391.011, 431.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15824.011 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (15824.010, 15824.011, 15824.012), stdev = 0.001
[info]   CI (99.9%): [15824.009, 15824.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   440.577 ±(99.9%) 983.419 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 440.577, 667.755), stdev = 255.391
[info]   CI (99.9%): [≈ 0, 1423.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   17019.237 ±(99.9%) 37922.846 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17019.237, 25670.894), stdev = 9848.443
[info]   CI (99.9%): [≈ 0, 54942.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.419 ±(99.9%) 3.584 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.419, 2.084), stdev = 0.931
[info]   CI (99.9%): [≈ 0, 4.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.102 ±(99.9%) 137.777 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.102, 80.107), stdev = 35.780
[info]   CI (99.9%): [≈ 0, 153.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 4.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.06% complete, ETA 01:32:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38015.375 ops/s
[info] # Warmup Iteration   2: 44540.539 ops/s
[info] # Warmup Iteration   3: 44072.929 ops/s
[info] # Warmup Iteration   4: 44680.088 ops/s
[info] # Warmup Iteration   5: 44005.909 ops/s
[info] Iteration   1: 44791.390 ops/s
[info]                  ·gc.alloc.rate:                   439.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              15440.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17975.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.573 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 44806.304 ops/s
[info]                  ·gc.alloc.rate:               439.837 MB/sec
[info]                  ·gc.alloc.rate.norm:          15440.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17945.946 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 44739.551 ops/s
[info]                  ·gc.alloc.rate:      438.996 MB/sec
[info]                  ·gc.alloc.rate.norm: 15440.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 44732.469 ops/s
[info]                  ·gc.alloc.rate:                   438.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              15440.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23660.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.772 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.335 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 44865.447 ops/s
[info]                  ·gc.alloc.rate:      440.138 MB/sec
[info]                  ·gc.alloc.rate.norm: 15440.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala":
[info]   44787.032 ±(99.9%) 208.886 ops/s [Average]
[info]   (min, avg, max) = (44732.469, 44787.032, 44865.447), stdev = 54.247
[info]   CI (99.9%): [44578.146, 44995.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   439.452 ±(99.9%) 2.064 MB/sec [Average]
[info]   (min, avg, max) = (438.885, 439.452, 440.138), stdev = 0.536
[info]   CI (99.9%): [437.388, 441.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   15440.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (15440.010, 15440.010, 15440.010), stdev = 0.001
[info]   CI (99.9%): [15440.009, 15440.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   339.069 ±(99.9%) 1218.501 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 339.069, 672.547), stdev = 316.441
[info]   CI (99.9%): [≈ 0, 1557.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   11916.444 ±(99.9%) 42835.452 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11916.444, 23660.285), stdev = 11124.231
[info]   CI (99.9%): [≈ 0, 54751.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.358 ±(99.9%) 3.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.358, 1.772), stdev = 0.791
[info]   CI (99.9%): [≈ 0, 3.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12.582 ±(99.9%) 107.102 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.582, 62.335), stdev = 27.814
[info]   CI (99.9%): [≈ 0, 119.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 19.29% complete, ETA 01:31:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38126.010 ops/s
[info] # Warmup Iteration   2: 43183.513 ops/s
[info] # Warmup Iteration   3: 44116.836 ops/s
[info] # Warmup Iteration   4: 44323.858 ops/s
[info] # Warmup Iteration   5: 44647.709 ops/s
[info] Iteration   1: 44699.411 ops/s
[info]                  ·gc.alloc.rate:                   387.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              13640.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18012.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.365 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 44484.154 ops/s
[info]                  ·gc.alloc.rate:               385.532 MB/sec
[info]                  ·gc.alloc.rate.norm:          13640.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18100.026 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 44793.858 ops/s
[info]                  ·gc.alloc.rate:               388.224 MB/sec
[info]                  ·gc.alloc.rate.norm:          13640.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17975.187 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 44191.591 ops/s
[info]                  ·gc.alloc.rate:      382.996 MB/sec
[info]                  ·gc.alloc.rate.norm: 13640.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 43639.643 ops/s
[info]                  ·gc.alloc.rate:                   378.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              13640.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24252.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.755 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63.306 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc":
[info]   44361.731 ±(99.9%) 1791.799 ops/s [Average]
[info]   (min, avg, max) = (43639.643, 44361.731, 44793.858), stdev = 465.325
[info]   CI (99.9%): [42569.932, 46153.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   384.468 ±(99.9%) 15.547 MB/sec [Average]
[info]   (min, avg, max) = (378.201, 384.468, 388.224), stdev = 4.038
[info]   CI (99.9%): [368.921, 400.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   13640.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13640.010, 13640.010, 13640.010), stdev = 0.001
[info]   CI (99.9%): [13640.009, 13640.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   441.448 ±(99.9%) 987.374 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 441.448, 672.450), stdev = 256.418
[info]   CI (99.9%): [≈ 0, 1428.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   15668.087 ±(99.9%) 35287.122 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15668.087, 24252.239), stdev = 9163.954
[info]   CI (99.9%): [≈ 0, 50955.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.353 ±(99.9%) 3.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.353, 1.755), stdev = 0.784
[info]   CI (99.9%): [≈ 0, 3.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   12.734 ±(99.9%) 108.862 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.734, 63.306), stdev = 28.271
[info]   CI (99.9%): [≈ 0, 121.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 19.53% complete, ETA 01:31:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11554.403 ops/s
[info] # Warmup Iteration   2: 15273.435 ops/s
[info] # Warmup Iteration   3: 15324.801 ops/s
[info] # Warmup Iteration   4: 15534.811 ops/s
[info] # Warmup Iteration   5: 15116.990 ops/s
[info] Iteration   1: 15141.253 ops/s
[info]                  ·gc.alloc.rate:               1080.841 MB/sec
[info]                  ·gc.alloc.rate.norm:          112352.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 69863.522 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   2: 14993.611 ops/s
[info]                  ·gc.alloc.rate:                   1070.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              112352.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     141106.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.740 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15069.261 ops/s
[info]                  ·gc.alloc.rate:                   1075.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              112352.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     140533.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.174 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 15633.846 ops/s
[info]                  ·gc.alloc.rate:                   1116.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              112352.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67761.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.191 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 15576.479 ops/s
[info]                  ·gc.alloc.rate:               1111.945 MB/sec
[info]                  ·gc.alloc.rate.norm:          112352.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 136086.051 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce":
[info]   15282.890 ±(99.9%) 1153.178 ops/s [Average]
[info]   (min, avg, max) = (14993.611, 15282.890, 15633.846), stdev = 299.477
[info]   CI (99.9%): [14129.711, 16436.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate":
[info]   1091.034 ±(99.9%) 82.499 MB/sec [Average]
[info]   (min, avg, max) = (1070.388, 1091.034, 1116.239), stdev = 21.425
[info]   CI (99.9%): [1008.535, 1173.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   112352.031 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (112352.028, 112352.031, 112352.039), stdev = 0.005
[info]   CI (99.9%): [112352.012, 112352.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1076.416 ±(99.9%) 1419.267 MB/sec [Average]
[info]   (min, avg, max) = (672.096, 1076.416, 1346.840), stdev = 368.579
[info]   CI (99.9%): [≈ 0, 2495.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   111070.153 ±(99.9%) 148757.484 B/op [Average]
[info]   (min, avg, max) = (67761.466, 111070.153, 141106.053), stdev = 38631.846
[info]   CI (99.9%): [≈ 0, 259827.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.021 ±(99.9%) 14.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.021, 8.740), stdev = 3.642
[info]   CI (99.9%): [≈ 0, 17.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.76% complete, ETA 01:31:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10385.834 ops/s
[info] # Warmup Iteration   2: 15939.148 ops/s
[info] # Warmup Iteration   3: 16184.501 ops/s
[info] # Warmup Iteration   4: 16774.605 ops/s
[info] # Warmup Iteration   5: 16744.132 ops/s
[info] Iteration   1: 16877.521 ops/s
[info]                  ·gc.alloc.rate:                   1024.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              95496.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124611.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.882 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 16432.627 ops/s
[info]                  ·gc.alloc.rate:               997.116 MB/sec
[info]                  ·gc.alloc.rate.norm:          95496.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 63988.910 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 16816.371 ops/s
[info]                  ·gc.alloc.rate:                   1020.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              95467.145 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125149.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.948 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 16858.290 ops/s
[info]                  ·gc.alloc.rate:                   1022.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              95464.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62469.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.830 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 16067.928 ops/s
[info]                  ·gc.alloc.rate:                   974.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              95464.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131210.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala":
[info]   16610.547 ±(99.9%) 1362.913 ops/s [Average]
[info]   (min, avg, max) = (16067.928, 16610.547, 16877.521), stdev = 353.944
[info]   CI (99.9%): [15247.634, 17973.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1007.788 ±(99.9%) 82.909 MB/sec [Average]
[info]   (min, avg, max) = (974.723, 1007.788, 1024.459), stdev = 21.531
[info]   CI (99.9%): [924.879, 1090.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   95477.452 ±(99.9%) 65.493 B/op [Average]
[info]   (min, avg, max) = (95464.026, 95477.452, 95496.036), stdev = 17.008
[info]   CI (99.9%): [95411.959, 95542.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1070.208 ±(99.9%) 1411.604 MB/sec [Average]
[info]   (min, avg, max) = (668.136, 1070.208, 1339.709), stdev = 366.589
[info]   CI (99.9%): [≈ 0, 2481.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   101486.005 ±(99.9%) 134863.948 B/op [Average]
[info]   (min, avg, max) = (62469.284, 101486.005, 131210.649), stdev = 35023.739
[info]   CI (99.9%): [≈ 0, 236349.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.740 ±(99.9%) 8.498 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.740, 5.830), stdev = 2.207
[info]   CI (99.9%): [≈ 0, 11.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.00% complete, ETA 01:31:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 72340.579 ops/s
[info] # Warmup Iteration   2: 77090.494 ops/s
[info] # Warmup Iteration   3: 76820.397 ops/s
[info] # Warmup Iteration   4: 77365.336 ops/s
[info] # Warmup Iteration   5: 77521.993 ops/s
[info] Iteration   1: 79510.125 ops/s
[info]                  ·gc.alloc.rate:      206.923 MB/sec
[info]                  ·gc.alloc.rate.norm: 4096.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 79330.539 ops/s
[info]                  ·gc.alloc.rate:      206.461 MB/sec
[info]                  ·gc.alloc.rate.norm: 4096.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 78957.593 ops/s
[info]                  ·gc.alloc.rate:               205.523 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10197.624 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 79768.088 ops/s
[info]                  ·gc.alloc.rate:      207.641 MB/sec
[info]                  ·gc.alloc.rate.norm: 4096.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 79335.587 ops/s
[info]                  ·gc.alloc.rate:                   206.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10149.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala":
[info]   79380.386 ±(99.9%) 1139.671 ops/s [Average]
[info]   (min, avg, max) = (78957.593, 79380.386, 79768.088), stdev = 295.969
[info]   CI (99.9%): [78240.715, 80520.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   206.602 ±(99.9%) 2.974 MB/sec [Average]
[info]   (min, avg, max) = (205.523, 206.602, 207.641), stdev = 0.772
[info]   CI (99.9%): [203.628, 209.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4096.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4096.005, 4096.006, 4096.006), stdev = 0.001
[info]   CI (99.9%): [4096.005, 4096.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   204.653 ±(99.9%) 1079.076 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.653, 511.681), stdev = 280.233
[info]   CI (99.9%): [≈ 0, 1283.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4069.385 ±(99.9%) 21456.792 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4069.385, 10197.624), stdev = 5572.261
[info]   CI (99.9%): [≈ 0, 25526.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.002 ±(99.9%) 0.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.355 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.206), stdev = 0.092
[info]   CI (99.9%): [≈ 0, 0.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 20.24% complete, ETA 01:30:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7764.929 ops/s
[info] # Warmup Iteration   2: 13768.493 ops/s
[info] # Warmup Iteration   3: 13847.797 ops/s
[info] # Warmup Iteration   4: 14114.142 ops/s
[info] # Warmup Iteration   5: 14067.427 ops/s
[info] Iteration   1: 14161.733 ops/s
[info]                  ·gc.alloc.rate:               1357.169 MB/sec
[info]                  ·gc.alloc.rate.norm:          150832.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1337.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 148643.883 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 14180.271 ops/s
[info]                  ·gc.alloc.rate:                   1358.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              150832.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148603.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.931 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 14146.987 ops/s
[info]                  ·gc.alloc.rate:                   1355.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              150832.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149171.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.316 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 14208.225 ops/s
[info]                  ·gc.alloc.rate:                   1361.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              150832.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148679.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.529 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 14050.753 ops/s
[info]                  ·gc.alloc.rate:               1346.561 MB/sec
[info]                  ·gc.alloc.rate.norm:          150832.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 150638.604 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson":
[info]   14149.594 ±(99.9%) 230.253 ops/s [Average]
[info]   (min, avg, max) = (14050.753, 14149.594, 14208.225), stdev = 59.796
[info]   CI (99.9%): [13919.341, 14379.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1356.091 ±(99.9%) 22.349 MB/sec [Average]
[info]   (min, avg, max) = (1346.561, 1356.091, 1361.972), stdev = 5.804
[info]   CI (99.9%): [1333.742, 1378.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   150832.034 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (150832.030, 150832.034, 150832.046), stdev = 0.007
[info]   CI (99.9%): [150832.006, 150832.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1340.919 ±(99.9%) 11.229 MB/sec [Average]
[info]   (min, avg, max) = (1337.481, 1340.919, 1344.834), stdev = 2.916
[info]   CI (99.9%): [1329.690, 1352.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   149147.360 ±(99.9%) 3331.009 B/op [Average]
[info]   (min, avg, max) = (148603.099, 149147.360, 150638.604), stdev = 865.052
[info]   CI (99.9%): [145816.352, 152478.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.155 ±(99.9%) 19.253 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.155, 11.529), stdev = 5.000
[info]   CI (99.9%): [≈ 0, 23.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 20.47% complete, ETA 01:30:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39693.713 ops/s
[info] # Warmup Iteration   2: 56024.596 ops/s
[info] # Warmup Iteration   3: 54751.596 ops/s
[info] # Warmup Iteration   4: 56517.951 ops/s
[info] # Warmup Iteration   5: 54912.121 ops/s
[info] Iteration   1: 56106.817 ops/s
[info]                  ·gc.alloc.rate:                   1390.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              39016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37625.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.752 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 55235.350 ops/s
[info]                  ·gc.alloc.rate:               1369.674 MB/sec
[info]                  ·gc.alloc.rate.norm:          39016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38254.442 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 55672.698 ops/s
[info]                  ·gc.alloc.rate:                   1380.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              39016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38001.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.177 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 55917.201 ops/s
[info]                  ·gc.alloc.rate:                   1386.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              39016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37882.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.172 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 56259.753 ops/s
[info]                  ·gc.alloc.rate:               1394.652 MB/sec
[info]                  ·gc.alloc.rate.norm:          39016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37707.367 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce":
[info]   55838.364 ±(99.9%) 1548.566 ops/s [Average]
[info]   (min, avg, max) = (55235.350, 55838.364, 56259.753), stdev = 402.158
[info]   CI (99.9%): [54289.798, 57386.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1384.341 ±(99.9%) 37.692 MB/sec [Average]
[info]   (min, avg, max) = (1369.674, 1384.341, 1394.652), stdev = 9.788
[info]   CI (99.9%): [1346.650, 1422.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   39016.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (39016.008, 39016.008, 39016.008), stdev = 0.001
[info]   CI (99.9%): [39016.007, 39016.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1344.493 ±(99.9%) 9.865 MB/sec [Average]
[info]   (min, avg, max) = (1341.272, 1344.493, 1347.874), stdev = 2.562
[info]   CI (99.9%): [1334.628, 1354.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   37894.300 ±(99.9%) 960.211 B/op [Average]
[info]   (min, avg, max) = (37625.330, 37894.300, 38254.442), stdev = 249.364
[info]   CI (99.9%): [36934.090, 38854.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.820 ±(99.9%) 3.022 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.820, 1.752), stdev = 0.785
[info]   CI (99.9%): [≈ 0, 3.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.71% complete, ETA 01:30:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 55618.664 ops/s
[info] # Warmup Iteration   2: 80990.419 ops/s
[info] # Warmup Iteration   3: 81613.442 ops/s
[info] # Warmup Iteration   4: 82064.276 ops/s
[info] # Warmup Iteration   5: 82403.424 ops/s
[info] Iteration   1: 82361.792 ops/s
[info]                  ·gc.alloc.rate:                   1247.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              23832.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25535.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.796 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 80426.042 ops/s
[info]                  ·gc.alloc.rate:               1217.865 MB/sec
[info]                  ·gc.alloc.rate.norm:          23832.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13088.135 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 82407.599 ops/s
[info]                  ·gc.alloc.rate:                   1247.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              23832.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25565.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.988 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 79436.489 ops/s
[info]                  ·gc.alloc.rate:               1203.307 MB/sec
[info]                  ·gc.alloc.rate.norm:          23832.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26561.514 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 82019.651 ops/s
[info]                  ·gc.alloc.rate:                   1242.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              23832.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25762.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.198 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala":
[info]   81330.314 ±(99.9%) 5131.608 ops/s [Average]
[info]   (min, avg, max) = (79436.489, 81330.314, 82407.599), stdev = 1332.662
[info]   CI (99.9%): [76198.706, 86461.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1231.672 ±(99.9%) 77.227 MB/sec [Average]
[info]   (min, avg, max) = (1203.307, 1231.672, 1247.859), stdev = 20.056
[info]   CI (99.9%): [1154.445, 1308.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   23832.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (23832.005, 23832.005, 23832.006), stdev = 0.001
[info]   CI (99.9%): [23832.004, 23832.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1205.537 ±(99.9%) 1155.335 MB/sec [Average]
[info]   (min, avg, max) = (668.831, 1205.537, 1342.599), stdev = 300.037
[info]   CI (99.9%): [50.202, 2360.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23302.670 ±(99.9%) 22045.927 B/op [Average]
[info]   (min, avg, max) = (13088.135, 23302.670, 26561.514), stdev = 5725.257
[info]   CI (99.9%): [1256.743, 45348.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.796 ±(99.9%) 3.250 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.796, 1.988), stdev = 0.844
[info]   CI (99.9%): [≈ 0, 4.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.94% complete, ETA 01:29:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 188721.054 ops/s
[info] # Warmup Iteration   2: 210364.865 ops/s
[info] # Warmup Iteration   3: 215354.834 ops/s
[info] # Warmup Iteration   4: 216079.106 ops/s
[info] # Warmup Iteration   5: 214532.399 ops/s
[info] Iteration   1: 215096.410 ops/s
[info]                  ·gc.alloc.rate:               341.114 MB/sec
[info]                  ·gc.alloc.rate.norm:          2496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3743.487 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 215649.733 ops/s
[info]                  ·gc.alloc.rate:      341.997 MB/sec
[info]                  ·gc.alloc.rate.norm: 2496.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 215315.838 ops/s
[info]                  ·gc.alloc.rate:                   341.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              2496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3739.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 214849.921 ops/s
[info]                  ·gc.alloc.rate:               340.722 MB/sec
[info]                  ·gc.alloc.rate.norm:          2496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3747.755 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 216081.676 ops/s
[info]                  ·gc.alloc.rate:      342.671 MB/sec
[info]                  ·gc.alloc.rate.norm: 2496.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala":
[info]   215398.716 ±(99.9%) 1855.593 ops/s [Average]
[info]   (min, avg, max) = (214849.921, 215398.716, 216081.676), stdev = 481.892
[info]   CI (99.9%): [213543.123, 217254.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   341.594 ±(99.9%) 2.938 MB/sec [Average]
[info]   (min, avg, max) = (340.722, 341.594, 342.671), stdev = 0.763
[info]   CI (99.9%): [338.656, 344.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2496.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2496.002, 2496.002, 2496.002), stdev = 0.001
[info]   CI (99.9%): [2496.002, 2496.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.960 ±(99.9%) 1079.009 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.960, 511.606), stdev = 280.215
[info]   CI (99.9%): [≈ 0, 1385.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2246.177 ±(99.9%) 7895.638 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2246.177, 3747.755), stdev = 2050.472
[info]   CI (99.9%): [≈ 0, 10141.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.262 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.152), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 21.18% complete, ETA 01:29:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 207221.938 ops/s
[info] # Warmup Iteration   2: 225583.067 ops/s
[info] # Warmup Iteration   3: 232255.673 ops/s
[info] # Warmup Iteration   4: 232090.751 ops/s
[info] # Warmup Iteration   5: 231895.075 ops/s
[info] Iteration   1: 231963.440 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 232586.825 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 232425.202 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 231960.638 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 231812.801 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc":
[info]   232149.781 ±(99.9%) 1292.862 ops/s [Average]
[info]   (min, avg, max) = (231812.801, 232149.781, 232586.825), stdev = 335.752
[info]   CI (99.9%): [230856.920, 233442.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.002, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 21.41% complete, ETA 01:29:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 57626.868 ops/s
[info] # Warmup Iteration   2: 74387.153 ops/s
[info] # Warmup Iteration   3: 76274.820 ops/s
[info] # Warmup Iteration   4: 73846.714 ops/s
[info] # Warmup Iteration   5: 73951.057 ops/s
[info] Iteration   1: 73693.892 ops/s
[info]                  ·gc.alloc.rate:                   1391.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              29712.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28623.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.334 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 73972.067 ops/s
[info]                  ·gc.alloc.rate:                   1396.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              29712.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28544.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.886 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 73612.727 ops/s
[info]                  ·gc.alloc.rate:               1389.848 MB/sec
[info]                  ·gc.alloc.rate.norm:          29712.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28711.722 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 74330.971 ops/s
[info]                  ·gc.alloc.rate:                   1403.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              29712.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28469.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.322 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 74905.556 ops/s
[info]                  ·gc.alloc.rate:                   1414.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              29712.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42451.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.437 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson":
[info]   74103.043 ±(99.9%) 2038.431 ops/s [Average]
[info]   (min, avg, max) = (73612.727, 74103.043, 74905.556), stdev = 529.374
[info]   CI (99.9%): [72064.611, 76141.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1399.023 ±(99.9%) 38.741 MB/sec [Average]
[info]   (min, avg, max) = (1389.848, 1399.023, 1414.346), stdev = 10.061
[info]   CI (99.9%): [1360.282, 1437.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   29712.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (29712.006, 29712.006, 29712.006), stdev = 0.001
[info]   CI (99.9%): [29712.006, 29712.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1478.047 ±(99.9%) 1168.257 MB/sec [Average]
[info]   (min, avg, max) = (1340.228, 1478.047, 2020.764), stdev = 303.393
[info]   CI (99.9%): [309.790, 2646.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   31360.180 ±(99.9%) 23877.193 B/op [Average]
[info]   (min, avg, max) = (28469.690, 31360.180, 42451.393), stdev = 6200.831
[info]   CI (99.9%): [7482.987, 55237.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.796 ±(99.9%) 2.226 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.796, 1.334), stdev = 0.578
[info]   CI (99.9%): [≈ 0, 3.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 21.65% complete, ETA 01:29:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18719.032 ops/s
[info] # Warmup Iteration   2: 26649.174 ops/s
[info] # Warmup Iteration   3: 26922.883 ops/s
[info] # Warmup Iteration   4: 26859.072 ops/s
[info] # Warmup Iteration   5: 26363.711 ops/s
[info] Iteration   1: 26956.856 ops/s
[info]                  ·gc.alloc.rate:               599.213 MB/sec
[info]                  ·gc.alloc.rate.norm:          34984.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29868.199 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 26964.257 ops/s
[info]                  ·gc.alloc.rate:                   599.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              34984.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39094.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.824 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 106.445 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 27051.198 ops/s
[info]                  ·gc.alloc.rate:                   601.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              34984.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38968.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.211 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 27036.399 ops/s
[info]                  ·gc.alloc.rate:                   600.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              34984.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38969.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.423 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 27020.845 ops/s
[info]                  ·gc.alloc.rate:               600.632 MB/sec
[info]                  ·gc.alloc.rate.norm:          34984.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38992.780 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce":
[info]   27005.911 ±(99.9%) 165.003 ops/s [Average]
[info]   (min, avg, max) = (26956.856, 27005.911, 27051.198), stdev = 42.851
[info]   CI (99.9%): [26840.908, 27170.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   600.313 ±(99.9%) 3.714 MB/sec [Average]
[info]   (min, avg, max) = (599.213, 600.313, 601.368), stdev = 0.964
[info]   CI (99.9%): [596.600, 604.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   34984.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (34984.016, 34984.016, 34984.017), stdev = 0.001
[info]   CI (99.9%): [34984.014, 34984.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   638.033 ±(99.9%) 272.182 MB/sec [Average]
[info]   (min, avg, max) = (511.588, 638.033, 669.868), stdev = 70.685
[info]   CI (99.9%): [365.850, 910.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   37178.849 ±(99.9%) 15737.989 B/op [Average]
[info]   (min, avg, max) = (29868.199, 37178.849, 39094.633), stdev = 4087.106
[info]   CI (99.9%): [21440.860, 52916.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.377 ±(99.9%) 3.114 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.377, 1.824), stdev = 0.809
[info]   CI (99.9%): [≈ 0, 3.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   22.016 ±(99.9%) 181.780 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22.016, 106.445), stdev = 47.208
[info]   CI (99.9%): [≈ 0, 203.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.88% complete, ETA 01:28:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19443.861 ops/s
[info] # Warmup Iteration   2: 28188.768 ops/s
[info] # Warmup Iteration   3: 28355.619 ops/s
[info] # Warmup Iteration   4: 28380.765 ops/s
[info] # Warmup Iteration   5: 28256.693 ops/s
[info] Iteration   1: 28350.281 ops/s
[info]                  ·gc.alloc.rate:                   390.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              21680.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28400.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.577 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 28139.010 ops/s
[info]                  ·gc.alloc.rate:               387.639 MB/sec
[info]                  ·gc.alloc.rate.norm:          21680.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28612.768 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 28045.984 ops/s
[info]                  ·gc.alloc.rate:                   386.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              21680.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28708.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.503 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 28331.582 ops/s
[info]                  ·gc.alloc.rate:      390.270 MB/sec
[info]                  ·gc.alloc.rate.norm: 21680.015 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 28376.672 ops/s
[info]                  ·gc.alloc.rate:                   390.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              21680.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37036.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 120.191 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala":
[info]   28248.706 ±(99.9%) 566.878 ops/s [Average]
[info]   (min, avg, max) = (28045.984, 28248.706, 28376.672), stdev = 147.216
[info]   CI (99.9%): [27681.827, 28815.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   389.173 ±(99.9%) 7.592 MB/sec [Average]
[info]   (min, avg, max) = (386.509, 389.173, 390.930), stdev = 1.972
[info]   CI (99.9%): [381.581, 396.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   21680.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (21680.015, 21680.016, 21680.016), stdev = 0.001
[info]   CI (99.9%): [21680.014, 21680.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   440.564 ±(99.9%) 983.445 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 440.564, 667.830), stdev = 255.398
[info]   CI (99.9%): [≈ 0, 1424.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   24551.689 ±(99.9%) 54702.065 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24551.689, 37036.164), stdev = 14205.953
[info]   CI (99.9%): [≈ 0, 79253.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.448 ±(99.9%) 3.702 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.448, 2.167), stdev = 0.961
[info]   CI (99.9%): [≈ 0, 4.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   24.854 ±(99.9%) 205.296 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.854, 120.191), stdev = 53.315
[info]   CI (99.9%): [≈ 0, 230.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.12% complete, ETA 01:28:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106300.947 ops/s
[info] # Warmup Iteration   2: 125585.600 ops/s
[info] # Warmup Iteration   3: 126183.123 ops/s
[info] # Warmup Iteration   4: 125998.365 ops/s
[info] # Warmup Iteration   5: 125970.072 ops/s
[info] Iteration   1: 125868.415 ops/s
[info]                  ·gc.alloc.rate:                   491.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              6144.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6396.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 125827.558 ops/s
[info]                  ·gc.alloc.rate:               491.193 MB/sec
[info]                  ·gc.alloc.rate.norm:          6144.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6399.243 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 125798.987 ops/s
[info]                  ·gc.alloc.rate:                   491.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              6144.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8421.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.636 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.472 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 126264.700 ops/s
[info]                  ·gc.alloc.rate:                   492.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              6144.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8390.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.778 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 126460.196 ops/s
[info]                  ·gc.alloc.rate:      493.658 MB/sec
[info]                  ·gc.alloc.rate.norm: 6144.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala":
[info]   126043.971 ±(99.9%) 1154.610 ops/s [Average]
[info]   (min, avg, max) = (125798.987, 126043.971, 126460.196), stdev = 299.848
[info]   CI (99.9%): [124889.362, 127198.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   492.043 ±(99.9%) 4.496 MB/sec [Average]
[info]   (min, avg, max) = (491.097, 492.043, 493.658), stdev = 1.168
[info]   CI (99.9%): [487.547, 496.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6144.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6144.003, 6144.003, 6144.004), stdev = 0.001
[info]   CI (99.9%): [6144.003, 6144.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.898 ±(99.9%) 1066.472 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.898, 673.160), stdev = 276.959
[info]   CI (99.9%): [≈ 0, 1540.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5921.709 ±(99.9%) 13320.407 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5921.709, 8421.578), stdev = 3459.267
[info]   CI (99.9%): [≈ 0, 19242.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.341 ±(99.9%) 2.791 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.341, 1.636), stdev = 0.725
[info]   CI (99.9%): [≈ 0, 3.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.261 ±(99.9%) 34.918 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.261, 20.472), stdev = 9.068
[info]   CI (99.9%): [≈ 0, 39.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 22.35% complete, ETA 01:28:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10497.115 ops/s
[info] # Warmup Iteration   2: 21845.643 ops/s
[info] # Warmup Iteration   3: 22024.691 ops/s
[info] # Warmup Iteration   4: 22172.211 ops/s
[info] # Warmup Iteration   5: 22220.748 ops/s
[info] Iteration   1: 22060.273 ops/s
[info]                  ·gc.alloc.rate:                   1232.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              87928.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95147.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.941 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 22237.429 ops/s
[info]                  ·gc.alloc.rate:                   1242.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              87928.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94457.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.420 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 22246.316 ops/s
[info]                  ·gc.alloc.rate:                   1242.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              87928.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94541.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.946 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 22280.601 ops/s
[info]                  ·gc.alloc.rate:                   1245.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              87928.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94533.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.941 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 22304.028 ops/s
[info]                  ·gc.alloc.rate:                   1246.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              87928.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94615.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.875 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson":
[info]   22225.730 ±(99.9%) 370.734 ops/s [Average]
[info]   (min, avg, max) = (22060.273, 22225.730, 22304.028), stdev = 96.278
[info]   CI (99.9%): [21854.996, 22596.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1242.036 ±(99.9%) 20.498 MB/sec [Average]
[info]   (min, avg, max) = (1232.917, 1242.036, 1246.372), stdev = 5.323
[info]   CI (99.9%): [1221.538, 1262.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   87928.021 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (87928.019, 87928.021, 87928.028), stdev = 0.004
[info]   CI (99.9%): [87928.007, 87928.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1337.105 ±(99.9%) 11.014 MB/sec [Average]
[info]   (min, avg, max) = (1334.154, 1337.105, 1341.171), stdev = 2.860
[info]   CI (99.9%): [1326.091, 1348.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   94659.129 ±(99.9%) 1074.192 B/op [Average]
[info]   (min, avg, max) = (94457.174, 94659.129, 95147.947), stdev = 278.964
[info]   CI (99.9%): [93584.938, 95733.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.425 ±(99.9%) 5.709 B/op [Average]
[info]   (min, avg, max) = (2.941, 4.425, 5.941), stdev = 1.483
[info]   CI (99.9%): [≈ 0, 10.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 22.59% complete, ETA 01:28:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123456.838 ops/s
[info] # Warmup Iteration   2: 168309.244 ops/s
[info] # Warmup Iteration   3: 167582.608 ops/s
[info] # Warmup Iteration   4: 168174.783 ops/s
[info] # Warmup Iteration   5: 169048.265 ops/s
[info] Iteration   1: 169073.006 ops/s
[info]                  ·gc.alloc.rate:                   1106.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              10296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12466.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 168072.177 ops/s
[info]                  ·gc.alloc.rate:               1099.490 MB/sec
[info]                  ·gc.alloc.rate.norm:          10296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6278.133 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 169041.078 ops/s
[info]                  ·gc.alloc.rate:                   1105.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              10296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12491.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.775 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 166522.018 ops/s
[info]                  ·gc.alloc.rate:               1089.361 MB/sec
[info]                  ·gc.alloc.rate.norm:          10296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6349.454 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 169030.601 ops/s
[info]                  ·gc.alloc.rate:               1105.770 MB/sec
[info]                  ·gc.alloc.rate.norm:          10296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12516.052 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce":
[info]   168347.776 ±(99.9%) 4254.144 ops/s [Average]
[info]   (min, avg, max) = (166522.018, 168347.776, 169073.006), stdev = 1104.788
[info]   CI (99.9%): [164093.632, 172601.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1101.391 ±(99.9%) 28.122 MB/sec [Average]
[info]   (min, avg, max) = (1089.361, 1101.391, 1106.492), stdev = 7.303
[info]   CI (99.9%): [1073.269, 1129.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10296.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10296.003, 10296.003, 10296.003), stdev = 0.001
[info]   CI (99.9%): [10296.002, 10296.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1073.556 ±(99.9%) 1414.654 MB/sec [Average]
[info]   (min, avg, max) = (670.430, 1073.556, 1344.199), stdev = 367.381
[info]   CI (99.9%): [≈ 0, 2488.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10020.238 ±(99.9%) 13029.214 B/op [Average]
[info]   (min, avg, max) = (6278.133, 10020.238, 12516.052), stdev = 3383.645
[info]   CI (99.9%): [≈ 0, 23049.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.232 ±(99.9%) 1.335 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.232, 0.775), stdev = 0.347
[info]   CI (99.9%): [≈ 0, 1.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.82% complete, ETA 01:27:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 371473.434 ops/s
[info] # Warmup Iteration   2: 549411.301 ops/s
[info] # Warmup Iteration   3: 559225.355 ops/s
[info] # Warmup Iteration   4: 557631.594 ops/s
[info] # Warmup Iteration   5: 559353.861 ops/s
[info] Iteration   1: 558592.133 ops/s
[info]                  ·gc.alloc.rate:               565.111 MB/sec
[info]                  ·gc.alloc.rate.norm:          1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1441.453 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 559269.807 ops/s
[info]                  ·gc.alloc.rate:                   565.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1879.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.106 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.923 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 561874.452 ops/s
[info]                  ·gc.alloc.rate:                   568.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1870.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 557560.232 ops/s
[info]                  ·gc.alloc.rate:      563.968 MB/sec
[info]                  ·gc.alloc.rate.norm: 1592.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 561248.132 ops/s
[info]                  ·gc.alloc.rate:                   567.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1873.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala":
[info]   559708.951 ±(99.9%) 6972.641 ops/s [Average]
[info]   (min, avg, max) = (557560.232, 559708.951, 561874.452), stdev = 1810.773
[info]   CI (99.9%): [552736.310, 566681.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   566.236 ±(99.9%) 7.063 MB/sec [Average]
[info]   (min, avg, max) = (563.968, 566.236, 568.440), stdev = 1.834
[info]   CI (99.9%): [559.173, 573.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1592.001, 1592.001, 1592.001), stdev = 0.001
[info]   CI (99.9%): [1592.001, 1592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   503.162 ±(99.9%) 1114.035 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 503.162, 668.112), stdev = 289.311
[info]   CI (99.9%): [≈ 0, 1617.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1412.994 ±(99.9%) 3126.133 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1412.994, 1879.310), stdev = 811.847
[info]   CI (99.9%): [≈ 0, 4539.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.434 ±(99.9%) 3.600 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.434, 2.106), stdev = 0.935
[info]   CI (99.9%): [≈ 0, 4.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.220 ±(99.9%) 10.126 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.220, 5.923), stdev = 2.630
[info]   CI (99.9%): [≈ 0, 11.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.06% complete, ETA 01:27:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 540922.213 ops/s
[info] # Warmup Iteration   2: 577363.126 ops/s
[info] # Warmup Iteration   3: 579773.379 ops/s
[info] # Warmup Iteration   4: 588278.350 ops/s
[info] # Warmup Iteration   5: 586005.494 ops/s
[info] Iteration   1: 588214.830 ops/s
[info]                  ·gc.alloc.rate:                   451.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1368.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 578211.760 ops/s
[info]                  ·gc.alloc.rate:               443.907 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1392.591 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 582820.957 ops/s
[info]                  ·gc.alloc.rate:      447.345 MB/sec
[info]                  ·gc.alloc.rate.norm: 1208.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 562564.554 ops/s
[info]                  ·gc.alloc.rate:                   431.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1881.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.772 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.956 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 589804.555 ops/s
[info]                  ·gc.alloc.rate:                   452.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1794.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala":
[info]   580323.331 ±(99.9%) 42104.303 ops/s [Average]
[info]   (min, avg, max) = (562564.554, 580323.331, 589804.555), stdev = 10934.354
[info]   CI (99.9%): [538219.028, 622427.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   445.450 ±(99.9%) 32.331 MB/sec [Average]
[info]   (min, avg, max) = (431.786, 445.450, 452.704), stdev = 8.396
[info]   CI (99.9%): [413.119, 477.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1208.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1208.001, 1208.001, 1208.001), stdev = 0.001
[info]   CI (99.9%): [1208.001, 1208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.667 ±(99.9%) 1065.566 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.667, 672.501), stdev = 276.724
[info]   CI (99.9%): [≈ 0, 1539.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1287.460 ±(99.9%) 2910.367 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1287.460, 1881.329), stdev = 755.813
[info]   CI (99.9%): [≈ 0, 4197.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.371 ±(99.9%) 3.016 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.371, 1.772), stdev = 0.783
[info]   CI (99.9%): [≈ 0, 3.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.036 ±(99.9%) 8.442 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.036, 4.956), stdev = 2.192
[info]   CI (99.9%): [≈ 0, 9.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 23.29% complete, ETA 01:27:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 552846.398 ops/s
[info] # Warmup Iteration   2: 602473.366 ops/s
[info] # Warmup Iteration   3: 605485.610 ops/s
[info] # Warmup Iteration   4: 604985.639 ops/s
[info] # Warmup Iteration   5: 604709.199 ops/s
[info] Iteration   1: 604883.175 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 603415.175 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 605507.719 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 605129.480 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 604779.971 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   604743.104 ±(99.9%) 3055.321 ops/s [Average]
[info]   (min, avg, max) = (603415.175, 604743.104, 605507.719), stdev = 793.457
[info]   CI (99.9%): [601687.782, 607798.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 23.53% complete, ETA 01:27:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 199466.391 ops/s
[info] # Warmup Iteration   2: 327441.313 ops/s
[info] # Warmup Iteration   3: 330005.967 ops/s
[info] # Warmup Iteration   4: 333801.079 ops/s
[info] # Warmup Iteration   5: 334537.815 ops/s
[info] Iteration   1: 327401.754 ops/s
[info]                  ·gc.alloc.rate:                   905.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              4352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6410.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.600 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 326214.486 ops/s
[info]                  ·gc.alloc.rate:               902.018 MB/sec
[info]                  ·gc.alloc.rate.norm:          4352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3217.122 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 326955.019 ops/s
[info]                  ·gc.alloc.rate:                   904.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              4352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3211.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 333050.821 ops/s
[info]                  ·gc.alloc.rate:                   920.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              4352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6308.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 335647.386 ops/s
[info]                  ·gc.alloc.rate:               928.097 MB/sec
[info]                  ·gc.alloc.rate.norm:          4352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3131.378 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson":
[info]   329853.893 ±(99.9%) 16274.000 ops/s [Average]
[info]   (min, avg, max) = (326214.486, 329853.893, 335647.386), stdev = 4226.306
[info]   CI (99.9%): [313579.893, 346127.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   912.090 ±(99.9%) 44.971 MB/sec [Average]
[info]   (min, avg, max) = (902.018, 912.090, 928.097), stdev = 11.679
[info]   CI (99.9%): [867.119, 957.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4352.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4352.001, 4352.001, 4352.001), stdev = 0.001
[info]   CI (99.9%): [4352.001, 4352.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   934.069 ±(99.9%) 1406.865 MB/sec [Average]
[info]   (min, avg, max) = (666.797, 934.069, 1334.961), stdev = 365.358
[info]   CI (99.9%): [≈ 0, 2340.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4455.914 ±(99.9%) 6695.091 B/op [Average]
[info]   (min, avg, max) = (3131.378, 4455.914, 6410.959), stdev = 1738.694
[info]   CI (99.9%): [≈ 0, 11151.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.204 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.199 ±(99.9%) 0.980 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.199, 0.600), stdev = 0.255
[info]   CI (99.9%): [≈ 0, 1.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 23.76% complete, ETA 01:26:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30481.575 ops/s
[info] # Warmup Iteration   2: 35877.724 ops/s
[info] # Warmup Iteration   3: 36181.390 ops/s
[info] # Warmup Iteration   4: 36432.461 ops/s
[info] # Warmup Iteration   5: 37057.297 ops/s
[info] Iteration   1: 36281.252 ops/s
[info]                  ·gc.alloc.rate:                   1709.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              74160.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87614.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.612 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 36963.387 ops/s
[info]                  ·gc.alloc.rate:                   1742.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              74160.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86145.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.773 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 37057.681 ops/s
[info]                  ·gc.alloc.rate:                   1746.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              74160.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57348.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.884 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 36909.838 ops/s
[info]                  ·gc.alloc.rate:                   1739.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              74160.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86462.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.775 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 36996.944 ops/s
[info]                  ·gc.alloc.rate:               1743.290 MB/sec
[info]                  ·gc.alloc.rate.norm:          74160.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1353.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57581.992 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce":
[info]   36841.820 ±(99.9%) 1224.210 ops/s [Average]
[info]   (min, avg, max) = (36281.252, 36841.820, 37057.681), stdev = 317.923
[info]   CI (99.9%): [35617.611, 38066.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate":
[info]   1736.122 ±(99.9%) 57.469 MB/sec [Average]
[info]   (min, avg, max) = (1709.810, 1736.122, 1746.249), stdev = 14.924
[info]   CI (99.9%): [1678.653, 1793.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   74160.012 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (74160.012, 74160.012, 74160.013), stdev = 0.001
[info]   CI (99.9%): [74160.010, 74160.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1755.066 ±(99.9%) 1416.907 MB/sec [Average]
[info]   (min, avg, max) = (1350.396, 1755.066, 2027.732), stdev = 367.966
[info]   CI (99.9%): [338.159, 3171.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   75030.756 ±(99.9%) 61781.316 B/op [Average]
[info]   (min, avg, max) = (57348.863, 75030.756, 87614.915), stdev = 16044.412
[info]   CI (99.9%): [13249.440, 136812.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.609 ±(99.9%) 5.159 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.609, 3.612), stdev = 1.340
[info]   CI (99.9%): [≈ 0, 6.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 24.00% complete, ETA 01:26:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8873.634 ops/s
[info] # Warmup Iteration   2: 287484.897 ops/s
[info] # Warmup Iteration   3: 285546.176 ops/s
[info] # Warmup Iteration   4: 289647.329 ops/s
[info] # Warmup Iteration   5: 289253.012 ops/s
[info] Iteration   1: 287451.753 ops/s
[info]                  ·gc.alloc.rate:               298.079 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2801.212 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 283996.650 ops/s
[info]                  ·gc.alloc.rate:      294.496 MB/sec
[info]                  ·gc.alloc.rate.norm: 1632.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 282754.174 ops/s
[info]                  ·gc.alloc.rate:               293.263 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2847.668 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 281801.146 ops/s
[info]                  ·gc.alloc.rate:      292.208 MB/sec
[info]                  ·gc.alloc.rate.norm: 1632.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 281353.536 ops/s
[info]                  ·gc.alloc.rate:                   291.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2861.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava":
[info]   283471.452 ±(99.9%) 9414.136 ops/s [Average]
[info]   (min, avg, max) = (281353.536, 283471.452, 287451.753), stdev = 2444.821
[info]   CI (99.9%): [274057.315, 292885.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   293.956 ±(99.9%) 9.773 MB/sec [Average]
[info]   (min, avg, max) = (291.734, 293.956, 298.079), stdev = 2.538
[info]   CI (99.9%): [284.183, 303.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1632.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.002, 1632.002, 1632.002), stdev = 0.001
[info]   CI (99.9%): [1632.001, 1632.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   306.980 ±(99.9%) 1079.078 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.980, 511.712), stdev = 280.233
[info]   CI (99.9%): [≈ 0, 1386.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1702.119 ±(99.9%) 5983.809 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1702.119, 2861.714), stdev = 1553.976
[info]   CI (99.9%): [≈ 0, 7685.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.031 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.018), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.173 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.101), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.24% complete, ETA 01:26:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 63624.471 ops/s
[info] # Warmup Iteration   2: 90797.798 ops/s
[info] # Warmup Iteration   3: 90043.500 ops/s
[info] # Warmup Iteration   4: 92852.255 ops/s
[info] # Warmup Iteration   5: 93600.909 ops/s
[info] Iteration   1: 89838.935 ops/s
[info]                  ·gc.alloc.rate:               1048.829 MB/sec
[info]                  ·gc.alloc.rate.norm:          18368.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11704.915 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   2: 93655.945 ops/s
[info]                  ·gc.alloc.rate:                   1093.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              18368.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22456.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 93553.777 ops/s
[info]                  ·gc.alloc.rate:               1091.913 MB/sec
[info]                  ·gc.alloc.rate.norm:          18368.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11251.874 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 91885.794 ops/s
[info]                  ·gc.alloc.rate:                   1072.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              18368.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22928.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.426 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 93503.482 ops/s
[info]                  ·gc.alloc.rate:               1091.286 MB/sec
[info]                  ·gc.alloc.rate.norm:          18368.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22560.632 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala":
[info]   92487.587 ±(99.9%) 6359.796 ops/s [Average]
[info]   (min, avg, max) = (89838.935, 92487.587, 93655.945), stdev = 1651.619
[info]   CI (99.9%): [86127.791, 98847.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1079.635 ±(99.9%) 73.747 MB/sec [Average]
[info]   (min, avg, max) = (1048.829, 1079.635, 1093.272), stdev = 19.152
[info]   CI (99.9%): [1005.887, 1153.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   18368.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (18368.005, 18368.005, 18368.005), stdev = 0.001
[info]   CI (99.9%): [18368.004, 18368.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1070.702 ±(99.9%) 1413.375 MB/sec [Average]
[info]   (min, avg, max) = (668.361, 1070.702, 1340.380), stdev = 367.049
[info]   CI (99.9%): [≈ 0, 2484.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   18180.520 ±(99.9%) 23576.641 B/op [Average]
[info]   (min, avg, max) = (11251.874, 18180.520, 22928.329), stdev = 6122.779
[info]   CI (99.9%): [≈ 0, 41757.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.227 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.705 ±(99.9%) 3.829 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.705, 2.099), stdev = 0.994
[info]   CI (99.9%): [≈ 0, 4.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.47% complete, ETA 01:26:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 375201.488 ops/s
[info] # Warmup Iteration   2: 390197.387 ops/s
[info] # Warmup Iteration   3: 396210.617 ops/s
[info] # Warmup Iteration   4: 392397.030 ops/s
[info] # Warmup Iteration   5: 380241.954 ops/s
[info] Iteration   1: 394317.479 ops/s
[info]                  ·gc.alloc.rate:                   256.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2041.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 396295.784 ops/s
[info]                  ·gc.alloc.rate:      257.842 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 391035.492 ops/s
[info]                  ·gc.alloc.rate:               254.538 MB/sec
[info]                  ·gc.alloc.rate.norm:          1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2059.170 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 388445.187 ops/s
[info]                  ·gc.alloc.rate:      252.787 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 388499.622 ops/s
[info]                  ·gc.alloc.rate:               252.801 MB/sec
[info]                  ·gc.alloc.rate.norm:          1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2072.557 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala":
[info]   391718.712 ±(99.9%) 13511.381 ops/s [Average]
[info]   (min, avg, max) = (388445.187, 391718.712, 396295.784), stdev = 3508.863
[info]   CI (99.9%): [378207.331, 405230.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   254.904 ±(99.9%) 8.694 MB/sec [Average]
[info]   (min, avg, max) = (252.787, 254.904, 257.842), stdev = 2.258
[info]   CI (99.9%): [246.210, 263.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1024.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1024.001, 1024.001, 1024.001), stdev = 0.001
[info]   CI (99.9%): [1024.001, 1024.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   307.023 ±(99.9%) 1079.228 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 307.023, 511.852), stdev = 280.272
[info]   CI (99.9%): [≈ 0, 1386.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1234.741 ±(99.9%) 4340.488 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1234.741, 2072.557), stdev = 1127.211
[info]   CI (99.9%): [≈ 0, 5575.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.003 ±(99.9%) 0.026 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.015), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.103 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.060), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 24.71% complete, ETA 01:25:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22031.875 ops/s
[info] # Warmup Iteration   2: 38062.599 ops/s
[info] # Warmup Iteration   3: 39284.969 ops/s
[info] # Warmup Iteration   4: 39350.594 ops/s
[info] # Warmup Iteration   5: 39453.014 ops/s
[info] Iteration   1: 39374.577 ops/s
[info]                  ·gc.alloc.rate:                   2064.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              82504.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80451.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.664 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 39536.666 ops/s
[info]                  ·gc.alloc.rate:                   2073.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              82504.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80334.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.143 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 39390.308 ops/s
[info]                  ·gc.alloc.rate:                   2065.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              82504.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80761.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.495 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 39446.401 ops/s
[info]                  ·gc.alloc.rate:                   2068.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              82504.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80836.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.661 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 39335.503 ops/s
[info]                  ·gc.alloc.rate:                   2062.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              82504.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81169.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.332 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson":
[info]   39416.691 ±(99.9%) 300.361 ops/s [Average]
[info]   (min, avg, max) = (39335.503, 39416.691, 39536.666), stdev = 78.003
[info]   CI (99.9%): [39116.330, 39717.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2066.571 ±(99.9%) 16.237 MB/sec [Average]
[info]   (min, avg, max) = (2062.480, 2066.571, 2073.117), stdev = 4.217
[info]   CI (99.9%): [2050.334, 2082.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   82504.011 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (82504.011, 82504.011, 82504.011), stdev = 0.001
[info]   CI (99.9%): [82504.011, 82504.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2021.640 ±(99.9%) 24.948 MB/sec [Average]
[info]   (min, avg, max) = (2012.692, 2021.640, 2029.110), stdev = 6.479
[info]   CI (99.9%): [1996.692, 2046.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   80710.575 ±(99.9%) 1273.080 B/op [Average]
[info]   (min, avg, max) = (80334.345, 80710.575, 81169.159), stdev = 330.615
[info]   CI (99.9%): [79437.495, 81983.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.659 ±(99.9%) 4.160 B/op [Average]
[info]   (min, avg, max) = (1.661, 2.659, 4.143), stdev = 1.080
[info]   CI (99.9%): [≈ 0, 6.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 24.94% complete, ETA 01:25:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 65235.462 ops/s
[info] # Warmup Iteration   2: 84966.002 ops/s
[info] # Warmup Iteration   3: 86872.218 ops/s
[info] # Warmup Iteration   4: 86553.963 ops/s
[info] # Warmup Iteration   5: 86179.968 ops/s
[info] Iteration   1: 86706.423 ops/s
[info]                  ·gc.alloc.rate:                   692.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              12576.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12169.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.803 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.725 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 87004.309 ops/s
[info]                  ·gc.alloc.rate:               695.225 MB/sec
[info]                  ·gc.alloc.rate.norm:          12576.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12128.430 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 86986.198 ops/s
[info]                  ·gc.alloc.rate:                   695.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              12576.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12124.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.377 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 86929.230 ops/s
[info]                  ·gc.alloc.rate:                   694.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              12576.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12132.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.377 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 87017.249 ops/s
[info]                  ·gc.alloc.rate:                   695.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              12576.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12126.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.130 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce":
[info]   86928.682 ±(99.9%) 495.639 ops/s [Average]
[info]   (min, avg, max) = (86706.423, 86928.682, 87017.249), stdev = 128.716
[info]   CI (99.9%): [86433.043, 87424.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate":
[info]   694.676 ±(99.9%) 4.166 MB/sec [Average]
[info]   (min, avg, max) = (692.837, 694.676, 695.552), stdev = 1.082
[info]   CI (99.9%): [690.510, 698.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12576.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12576.005, 12576.005, 12576.005), stdev = 0.001
[info]   CI (99.9%): [12576.004, 12576.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   670.388 ±(99.9%) 0.878 MB/sec [Average]
[info]   (min, avg, max) = (670.106, 670.388, 670.682), stdev = 0.228
[info]   CI (99.9%): [669.510, 671.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12136.335 ±(99.9%) 72.588 B/op [Average]
[info]   (min, avg, max) = (12124.913, 12136.335, 12169.687), stdev = 18.851
[info]   CI (99.9%): [12063.747, 12208.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.381 ±(99.9%) 3.061 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.381, 1.803), stdev = 0.795
[info]   CI (99.9%): [≈ 0, 3.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.922 ±(99.9%) 55.565 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.922, 32.725), stdev = 14.430
[info]   CI (99.9%): [≈ 0, 62.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 25.18% complete, ETA 01:25:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3129.880 ops/s
[info] # Warmup Iteration   2: 110662.610 ops/s
[info] # Warmup Iteration   3: 108321.740 ops/s
[info] # Warmup Iteration   4: 110855.493 ops/s
[info] # Warmup Iteration   5: 110990.991 ops/s
[info] Iteration   1: 109381.590 ops/s
[info]                  ·gc.alloc.rate:                   404.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              5824.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7361.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 110953.088 ops/s
[info]                  ·gc.alloc.rate:               410.574 MB/sec
[info]                  ·gc.alloc.rate.norm:          5824.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7256.974 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 111517.684 ops/s
[info]                  ·gc.alloc.rate:      412.743 MB/sec
[info]                  ·gc.alloc.rate.norm: 5824.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 110417.763 ops/s
[info]                  ·gc.alloc.rate:               408.786 MB/sec
[info]                  ·gc.alloc.rate.norm:          5824.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9461.900 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 111107.282 ops/s
[info]                  ·gc.alloc.rate:      411.169 MB/sec
[info]                  ·gc.alloc.rate.norm: 5824.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava":
[info]   110675.481 ±(99.9%) 3171.465 ops/s [Average]
[info]   (min, avg, max) = (109381.590, 110675.481, 111517.684), stdev = 823.619
[info]   CI (99.9%): [107504.017, 113846.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   409.612 ±(99.9%) 11.732 MB/sec [Average]
[info]   (min, avg, max) = (404.786, 409.612, 412.743), stdev = 3.047
[info]   CI (99.9%): [397.880, 421.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   5824.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5824.004, 5824.004, 5824.004), stdev = 0.001
[info]   CI (99.9%): [5824.003, 5824.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   337.471 ±(99.9%) 1210.243 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 337.471, 664.129), stdev = 314.296
[info]   CI (99.9%): [≈ 0, 1547.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   4816.025 ±(99.9%) 17264.542 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4816.025, 9461.900), stdev = 4483.547
[info]   CI (99.9%): [≈ 0, 22080.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   ≈ 10⁻³ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.045 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.026), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.41% complete, ETA 01:24:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 70917.201 ops/s
[info] # Warmup Iteration   2: 92897.312 ops/s
[info] # Warmup Iteration   3: 96194.124 ops/s
[info] # Warmup Iteration   4: 97455.256 ops/s
[info] # Warmup Iteration   5: 96767.502 ops/s
[info] Iteration   1: 96873.173 ops/s
[info]                  ·gc.alloc.rate:               382.119 MB/sec
[info]                  ·gc.alloc.rate.norm:          6208.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8311.553 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 96706.259 ops/s
[info]                  ·gc.alloc.rate:               381.463 MB/sec
[info]                  ·gc.alloc.rate.norm:          6208.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8325.904 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 97007.219 ops/s
[info]                  ·gc.alloc.rate:      382.709 MB/sec
[info]                  ·gc.alloc.rate.norm: 6208.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 96662.182 ops/s
[info]                  ·gc.alloc.rate:                   381.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              6208.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8329.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.339 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 96446.616 ops/s
[info]                  ·gc.alloc.rate:                   380.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              6208.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10897.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala":
[info]   96739.090 ±(99.9%) 822.284 ops/s [Average]
[info]   (min, avg, max) = (96446.616, 96739.090, 97007.219), stdev = 213.545
[info]   CI (99.9%): [95916.806, 97561.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   381.621 ±(99.9%) 3.198 MB/sec [Average]
[info]   (min, avg, max) = (380.532, 381.621, 382.709), stdev = 0.830
[info]   CI (99.9%): [378.423, 384.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   6208.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6208.004, 6208.005, 6208.005), stdev = 0.001
[info]   CI (99.9%): [6208.004, 6208.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   440.551 ±(99.9%) 983.503 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 440.551, 667.958), stdev = 255.413
[info]   CI (99.9%): [≈ 0, 1424.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7172.863 ±(99.9%) 16025.840 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7172.863, 10897.077), stdev = 4161.860
[info]   CI (99.9%): [≈ 0, 23198.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.421 ±(99.9%) 3.581 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.421, 2.084), stdev = 0.930
[info]   CI (99.9%): [≈ 0, 4.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.869 ±(99.9%) 58.415 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.869, 34.005), stdev = 15.170
[info]   CI (99.9%): [≈ 0, 65.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.65% complete, ETA 01:24:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101165.418 ops/s
[info] # Warmup Iteration   2: 107895.772 ops/s
[info] # Warmup Iteration   3: 110103.514 ops/s
[info] # Warmup Iteration   4: 112838.669 ops/s
[info] # Warmup Iteration   5: 112539.742 ops/s
[info] Iteration   1: 113140.134 ops/s
[info]                  ·gc.alloc.rate:      418.658 MB/sec
[info]                  ·gc.alloc.rate.norm: 5824.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 113153.975 ops/s
[info]                  ·gc.alloc.rate:               418.782 MB/sec
[info]                  ·gc.alloc.rate.norm:          5824.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7115.963 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 109259.115 ops/s
[info]                  ·gc.alloc.rate:                   404.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              5824.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7369.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.235 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 112402.002 ops/s
[info]                  ·gc.alloc.rate:                   415.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              5824.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9416.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.766 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.725 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 113365.550 ops/s
[info]                  ·gc.alloc.rate:      419.545 MB/sec
[info]                  ·gc.alloc.rate.norm: 5824.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala":
[info]   112264.155 ±(99.9%) 6619.708 ops/s [Average]
[info]   (min, avg, max) = (109259.115, 112264.155, 113365.550), stdev = 1719.117
[info]   CI (99.9%): [105644.447, 118883.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   415.454 ±(99.9%) 24.474 MB/sec [Average]
[info]   (min, avg, max) = (404.351, 415.454, 419.545), stdev = 6.356
[info]   CI (99.9%): [390.980, 439.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5824.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5824.004, 5824.004, 5824.004), stdev = 0.001
[info]   CI (99.9%): [5824.003, 5824.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   339.166 ±(99.9%) 1218.724 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 339.166, 672.485), stdev = 316.499
[info]   CI (99.9%): [≈ 0, 1557.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4780.378 ±(99.9%) 17151.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4780.378, 9416.253), stdev = 4454.065
[info]   CI (99.9%): [≈ 0, 21931.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.356 ±(99.9%) 3.034 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.356, 1.766), stdev = 0.788
[info]   CI (99.9%): [≈ 0, 3.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.992 ±(99.9%) 42.480 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.992, 24.725), stdev = 11.032
[info]   CI (99.9%): [≈ 0, 47.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 25.88% complete, ETA 01:24:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 102107.719 ops/s
[info] # Warmup Iteration   2: 111979.827 ops/s
[info] # Warmup Iteration   3: 113689.955 ops/s
[info] # Warmup Iteration   4: 113823.094 ops/s
[info] # Warmup Iteration   5: 113630.570 ops/s
[info] Iteration   1: 114438.424 ops/s
[info]                  ·gc.alloc.rate:      333.354 MB/sec
[info]                  ·gc.alloc.rate.norm: 4584.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 113410.711 ops/s
[info]                  ·gc.alloc.rate:               330.332 MB/sec
[info]                  ·gc.alloc.rate.norm:          4584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7099.714 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 113353.445 ops/s
[info]                  ·gc.alloc.rate:               330.150 MB/sec
[info]                  ·gc.alloc.rate.norm:          4584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7103.472 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 113638.141 ops/s
[info]                  ·gc.alloc.rate:      331.014 MB/sec
[info]                  ·gc.alloc.rate.norm: 4584.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 113423.732 ops/s
[info]                  ·gc.alloc.rate:                   330.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              4584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7098.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc":
[info]   113652.891 ±(99.9%) 1741.444 ops/s [Average]
[info]   (min, avg, max) = (113353.445, 113652.891, 114438.424), stdev = 452.248
[info]   CI (99.9%): [111911.446, 115394.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   331.059 ±(99.9%) 5.095 MB/sec [Average]
[info]   (min, avg, max) = (330.150, 331.059, 333.354), stdev = 1.323
[info]   CI (99.9%): [325.964, 336.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4584.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4584.004, 4584.004, 4584.004), stdev = 0.001
[info]   CI (99.9%): [4584.004, 4584.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   306.991 ±(99.9%) 1079.118 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.991, 511.731), stdev = 280.243
[info]   CI (99.9%): [≈ 0, 1386.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   4260.405 ±(99.9%) 14975.924 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4260.405, 7103.472), stdev = 3889.200
[info]   CI (99.9%): [≈ 0, 19236.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.002 ±(99.9%) 0.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.249 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.145), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 26.12% complete, ETA 01:24:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6044.356 ops/s
[info] # Warmup Iteration   2: 9444.400 ops/s
[info] # Warmup Iteration   3: 9376.814 ops/s
[info] # Warmup Iteration   4: 9528.644 ops/s
[info] # Warmup Iteration   5: 9596.576 ops/s
[info] Iteration   1: 9607.592 ops/s
[info]                  ·gc.alloc.rate:                   1594.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              261288.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220322.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.410 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 9562.287 ops/s
[info]                  ·gc.alloc.rate:                   1587.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              261290.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     332476.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.279 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 9566.651 ops/s
[info]                  ·gc.alloc.rate:                   1588.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              261304.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221814.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.849 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 9364.511 ops/s
[info]                  ·gc.alloc.rate:                   1554.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              261304.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226797.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.498 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 9382.556 ops/s
[info]                  ·gc.alloc.rate:                   1557.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              261304.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     340046.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.458 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce":
[info]   9496.720 ±(99.9%) 439.018 ops/s [Average]
[info]   (min, avg, max) = (9364.511, 9496.720, 9607.592), stdev = 114.011
[info]   CI (99.9%): [9057.702, 9935.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate":
[info]   1576.771 ±(99.9%) 72.791 MB/sec [Average]
[info]   (min, avg, max) = (1554.796, 1576.771, 1594.939), stdev = 18.904
[info]   CI (99.9%): [1503.980, 1649.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   261298.224 ±(99.9%) 30.948 B/op [Average]
[info]   (min, avg, max) = (261288.045, 261298.224, 261304.046), stdev = 8.037
[info]   CI (99.9%): [261267.276, 261329.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1618.104 ±(99.9%) 1426.664 MB/sec [Average]
[info]   (min, avg, max) = (1344.877, 1618.104, 2027.300), stdev = 370.500
[info]   CI (99.9%): [191.441, 3044.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   268291.538 ±(99.9%) 239325.502 B/op [Average]
[info]   (min, avg, max) = (220322.088, 268291.538, 340046.996), stdev = 62152.073
[info]   CI (99.9%): [28966.036, 507617.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   8.299 ±(99.9%) 22.523 B/op [Average]
[info]   (min, avg, max) = (3.410, 8.299, 17.458), stdev = 5.849
[info]   CI (99.9%): [≈ 0, 30.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.35% complete, ETA 01:23:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5467.736 ops/s
[info] # Warmup Iteration   2: 10036.039 ops/s
[info] # Warmup Iteration   3: 10354.626 ops/s
[info] # Warmup Iteration   4: 10536.287 ops/s
[info] # Warmup Iteration   5: 10171.903 ops/s
[info] Iteration   1: 10475.482 ops/s
[info]                  ·gc.alloc.rate:                   1613.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              242456.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     200967.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.383 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 10205.685 ops/s
[info]                  ·gc.alloc.rate:                   1572.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              242474.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     310011.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 10242.716 ops/s
[info]                  ·gc.alloc.rate:               1578.167 MB/sec
[info]                  ·gc.alloc.rate.norm:          242488.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 206286.474 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 10181.339 ops/s
[info]                  ·gc.alloc.rate:                   1568.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              242488.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207851.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.654 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 10406.734 ops/s
[info]                  ·gc.alloc.rate:                   1603.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              242488.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     305536.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.148 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala":
[info]   10302.391 ±(99.9%) 503.592 ops/s [Average]
[info]   (min, avg, max) = (10181.339, 10302.391, 10475.482), stdev = 130.781
[info]   CI (99.9%): [9798.799, 10805.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1587.335 ±(99.9%) 77.737 MB/sec [Average]
[info]   (min, avg, max) = (1568.634, 1587.335, 1613.901), stdev = 20.188
[info]   CI (99.9%): [1509.597, 1665.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   242478.998 ±(99.9%) 54.109 B/op [Average]
[info]   (min, avg, max) = (242456.041, 242478.998, 242488.042), stdev = 14.052
[info]   CI (99.9%): [242424.890, 242533.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1611.149 ±(99.9%) 1421.234 MB/sec [Average]
[info]   (min, avg, max) = (1337.736, 1611.149, 2020.593), stdev = 369.090
[info]   CI (99.9%): [189.914, 3032.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   246130.878 ±(99.9%) 216993.552 B/op [Average]
[info]   (min, avg, max) = (200967.892, 246130.878, 310011.987), stdev = 56352.536
[info]   CI (99.9%): [29137.326, 463124.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.647 ±(99.9%) 24.076 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.647, 16.050), stdev = 6.252
[info]   CI (99.9%): [≈ 0, 31.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.59% complete, ETA 01:23:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 194979.345 ops/s
[info] # Warmup Iteration   2: 207693.484 ops/s
[info] # Warmup Iteration   3: 207406.596 ops/s
[info] # Warmup Iteration   4: 207315.010 ops/s
[info] # Warmup Iteration   5: 207903.530 ops/s
[info] Iteration   1: 207529.865 ops/s
[info]                  ·gc.alloc.rate:               540.239 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3879.761 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 207743.969 ops/s
[info]                  ·gc.alloc.rate:                   540.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          674.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5104.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.671 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 208119.048 ops/s
[info]                  ·gc.alloc.rate:      541.650 MB/sec
[info]                  ·gc.alloc.rate.norm: 4096.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 207985.171 ops/s
[info]                  ·gc.alloc.rate:                   541.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5098.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.473 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 207912.691 ops/s
[info]                  ·gc.alloc.rate:               541.089 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5097.983 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala":
[info]   207858.149 ±(99.9%) 878.051 ops/s [Average]
[info]   (min, avg, max) = (207529.865, 207858.149, 208119.048), stdev = 228.027
[info]   CI (99.9%): [206980.097, 208736.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   541.023 ±(99.9%) 2.018 MB/sec [Average]
[info]   (min, avg, max) = (540.239, 541.023, 541.650), stdev = 0.524
[info]   CI (99.9%): [539.004, 543.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4096.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4096.002, 4096.002, 4096.002), stdev = 0.001
[info]   CI (99.9%): [4096.002, 4096.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   506.604 ±(99.9%) 1123.479 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 506.604, 674.065), stdev = 291.764
[info]   CI (99.9%): [≈ 0, 1630.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3836.252 ±(99.9%) 8504.981 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3836.252, 5104.751), stdev = 2208.717
[info]   CI (99.9%): [≈ 0, 12341.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.321 ±(99.9%) 2.629 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.321, 1.541), stdev = 0.683
[info]   CI (99.9%): [≈ 0, 2.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.429 ±(99.9%) 19.910 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.429, 11.671), stdev = 5.171
[info]   CI (99.9%): [≈ 0, 22.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 26.82% complete, ETA 01:23:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2566.936 ops/s
[info] # Warmup Iteration   2: 5301.149 ops/s
[info] # Warmup Iteration   3: 5255.566 ops/s
[info] # Warmup Iteration   4: 5460.257 ops/s
[info] # Warmup Iteration   5: 5331.434 ops/s
[info] Iteration   1: 5476.174 ops/s
[info]                  ·gc.alloc.rate:                   1458.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              419032.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     384554.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.963 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5441.062 ops/s
[info]                  ·gc.alloc.rate:                   1448.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              419032.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     387580.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 5357.594 ops/s
[info]                  ·gc.alloc.rate:                   1426.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              419032.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     394072.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.229 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 5442.143 ops/s
[info]                  ·gc.alloc.rate:               1448.942 MB/sec
[info]                  ·gc.alloc.rate.norm:          419032.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 388568.398 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 5480.027 ops/s
[info]                  ·gc.alloc.rate:                   1459.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              419032.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     386377.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.977 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson":
[info]   5439.400 ±(99.9%) 189.675 ops/s [Average]
[info]   (min, avg, max) = (5357.594, 5439.400, 5480.027), stdev = 49.258
[info]   CI (99.9%): [5249.725, 5629.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1448.406 ±(99.9%) 50.911 MB/sec [Average]
[info]   (min, avg, max) = (1426.545, 1448.406, 1459.132), stdev = 13.221
[info]   CI (99.9%): [1397.495, 1499.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   419032.079 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (419032.079, 419032.079, 419032.081), stdev = 0.001
[info]   CI (99.9%): [419032.077, 419032.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1341.850 ±(99.9%) 10.462 MB/sec [Average]
[info]   (min, avg, max) = (1338.675, 1341.850, 1345.426), stdev = 2.717
[info]   CI (99.9%): [1331.388, 1352.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   388230.559 ±(99.9%) 13831.068 B/op [Average]
[info]   (min, avg, max) = (384554.433, 388230.559, 394072.040), stdev = 3591.885
[info]   CI (99.9%): [374399.491, 402061.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.443 ±(99.9%) 20.830 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.443, 12.229), stdev = 5.409
[info]   CI (99.9%): [≈ 0, 29.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 27.06% complete, ETA 01:23:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16757.724 ops/s
[info] # Warmup Iteration   2: 24739.515 ops/s
[info] # Warmup Iteration   3: 25388.683 ops/s
[info] # Warmup Iteration   4: 25157.176 ops/s
[info] # Warmup Iteration   5: 25049.174 ops/s
[info] Iteration   1: 25436.736 ops/s
[info]                  ·gc.alloc.rate:                   1873.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              115896.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124740.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.288 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 25379.358 ops/s
[info]                  ·gc.alloc.rate:                   1868.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              115896.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125231.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.873 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 25514.777 ops/s
[info]                  ·gc.alloc.rate:                   1878.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              115896.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83207.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.568 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 25508.471 ops/s
[info]                  ·gc.alloc.rate:                   1878.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              115896.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125009.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.853 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 25465.639 ops/s
[info]                  ·gc.alloc.rate:                   1875.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              115896.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125380.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.860 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce":
[info]   25460.996 ±(99.9%) 214.577 ops/s [Average]
[info]   (min, avg, max) = (25379.358, 25460.996, 25514.777), stdev = 55.725
[info]   CI (99.9%): [25246.419, 25675.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1875.033 ±(99.9%) 16.285 MB/sec [Average]
[info]   (min, avg, max) = (1868.876, 1875.033, 1878.873), stdev = 4.229
[info]   CI (99.9%): [1858.748, 1891.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   115896.017 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (115896.017, 115896.017, 115896.018), stdev = 0.001
[info]   CI (99.9%): [115896.015, 115896.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1887.987 ±(99.9%) 1160.551 MB/sec [Average]
[info]   (min, avg, max) = (1348.924, 1887.987, 2029.006), stdev = 301.391
[info]   CI (99.9%): [727.436, 3048.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   116713.836 ±(99.9%) 72131.396 B/op [Average]
[info]   (min, avg, max) = (83207.273, 116713.836, 125380.377), stdev = 18732.295
[info]   CI (99.9%): [44582.439, 188845.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.088 ±(99.9%) 4.435 B/op [Average]
[info]   (min, avg, max) = (1.288, 3.088, 3.873), stdev = 1.152
[info]   CI (99.9%): [≈ 0, 7.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.29% complete, ETA 01:22:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18732.227 ops/s
[info] # Warmup Iteration   2: 29150.773 ops/s
[info] # Warmup Iteration   3: 29396.637 ops/s
[info] # Warmup Iteration   4: 28633.464 ops/s
[info] # Warmup Iteration   5: 29115.815 ops/s
[info] Iteration   1: 29554.568 ops/s
[info]                  ·gc.alloc.rate:                   1886.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              100432.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2011.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107074.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.217 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 29541.304 ops/s
[info]                  ·gc.alloc.rate:                   1885.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              100432.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107338.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.436 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 29411.431 ops/s
[info]                  ·gc.alloc.rate:                   1876.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              100432.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72041.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.456 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 29493.847 ops/s
[info]                  ·gc.alloc.rate:                   1882.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              100432.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107914.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.332 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 29536.483 ops/s
[info]                  ·gc.alloc.rate:                   1884.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              100432.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107970.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.327 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala":
[info]   29507.526 ±(99.9%) 224.643 ops/s [Average]
[info]   (min, avg, max) = (29411.431, 29507.526, 29554.568), stdev = 58.339
[info]   CI (99.9%): [29282.883, 29732.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1883.169 ±(99.9%) 15.142 MB/sec [Average]
[info]   (min, avg, max) = (1876.780, 1883.169, 1886.344), stdev = 3.932
[info]   CI (99.9%): [1868.028, 1898.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   100432.015 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (100432.015, 100432.015, 100432.016), stdev = 0.001
[info]   CI (99.9%): [100432.013, 100432.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1884.290 ±(99.9%) 1158.404 MB/sec [Average]
[info]   (min, avg, max) = (1346.244, 1884.290, 2026.238), stdev = 300.834
[info]   CI (99.9%): [725.886, 3042.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   100467.854 ±(99.9%) 61207.422 B/op [Average]
[info]   (min, avg, max) = (72041.477, 100467.854, 107970.355), stdev = 15895.373
[info]   CI (99.9%): [39260.432, 161675.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.554 ±(99.9%) 3.591 B/op [Average]
[info]   (min, avg, max) = (2.217, 3.554, 4.456), stdev = 0.933
[info]   CI (99.9%): [≈ 0, 7.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.53% complete, ETA 01:22:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 336997.037 ops/s
[info] # Warmup Iteration   2: 366483.999 ops/s
[info] # Warmup Iteration   3: 370206.775 ops/s
[info] # Warmup Iteration   4: 373161.622 ops/s
[info] # Warmup Iteration   5: 372572.373 ops/s
[info] Iteration   1: 370210.983 ops/s
[info]                  ·gc.alloc.rate:                   818.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              3480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2860.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 370929.491 ops/s
[info]                  ·gc.alloc.rate:               820.352 MB/sec
[info]                  ·gc.alloc.rate.norm:          3480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2851.987 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 369129.674 ops/s
[info]                  ·gc.alloc.rate:                   816.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              3480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5731.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.444 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 368259.891 ops/s
[info]                  ·gc.alloc.rate:               814.254 MB/sec
[info]                  ·gc.alloc.rate.norm:          3480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2872.569 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 359686.705 ops/s
[info]                  ·gc.alloc.rate:                   795.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              3480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2943.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala":
[info]   367643.349 ±(99.9%) 17571.024 ops/s [Average]
[info]   (min, avg, max) = (359686.705, 367643.349, 370929.491), stdev = 4563.139
[info]   CI (99.9%): [350072.325, 385214.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   813.000 ±(99.9%) 38.538 MB/sec [Average]
[info]   (min, avg, max) = (795.584, 813.000, 820.352), stdev = 10.008
[info]   CI (99.9%): [774.462, 851.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3480.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3480.001, 3480.001, 3480.001), stdev = 0.001
[info]   CI (99.9%): [3480.001, 3480.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   806.926 ±(99.9%) 1156.724 MB/sec [Average]
[info]   (min, avg, max) = (672.127, 806.926, 1344.294), stdev = 300.398
[info]   CI (99.9%): [≈ 0, 1963.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3452.117 ±(99.9%) 4908.858 B/op [Average]
[info]   (min, avg, max) = (2851.987, 3452.117, 5731.646), stdev = 1274.815
[info]   CI (99.9%): [≈ 0, 8360.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.161 ±(99.9%) 0.701 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.161, 0.444), stdev = 0.182
[info]   CI (99.9%): [≈ 0, 0.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 27.76% complete, ETA 01:22:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 382843.655 ops/s
[info] # Warmup Iteration   2: 410621.251 ops/s
[info] # Warmup Iteration   3: 429238.115 ops/s
[info] # Warmup Iteration   4: 429690.161 ops/s
[info] # Warmup Iteration   5: 429607.947 ops/s
[info] Iteration   1: 429747.569 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 429515.997 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 429429.416 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 429459.250 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 429334.151 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc":
[info]   429497.277 ±(99.9%) 595.475 ops/s [Average]
[info]   (min, avg, max) = (429334.151, 429497.277, 429747.569), stdev = 154.643
[info]   CI (99.9%): [428901.802, 430092.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 28.00% complete, ETA 01:22:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19263.852 ops/s
[info] # Warmup Iteration   2: 29444.059 ops/s
[info] # Warmup Iteration   3: 29947.697 ops/s
[info] # Warmup Iteration   4: 29856.509 ops/s
[info] # Warmup Iteration   5: 29968.519 ops/s
[info] Iteration   1: 30123.930 ops/s
[info]                  ·gc.alloc.rate:                   1858.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              97096.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105230.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.088 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 30207.795 ops/s
[info]                  ·gc.alloc.rate:                   1863.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              97096.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70054.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.085 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 30127.948 ops/s
[info]                  ·gc.alloc.rate:                   1858.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              97096.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105546.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.175 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 29640.217 ops/s
[info]                  ·gc.alloc.rate:                   1829.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              97096.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107489.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.421 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 29974.441 ops/s
[info]                  ·gc.alloc.rate:                   1849.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              97096.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106462.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.279 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson":
[info]   30014.866 ±(99.9%) 869.385 ops/s [Average]
[info]   (min, avg, max) = (29640.217, 30014.866, 30207.795), stdev = 225.776
[info]   CI (99.9%): [29145.481, 30884.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1852.093 ±(99.9%) 53.074 MB/sec [Average]
[info]   (min, avg, max) = (1829.266, 1852.093, 1863.984), stdev = 13.783
[info]   CI (99.9%): [1799.019, 1905.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   97096.015 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (97096.014, 97096.015, 97096.016), stdev = 0.001
[info]   CI (99.9%): [97096.012, 97096.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1886.613 ±(99.9%) 1166.340 MB/sec [Average]
[info]   (min, avg, max) = (1344.855, 1886.613, 2027.971), stdev = 302.895
[info]   CI (99.9%): [720.273, 3052.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   98956.599 ±(99.9%) 62306.579 B/op [Average]
[info]   (min, avg, max) = (70054.303, 98956.599, 107489.120), stdev = 16180.821
[info]   CI (99.9%): [36650.019, 161263.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.409 ±(99.9%) 5.567 B/op [Average]
[info]   (min, avg, max) = (1.085, 2.409, 4.421), stdev = 1.446
[info]   CI (99.9%): [≈ 0, 7.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 28.24% complete, ETA 01:21:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82822.877 ops/s
[info] # Warmup Iteration   2: 96462.530 ops/s
[info] # Warmup Iteration   3: 99002.432 ops/s
[info] # Warmup Iteration   4: 98841.746 ops/s
[info] # Warmup Iteration   5: 97462.028 ops/s
[info] Iteration   1: 98700.682 ops/s
[info]                  ·gc.alloc.rate:                   1701.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              27128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32195.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.664 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 98789.957 ops/s
[info]                  ·gc.alloc.rate:                   1702.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              27128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21468.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.658 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 98339.882 ops/s
[info]                  ·gc.alloc.rate:                   1695.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              27128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32409.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.999 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 98027.441 ops/s
[info]                  ·gc.alloc.rate:                   1689.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              27128.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21700.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 98840.630 ops/s
[info]                  ·gc.alloc.rate:                   1703.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              27128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32318.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.663 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce":
[info]   98539.718 ±(99.9%) 1335.900 ops/s [Average]
[info]   (min, avg, max) = (98027.441, 98539.718, 98840.630), stdev = 346.929
[info]   CI (99.9%): [97203.818, 99875.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1698.537 ±(99.9%) 23.028 MB/sec [Average]
[info]   (min, avg, max) = (1689.712, 1698.537, 1703.577), stdev = 5.980
[info]   CI (99.9%): [1675.509, 1721.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   27128.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (27128.004, 27128.004, 27128.005), stdev = 0.001
[info]   CI (99.9%): [27128.004, 27128.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1754.631 ±(99.9%) 1423.738 MB/sec [Average]
[info]   (min, avg, max) = (1347.622, 1754.631, 2029.511), stdev = 369.740
[info]   CI (99.9%): [330.893, 3178.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   28018.492 ±(99.9%) 22621.074 B/op [Average]
[info]   (min, avg, max) = (21468.598, 28018.492, 32409.852), stdev = 5874.621
[info]   CI (99.9%): [5397.418, 50639.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.997 ±(99.9%) 1.564 B/op [Average]
[info]   (min, avg, max) = (0.663, 0.997, 1.658), stdev = 0.406
[info]   CI (99.9%): [≈ 0, 2.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 28.47% complete, ETA 01:21:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14278.607 ops/s
[info] # Warmup Iteration   2: 426313.619 ops/s
[info] # Warmup Iteration   3: 416986.160 ops/s
[info] # Warmup Iteration   4: 413919.014 ops/s
[info] # Warmup Iteration   5: 411171.343 ops/s
[info] Iteration   1: 416939.167 ops/s
[info]                  ·gc.alloc.rate:               432.473 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1931.288 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 416786.317 ops/s
[info]                  ·gc.alloc.rate:               432.254 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1931.992 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 417987.865 ops/s
[info]                  ·gc.alloc.rate:      433.505 MB/sec
[info]                  ·gc.alloc.rate.norm: 1632.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 416860.218 ops/s
[info]                  ·gc.alloc.rate:                   432.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2506.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 416946.013 ops/s
[info]                  ·gc.alloc.rate:               432.357 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2505.836 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava":
[info]   417103.916 ±(99.9%) 1919.248 ops/s [Average]
[info]   (min, avg, max) = (416786.317, 417103.916, 417987.865), stdev = 498.423
[info]   CI (99.9%): [415184.668, 419023.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   432.573 ±(99.9%) 2.031 MB/sec [Average]
[info]   (min, avg, max) = (432.254, 432.573, 433.505), stdev = 0.527
[info]   CI (99.9%): [430.542, 434.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1632.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.001, 1632.001, 1632.001), stdev = 0.001
[info]   CI (99.9%): [1632.001, 1632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   470.243 ±(99.9%) 1053.749 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 470.243, 663.863), stdev = 273.655
[info]   CI (99.9%): [≈ 0, 1523.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1775.085 ±(99.9%) 3977.845 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1775.085, 2506.311), stdev = 1033.034
[info]   CI (99.9%): [≈ 0, 5752.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.048 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.028), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.182 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.106), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.71% complete, ETA 01:21:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 207044.472 ops/s
[info] # Warmup Iteration   2: 305563.262 ops/s
[info] # Warmup Iteration   3: 306399.186 ops/s
[info] # Warmup Iteration   4: 305969.316 ops/s
[info] # Warmup Iteration   5: 305335.172 ops/s
[info] Iteration   1: 307402.867 ops/s
[info]                  ·gc.alloc.rate:      434.380 MB/sec
[info]                  ·gc.alloc.rate.norm: 2224.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 307037.041 ops/s
[info]                  ·gc.alloc.rate:               433.984 MB/sec
[info]                  ·gc.alloc.rate.norm:          2224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2622.439 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 307508.013 ops/s
[info]                  ·gc.alloc.rate:                   434.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              2224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2618.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 308470.278 ops/s
[info]                  ·gc.alloc.rate:                   436.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              2224.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3407.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.632 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 308461.253 ops/s
[info]                  ·gc.alloc.rate:      435.872 MB/sec
[info]                  ·gc.alloc.rate.norm: 2224.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala":
[info]   307775.890 ±(99.9%) 2516.727 ops/s [Average]
[info]   (min, avg, max) = (307037.041, 307775.890, 308470.278), stdev = 653.586
[info]   CI (99.9%): [305259.164, 310292.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   434.958 ±(99.9%) 3.550 MB/sec [Average]
[info]   (min, avg, max) = (433.984, 434.958, 436.011), stdev = 0.922
[info]   CI (99.9%): [431.407, 438.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   2224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2224.001, 2224.001, 2224.002), stdev = 0.001
[info]   CI (99.9%): [2224.001, 2224.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   338.258 ±(99.9%) 1214.140 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 338.258, 667.952), stdev = 315.308
[info]   CI (99.9%): [≈ 0, 1552.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1729.585 ±(99.9%) 6204.234 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1729.585, 3407.083), stdev = 1611.220
[info]   CI (99.9%): [≈ 0, 7933.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.425 ±(99.9%) 3.572 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.425, 2.084), stdev = 0.928
[info]   CI (99.9%): [≈ 0, 3.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.169 ±(99.9%) 18.221 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.169, 10.632), stdev = 4.732
[info]   CI (99.9%): [≈ 0, 20.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.94% complete, ETA 01:20:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 652844.491 ops/s
[info] # Warmup Iteration   2: 688111.031 ops/s
[info] # Warmup Iteration   3: 692091.647 ops/s
[info] # Warmup Iteration   4: 703830.307 ops/s
[info] # Warmup Iteration   5: 705188.892 ops/s
[info] Iteration   1: 707136.840 ops/s
[info]                  ·gc.alloc.rate:                   460.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1138.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 702157.914 ops/s
[info]                  ·gc.alloc.rate:               456.878 MB/sec
[info]                  ·gc.alloc.rate.norm:          1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1146.765 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 707698.896 ops/s
[info]                  ·gc.alloc.rate:      460.510 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 707532.168 ops/s
[info]                  ·gc.alloc.rate:                   460.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1498.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.620 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.604 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 708245.596 ops/s
[info]                  ·gc.alloc.rate:                   460.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1496.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala":
[info]   706554.283 ±(99.9%) 9586.939 ops/s [Average]
[info]   (min, avg, max) = (702157.914, 706554.283, 708245.596), stdev = 2489.698
[info]   CI (99.9%): [696967.344, 716141.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   459.753 ±(99.9%) 6.248 MB/sec [Average]
[info]   (min, avg, max) = (456.878, 459.753, 460.801), stdev = 1.623
[info]   CI (99.9%): [453.505, 466.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1024.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1024.001, 1024.001, 1024.001), stdev = 0.001
[info]   CI (99.9%): [1024.001, 1024.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   474.068 ±(99.9%) 1066.953 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 474.068, 673.556), stdev = 277.084
[info]   CI (99.9%): [≈ 0, 1541.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1056.005 ±(99.9%) 2373.449 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1056.005, 1498.116), stdev = 616.377
[info]   CI (99.9%): [≈ 0, 3429.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.339 ±(99.9%) 2.761 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.339, 1.620), stdev = 0.717
[info]   CI (99.9%): [≈ 0, 3.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.753 ±(99.9%) 6.140 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.753, 3.604), stdev = 1.595
[info]   CI (99.9%): [≈ 0, 6.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 29.18% complete, ETA 01:20:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43210.920 ops/s
[info] # Warmup Iteration   2: 70214.605 ops/s
[info] # Warmup Iteration   3: 70223.782 ops/s
[info] # Warmup Iteration   4: 71155.136 ops/s
[info] # Warmup Iteration   5: 71055.746 ops/s
[info] Iteration   1: 73298.368 ops/s
[info]                  ·gc.alloc.rate:                   3114.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              66856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2699.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57941.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.894 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 73287.963 ops/s
[info]                  ·gc.alloc.rate:                   3113.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              66856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3382.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72645.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.235 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 72983.648 ops/s
[info]                  ·gc.alloc.rate:                   3100.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              66856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3390.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73107.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.347 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 71068.419 ops/s
[info]                  ·gc.alloc.rate:                   3018.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              66856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2716.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60158.876 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.922 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 70951.355 ops/s
[info]                  ·gc.alloc.rate:                   3015.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              66856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2720.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60315.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.923 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson":
[info]   72317.951 ±(99.9%) 4626.468 ops/s [Average]
[info]   (min, avg, max) = (70951.355, 72317.951, 73298.368), stdev = 1201.479
[info]   CI (99.9%): [67691.483, 76944.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3072.476 ±(99.9%) 196.510 MB/sec [Average]
[info]   (min, avg, max) = (3015.017, 3072.476, 3114.843), stdev = 51.033
[info]   CI (99.9%): [2875.967, 3268.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   66856.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (66856.006, 66856.006, 66856.006), stdev = 0.001
[info]   CI (99.9%): [66856.006, 66856.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2981.834 ±(99.9%) 1423.115 MB/sec [Average]
[info]   (min, avg, max) = (2699.497, 2981.834, 3390.309), stdev = 369.579
[info]   CI (99.9%): [1558.718, 4404.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   64833.659 ±(99.9%) 28508.600 B/op [Average]
[info]   (min, avg, max) = (57941.147, 64833.659, 73107.688), stdev = 7403.593
[info]   CI (99.9%): [36325.059, 93342.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.264 ±(99.9%) 2.212 B/op [Average]
[info]   (min, avg, max) = (0.894, 1.264, 2.235), stdev = 0.574
[info]   CI (99.9%): [≈ 0, 3.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 29.41% complete, ETA 01:20:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 154780.796 ops/s
[info] # Warmup Iteration   2: 211685.595 ops/s
[info] # Warmup Iteration   3: 214259.040 ops/s
[info] # Warmup Iteration   4: 215403.460 ops/s
[info] # Warmup Iteration   5: 215710.219 ops/s
[info] Iteration   1: 213107.438 ops/s
[info]                  ·gc.alloc.rate:                   1732.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              12792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14879.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.461 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 214385.324 ops/s
[info]                  ·gc.alloc.rate:                   1742.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              12792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14818.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.764 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 216195.069 ops/s
[info]                  ·gc.alloc.rate:                   1757.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              12792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9812.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 210628.205 ops/s
[info]                  ·gc.alloc.rate:                   1711.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              12792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15129.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 215824.855 ops/s
[info]                  ·gc.alloc.rate:                   1754.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              12792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9856.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce":
[info]   214028.178 ±(99.9%) 8708.459 ops/s [Average]
[info]   (min, avg, max) = (210628.205, 214028.178, 216195.069), stdev = 2261.559
[info]   CI (99.9%): [205319.719, 222736.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1739.614 ±(99.9%) 70.844 MB/sec [Average]
[info]   (min, avg, max) = (1711.920, 1739.614, 1757.195), stdev = 18.398
[info]   CI (99.9%): [1668.770, 1810.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12792.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12792.002, 12792.002, 12792.002), stdev = 0.001
[info]   CI (99.9%): [12792.002, 12792.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1751.561 ±(99.9%) 1412.355 MB/sec [Average]
[info]   (min, avg, max) = (1347.946, 1751.561, 2024.682), stdev = 366.784
[info]   CI (99.9%): [339.207, 3163.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12899.302 ±(99.9%) 10781.871 B/op [Average]
[info]   (min, avg, max) = (9812.760, 12899.302, 15129.053), stdev = 2800.018
[info]   CI (99.9%): [2117.431, 23681.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.398 ±(99.9%) 0.893 B/op [Average]
[info]   (min, avg, max) = (0.152, 0.398, 0.764), stdev = 0.232
[info]   CI (99.9%): [≈ 0, 1.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 29.65% complete, ETA 01:20:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12700.721 ops/s
[info] # Warmup Iteration   2: 941608.347 ops/s
[info] # Warmup Iteration   3: 948399.570 ops/s
[info] # Warmup Iteration   4: 944312.579 ops/s
[info] # Warmup Iteration   5: 945685.052 ops/s
[info] Iteration   1: 947676.147 ops/s
[info]                  ·gc.alloc.rate:               515.502 MB/sec
[info]                  ·gc.alloc.rate.norm:          856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 849.620 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 947765.728 ops/s
[info]                  ·gc.alloc.rate:      515.548 MB/sec
[info]                  ·gc.alloc.rate.norm: 856.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 945770.717 ops/s
[info]                  ·gc.alloc.rate:               514.575 MB/sec
[info]                  ·gc.alloc.rate.norm:          856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1104.656 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 945725.090 ops/s
[info]                  ·gc.alloc.rate:                   514.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1104.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 926365.861 ops/s
[info]                  ·gc.alloc.rate:               503.834 MB/sec
[info]                  ·gc.alloc.rate.norm:          856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1130.046 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava":
[info]   942660.709 ±(99.9%) 35281.255 ops/s [Average]
[info]   (min, avg, max) = (926365.861, 942660.709, 947765.728), stdev = 9162.430
[info]   CI (99.9%): [907379.453, 977941.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   512.764 ±(99.9%) 19.331 MB/sec [Average]
[info]   (min, avg, max) = (503.834, 512.764, 515.548), stdev = 5.020
[info]   CI (99.9%): [493.432, 532.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (856.000, 856.000, 856.001), stdev = 0.001
[info]   CI (99.9%): [856.000, 856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   500.930 ±(99.9%) 1107.931 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 500.930, 665.135), stdev = 287.726
[info]   CI (99.9%): [≈ 0, 1608.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   837.806 ±(99.9%) 1856.621 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 837.806, 1130.046), stdev = 482.159
[info]   CI (99.9%): [≈ 0, 2694.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.035), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.88% complete, ETA 01:19:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 587649.337 ops/s
[info] # Warmup Iteration   2: 843442.669 ops/s
[info] # Warmup Iteration   3: 848446.126 ops/s
[info] # Warmup Iteration   4: 863298.447 ops/s
[info] # Warmup Iteration   5: 859936.409 ops/s
[info] Iteration   1: 869382.549 ops/s
[info]                  ·gc.alloc.rate:                   684.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              1240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1208.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.772 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 860573.919 ops/s
[info]                  ·gc.alloc.rate:               678.037 MB/sec
[info]                  ·gc.alloc.rate.norm:          1240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1221.324 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 858018.934 ops/s
[info]                  ·gc.alloc.rate:                   676.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              1240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1225.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 871926.481 ops/s
[info]                  ·gc.alloc.rate:                   686.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              1240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1205.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 866505.858 ops/s
[info]                  ·gc.alloc.rate:                   682.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              1240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1213.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala":
[info]   865281.548 ±(99.9%) 22566.517 ops/s [Average]
[info]   (min, avg, max) = (858018.934, 865281.548, 871926.481), stdev = 5860.453
[info]   CI (99.9%): [842715.032, 887848.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   681.739 ±(99.9%) 17.669 MB/sec [Average]
[info]   (min, avg, max) = (676.077, 681.739, 686.962), stdev = 4.589
[info]   CI (99.9%): [664.070, 699.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1240.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1240.000, 1240.001, 1240.001), stdev = 0.001
[info]   CI (99.9%): [1240.000, 1240.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   668.009 ±(99.9%) 0.737 MB/sec [Average]
[info]   (min, avg, max) = (667.784, 668.009, 668.210), stdev = 0.191
[info]   CI (99.9%): [667.272, 668.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1215.072 ±(99.9%) 31.771 B/op [Average]
[info]   (min, avg, max) = (1205.966, 1215.072, 1225.570), stdev = 8.251
[info]   CI (99.9%): [1183.302, 1246.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.433 ±(99.9%) 3.553 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.433, 2.084), stdev = 0.923
[info]   CI (99.9%): [≈ 0, 3.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.785 ±(99.9%) 6.432 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.785, 3.772), stdev = 1.670
[info]   CI (99.9%): [≈ 0, 7.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.12% complete, ETA 01:19:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 904741.826 ops/s
[info] # Warmup Iteration   2: 995890.451 ops/s
[info] # Warmup Iteration   3: 997432.920 ops/s
[info] # Warmup Iteration   4: 999681.718 ops/s
[info] # Warmup Iteration   5: 1026030.629 ops/s
[info] Iteration   1: 1032856.786 ops/s
[info]                  ·gc.alloc.rate:               561.973 MB/sec
[info]                  ·gc.alloc.rate.norm:          856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 779.579 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1032492.845 ops/s
[info]                  ·gc.alloc.rate:                   561.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1025.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.741 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.653 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1024498.887 ops/s
[info]                  ·gc.alloc.rate:                   557.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1033.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1033524.517 ops/s
[info]                  ·gc.alloc.rate:      562.101 MB/sec
[info]                  ·gc.alloc.rate.norm: 856.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1034222.980 ops/s
[info]                  ·gc.alloc.rate:               562.485 MB/sec
[info]                  ·gc.alloc.rate.norm:          856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1022.850 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala":
[info]   1031519.203 ±(99.9%) 15324.601 ops/s [Average]
[info]   (min, avg, max) = (1024498.887, 1031519.203, 1034222.980), stdev = 3979.750
[info]   CI (99.9%): [1016194.602, 1046843.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   561.083 ±(99.9%) 8.407 MB/sec [Average]
[info]   (min, avg, max) = (557.215, 561.083, 562.485), stdev = 2.183
[info]   CI (99.9%): [552.676, 569.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (856.000, 856.000, 856.000), stdev = 0.001
[info]   CI (99.9%): [856.000, 856.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   505.932 ±(99.9%) 1121.583 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 505.932, 672.908), stdev = 291.271
[info]   CI (99.9%): [≈ 0, 1627.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   772.323 ±(99.9%) 1713.112 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 772.323, 1033.605), stdev = 444.890
[info]   CI (99.9%): [≈ 0, 2485.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.361 ±(99.9%) 2.973 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.361, 1.741), stdev = 0.772
[info]   CI (99.9%): [≈ 0, 3.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.550 ±(99.9%) 4.530 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.550, 2.653), stdev = 1.176
[info]   CI (99.9%): [≈ 0, 5.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 30.35% complete, ETA 01:19:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 927726.446 ops/s
[info] # Warmup Iteration   2: 1005810.299 ops/s
[info] # Warmup Iteration   3: 1008213.723 ops/s
[info] # Warmup Iteration   4: 1008447.816 ops/s
[info] # Warmup Iteration   5: 1007777.298 ops/s
[info] Iteration   1: 1008694.920 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1008297.348 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1008284.831 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1007925.879 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1007905.791 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   1008221.754 ±(99.9%) 1249.168 ops/s [Average]
[info]   (min, avg, max) = (1007905.791, 1008221.754, 1008694.920), stdev = 324.405
[info]   CI (99.9%): [1006972.586, 1009470.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 30.59% complete, ETA 01:19:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21552.512 ops/s
[info] # Warmup Iteration   2: 29624.823 ops/s
[info] # Warmup Iteration   3: 30190.106 ops/s
[info] # Warmup Iteration   4: 30764.542 ops/s
[info] # Warmup Iteration   5: 30333.638 ops/s
[info] Iteration   1: 30454.581 ops/s
[info]                  ·gc.alloc.rate:                   1680.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              86872.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69316.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.227 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 30691.606 ops/s
[info]                  ·gc.alloc.rate:                   1694.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              86872.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103313.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.270 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 30790.744 ops/s
[info]                  ·gc.alloc.rate:                   1699.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              86872.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68779.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 30397.737 ops/s
[info]                  ·gc.alloc.rate:                   1677.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              86872.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104695.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.467 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 30259.466 ops/s
[info]                  ·gc.alloc.rate:                   1670.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              86872.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70208.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.413 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson":
[info]   30518.827 ±(99.9%) 838.897 ops/s [Average]
[info]   (min, avg, max) = (30259.466, 30518.827, 30790.744), stdev = 217.859
[info]   CI (99.9%): [29679.930, 31357.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1684.528 ±(99.9%) 46.456 MB/sec [Average]
[info]   (min, avg, max) = (1670.175, 1684.528, 1699.577), stdev = 12.065
[info]   CI (99.9%): [1638.072, 1730.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   86872.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (86872.014, 86872.014, 86872.015), stdev = 0.001
[info]   CI (99.9%): [86872.012, 86872.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1614.696 ±(99.9%) 1419.154 MB/sec [Average]
[info]   (min, avg, max) = (1341.263, 1614.696, 2022.048), stdev = 368.550
[info]   CI (99.9%): [195.541, 3033.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   83262.693 ±(99.9%) 72961.338 B/op [Average]
[info]   (min, avg, max) = (68779.177, 83262.693, 104695.495), stdev = 18947.828
[info]   CI (99.9%): [10301.355, 156224.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.079, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.088 ±(99.9%) 8.016 B/op [Average]
[info]   (min, avg, max) = (1.064, 4.088, 6.467), stdev = 2.082
[info]   CI (99.9%): [≈ 0, 12.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 30.82% complete, ETA 01:18:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 90926.275 ops/s
[info] # Warmup Iteration   2: 123577.519 ops/s
[info] # Warmup Iteration   3: 126186.627 ops/s
[info] # Warmup Iteration   4: 126618.061 ops/s
[info] # Warmup Iteration   5: 126836.968 ops/s
[info] Iteration   1: 126058.339 ops/s
[info]                  ·gc.alloc.rate:                   1733.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              21648.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25141.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.780 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 126610.400 ops/s
[info]                  ·gc.alloc.rate:               1741.800 MB/sec
[info]                  ·gc.alloc.rate.norm:          21648.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16718.721 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 126015.032 ops/s
[info]                  ·gc.alloc.rate:                   1733.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              21648.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25233.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.300 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 126673.223 ops/s
[info]                  ·gc.alloc.rate:                   1742.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              21648.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25151.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.810 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 126598.127 ops/s
[info]                  ·gc.alloc.rate:               1741.387 MB/sec
[info]                  ·gc.alloc.rate.norm:          21648.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16802.457 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce":
[info]   126391.025 ±(99.9%) 1251.760 ops/s [Average]
[info]   (min, avg, max) = (126015.032, 126391.025, 126673.223), stdev = 325.078
[info]   CI (99.9%): [125139.264, 127642.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1738.546 ±(99.9%) 17.569 MB/sec [Average]
[info]   (min, avg, max) = (1733.296, 1738.546, 1742.406), stdev = 4.563
[info]   CI (99.9%): [1720.977, 1756.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   21648.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (21648.003, 21648.003, 21648.004), stdev = 0.001
[info]   CI (99.9%): [21648.003, 21648.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1751.053 ±(99.9%) 1415.493 MB/sec [Average]
[info]   (min, avg, max) = (1345.189, 1751.053, 2024.397), stdev = 367.599
[info]   CI (99.9%): [335.560, 3166.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   21809.670 ±(99.9%) 17749.130 B/op [Average]
[info]   (min, avg, max) = (16718.721, 21809.670, 25233.713), stdev = 4609.393
[info]   CI (99.9%): [4060.541, 39558.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.247 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.146), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.778 ±(99.9%) 3.074 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.778, 1.810), stdev = 0.798
[info]   CI (99.9%): [≈ 0, 3.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.06% complete, ETA 01:18:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 120342.249 ops/s
[info] # Warmup Iteration   2: 194738.261 ops/s
[info] # Warmup Iteration   3: 187959.459 ops/s
[info] # Warmup Iteration   4: 196102.238 ops/s
[info] # Warmup Iteration   5: 196192.014 ops/s
[info] Iteration   1: 196096.508 ops/s
[info]                  ·gc.alloc.rate:                   1170.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              9392.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10714.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.501 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 190088.992 ops/s
[info]                  ·gc.alloc.rate:                   1134.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              9392.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11061.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 190217.967 ops/s
[info]                  ·gc.alloc.rate:               1135.122 MB/sec
[info]                  ·gc.alloc.rate.norm:          9392.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5531.121 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 189500.166 ops/s
[info]                  ·gc.alloc.rate:               1130.770 MB/sec
[info]                  ·gc.alloc.rate.norm:          9392.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11114.747 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 189835.791 ops/s
[info]                  ·gc.alloc.rate:                   1132.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              9392.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11117.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.690 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala":
[info]   191147.885 ±(99.9%) 10704.417 ops/s [Average]
[info]   (min, avg, max) = (189500.166, 191147.885, 196096.508), stdev = 2779.903
[info]   CI (99.9%): [180443.468, 201852.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1140.654 ±(99.9%) 63.992 MB/sec [Average]
[info]   (min, avg, max) = (1130.770, 1140.654, 1170.232), stdev = 16.618
[info]   CI (99.9%): [1076.663, 1204.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9392.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9392.002, 9392.002, 9392.002), stdev = 0.001
[info]   CI (99.9%): [9392.002, 9392.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1203.713 ±(99.9%) 1152.131 MB/sec [Average]
[info]   (min, avg, max) = (668.494, 1203.713, 1340.868), stdev = 299.205
[info]   CI (99.9%): [51.582, 2355.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9907.822 ±(99.9%) 9443.211 B/op [Average]
[info]   (min, avg, max) = (5531.121, 9907.822, 11117.286), stdev = 2452.372
[info]   CI (99.9%): [464.611, 19351.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.445 ±(99.9%) 1.729 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.445, 1.034), stdev = 0.449
[info]   CI (99.9%): [≈ 0, 2.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.29% complete, ETA 01:18:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 254420.965 ops/s
[info] # Warmup Iteration   2: 267129.611 ops/s
[info] # Warmup Iteration   3: 270284.566 ops/s
[info] # Warmup Iteration   4: 270987.457 ops/s
[info] # Warmup Iteration   5: 271193.588 ops/s
[info] Iteration   1: 271923.627 ops/s
[info]                  ·gc.alloc.rate:               884.988 MB/sec
[info]                  ·gc.alloc.rate.norm:          5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3894.225 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   2: 271378.730 ops/s
[info]                  ·gc.alloc.rate:                   882.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3902.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 270531.135 ops/s
[info]                  ·gc.alloc.rate:                   880.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3916.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 270786.980 ops/s
[info]                  ·gc.alloc.rate:                   881.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7826.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 264175.988 ops/s
[info]                  ·gc.alloc.rate:               859.402 MB/sec
[info]                  ·gc.alloc.rate.norm:          5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4012.332 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala":
[info]   269759.292 ±(99.9%) 12196.895 ops/s [Average]
[info]   (min, avg, max) = (264175.988, 269759.292, 271923.627), stdev = 3167.495
[info]   CI (99.9%): [257562.397, 281956.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   877.713 ±(99.9%) 40.047 MB/sec [Average]
[info]   (min, avg, max) = (859.402, 877.713, 884.988), stdev = 10.400
[info]   CI (99.9%): [837.666, 917.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5120.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5120.002, 5120.002, 5120.002), stdev = 0.001
[info]   CI (99.9%): [5120.002, 5120.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   807.947 ±(99.9%) 1160.689 MB/sec [Average]
[info]   (min, avg, max) = (672.825, 807.947, 1347.156), stdev = 301.427
[info]   CI (99.9%): [≈ 0, 1968.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4710.334 ±(99.9%) 6711.071 B/op [Average]
[info]   (min, avg, max) = (3894.225, 4710.334, 7826.870), stdev = 1742.844
[info]   CI (99.9%): [≈ 0, 11421.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.255 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.073, 0.121), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 31.53% complete, ETA 01:17:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31852.826 ops/s
[info] # Warmup Iteration   2: 65491.996 ops/s
[info] # Warmup Iteration   3: 66173.709 ops/s
[info] # Warmup Iteration   4: 67453.230 ops/s
[info] # Warmup Iteration   5: 66319.057 ops/s
[info] Iteration   1: 66949.001 ops/s
[info]                  ·gc.alloc.rate:                   2782.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2689.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63234.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.957 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 67426.300 ops/s
[info]                  ·gc.alloc.rate:                   2803.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2699.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62988.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.401 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 68461.197 ops/s
[info]                  ·gc.alloc.rate:                   2846.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2706.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62189.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.479 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 66840.260 ops/s
[info]                  ·gc.alloc.rate:                   2777.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63838.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.980 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 68054.071 ops/s
[info]                  ·gc.alloc.rate:                   2828.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2714.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62776.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.963 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson":
[info]   67546.166 ±(99.9%) 2698.561 ops/s [Average]
[info]   (min, avg, max) = (66840.260, 67546.166, 68461.197), stdev = 700.808
[info]   CI (99.9%): [64847.605, 70244.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2807.718 ±(99.9%) 113.826 MB/sec [Average]
[info]   (min, avg, max) = (2777.758, 2807.718, 2846.347), stdev = 29.560
[info]   CI (99.9%): [2693.893, 2921.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   65408.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (65408.006, 65408.006, 65408.007), stdev = 0.001
[info]   CI (99.9%): [65408.006, 65408.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2704.382 ±(99.9%) 38.166 MB/sec [Average]
[info]   (min, avg, max) = (2689.850, 2704.382, 2714.940), stdev = 9.912
[info]   CI (99.9%): [2666.216, 2742.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   63005.486 ±(99.9%) 2329.031 B/op [Average]
[info]   (min, avg, max) = (62189.904, 63005.486, 63838.095), stdev = 604.842
[info]   CI (99.9%): [60676.455, 65334.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.191 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.146), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.556 ±(99.9%) 4.478 B/op [Average]
[info]   (min, avg, max) = (0.479, 1.556, 3.401), stdev = 1.163
[info]   CI (99.9%): [≈ 0, 6.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 31.76% complete, ETA 01:17:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131998.859 ops/s
[info] # Warmup Iteration   2: 169755.161 ops/s
[info] # Warmup Iteration   3: 172832.851 ops/s
[info] # Warmup Iteration   4: 173242.733 ops/s
[info] # Warmup Iteration   5: 172655.481 ops/s
[info] Iteration   1: 167664.693 ops/s
[info]                  ·gc.alloc.rate:                   1099.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12581.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.391 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 170358.299 ops/s
[info]                  ·gc.alloc.rate:               1117.028 MB/sec
[info]                  ·gc.alloc.rate.norm:          10320.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6191.263 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 174162.654 ops/s
[info]                  ·gc.alloc.rate:                   1141.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12124.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.941 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 173877.112 ops/s
[info]                  ·gc.alloc.rate:                   1140.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12161.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.754 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 174141.243 ops/s
[info]                  ·gc.alloc.rate:                   1141.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12155.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.564 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce":
[info]   172040.800 ±(99.9%) 11270.502 ops/s [Average]
[info]   (min, avg, max) = (167664.693, 172040.800, 174162.654), stdev = 2926.914
[info]   CI (99.9%): [160770.298, 183311.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1128.103 ±(99.9%) 73.962 MB/sec [Average]
[info]   (min, avg, max) = (1099.401, 1128.103, 1141.999), stdev = 19.208
[info]   CI (99.9%): [1054.141, 1202.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10320.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10320.002, 10320.003, 10320.003), stdev = 0.001
[info]   CI (99.9%): [10320.002, 10320.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1208.132 ±(99.9%) 1158.096 MB/sec [Average]
[info]   (min, avg, max) = (670.137, 1208.132, 1344.882), stdev = 300.754
[info]   CI (99.9%): [50.036, 2366.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11042.638 ±(99.9%) 10468.152 B/op [Average]
[info]   (min, avg, max) = (6191.263, 11042.638, 12581.086), stdev = 2718.546
[info]   CI (99.9%): [574.486, 21510.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.530 ±(99.9%) 1.388 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.530, 0.941), stdev = 0.361
[info]   CI (99.9%): [≈ 0, 1.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.00% complete, ETA 01:17:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 395105.169 ops/s
[info] # Warmup Iteration   2: 559722.060 ops/s
[info] # Warmup Iteration   3: 579533.482 ops/s
[info] # Warmup Iteration   4: 562200.862 ops/s
[info] # Warmup Iteration   5: 573259.708 ops/s
[info] Iteration   1: 571810.702 ops/s
[info]                  ·gc.alloc.rate:                   578.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1408.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 555543.997 ops/s
[info]                  ·gc.alloc.rate:                   562.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1890.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.976 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 561249.864 ops/s
[info]                  ·gc.alloc.rate:                   567.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1870.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 553341.019 ops/s
[info]                  ·gc.alloc.rate:               559.815 MB/sec
[info]                  ·gc.alloc.rate.norm:          1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1898.465 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 572791.405 ops/s
[info]                  ·gc.alloc.rate:      579.404 MB/sec
[info]                  ·gc.alloc.rate.norm: 1592.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala":
[info]   562947.397 ±(99.9%) 34732.569 ops/s [Average]
[info]   (min, avg, max) = (553341.019, 562947.397, 572791.405), stdev = 9019.938
[info]   CI (99.9%): [528214.828, 597679.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   569.523 ±(99.9%) 34.829 MB/sec [Average]
[info]   (min, avg, max) = (559.815, 569.523, 579.404), stdev = 9.045
[info]   CI (99.9%): [534.694, 604.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1592.001, 1592.001, 1592.001), stdev = 0.001
[info]   CI (99.9%): [1592.001, 1592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   502.770 ±(99.9%) 1113.003 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 502.770, 667.581), stdev = 289.043
[info]   CI (99.9%): [≈ 0, 1615.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1413.481 ±(99.9%) 3145.633 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1413.481, 1898.465), stdev = 816.911
[info]   CI (99.9%): [≈ 0, 4559.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.446 ±(99.9%) 3.584 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.446, 2.110), stdev = 0.931
[info]   CI (99.9%): [≈ 0, 4.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.262 ±(99.9%) 10.153 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.262, 5.976), stdev = 2.637
[info]   CI (99.9%): [≈ 0, 11.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.24% complete, ETA 01:17:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 523199.436 ops/s
[info] # Warmup Iteration   2: 558301.503 ops/s
[info] # Warmup Iteration   3: 573547.815 ops/s
[info] # Warmup Iteration   4: 574196.939 ops/s
[info] # Warmup Iteration   5: 574713.305 ops/s
[info] Iteration   1: 550330.140 ops/s
[info]                  ·gc.alloc.rate:                   422.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1463.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 575622.206 ops/s
[info]                  ·gc.alloc.rate:               441.889 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1398.854 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 579503.372 ops/s
[info]                  ·gc.alloc.rate:      444.843 MB/sec
[info]                  ·gc.alloc.rate.norm: 1208.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 576217.924 ops/s
[info]                  ·gc.alloc.rate:                   442.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1836.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.762 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.811 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 577810.450 ops/s
[info]                  ·gc.alloc.rate:                   443.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1831.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.170 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala":
[info]   571896.818 ±(99.9%) 46785.829 ops/s [Average]
[info]   (min, avg, max) = (550330.140, 571896.818, 579503.372), stdev = 12150.131
[info]   CI (99.9%): [525110.989, 618682.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   439.019 ±(99.9%) 35.883 MB/sec [Average]
[info]   (min, avg, max) = (422.476, 439.019, 444.843), stdev = 9.319
[info]   CI (99.9%): [403.136, 474.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1208.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1208.001, 1208.001, 1208.001), stdev = 0.001
[info]   CI (99.9%): [1208.001, 1208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.709 ±(99.9%) 1065.698 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.709, 672.584), stdev = 276.758
[info]   CI (99.9%): [≈ 0, 1539.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1306.095 ±(99.9%) 2918.034 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1306.095, 1836.760), stdev = 757.804
[info]   CI (99.9%): [≈ 0, 4224.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.370 ±(99.9%) 2.997 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.370, 1.762), stdev = 0.778
[info]   CI (99.9%): [≈ 0, 3.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.011 ±(99.9%) 8.182 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.011, 4.811), stdev = 2.125
[info]   CI (99.9%): [≈ 0, 9.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 32.47% complete, ETA 01:16:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 538503.388 ops/s
[info] # Warmup Iteration   2: 585460.812 ops/s
[info] # Warmup Iteration   3: 590595.458 ops/s
[info] # Warmup Iteration   4: 590184.961 ops/s
[info] # Warmup Iteration   5: 590812.425 ops/s
[info] Iteration   1: 590743.213 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 568670.597 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 590477.359 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 590464.866 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 590559.038 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   586183.014 ±(99.9%) 37699.231 ops/s [Average]
[info]   (min, avg, max) = (568670.597, 586183.014, 590743.213), stdev = 9790.370
[info]   CI (99.9%): [548483.784, 623882.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 32.71% complete, ETA 01:16:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 200300.118 ops/s
[info] # Warmup Iteration   2: 319929.760 ops/s
[info] # Warmup Iteration   3: 318269.992 ops/s
[info] # Warmup Iteration   4: 318735.421 ops/s
[info] # Warmup Iteration   5: 320487.741 ops/s
[info] Iteration   1: 321092.001 ops/s
[info]                  ·gc.alloc.rate:                   884.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3268.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 328191.350 ops/s
[info]                  ·gc.alloc.rate:                   904.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6395.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 331144.928 ops/s
[info]                  ·gc.alloc.rate:               912.420 MB/sec
[info]                  ·gc.alloc.rate.norm:          4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3170.787 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 319542.181 ops/s
[info]                  ·gc.alloc.rate:                   880.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6575.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 321061.365 ops/s
[info]                  ·gc.alloc.rate:               884.494 MB/sec
[info]                  ·gc.alloc.rate.norm:          4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3273.688 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson":
[info]   324206.365 ±(99.9%) 19763.284 ops/s [Average]
[info]   (min, avg, max) = (319542.181, 324206.365, 331144.928), stdev = 5132.462
[info]   CI (99.9%): [304443.081, 343969.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   893.283 ±(99.9%) 54.719 MB/sec [Average]
[info]   (min, avg, max) = (880.454, 893.283, 912.420), stdev = 14.210
[info]   CI (99.9%): [838.564, 948.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4336.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4336.001, 4336.001, 4336.001), stdev = 0.001
[info]   CI (99.9%): [4336.001, 4336.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   934.183 ±(99.9%) 1407.295 MB/sec [Average]
[info]   (min, avg, max) = (666.825, 934.183, 1335.099), stdev = 365.470
[info]   CI (99.9%): [≈ 0, 2341.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4536.647 ±(99.9%) 6855.355 B/op [Average]
[info]   (min, avg, max) = (3170.787, 4536.647, 6575.008), stdev = 1780.314
[info]   CI (99.9%): [≈ 0, 11392.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.122 ±(99.9%) 0.515 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.122, 0.308), stdev = 0.134
[info]   CI (99.9%): [≈ 0, 0.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 32.94% complete, ETA 01:16:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6842.274 ops/s
[info] # Warmup Iteration   2: 9482.296 ops/s
[info] # Warmup Iteration   3: 9607.407 ops/s
[info] # Warmup Iteration   4: 9620.375 ops/s
[info] # Warmup Iteration   5: 9637.847 ops/s
[info] Iteration   1: 9631.587 ops/s
[info]                  ·gc.alloc.rate:                   1261.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              206160.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219664.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.607 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 9499.541 ops/s
[info]                  ·gc.alloc.rate:                   1244.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              206164.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     222826.539 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.449 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 9639.115 ops/s
[info]                  ·gc.alloc.rate:               1263.217 MB/sec
[info]                  ·gc.alloc.rate.norm:          206160.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 109904.164 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 9631.692 ops/s
[info]                  ·gc.alloc.rate:                   1261.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              206160.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220099.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.205 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 9627.430 ops/s
[info]                  ·gc.alloc.rate:               1261.248 MB/sec
[info]                  ·gc.alloc.rate.norm:          206160.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 220408.955 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce":
[info]   9605.873 ±(99.9%) 229.461 ops/s [Average]
[info]   (min, avg, max) = (9499.541, 9605.873, 9639.115), stdev = 59.590
[info]   CI (99.9%): [9376.412, 9835.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1258.563 ±(99.9%) 30.068 MB/sec [Average]
[info]   (min, avg, max) = (1244.655, 1258.563, 1263.217), stdev = 7.809
[info]   CI (99.9%): [1228.495, 1288.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   206160.860 ±(99.9%) 7.018 B/op [Average]
[info]   (min, avg, max) = (206160.045, 206160.860, 206164.120), stdev = 1.822
[info]   CI (99.9%): [206153.842, 206167.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1211.753 ±(99.9%) 1158.812 MB/sec [Average]
[info]   (min, avg, max) = (673.423, 1211.753, 1348.420), stdev = 300.940
[info]   CI (99.9%): [52.941, 2370.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   198580.740 ±(99.9%) 190941.556 B/op [Average]
[info]   (min, avg, max) = (109904.164, 198580.740, 222826.539), stdev = 49586.916
[info]   CI (99.9%): [7639.185, 389522.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.452 ±(99.9%) 23.780 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.452, 13.607), stdev = 6.176
[info]   CI (99.9%): [≈ 0, 29.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.18% complete, ETA 01:16:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5787.322 ops/s
[info] # Warmup Iteration   2: 9428.277 ops/s
[info] # Warmup Iteration   3: 9602.375 ops/s
[info] # Warmup Iteration   4: 9662.306 ops/s
[info] # Warmup Iteration   5: 9683.740 ops/s
[info] Iteration   1: 9664.759 ops/s
[info]                  ·gc.alloc.rate:                   1158.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              188592.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217644.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.948 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 9320.820 ops/s
[info]                  ·gc.alloc.rate:               1117.118 MB/sec
[info]                  ·gc.alloc.rate.norm:          188599.956 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112865.603 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 9665.116 ops/s
[info]                  ·gc.alloc.rate:                   1158.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              188624.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217915.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.948 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 9383.401 ops/s
[info]                  ·gc.alloc.rate:                   1124.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              188624.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     224686.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.966 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 9378.019 ops/s
[info]                  ·gc.alloc.rate:               1123.960 MB/sec
[info]                  ·gc.alloc.rate.norm:          188624.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112571.006 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala":
[info]   9482.423 ±(99.9%) 648.477 ops/s [Average]
[info]   (min, avg, max) = (9320.820, 9482.423, 9665.116), stdev = 168.407
[info]   CI (99.9%): [8833.946, 10130.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1136.482 ±(99.9%) 77.629 MB/sec [Average]
[info]   (min, avg, max) = (1117.118, 1136.482, 1158.337), stdev = 20.160
[info]   CI (99.9%): [1058.852, 1214.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   188612.881 ±(99.9%) 60.309 B/op [Average]
[info]   (min, avg, max) = (188592.045, 188612.881, 188624.313), stdev = 15.662
[info]   CI (99.9%): [188552.572, 188673.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1070.795 ±(99.9%) 1410.078 MB/sec [Average]
[info]   (min, avg, max) = (668.527, 1070.795, 1339.699), stdev = 366.193
[info]   CI (99.9%): [≈ 0, 2480.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   177136.664 ±(99.9%) 226700.437 B/op [Average]
[info]   (min, avg, max) = (112571.006, 177136.664, 224686.877), stdev = 58873.384
[info]   CI (99.9%): [≈ 0, 403837.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.207 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   9.573 ±(99.9%) 33.974 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.573, 16.948), stdev = 8.823
[info]   CI (99.9%): [≈ 0, 43.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.41% complete, ETA 01:15:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 197733.397 ops/s
[info] # Warmup Iteration   2: 214967.175 ops/s
[info] # Warmup Iteration   3: 218329.008 ops/s
[info] # Warmup Iteration   4: 219356.571 ops/s
[info] # Warmup Iteration   5: 220007.012 ops/s
[info] Iteration   1: 219687.977 ops/s
[info]                  ·gc.alloc.rate:                   1429.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              10240.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14479.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.447 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 211603.327 ops/s
[info]                  ·gc.alloc.rate:               1376.879 MB/sec
[info]                  ·gc.alloc.rate.norm:          10240.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10028.530 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 213637.629 ops/s
[info]                  ·gc.alloc.rate:                   1390.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              10240.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9942.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.613 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 212590.993 ops/s
[info]                  ·gc.alloc.rate:                   1383.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              10240.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10001.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 212951.531 ops/s
[info]                  ·gc.alloc.rate:               1386.184 MB/sec
[info]                  ·gc.alloc.rate.norm:          10240.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9994.081 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala":
[info]   214094.291 ±(99.9%) 12368.386 ops/s [Average]
[info]   (min, avg, max) = (211603.327, 214094.291, 219687.977), stdev = 3212.031
[info]   CI (99.9%): [201725.905, 226462.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1393.287 ±(99.9%) 81.052 MB/sec [Average]
[info]   (min, avg, max) = (1376.879, 1393.287, 1429.926), stdev = 21.049
[info]   CI (99.9%): [1312.235, 1474.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10240.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10240.002, 10240.002, 10240.002), stdev = 0.001
[info]   CI (99.9%): [10240.002, 10240.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1484.833 ±(99.9%) 1156.290 MB/sec [Average]
[info]   (min, avg, max) = (1348.444, 1484.833, 2021.991), stdev = 300.285
[info]   CI (99.9%): [328.542, 2641.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10889.297 ±(99.9%) 7729.972 B/op [Average]
[info]   (min, avg, max) = (9942.830, 10889.297, 14479.903), stdev = 2007.449
[info]   CI (99.9%): [3159.324, 18619.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.243 ±(99.9%) 1.063 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.243, 0.613), stdev = 0.276
[info]   CI (99.9%): [≈ 0, 1.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 33.65% complete, ETA 01:15:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4379.396 ops/s
[info] # Warmup Iteration   2: 7250.199 ops/s
[info] # Warmup Iteration   3: 7626.786 ops/s
[info] # Warmup Iteration   4: 7537.547 ops/s
[info] # Warmup Iteration   5: 7449.348 ops/s
[info] Iteration   1: 7634.901 ops/s
[info]                  ·gc.alloc.rate:                   1422.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              293096.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     275876.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.165 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 7382.645 ops/s
[info]                  ·gc.alloc.rate:                   1374.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              293096.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285575.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.313 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7611.724 ops/s
[info]                  ·gc.alloc.rate:               1417.576 MB/sec
[info]                  ·gc.alloc.rate.norm:          293096.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 277329.276 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 7576.509 ops/s
[info]                  ·gc.alloc.rate:                   1410.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              293097.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     279025.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.972 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7590.055 ops/s
[info]                  ·gc.alloc.rate:               1413.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          293096.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 278925.083 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson":
[info]   7559.167 ±(99.9%) 389.432 ops/s [Average]
[info]   (min, avg, max) = (7382.645, 7559.167, 7634.901), stdev = 101.134
[info]   CI (99.9%): [7169.735, 7948.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1407.854 ±(99.9%) 72.821 MB/sec [Average]
[info]   (min, avg, max) = (1374.851, 1407.854, 1422.038), stdev = 18.911
[info]   CI (99.9%): [1335.033, 1480.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   293096.360 ±(99.9%) 2.596 B/op [Average]
[info]   (min, avg, max) = (293096.057, 293096.360, 293097.566), stdev = 0.674
[info]   CI (99.9%): [293093.764, 293098.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1341.617 ±(99.9%) 10.840 MB/sec [Average]
[info]   (min, avg, max) = (1338.490, 1341.617, 1345.512), stdev = 2.815
[info]   CI (99.9%): [1330.777, 1352.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   279346.142 ±(99.9%) 14303.136 B/op [Average]
[info]   (min, avg, max) = (275876.006, 279346.142, 285575.073), stdev = 3714.479
[info]   CI (99.9%): [265043.006, 293649.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.690 ±(99.9%) 31.198 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.690, 17.165), stdev = 8.102
[info]   CI (99.9%): [≈ 0, 39.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 33.88% complete, ETA 01:15:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14496.252 ops/s
[info] # Warmup Iteration   2: 19875.958 ops/s
[info] # Warmup Iteration   3: 19871.173 ops/s
[info] # Warmup Iteration   4: 20289.795 ops/s
[info] # Warmup Iteration   5: 20184.280 ops/s
[info] Iteration   1: 20127.950 ops/s
[info]                  ·gc.alloc.rate:               1069.490 MB/sec
[info]                  ·gc.alloc.rate.norm:          83623.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52397.549 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 20294.316 ops/s
[info]                  ·gc.alloc.rate:                   1077.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              83576.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103984.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.843 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 20223.815 ops/s
[info]                  ·gc.alloc.rate:               1073.932 MB/sec
[info]                  ·gc.alloc.rate.norm:          83576.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52229.214 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 20202.537 ops/s
[info]                  ·gc.alloc.rate:                   1072.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              83576.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104618.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.108 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 20129.600 ops/s
[info]                  ·gc.alloc.rate:                   1068.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              83576.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105102.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.628 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce":
[info]   20195.644 ±(99.9%) 269.005 ops/s [Average]
[info]   (min, avg, max) = (20127.950, 20195.644, 20294.316), stdev = 69.860
[info]   CI (99.9%): [19926.638, 20464.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1072.612 ±(99.9%) 13.962 MB/sec [Average]
[info]   (min, avg, max) = (1068.947, 1072.612, 1077.868), stdev = 3.626
[info]   CI (99.9%): [1058.649, 1086.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   83585.457 ±(99.9%) 81.238 B/op [Average]
[info]   (min, avg, max) = (83576.021, 83585.457, 83623.197), stdev = 21.097
[info]   CI (99.9%): [83504.219, 83666.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1073.910 ±(99.9%) 1417.583 MB/sec [Average]
[info]   (min, avg, max) = (670.133, 1073.910, 1344.272), stdev = 368.142
[info]   CI (99.9%): [≈ 0, 2491.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   83666.528 ±(99.9%) 110221.536 B/op [Average]
[info]   (min, avg, max) = (52229.214, 83666.528, 105102.388), stdev = 28624.183
[info]   CI (99.9%): [≈ 0, 193888.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.916 ±(99.9%) 13.524 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.916, 8.108), stdev = 3.512
[info]   CI (99.9%): [≈ 0, 16.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.12% complete, ETA 01:15:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15077.579 ops/s
[info] # Warmup Iteration   2: 22130.303 ops/s
[info] # Warmup Iteration   3: 21624.858 ops/s
[info] # Warmup Iteration   4: 21725.342 ops/s
[info] # Warmup Iteration   5: 22180.761 ops/s
[info] Iteration   1: 21915.928 ops/s
[info]                  ·gc.alloc.rate:                   929.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              66696.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47982.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.990 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 21545.705 ops/s
[info]                  ·gc.alloc.rate:               913.114 MB/sec
[info]                  ·gc.alloc.rate.norm:          66696.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 48806.057 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 21347.154 ops/s
[info]                  ·gc.alloc.rate:                   904.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              66696.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98571.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.139 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 22185.123 ops/s
[info]                  ·gc.alloc.rate:               940.177 MB/sec
[info]                  ·gc.alloc.rate.norm:          66696.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47471.363 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 22177.656 ops/s
[info]                  ·gc.alloc.rate:                   940.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              66696.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94942.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.952 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala":
[info]   21834.313 ±(99.9%) 1451.329 ops/s [Average]
[info]   (min, avg, max) = (21347.154, 21834.313, 22185.123), stdev = 376.906
[info]   CI (99.9%): [20382.984, 23285.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   925.425 ±(99.9%) 61.723 MB/sec [Average]
[info]   (min, avg, max) = (904.695, 925.425, 940.177), stdev = 16.029
[info]   CI (99.9%): [863.702, 987.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   66696.020 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (66696.019, 66696.020, 66696.020), stdev = 0.001
[info]   CI (99.9%): [66696.018, 66696.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   936.211 ±(99.9%) 1411.182 MB/sec [Average]
[info]   (min, avg, max) = (668.188, 936.211, 1338.275), stdev = 366.479
[info]   CI (99.9%): [≈ 0, 2347.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   67554.717 ±(99.9%) 102785.213 B/op [Average]
[info]   (min, avg, max) = (47471.363, 67554.717, 98571.055), stdev = 26692.993
[info]   CI (99.9%): [≈ 0, 170339.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.416 ±(99.9%) 9.846 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.416, 6.139), stdev = 2.557
[info]   CI (99.9%): [≈ 0, 12.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.35% complete, ETA 01:14:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 649820.808 ops/s
[info] # Warmup Iteration   2: 748620.652 ops/s
[info] # Warmup Iteration   3: 756930.992 ops/s
[info] # Warmup Iteration   4: 758632.601 ops/s
[info] # Warmup Iteration   5: 759265.777 ops/s
[info] Iteration   1: 759691.343 ops/s
[info]                  ·gc.alloc.rate:                   1370.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              2840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2787.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 752273.713 ops/s
[info]                  ·gc.alloc.rate:                   1358.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              2840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2815.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.218 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 751116.368 ops/s
[info]                  ·gc.alloc.rate:               1355.664 MB/sec
[info]                  ·gc.alloc.rate.norm:          2840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2822.426 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 754506.518 ops/s
[info]                  ·gc.alloc.rate:                   1361.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              2840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2812.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 758555.930 ops/s
[info]                  ·gc.alloc.rate:                   1369.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              2840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2800.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala":
[info]   755228.774 ±(99.9%) 14555.029 ops/s [Average]
[info]   (min, avg, max) = (751116.368, 755228.774, 759691.343), stdev = 3779.895
[info]   CI (99.9%): [740673.745, 769783.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1363.055 ±(99.9%) 25.763 MB/sec [Average]
[info]   (min, avg, max) = (1355.664, 1363.055, 1370.770), stdev = 6.691
[info]   CI (99.9%): [1337.292, 1388.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2840.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2840.001, 2840.001, 2840.001), stdev = 0.001
[info]   CI (99.9%): [2840.001, 2840.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1347.537 ±(99.9%) 7.364 MB/sec [Average]
[info]   (min, avg, max) = (1345.198, 1347.537, 1350.304), stdev = 1.912
[info]   CI (99.9%): [1340.173, 1354.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2807.721 ±(99.9%) 53.889 B/op [Average]
[info]   (min, avg, max) = (2787.019, 2807.721, 2822.426), stdev = 13.995
[info]   CI (99.9%): [2753.832, 2861.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.104 ±(99.9%) 0.304 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.104, 0.218), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 34.59% complete, ETA 01:14:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 585733.792 ops/s
[info] # Warmup Iteration   2: 648899.649 ops/s
[info] # Warmup Iteration   3: 651894.429 ops/s
[info] # Warmup Iteration   4: 651529.495 ops/s
[info] # Warmup Iteration   5: 651816.589 ops/s
[info] Iteration   1: 650667.335 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 651897.841 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 653948.951 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 653249.934 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 651701.017 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   652293.015 ±(99.9%) 5023.312 ops/s [Average]
[info]   (min, avg, max) = (650667.335, 652293.015, 653948.951), stdev = 1304.538
[info]   CI (99.9%): [647269.704, 657316.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 34.82% complete, ETA 01:14:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15888.939 ops/s
[info] # Warmup Iteration   2: 20726.601 ops/s
[info] # Warmup Iteration   3: 20589.797 ops/s
[info] # Warmup Iteration   4: 21397.047 ops/s
[info] # Warmup Iteration   5: 20708.820 ops/s
[info] Iteration   1: 21180.205 ops/s
[info]                  ·gc.alloc.rate:                   976.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              72568.536 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49748.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.188 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 21191.852 ops/s
[info]                  ·gc.alloc.rate:                   977.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              72560.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99440.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.276 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 20486.508 ops/s
[info]                  ·gc.alloc.rate:               944.683 MB/sec
[info]                  ·gc.alloc.rate.norm:          72560.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 51430.887 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 20734.366 ops/s
[info]                  ·gc.alloc.rate:               955.902 MB/sec
[info]                  ·gc.alloc.rate.norm:          72560.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 101732.805 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 20769.377 ops/s
[info]                  ·gc.alloc.rate:                   957.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              72560.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50853.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.577 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson":
[info]   20872.462 ±(99.9%) 1179.601 ops/s [Average]
[info]   (min, avg, max) = (20486.508, 20872.462, 21191.852), stdev = 306.339
[info]   CI (99.9%): [19692.861, 22052.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   962.427 ±(99.9%) 54.692 MB/sec [Average]
[info]   (min, avg, max) = (944.683, 962.427, 977.390), stdev = 14.203
[info]   CI (99.9%): [907.734, 1017.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   72561.724 ±(99.9%) 14.663 B/op [Average]
[info]   (min, avg, max) = (72560.020, 72561.724, 72568.536), stdev = 3.808
[info]   CI (99.9%): [72547.061, 72576.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   937.978 ±(99.9%) 1412.625 MB/sec [Average]
[info]   (min, avg, max) = (669.513, 937.978, 1340.222), stdev = 366.854
[info]   CI (99.9%): [≈ 0, 2350.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   70641.264 ±(99.9%) 105333.948 B/op [Average]
[info]   (min, avg, max) = (49748.330, 70641.264, 101732.805), stdev = 27354.892
[info]   CI (99.9%): [≈ 0, 175975.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.408 ±(99.9%) 15.963 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.408, 9.276), stdev = 4.146
[info]   CI (99.9%): [≈ 0, 19.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 35.06% complete, ETA 01:13:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18254.199 ops/s
[info] # Warmup Iteration   2: 25127.493 ops/s
[info] # Warmup Iteration   3: 25633.459 ops/s
[info] # Warmup Iteration   4: 25946.635 ops/s
[info] # Warmup Iteration   5: 25834.285 ops/s
[info] Iteration   1: 25998.809 ops/s
[info]                  ·gc.alloc.rate:                   1456.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              88168.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81413.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.520 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 25846.966 ops/s
[info]                  ·gc.alloc.rate:                   1448.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              88168.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81952.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.535 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 25796.702 ops/s
[info]                  ·gc.alloc.rate:                   1445.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              88168.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123288.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.810 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 26017.926 ops/s
[info]                  ·gc.alloc.rate:                   1457.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              88168.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81595.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.518 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 26006.268 ops/s
[info]                  ·gc.alloc.rate:               1457.571 MB/sec
[info]                  ·gc.alloc.rate.norm:          88168.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 81754.340 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce":
[info]   25933.334 ±(99.9%) 398.732 ops/s [Average]
[info]   (min, avg, max) = (25796.702, 25933.334, 26017.926), stdev = 103.549
[info]   CI (99.9%): [25534.602, 26332.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate":
[info]   1453.321 ±(99.9%) 22.004 MB/sec [Average]
[info]   (min, avg, max) = (1445.708, 1453.321, 1457.828), stdev = 5.714
[info]   CI (99.9%): [1431.317, 1475.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   88168.017 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (88168.017, 88168.017, 88168.018), stdev = 0.001
[info]   CI (99.9%): [88168.015, 88168.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1482.813 ±(99.9%) 1159.804 MB/sec [Average]
[info]   (min, avg, max) = (1345.239, 1482.813, 2021.593), stdev = 301.197
[info]   CI (99.9%): [323.009, 2642.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   90001.090 ±(99.9%) 71658.751 B/op [Average]
[info]   (min, avg, max) = (81413.434, 90001.090, 123288.965), stdev = 18609.550
[info]   CI (99.9%): [18342.339, 161659.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.277 ±(99.9%) 5.349 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.277, 3.810), stdev = 1.389
[info]   CI (99.9%): [≈ 0, 7.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.29% complete, ETA 01:13:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15438.736 ops/s
[info] # Warmup Iteration   2: 24800.224 ops/s
[info] # Warmup Iteration   3: 25045.986 ops/s
[info] # Warmup Iteration   4: 25424.361 ops/s
[info] # Warmup Iteration   5: 25195.567 ops/s
[info] Iteration   1: 25476.701 ops/s
[info]                  ·gc.alloc.rate:                   1179.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              72880.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82549.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.286 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 25017.579 ops/s
[info]                  ·gc.alloc.rate:                   1158.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              72880.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84129.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.858 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 25533.042 ops/s
[info]                  ·gc.alloc.rate:               1182.451 MB/sec
[info]                  ·gc.alloc.rate.norm:          72880.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 41245.823 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 24338.697 ops/s
[info]                  ·gc.alloc.rate:                   1127.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              72880.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86627.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.346 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 24772.463 ops/s
[info]                  ·gc.alloc.rate:               1147.136 MB/sec
[info]                  ·gc.alloc.rate.norm:          72880.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 85233.566 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala":
[info]   25027.696 ±(99.9%) 1922.380 ops/s [Average]
[info]   (min, avg, max) = (24338.697, 25027.696, 25533.042), stdev = 499.236
[info]   CI (99.9%): [23105.316, 26950.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1159.095 ±(99.9%) 88.813 MB/sec [Average]
[info]   (min, avg, max) = (1127.441, 1159.095, 1182.451), stdev = 23.065
[info]   CI (99.9%): [1070.282, 1247.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   72880.018 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (72880.017, 72880.018, 72880.019), stdev = 0.001
[info]   CI (99.9%): [72880.015, 72880.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1204.944 ±(99.9%) 1153.260 MB/sec [Average]
[info]   (min, avg, max) = (669.198, 1204.944, 1341.582), stdev = 299.498
[info]   CI (99.9%): [51.684, 2358.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   75957.270 ±(99.9%) 74940.256 B/op [Average]
[info]   (min, avg, max) = (41245.823, 75957.270, 86627.489), stdev = 19461.747
[info]   CI (99.9%): [1017.013, 150897.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.098 ±(99.9%) 12.655 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.098, 7.858), stdev = 3.286
[info]   CI (99.9%): [≈ 0, 14.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.53% complete, ETA 01:13:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 328276.354 ops/s
[info] # Warmup Iteration   2: 348891.706 ops/s
[info] # Warmup Iteration   3: 349738.157 ops/s
[info] # Warmup Iteration   4: 351152.831 ops/s
[info] # Warmup Iteration   5: 351804.148 ops/s
[info] Iteration   1: 358278.253 ops/s
[info]                  ·gc.alloc.rate:                   932.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2958.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 343468.835 ops/s
[info]                  ·gc.alloc.rate:               894.282 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3086.157 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 355125.312 ops/s
[info]                  ·gc.alloc.rate:                   924.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5969.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.461 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 363181.962 ops/s
[info]                  ·gc.alloc.rate:               945.185 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2920.008 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 352966.581 ops/s
[info]                  ·gc.alloc.rate:                   918.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6010.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.371 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala":
[info]   354604.189 ±(99.9%) 28166.768 ops/s [Average]
[info]   (min, avg, max) = (343468.835, 354604.189, 363181.962), stdev = 7314.820
[info]   CI (99.9%): [326437.421, 382770.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   922.946 ±(99.9%) 72.737 MB/sec [Average]
[info]   (min, avg, max) = (894.282, 922.946, 945.185), stdev = 18.890
[info]   CI (99.9%): [850.209, 995.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4096.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4096.001, 4096.001, 4096.001), stdev = 0.001
[info]   CI (99.9%): [4096.001, 4096.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   943.209 ±(99.9%) 1421.000 MB/sec [Average]
[info]   (min, avg, max) = (673.508, 943.209, 1347.916), stdev = 369.029
[info]   CI (99.9%): [≈ 0, 2364.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4188.955 ±(99.9%) 6335.745 B/op [Average]
[info]   (min, avg, max) = (2920.008, 4188.955, 6010.423), stdev = 1645.373
[info]   CI (99.9%): [≈ 0, 10524.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.185 ±(99.9%) 0.835 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.185, 0.461), stdev = 0.217
[info]   CI (99.9%): [≈ 0, 1.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 35.76% complete, ETA 01:13:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8973.739 ops/s
[info] # Warmup Iteration   2: 15245.730 ops/s
[info] # Warmup Iteration   3: 16111.248 ops/s
[info] # Warmup Iteration   4: 16109.746 ops/s
[info] # Warmup Iteration   5: 16005.382 ops/s
[info] Iteration   1: 16101.887 ops/s
[info]                  ·gc.alloc.rate:                   1646.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              160984.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2009.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196412.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.174 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 16025.818 ops/s
[info]                  ·gc.alloc.rate:                   1639.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              160984.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131750.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15969.890 ops/s
[info]                  ·gc.alloc.rate:                   1633.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              160984.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198642.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.204 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 15625.356 ops/s
[info]                  ·gc.alloc.rate:                   1598.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              160984.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     135592.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.097 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 16144.601 ops/s
[info]                  ·gc.alloc.rate:                   1651.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              160984.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131429.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.117 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson":
[info]   15973.510 ±(99.9%) 793.161 ops/s [Average]
[info]   (min, avg, max) = (15625.356, 15973.510, 16144.601), stdev = 205.981
[info]   CI (99.9%): [15180.350, 16766.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1634.046 ±(99.9%) 80.405 MB/sec [Average]
[info]   (min, avg, max) = (1598.757, 1634.046, 1651.430), stdev = 20.881
[info]   CI (99.9%): [1553.642, 1714.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   160984.029 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (160984.027, 160984.029, 160984.037), stdev = 0.004
[info]   CI (99.9%): [160984.013, 160984.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1612.357 ±(99.9%) 1407.031 MB/sec [Average]
[info]   (min, avg, max) = (1341.716, 1612.357, 2015.789), stdev = 365.402
[info]   CI (99.9%): [205.326, 3019.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   158765.496 ±(99.9%) 136434.159 B/op [Average]
[info]   (min, avg, max) = (131429.144, 158765.496, 198642.668), stdev = 35431.518
[info]   CI (99.9%): [22331.337, 295199.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.127 ±(99.9%) 14.608 B/op [Average]
[info]   (min, avg, max) = (2.044, 6.127, 10.174), stdev = 3.794
[info]   CI (99.9%): [≈ 0, 20.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 36.00% complete, ETA 01:12:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32704.512 ops/s
[info] # Warmup Iteration   2: 43094.556 ops/s
[info] # Warmup Iteration   3: 43934.345 ops/s
[info] # Warmup Iteration   4: 44753.274 ops/s
[info] # Warmup Iteration   5: 44775.814 ops/s
[info] Iteration   1: 44791.949 ops/s
[info]                  ·gc.alloc.rate:                   1424.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              50040.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47141.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.731 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 43552.508 ops/s
[info]                  ·gc.alloc.rate:                   1384.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              50040.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48531.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.752 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 44688.886 ops/s
[info]                  ·gc.alloc.rate:               1421.011 MB/sec
[info]                  ·gc.alloc.rate.norm:          50040.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47344.752 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 44093.019 ops/s
[info]                  ·gc.alloc.rate:                   1401.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              50040.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48041.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.743 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 44596.637 ops/s
[info]                  ·gc.alloc.rate:                   1417.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              50040.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47570.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.204 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce":
[info]   44344.600 ±(99.9%) 1994.246 ops/s [Average]
[info]   (min, avg, max) = (43552.508, 44344.600, 44791.949), stdev = 517.899
[info]   CI (99.9%): [42350.354, 46338.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1409.946 ±(99.9%) 63.432 MB/sec [Average]
[info]   (min, avg, max) = (1384.772, 1409.946, 1424.184), stdev = 16.473
[info]   CI (99.9%): [1346.514, 1473.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   50040.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (50040.010, 50040.010, 50040.010), stdev = 0.001
[info]   CI (99.9%): [50040.009, 50040.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1344.598 ±(99.9%) 9.337 MB/sec [Average]
[info]   (min, avg, max) = (1341.681, 1344.598, 1347.869), stdev = 2.425
[info]   CI (99.9%): [1335.261, 1353.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   47725.976 ±(99.9%) 2161.054 B/op [Average]
[info]   (min, avg, max) = (47141.213, 47725.976, 48531.365), stdev = 561.219
[info]   CI (99.9%): [45564.921, 49887.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.886 ±(99.9%) 3.095 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.886, 2.204), stdev = 0.804
[info]   CI (99.9%): [≈ 0, 3.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.24% complete, ETA 01:12:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 88324.064 ops/s
[info] # Warmup Iteration   2: 123175.333 ops/s
[info] # Warmup Iteration   3: 123056.903 ops/s
[info] # Warmup Iteration   4: 124584.567 ops/s
[info] # Warmup Iteration   5: 123833.630 ops/s
[info] Iteration   1: 124718.477 ops/s
[info]                  ·gc.alloc.rate:                   1219.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              15384.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8435.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 124362.888 ops/s
[info]                  ·gc.alloc.rate:                   1215.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              15384.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16928.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 124332.917 ops/s
[info]                  ·gc.alloc.rate:                   1215.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              15384.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16948.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 123504.473 ops/s
[info]                  ·gc.alloc.rate:               1207.565 MB/sec
[info]                  ·gc.alloc.rate.norm:          15384.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17083.799 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 123251.995 ops/s
[info]                  ·gc.alloc.rate:                   1204.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              15384.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17144.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala":
[info]   124034.150 ±(99.9%) 2403.152 ops/s [Average]
[info]   (min, avg, max) = (123251.995, 124034.150, 124718.477), stdev = 624.091
[info]   CI (99.9%): [121630.998, 126437.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1212.492 ±(99.9%) 22.984 MB/sec [Average]
[info]   (min, avg, max) = (1204.916, 1212.492, 1219.062), stdev = 5.969
[info]   CI (99.9%): [1189.509, 1235.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15384.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (15384.003, 15384.004, 15384.004), stdev = 0.001
[info]   CI (99.9%): [15384.003, 15384.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1205.757 ±(99.9%) 1156.599 MB/sec [Average]
[info]   (min, avg, max) = (668.459, 1205.757, 1342.783), stdev = 300.365
[info]   CI (99.9%): [49.158, 2362.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   15308.134 ±(99.9%) 14797.658 B/op [Average]
[info]   (min, avg, max) = (8435.649, 15308.134, 17144.241), stdev = 3842.905
[info]   CI (99.9%): [510.476, 30105.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.687 ±(99.9%) 1.985 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.687, 1.063), stdev = 0.515
[info]   CI (99.9%): [≈ 0, 2.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.47% complete, ETA 01:12:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1029039.761 ops/s
[info] # Warmup Iteration   2: 1157018.806 ops/s
[info] # Warmup Iteration   3: 1156403.089 ops/s
[info] # Warmup Iteration   4: 1152083.452 ops/s
[info] # Warmup Iteration   5: 1179521.165 ops/s
[info] Iteration   1: 1169406.082 ops/s
[info]                  ·gc.alloc.rate:                   1254.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              1688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1810.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1149513.107 ops/s
[info]                  ·gc.alloc.rate:                   1232.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              1688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1842.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1145033.906 ops/s
[info]                  ·gc.alloc.rate:                   1228.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              1688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1850.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1141542.679 ops/s
[info]                  ·gc.alloc.rate:               1224.352 MB/sec
[info]                  ·gc.alloc.rate.norm:          1688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 929.014 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1175756.536 ops/s
[info]                  ·gc.alloc.rate:                   1260.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              1688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1804.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala":
[info]   1156250.462 ±(99.9%) 59063.130 ops/s [Average]
[info]   (min, avg, max) = (1141542.679, 1156250.462, 1175756.536), stdev = 15338.507
[info]   CI (99.9%): [1097187.332, 1215313.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1240.235 ±(99.9%) 63.552 MB/sec [Average]
[info]   (min, avg, max) = (1224.352, 1240.235, 1260.990), stdev = 16.504
[info]   CI (99.9%): [1176.683, 1303.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1688.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1688.000, 1688.000, 1688.000), stdev = 0.001
[info]   CI (99.9%): [1688.000, 1688.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1211.940 ±(99.9%) 1158.311 MB/sec [Average]
[info]   (min, avg, max) = (673.839, 1211.940, 1348.220), stdev = 300.810
[info]   CI (99.9%): [53.629, 2370.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1647.368 ±(99.9%) 1548.192 B/op [Average]
[info]   (min, avg, max) = (929.014, 1647.368, 1850.574), stdev = 402.060
[info]   CI (99.9%): [99.176, 3195.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.200 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.068, 0.114), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 36.71% complete, ETA 01:12:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 773847.683 ops/s
[info] # Warmup Iteration   2: 855890.332 ops/s
[info] # Warmup Iteration   3: 857476.073 ops/s
[info] # Warmup Iteration   4: 858243.141 ops/s
[info] # Warmup Iteration   5: 858941.813 ops/s
[info] Iteration   1: 857826.965 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 857781.056 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 856846.260 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 857604.119 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 857966.624 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc":
[info]   857605.005 ±(99.9%) 1707.711 ops/s [Average]
[info]   (min, avg, max) = (856846.260, 857605.005, 857966.624), stdev = 443.487
[info]   CI (99.9%): [855897.293, 859312.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 36.94% complete, ETA 01:11:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39183.093 ops/s
[info] # Warmup Iteration   2: 50385.633 ops/s
[info] # Warmup Iteration   3: 50740.869 ops/s
[info] # Warmup Iteration   4: 51458.574 ops/s
[info] # Warmup Iteration   5: 50031.322 ops/s
[info] Iteration   1: 51628.647 ops/s
[info]                  ·gc.alloc.rate:                   1369.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              41744.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40856.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.538 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 51613.314 ops/s
[info]                  ·gc.alloc.rate:                   1369.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              41744.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40911.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.270 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 51722.919 ops/s
[info]                  ·gc.alloc.rate:                   1372.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              41744.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40864.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.633 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 51518.571 ops/s
[info]                  ·gc.alloc.rate:                   1366.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              41744.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41076.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.908 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 51000.399 ops/s
[info]                  ·gc.alloc.rate:                   1352.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              41744.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41554.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.285 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson":
[info]   51496.770 ±(99.9%) 1104.297 ops/s [Average]
[info]   (min, avg, max) = (51000.399, 51496.770, 51722.919), stdev = 286.782
[info]   CI (99.9%): [50392.473, 52601.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1365.977 ±(99.9%) 29.431 MB/sec [Average]
[info]   (min, avg, max) = (1352.736, 1365.977, 1372.044), stdev = 7.643
[info]   CI (99.9%): [1336.546, 1395.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   41744.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (41744.008, 41744.008, 41744.008), stdev = 0.001
[info]   CI (99.9%): [41744.008, 41744.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1343.310 ±(99.9%) 9.605 MB/sec [Average]
[info]   (min, avg, max) = (1340.251, 1343.310, 1346.596), stdev = 2.494
[info]   CI (99.9%): [1333.705, 1352.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   41052.619 ±(99.9%) 1133.150 B/op [Average]
[info]   (min, avg, max) = (40856.248, 41052.619, 41554.526), stdev = 294.276
[info]   CI (99.9%): [39919.469, 42185.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.527 ±(99.9%) 2.784 B/op [Average]
[info]   (min, avg, max) = (0.633, 1.527, 2.538), stdev = 0.723
[info]   CI (99.9%): [≈ 0, 4.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 37.18% complete, ETA 01:11:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11896.161 ops/s
[info] # Warmup Iteration   2: 15198.930 ops/s
[info] # Warmup Iteration   3: 15799.572 ops/s
[info] # Warmup Iteration   4: 15485.340 ops/s
[info] # Warmup Iteration   5: 15861.009 ops/s
[info] Iteration   1: 15881.899 ops/s
[info]                  ·gc.alloc.rate:                   1421.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              140880.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     133275.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 15843.956 ops/s
[info]                  ·gc.alloc.rate:                   1418.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              140880.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     133693.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.271 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15817.153 ops/s
[info]                  ·gc.alloc.rate:               1415.981 MB/sec
[info]                  ·gc.alloc.rate.norm:          140880.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 134021.534 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 15887.000 ops/s
[info]                  ·gc.alloc.rate:                   1422.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              140880.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     133563.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.373 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 15901.376 ops/s
[info]                  ·gc.alloc.rate:                   1424.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              140880.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     200399.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.121 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce":
[info]   15866.277 ±(99.9%) 133.624 ops/s [Average]
[info]   (min, avg, max) = (15817.153, 15866.277, 15901.376), stdev = 34.702
[info]   CI (99.9%): [15732.653, 15999.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1420.500 ±(99.9%) 12.394 MB/sec [Average]
[info]   (min, avg, max) = (1415.981, 1420.500, 1424.002), stdev = 3.219
[info]   CI (99.9%): [1408.106, 1432.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   140880.030 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (140880.027, 140880.030, 140880.037), stdev = 0.004
[info]   CI (99.9%): [140880.013, 140880.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1482.441 ±(99.9%) 1169.234 MB/sec [Average]
[info]   (min, avg, max) = (1344.951, 1482.441, 2025.616), stdev = 303.646
[info]   CI (99.9%): [313.208, 2651.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   146990.549 ±(99.9%) 114970.495 B/op [Average]
[info]   (min, avg, max) = (133275.099, 146990.549, 200399.066), stdev = 29857.473
[info]   CI (99.9%): [32020.054, 261961.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.366 ±(99.9%) 19.137 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.366, 12.373), stdev = 4.970
[info]   CI (99.9%): [≈ 0, 24.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.41% complete, ETA 01:11:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9715.055 ops/s
[info] # Warmup Iteration   2: 15867.276 ops/s
[info] # Warmup Iteration   3: 16005.036 ops/s
[info] # Warmup Iteration   4: 16127.891 ops/s
[info] # Warmup Iteration   5: 15774.838 ops/s
[info] Iteration   1: 16075.377 ops/s
[info]                  ·gc.alloc.rate:                   1309.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              128208.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130827.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.114 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 16064.839 ops/s
[info]                  ·gc.alloc.rate:                   1308.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              128208.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131112.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15963.636 ops/s
[info]                  ·gc.alloc.rate:               1300.233 MB/sec
[info]                  ·gc.alloc.rate.norm:          128186.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 132073.552 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 15767.925 ops/s
[info]                  ·gc.alloc.rate:                   1284.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              128176.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     133914.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.156 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 15627.694 ops/s
[info]                  ·gc.alloc.rate:               1272.786 MB/sec
[info]                  ·gc.alloc.rate.norm:          128176.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 135315.278 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala":
[info]   15899.894 ±(99.9%) 754.503 ops/s [Average]
[info]   (min, avg, max) = (15627.694, 15899.894, 16075.377), stdev = 195.942
[info]   CI (99.9%): [15145.391, 16654.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1295.131 ±(99.9%) 61.882 MB/sec [Average]
[info]   (min, avg, max) = (1272.786, 1295.131, 1309.565), stdev = 16.070
[info]   CI (99.9%): [1233.250, 1357.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   128190.974 ±(99.9%) 62.284 B/op [Average]
[info]   (min, avg, max) = (128176.028, 128190.974, 128208.037), stdev = 16.175
[info]   CI (99.9%): [128128.691, 128253.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1339.976 ±(99.9%) 11.142 MB/sec [Average]
[info]   (min, avg, max) = (1336.321, 1339.976, 1343.678), stdev = 2.894
[info]   CI (99.9%): [1328.834, 1351.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   132648.715 ±(99.9%) 7386.762 B/op [Average]
[info]   (min, avg, max) = (130827.432, 132648.715, 135315.278), stdev = 1918.319
[info]   CI (99.9%): [125261.954, 140035.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.462 ±(99.9%) 10.280 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.462, 6.114), stdev = 2.670
[info]   CI (99.9%): [≈ 0, 12.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.65% complete, ETA 01:11:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 410763.755 ops/s
[info] # Warmup Iteration   2: 436957.866 ops/s
[info] # Warmup Iteration   3: 445470.889 ops/s
[info] # Warmup Iteration   4: 439342.140 ops/s
[info] # Warmup Iteration   5: 450094.784 ops/s
[info] Iteration   1: 455506.671 ops/s
[info]                  ·gc.alloc.rate:                   1185.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2327.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 448386.269 ops/s
[info]                  ·gc.alloc.rate:                   1167.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4729.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.438 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 452809.748 ops/s
[info]                  ·gc.alloc.rate:                   1178.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4685.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 453622.359 ops/s
[info]                  ·gc.alloc.rate:               1180.532 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2338.926 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 449861.117 ops/s
[info]                  ·gc.alloc.rate:                   1170.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4721.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.437 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala":
[info]   452037.233 ±(99.9%) 11095.507 ops/s [Average]
[info]   (min, avg, max) = (448386.269, 452037.233, 455506.671), stdev = 2881.468
[info]   CI (99.9%): [440941.726, 463132.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1176.583 ±(99.9%) 28.804 MB/sec [Average]
[info]   (min, avg, max) = (1167.395, 1176.583, 1185.759), stdev = 7.480
[info]   CI (99.9%): [1147.779, 1205.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4096.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4096.001, 4096.001, 4096.001), stdev = 0.001
[info]   CI (99.9%): [4096.001, 4096.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1078.626 ±(99.9%) 1422.720 MB/sec [Average]
[info]   (min, avg, max) = (673.658, 1078.626, 1349.414), stdev = 369.476
[info]   CI (99.9%): [≈ 0, 2501.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3760.348 ±(99.9%) 5017.835 B/op [Average]
[info]   (min, avg, max) = (2327.033, 3760.348, 4729.034), stdev = 1303.116
[info]   CI (99.9%): [≈ 0, 8778.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.224 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.125), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.247 ±(99.9%) 0.785 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.247, 0.438), stdev = 0.204
[info]   CI (99.9%): [≈ 0, 1.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 37.88% complete, ETA 01:10:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6948.552 ops/s
[info] # Warmup Iteration   2: 12069.777 ops/s
[info] # Warmup Iteration   3: 12189.492 ops/s
[info] # Warmup Iteration   4: 12241.315 ops/s
[info] # Warmup Iteration   5: 12044.070 ops/s
[info] Iteration   1: 12073.940 ops/s
[info]                  ·gc.alloc.rate:                   1659.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              216281.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2009.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     261905.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.713 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 12201.592 ops/s
[info]                  ·gc.alloc.rate:                   1676.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              216280.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173044.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.685 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 11891.107 ops/s
[info]                  ·gc.alloc.rate:                   1634.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              216280.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     266816.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 11987.642 ops/s
[info]                  ·gc.alloc.rate:               1647.392 MB/sec
[info]                  ·gc.alloc.rate.norm:          216280.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 176744.962 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 12039.363 ops/s
[info]                  ·gc.alloc.rate:                   1654.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              216280.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     264582.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.885 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson":
[info]   12038.729 ±(99.9%) 439.743 ops/s [Average]
[info]   (min, avg, max) = (11891.107, 12038.729, 12201.592), stdev = 114.200
[info]   CI (99.9%): [11598.986, 12478.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1654.514 ±(99.9%) 60.627 MB/sec [Average]
[info]   (min, avg, max) = (1634.162, 1654.514, 1676.859), stdev = 15.745
[info]   CI (99.9%): [1593.887, 1715.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   216280.290 ±(99.9%) 2.156 B/op [Average]
[info]   (min, avg, max) = (216280.036, 216280.290, 216281.292), stdev = 0.560
[info]   CI (99.9%): [216278.134, 216282.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1747.532 ±(99.9%) 1418.792 MB/sec [Average]
[info]   (min, avg, max) = (1341.644, 1747.532, 2023.899), stdev = 368.456
[info]   CI (99.9%): [328.741, 3166.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   228618.615 ±(99.9%) 189033.256 B/op [Average]
[info]   (min, avg, max) = (173044.253, 228618.615, 266816.484), stdev = 49091.336
[info]   CI (99.9%): [39585.360, 417651.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.461 ±(99.9%) 19.766 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.461, 11.020), stdev = 5.133
[info]   CI (99.9%): [≈ 0, 25.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 38.12% complete, ETA 01:10:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24241.164 ops/s
[info] # Warmup Iteration   2: 34357.895 ops/s
[info] # Warmup Iteration   3: 34543.716 ops/s
[info] # Warmup Iteration   4: 33698.216 ops/s
[info] # Warmup Iteration   5: 34746.189 ops/s
[info] Iteration   1: 34864.298 ops/s
[info]                  ·gc.alloc.rate:                   1324.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              59768.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60566.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.880 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 34661.630 ops/s
[info]                  ·gc.alloc.rate:                   1316.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              59768.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60947.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.726 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 33852.648 ops/s
[info]                  ·gc.alloc.rate:                   1285.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              59768.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62467.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.968 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 33986.802 ops/s
[info]                  ·gc.alloc.rate:                   1290.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              59768.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62281.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.892 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 34098.790 ops/s
[info]                  ·gc.alloc.rate:               1295.007 MB/sec
[info]                  ·gc.alloc.rate.norm:          59768.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62165.621 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce":
[info]   34292.834 ±(99.9%) 1708.722 ops/s [Average]
[info]   (min, avg, max) = (33852.648, 34292.834, 34864.298), stdev = 443.750
[info]   CI (99.9%): [32584.112, 36001.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1302.343 ±(99.9%) 64.878 MB/sec [Average]
[info]   (min, avg, max) = (1285.683, 1302.343, 1324.028), stdev = 16.848
[info]   CI (99.9%): [1237.465, 1367.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   59768.013 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (59768.012, 59768.013, 59768.013), stdev = 0.001
[info]   CI (99.9%): [59768.012, 59768.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1343.939 ±(99.9%) 8.060 MB/sec [Average]
[info]   (min, avg, max) = (1341.716, 1343.939, 1346.956), stdev = 2.093
[info]   CI (99.9%): [1335.879, 1351.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   61685.905 ±(99.9%) 3331.598 B/op [Average]
[info]   (min, avg, max) = (60566.481, 61685.905, 62467.962), stdev = 865.205
[info]   CI (99.9%): [58354.307, 65017.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.093 ±(99.9%) 7.012 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.093, 4.726), stdev = 1.821
[info]   CI (99.9%): [≈ 0, 9.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.35% complete, ETA 01:10:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28237.215 ops/s
[info] # Warmup Iteration   2: 39636.153 ops/s
[info] # Warmup Iteration   3: 38570.505 ops/s
[info] # Warmup Iteration   4: 38245.850 ops/s
[info] # Warmup Iteration   5: 38849.183 ops/s
[info] Iteration   1: 39481.581 ops/s
[info]                  ·gc.alloc.rate:                   1176.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              46872.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53266.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.149 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 39453.722 ops/s
[info]                  ·gc.alloc.rate:                   1175.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              46872.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53332.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.152 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 39453.796 ops/s
[info]                  ·gc.alloc.rate:                   1175.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              46872.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53400.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.661 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 39526.139 ops/s
[info]                  ·gc.alloc.rate:               1177.284 MB/sec
[info]                  ·gc.alloc.rate.norm:          46872.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26669.951 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 38372.134 ops/s
[info]                  ·gc.alloc.rate:                   1142.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              46872.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55024.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.854 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala":
[info]   39257.474 ±(99.9%) 1909.166 ops/s [Average]
[info]   (min, avg, max) = (38372.134, 39257.474, 39526.139), stdev = 495.804
[info]   CI (99.9%): [37348.308, 41166.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1169.390 ±(99.9%) 57.355 MB/sec [Average]
[info]   (min, avg, max) = (1142.785, 1169.390, 1177.284), stdev = 14.895
[info]   CI (99.9%): [1112.034, 1226.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   46872.011 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (46872.011, 46872.011, 46872.012), stdev = 0.001
[info]   CI (99.9%): [46872.009, 46872.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1204.889 ±(99.9%) 1151.696 MB/sec [Average]
[info]   (min, avg, max) = (669.869, 1204.889, 1341.546), stdev = 299.092
[info]   CI (99.9%): [53.193, 2356.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   48338.632 ±(99.9%) 46728.996 B/op [Average]
[info]   (min, avg, max) = (26669.951, 48338.632, 55024.285), stdev = 12135.372
[info]   CI (99.9%): [1609.636, 95067.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.163 ±(99.9%) 7.343 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.163, 4.152), stdev = 1.907
[info]   CI (99.9%): [≈ 0, 9.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.59% complete, ETA 01:09:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1163177.062 ops/s
[info] # Warmup Iteration   2: 1283045.851 ops/s
[info] # Warmup Iteration   3: 1281112.249 ops/s
[info] # Warmup Iteration   4: 1268785.488 ops/s
[info] # Warmup Iteration   5: 1245341.041 ops/s
[info] Iteration   1: 1272071.773 ops/s
[info]                  ·gc.alloc.rate:                   1157.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     832.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1256890.003 ops/s
[info]                  ·gc.alloc.rate:                   1143.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1684.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1256192.682 ops/s
[info]                  ·gc.alloc.rate:                   1142.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1686.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1278033.193 ops/s
[info]                  ·gc.alloc.rate:               1162.820 MB/sec
[info]                  ·gc.alloc.rate.norm:          1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 828.957 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1284096.470 ops/s
[info]                  ·gc.alloc.rate:                   1168.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1651.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala":
[info]   1269456.824 ±(99.9%) 48270.466 ops/s [Average]
[info]   (min, avg, max) = (1256192.682, 1269456.824, 1284096.470), stdev = 12535.687
[info]   CI (99.9%): [1221186.358, 1317727.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1155.016 ±(99.9%) 43.933 MB/sec [Average]
[info]   (min, avg, max) = (1142.964, 1155.016, 1168.368), stdev = 11.409
[info]   CI (99.9%): [1111.082, 1198.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1432.000, 1432.000, 1432.000), stdev = 0.001
[info]   CI (99.9%): [1432.000, 1432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1076.882 ±(99.9%) 1420.453 MB/sec [Average]
[info]   (min, avg, max) = (672.441, 1076.882, 1347.619), stdev = 368.887
[info]   CI (99.9%): [≈ 0, 2497.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1336.709 ±(99.9%) 1780.235 B/op [Average]
[info]   (min, avg, max) = (828.957, 1336.709, 1686.321), stdev = 462.321
[info]   CI (99.9%): [≈ 0, 3116.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.207 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.083 ±(99.9%) 0.257 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.153), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 38.82% complete, ETA 01:09:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1161220.193 ops/s
[info] # Warmup Iteration   2: 1250826.185 ops/s
[info] # Warmup Iteration   3: 1269766.578 ops/s
[info] # Warmup Iteration   4: 1269895.172 ops/s
[info] # Warmup Iteration   5: 1270753.155 ops/s
[info] Iteration   1: 1267093.199 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1262692.608 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1266328.399 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1267249.946 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1269740.832 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   1266620.997 ±(99.9%) 9792.637 ops/s [Average]
[info]   (min, avg, max) = (1262692.608, 1266620.997, 1269740.832), stdev = 2543.117
[info]   CI (99.9%): [1256828.359, 1276413.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 39.06% complete, ETA 01:09:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2565.632 ops/s
[info] # Warmup Iteration   2: 3270.665 ops/s
[info] # Warmup Iteration   3: 3548.690 ops/s
[info] # Warmup Iteration   4: 3528.461 ops/s
[info] # Warmup Iteration   5: 3444.570 ops/s
[info] Iteration   1: 3479.068 ops/s
[info]                  ·gc.alloc.rate:               469.743 MB/sec
[info]                  ·gc.alloc.rate.norm:          212496.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 231409.876 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 3484.644 ops/s
[info]                  ·gc.alloc.rate:               470.587 MB/sec
[info]                  ·gc.alloc.rate.norm:          212496.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 231011.580 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 3496.380 ops/s
[info]                  ·gc.alloc.rate:      472.167 MB/sec
[info]                  ·gc.alloc.rate.norm: 212496.124 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3482.572 ops/s
[info]                  ·gc.alloc.rate:                   470.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              212496.133 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     302624.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 913.323 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3480.368 ops/s
[info]                  ·gc.alloc.rate:               469.899 MB/sec
[info]                  ·gc.alloc.rate.norm:          212496.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 302885.139 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson":
[info]   3484.606 ±(99.9%) 26.636 ops/s [Average]
[info]   (min, avg, max) = (3479.068, 3484.606, 3496.380), stdev = 6.917
[info]   CI (99.9%): [3457.970, 3511.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   470.535 ±(99.9%) 3.735 MB/sec [Average]
[info]   (min, avg, max) = (469.743, 470.535, 472.167), stdev = 0.970
[info]   CI (99.9%): [466.800, 474.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   212496.126 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (212496.124, 212496.126, 212496.133), stdev = 0.004
[info]   CI (99.9%): [212496.110, 212496.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   472.533 ±(99.9%) 1061.782 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 472.533, 669.779), stdev = 275.741
[info]   CI (99.9%): [≈ 0, 1534.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   213586.185 ±(99.9%) 479951.839 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 213586.185, 302885.139), stdev = 124641.969
[info]   CI (99.9%): [≈ 0, 693538.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.404 ±(99.9%) 3.481 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.404, 2.021), stdev = 0.904
[info]   CI (99.9%): [≈ 0, 3.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   182.665 ±(99.9%) 1572.797 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 182.665, 913.323), stdev = 408.450
[info]   CI (99.9%): [≈ 0, 1755.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 39.29% complete, ETA 01:09:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 66991.850 ops/s
[info] # Warmup Iteration   2: 76616.991 ops/s
[info] # Warmup Iteration   3: 76122.290 ops/s
[info] # Warmup Iteration   4: 76476.764 ops/s
[info] # Warmup Iteration   5: 77661.102 ops/s
[info] Iteration   1: 79259.556 ops/s
[info]                  ·gc.alloc.rate:                   1473.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              29264.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40067.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.413 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 78353.294 ops/s
[info]                  ·gc.alloc.rate:                   1456.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              29264.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27043.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.418 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 79128.815 ops/s
[info]                  ·gc.alloc.rate:                   1471.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              29264.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26804.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.656 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 79061.202 ops/s
[info]                  ·gc.alloc.rate:                   1470.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              29264.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26866.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.829 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 78239.577 ops/s
[info]                  ·gc.alloc.rate:                   1454.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              29264.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27175.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.838 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce":
[info]   78808.489 ±(99.9%) 1827.330 ops/s [Average]
[info]   (min, avg, max) = (78239.577, 78808.489, 79259.556), stdev = 474.552
[info]   CI (99.9%): [76981.158, 80635.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate":
[info]   1465.358 ±(99.9%) 34.170 MB/sec [Average]
[info]   (min, avg, max) = (1454.711, 1465.358, 1473.885), stdev = 8.874
[info]   CI (99.9%): [1431.187, 1499.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   29264.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (29264.005, 29264.006, 29264.006), stdev = 0.001
[info]   CI (99.9%): [29264.005, 29264.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1482.483 ±(99.9%) 1152.753 MB/sec [Average]
[info]   (min, avg, max) = (1346.306, 1482.483, 2017.996), stdev = 299.366
[info]   CI (99.9%): [329.730, 2635.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   29591.345 ±(99.9%) 22557.393 B/op [Average]
[info]   (min, avg, max) = (26804.347, 29591.345, 40067.323), stdev = 5858.083
[info]   CI (99.9%): [7033.953, 52148.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.831 ±(99.9%) 1.950 B/op [Average]
[info]   (min, avg, max) = (0.413, 0.831, 1.656), stdev = 0.506
[info]   CI (99.9%): [≈ 0, 2.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 39.53% complete, ETA 01:08:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 69.973 ops/s
[info] # Warmup Iteration   2: 321700.552 ops/s
[info] # Warmup Iteration   3: 338684.834 ops/s
[info] # Warmup Iteration   4: 339000.884 ops/s
[info] # Warmup Iteration   5: 338972.019 ops/s
[info] Iteration   1: 339395.965 ops/s
[info]                  ·gc.alloc.rate:               679.962 MB/sec
[info]                  ·gc.alloc.rate.norm:          3152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3078.332 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 339676.814 ops/s
[info]                  ·gc.alloc.rate:                   680.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              3152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3075.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 338886.590 ops/s
[info]                  ·gc.alloc.rate:               678.737 MB/sec
[info]                  ·gc.alloc.rate.norm:          3152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3092.319 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 337578.454 ops/s
[info]                  ·gc.alloc.rate:                   676.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              3152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3103.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 339681.128 ops/s
[info]                  ·gc.alloc.rate:               680.288 MB/sec
[info]                  ·gc.alloc.rate.norm:          3152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3088.050 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava":
[info]   339043.790 ±(99.9%) 3391.447 ops/s [Average]
[info]   (min, avg, max) = (337578.454, 339043.790, 339681.128), stdev = 880.748
[info]   CI (99.9%): [335652.344, 342435.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   679.077 ±(99.9%) 6.905 MB/sec [Average]
[info]   (min, avg, max) = (676.082, 679.077, 680.315), stdev = 1.793
[info]   CI (99.9%): [672.171, 685.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   3152.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3152.001, 3152.001, 3152.001), stdev = 0.001
[info]   CI (99.9%): [3152.001, 3152.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   665.220 ±(99.9%) 4.502 MB/sec [Average]
[info]   (min, avg, max) = (663.882, 665.220, 666.485), stdev = 1.169
[info]   CI (99.9%): [660.718, 669.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   3087.707 ±(99.9%) 43.645 B/op [Average]
[info]   (min, avg, max) = (3075.867, 3087.707, 3103.968), stdev = 11.334
[info]   CI (99.9%): [3044.063, 3131.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.204 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.097), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.76% complete, ETA 01:08:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 161157.326 ops/s
[info] # Warmup Iteration   2: 242264.045 ops/s
[info] # Warmup Iteration   3: 253641.887 ops/s
[info] # Warmup Iteration   4: 242382.199 ops/s
[info] # Warmup Iteration   5: 253337.496 ops/s
[info] Iteration   1: 247318.456 ops/s
[info]                  ·gc.alloc.rate:               543.128 MB/sec
[info]                  ·gc.alloc.rate.norm:          3456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3255.802 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 247159.774 ops/s
[info]                  ·gc.alloc.rate:      542.766 MB/sec
[info]                  ·gc.alloc.rate.norm: 3456.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 247182.519 ops/s
[info]                  ·gc.alloc.rate:                   542.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4252.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.126 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.535 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 247624.081 ops/s
[info]                  ·gc.alloc.rate:                   543.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4244.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 247598.336 ops/s
[info]                  ·gc.alloc.rate:                   543.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4247.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala":
[info]   247376.633 ±(99.9%) 857.741 ops/s [Average]
[info]   (min, avg, max) = (247159.774, 247376.633, 247624.081), stdev = 222.753
[info]   CI (99.9%): [246518.892, 248234.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   543.243 ±(99.9%) 1.819 MB/sec [Average]
[info]   (min, avg, max) = (542.766, 543.243, 543.770), stdev = 0.473
[info]   CI (99.9%): [541.424, 545.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3456.002, 3456.002, 3456.002), stdev = 0.001
[info]   CI (99.9%): [3456.002, 3456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   503.118 ±(99.9%) 1113.918 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 503.118, 668.176), stdev = 289.281
[info]   CI (99.9%): [≈ 0, 1617.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3199.947 ±(99.9%) 7084.011 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3199.947, 4252.279), stdev = 1839.695
[info]   CI (99.9%): [≈ 0, 10283.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.434 ±(99.9%) 3.643 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.434, 2.126), stdev = 0.946
[info]   CI (99.9%): [≈ 0, 4.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.760 ±(99.9%) 23.195 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.760, 13.535), stdev = 6.024
[info]   CI (99.9%): [≈ 0, 25.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.517
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.00% complete, ETA 01:08:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 471562.181 ops/s
[info] # Warmup Iteration   2: 493740.360 ops/s
[info] # Warmup Iteration   3: 494575.646 ops/s
[info] # Warmup Iteration   4: 493181.287 ops/s
[info] # Warmup Iteration   5: 491367.688 ops/s
[info] Iteration   1: 494039.628 ops/s
[info]                  ·gc.alloc.rate:                   622.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              1984.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2145.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.563 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.981 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 492468.772 ops/s
[info]                  ·gc.alloc.rate:      620.814 MB/sec
[info]                  ·gc.alloc.rate.norm: 1984.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 489532.186 ops/s
[info]                  ·gc.alloc.rate:                   617.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              1984.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2165.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 496054.578 ops/s
[info]                  ·gc.alloc.rate:                   625.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              1984.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2136.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 490194.972 ops/s
[info]                  ·gc.alloc.rate:                   617.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              1984.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2162.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala":
[info]   492458.027 ±(99.9%) 10389.376 ops/s [Average]
[info]   (min, avg, max) = (489532.186, 492458.027, 496054.578), stdev = 2698.088
[info]   CI (99.9%): [482068.651, 502847.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   620.795 ±(99.9%) 13.043 MB/sec [Average]
[info]   (min, avg, max) = (617.103, 620.795, 625.317), stdev = 3.387
[info]   CI (99.9%): [607.753, 633.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1984.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1984.001, 1984.001, 1984.001), stdev = 0.001
[info]   CI (99.9%): [1984.001, 1984.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   538.769 ±(99.9%) 1159.740 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.769, 673.481), stdev = 301.181
[info]   CI (99.9%): [≈ 0, 1698.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1721.916 ±(99.9%) 3706.831 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1721.916, 2165.214), stdev = 962.652
[info]   CI (99.9%): [≈ 0, 5428.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.334 ±(99.9%) 2.648 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.334, 1.563), stdev = 0.688
[info]   CI (99.9%): [≈ 0, 2.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.063 ±(99.9%) 8.436 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.063, 4.981), stdev = 2.191
[info]   CI (99.9%): [≈ 0, 9.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 40.24% complete, ETA 01:08:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43944.887 ops/s
[info] # Warmup Iteration   2: 69675.418 ops/s
[info] # Warmup Iteration   3: 69284.009 ops/s
[info] # Warmup Iteration   4: 70738.892 ops/s
[info] # Warmup Iteration   5: 69224.920 ops/s
[info] Iteration   1: 70959.695 ops/s
[info]                  ·gc.alloc.rate:                   3073.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              68168.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3374.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74844.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.694 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 71305.764 ops/s
[info]                  ·gc.alloc.rate:                   3088.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              68168.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2705.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59723.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.757 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 69738.682 ops/s
[info]                  ·gc.alloc.rate:                   3020.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              68168.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3389.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76498.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.409 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 69782.222 ops/s
[info]                  ·gc.alloc.rate:                   3036.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              68474.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2716.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61269.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.939 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 70409.051 ops/s
[info]                  ·gc.alloc.rate:                   3049.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              68168.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2719.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60780.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.396 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson":
[info]   70439.083 ±(99.9%) 2685.186 ops/s [Average]
[info]   (min, avg, max) = (69738.682, 70439.083, 71305.764), stdev = 697.334
[info]   CI (99.9%): [67753.896, 73124.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3053.704 ±(99.9%) 105.962 MB/sec [Average]
[info]   (min, avg, max) = (3020.556, 3053.704, 3088.415), stdev = 27.518
[info]   CI (99.9%): [2947.742, 3159.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   68229.297 ±(99.9%) 527.732 B/op [Average]
[info]   (min, avg, max) = (68168.006, 68229.297, 68474.460), stdev = 137.050
[info]   CI (99.9%): [67701.565, 68757.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2981.234 ±(99.9%) 1409.854 MB/sec [Average]
[info]   (min, avg, max) = (2705.839, 2981.234, 3389.675), stdev = 366.135
[info]   CI (99.9%): [1571.380, 4391.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   66623.395 ±(99.9%) 31957.046 B/op [Average]
[info]   (min, avg, max) = (59723.708, 66623.395, 76498.286), stdev = 8299.143
[info]   CI (99.9%): [34666.349, 98580.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.092 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.092, 0.167), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.039 ±(99.9%) 4.421 B/op [Average]
[info]   (min, avg, max) = (0.939, 2.039, 3.694), stdev = 1.148
[info]   CI (99.9%): [≈ 0, 6.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 40.47% complete, ETA 01:07:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 139555.379 ops/s
[info] # Warmup Iteration   2: 179374.022 ops/s
[info] # Warmup Iteration   3: 181357.750 ops/s
[info] # Warmup Iteration   4: 183298.695 ops/s
[info] # Warmup Iteration   5: 183206.340 ops/s
[info] Iteration   1: 181985.154 ops/s
[info]                  ·gc.alloc.rate:                   1857.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              16056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17435.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 185090.975 ops/s
[info]                  ·gc.alloc.rate:                   1888.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              16056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17171.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 180888.362 ops/s
[info]                  ·gc.alloc.rate:                   1845.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              16056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17611.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.725 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 182769.149 ops/s
[info]                  ·gc.alloc.rate:                   1864.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              16056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11633.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 182432.694 ops/s
[info]                  ·gc.alloc.rate:                   1861.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              16056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17502.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.359 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce":
[info]   182633.267 ±(99.9%) 5954.123 ops/s [Average]
[info]   (min, avg, max) = (180888.362, 182633.267, 185090.975), stdev = 1546.267
[info]   CI (99.9%): [176679.143, 188587.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1863.311 ±(99.9%) 60.379 MB/sec [Average]
[info]   (min, avg, max) = (1845.346, 1863.311, 1888.207), stdev = 15.680
[info]   CI (99.9%): [1802.932, 1923.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   16056.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16056.002, 16056.002, 16056.002), stdev = 0.001
[info]   CI (99.9%): [16056.002, 16056.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1888.018 ±(99.9%) 1156.339 MB/sec [Average]
[info]   (min, avg, max) = (1350.889, 1888.018, 2028.706), stdev = 300.298
[info]   CI (99.9%): [731.679, 3044.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   16270.694 ±(99.9%) 10002.214 B/op [Average]
[info]   (min, avg, max) = (11633.126, 16270.694, 17611.315), stdev = 2597.543
[info]   CI (99.9%): [6268.480, 26272.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.501 ±(99.9%) 1.481 B/op [Average]
[info]   (min, avg, max) = (0.179, 0.501, 1.062), stdev = 0.385
[info]   CI (99.9%): [≈ 0, 1.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 40.71% complete, ETA 01:07:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31428.873 ops/s
[info] # Warmup Iteration   2: 768050.424 ops/s
[info] # Warmup Iteration   3: 768938.093 ops/s
[info] # Warmup Iteration   4: 765516.849 ops/s
[info] # Warmup Iteration   5: 757832.746 ops/s
[info] Iteration   1: 764345.348 ops/s
[info]                  ·gc.alloc.rate:               598.361 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1053.425 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 764556.026 ops/s
[info]                  ·gc.alloc.rate:               598.486 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1367.256 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 768008.835 ops/s
[info]                  ·gc.alloc.rate:                   601.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1361.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 765099.971 ops/s
[info]                  ·gc.alloc.rate:                   598.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1369.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 765146.712 ops/s
[info]                  ·gc.alloc.rate:               598.907 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1369.539 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava":
[info]   765431.378 ±(99.9%) 5704.885 ops/s [Average]
[info]   (min, avg, max) = (764345.348, 765431.378, 768008.835), stdev = 1481.541
[info]   CI (99.9%): [759726.493, 771136.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   599.224 ±(99.9%) 4.906 MB/sec [Average]
[info]   (min, avg, max) = (598.361, 599.224, 601.460), stdev = 1.274
[info]   CI (99.9%): [594.319, 604.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   1232.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1232.001, 1232.001, 1232.001), stdev = 0.001
[info]   CI (99.9%): [1232.001, 1232.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   634.368 ±(99.9%) 264.218 MB/sec [Average]
[info]   (min, avg, max) = (511.630, 634.368, 665.812), stdev = 68.617
[info]   CI (99.9%): [370.150, 898.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1304.170 ±(99.9%) 539.917 B/op [Average]
[info]   (min, avg, max) = (1053.425, 1304.170, 1369.630), stdev = 140.215
[info]   CI (99.9%): [764.253, 1844.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.003 ±(99.9%) 0.016 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.032 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.019), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.94% complete, ETA 01:07:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 346524.896 ops/s
[info] # Warmup Iteration   2: 481227.791 ops/s
[info] # Warmup Iteration   3: 483100.831 ops/s
[info] # Warmup Iteration   4: 487877.583 ops/s
[info] # Warmup Iteration   5: 474690.113 ops/s
[info] Iteration   1: 477266.436 ops/s
[info]                  ·gc.alloc.rate:               490.277 MB/sec
[info]                  ·gc.alloc.rate.norm:          1616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1687.043 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 481512.479 ops/s
[info]                  ·gc.alloc.rate:                   494.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              1616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1672.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.025 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 484924.067 ops/s
[info]                  ·gc.alloc.rate:                   497.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              1616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2167.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.115 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.865 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 484661.268 ops/s
[info]                  ·gc.alloc.rate:                   497.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              1616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2168.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 457796.432 ops/s
[info]                  ·gc.alloc.rate:      470.257 MB/sec
[info]                  ·gc.alloc.rate.norm: 1616.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala":
[info]   477232.136 ±(99.9%) 43498.086 ops/s [Average]
[info]   (min, avg, max) = (457796.432, 477232.136, 484924.067), stdev = 11296.315
[info]   CI (99.9%): [433734.051, 520730.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   490.127 ±(99.9%) 44.420 MB/sec [Average]
[info]   (min, avg, max) = (470.257, 490.127, 497.920), stdev = 11.536
[info]   CI (99.9%): [445.708, 534.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1616.001, 1616.001, 1616.001), stdev = 0.001
[info]   CI (99.9%): [1616.001, 1616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   471.857 ±(99.9%) 1059.274 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 471.857, 667.983), stdev = 275.090
[info]   CI (99.9%): [≈ 0, 1531.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1539.082 ±(99.9%) 3443.883 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1539.082, 2168.629), stdev = 894.365
[info]   CI (99.9%): [≈ 0, 4982.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.432 ±(99.9%) 3.623 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.432, 2.115), stdev = 0.941
[info]   CI (99.9%): [≈ 0, 4.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.403 ±(99.9%) 11.758 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.403, 6.865), stdev = 3.053
[info]   CI (99.9%): [≈ 0, 13.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.18% complete, ETA 01:07:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 601710.416 ops/s
[info] # Warmup Iteration   2: 662536.594 ops/s
[info] # Warmup Iteration   3: 607163.937 ops/s
[info] # Warmup Iteration   4: 580867.376 ops/s
[info] # Warmup Iteration   5: 579148.205 ops/s
[info] Iteration   1: 570459.491 ops/s
[info]                  ·gc.alloc.rate:               446.622 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1411.521 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 602970.392 ops/s
[info]                  ·gc.alloc.rate:               472.091 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1335.431 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 618704.282 ops/s
[info]                  ·gc.alloc.rate:                   484.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1710.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.751 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.454 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 618880.526 ops/s
[info]                  ·gc.alloc.rate:      484.435 MB/sec
[info]                  ·gc.alloc.rate.norm: 1232.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 623683.719 ops/s
[info]                  ·gc.alloc.rate:                   488.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1697.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala":
[info]   606939.682 ±(99.9%) 84097.391 ops/s [Average]
[info]   (min, avg, max) = (570459.491, 606939.682, 623683.719), stdev = 21839.825
[info]   CI (99.9%): [522842.291, 691037.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   475.133 ±(99.9%) 65.678 MB/sec [Average]
[info]   (min, avg, max) = (446.622, 475.133, 488.191), stdev = 17.056
[info]   CI (99.9%): [409.455, 540.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1232.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1232.001, 1232.001, 1232.001), stdev = 0.001
[info]   CI (99.9%): [1232.001, 1232.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.681 ±(99.9%) 1065.585 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.681, 672.524), stdev = 276.729
[info]   CI (99.9%): [≈ 0, 1539.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1230.938 ±(99.9%) 2727.005 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1230.938, 1710.729), stdev = 708.194
[info]   CI (99.9%): [≈ 0, 3957.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.363 ±(99.9%) 2.990 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.363, 1.751), stdev = 0.777
[info]   CI (99.9%): [≈ 0, 3.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.922 ±(99.9%) 7.607 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.922, 4.454), stdev = 1.975
[info]   CI (99.9%): [≈ 0, 8.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 41.41% complete, ETA 01:06:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 632614.604 ops/s
[info] # Warmup Iteration   2: 685814.687 ops/s
[info] # Warmup Iteration   3: 695600.712 ops/s
[info] # Warmup Iteration   4: 703200.632 ops/s
[info] # Warmup Iteration   5: 704507.893 ops/s
[info] Iteration   1: 704127.456 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 703542.474 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 703925.016 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 703804.129 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 703634.676 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc":
[info]   703806.750 ±(99.9%) 895.425 ops/s [Average]
[info]   (min, avg, max) = (703542.474, 703806.750, 704127.456), stdev = 232.539
[info]   CI (99.9%): [702911.325, 704702.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 41.65% complete, ETA 01:06:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19857.511 ops/s
[info] # Warmup Iteration   2: 26237.119 ops/s
[info] # Warmup Iteration   3: 27295.843 ops/s
[info] # Warmup Iteration   4: 27474.886 ops/s
[info] # Warmup Iteration   5: 27271.561 ops/s
[info] Iteration   1: 27175.887 ops/s
[info]                  ·gc.alloc.rate:               1493.837 MB/sec
[info]                  ·gc.alloc.rate.norm:          86512.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77618.002 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 27579.017 ops/s
[info]                  ·gc.alloc.rate:               1516.609 MB/sec
[info]                  ·gc.alloc.rate.norm:          86512.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76598.051 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 26895.978 ops/s
[info]                  ·gc.alloc.rate:               1478.506 MB/sec
[info]                  ·gc.alloc.rate.norm:          86512.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78623.710 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 27417.952 ops/s
[info]                  ·gc.alloc.rate:                   1507.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              86512.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115919.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.585 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 27549.018 ops/s
[info]                  ·gc.alloc.rate:                   1514.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              86512.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77023.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.757 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson":
[info]   27323.570 ±(99.9%) 1105.399 ops/s [Average]
[info]   (min, avg, max) = (26895.978, 27323.570, 27579.017), stdev = 287.069
[info]   CI (99.9%): [26218.172, 28428.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1502.149 ±(99.9%) 61.460 MB/sec [Average]
[info]   (min, avg, max) = (1478.506, 1502.149, 1516.609), stdev = 15.961
[info]   CI (99.9%): [1440.689, 1563.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   86512.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (86512.016, 86512.016, 86512.017), stdev = 0.001
[info]   CI (99.9%): [86512.014, 86512.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1478.949 ±(99.9%) 1163.435 MB/sec [Average]
[info]   (min, avg, max) = (1340.260, 1478.949, 2019.407), stdev = 302.140
[info]   CI (99.9%): [315.513, 2642.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   85156.741 ±(99.9%) 66284.909 B/op [Average]
[info]   (min, avg, max) = (76598.051, 85156.741, 115919.996), stdev = 17213.980
[info]   CI (99.9%): [18871.832, 151441.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.668 ±(99.9%) 8.940 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.668, 4.757), stdev = 2.322
[info]   CI (99.9%): [≈ 0, 10.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 41.88% complete, ETA 01:06:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4749.637 ops/s
[info] # Warmup Iteration   2: 6739.492 ops/s
[info] # Warmup Iteration   3: 6764.677 ops/s
[info] # Warmup Iteration   4: 6918.501 ops/s
[info] # Warmup Iteration   5: 6947.349 ops/s
[info] Iteration   1: 6953.683 ops/s
[info]                  ·gc.alloc.rate:                   1099.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              248880.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     152122.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.711 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 6961.217 ops/s
[info]                  ·gc.alloc.rate:                   1100.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              248880.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     303895.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.118 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6693.706 ops/s
[info]                  ·gc.alloc.rate:               1058.503 MB/sec
[info]                  ·gc.alloc.rate.norm:          248880.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 158108.659 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 6903.051 ops/s
[info]                  ·gc.alloc.rate:                   1091.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              248880.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     306752.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.237 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 6920.467 ops/s
[info]                  ·gc.alloc.rate:               1094.424 MB/sec
[info]                  ·gc.alloc.rate.norm:          248885.533 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 306257.500 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce":
[info]   6886.425 ±(99.9%) 424.852 ops/s [Average]
[info]   (min, avg, max) = (6693.706, 6886.425, 6961.217), stdev = 110.333
[info]   CI (99.9%): [6461.573, 7311.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1088.998 ±(99.9%) 67.207 MB/sec [Average]
[info]   (min, avg, max) = (1058.503, 1088.998, 1100.822), stdev = 17.453
[info]   CI (99.9%): [1021.791, 1156.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   248881.158 ±(99.9%) 9.418 B/op [Average]
[info]   (min, avg, max) = (248880.062, 248881.158, 248885.533), stdev = 2.446
[info]   CI (99.9%): [248871.740, 248890.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1076.181 ±(99.9%) 1419.791 MB/sec [Average]
[info]   (min, avg, max) = (672.103, 1076.181, 1346.705), stdev = 368.715
[info]   CI (99.9%): [≈ 0, 2495.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   245427.351 ±(99.9%) 317590.083 B/op [Average]
[info]   (min, avg, max) = (152122.672, 245427.351, 306752.139), stdev = 82477.136
[info]   CI (99.9%): [≈ 0, 563017.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.613 ±(99.9%) 27.602 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.613, 14.237), stdev = 7.168
[info]   CI (99.9%): [≈ 0, 34.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.12% complete, ETA 01:05:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4254.280 ops/s
[info] # Warmup Iteration   2: 7323.503 ops/s
[info] # Warmup Iteration   3: 7183.491 ops/s
[info] # Warmup Iteration   4: 7344.756 ops/s
[info] # Warmup Iteration   5: 7528.647 ops/s
[info] Iteration   1: 7439.192 ops/s
[info]                  ·gc.alloc.rate:               1086.949 MB/sec
[info]                  ·gc.alloc.rate.norm:          229848.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1336.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 282682.900 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 7539.218 ops/s
[info]                  ·gc.alloc.rate:                   1101.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              229848.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     278934.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.417 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 7548.541 ops/s
[info]                  ·gc.alloc.rate:               1102.511 MB/sec
[info]                  ·gc.alloc.rate.norm:          229848.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139439.775 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 7516.924 ops/s
[info]                  ·gc.alloc.rate:                   1097.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              229860.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     280238.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.148 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7343.005 ops/s
[info]                  ·gc.alloc.rate:               1072.580 MB/sec
[info]                  ·gc.alloc.rate.norm:          229880.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 287305.541 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala":
[info]   7477.376 ±(99.9%) 333.290 ops/s [Average]
[info]   (min, avg, max) = (7343.005, 7477.376, 7548.541), stdev = 86.554
[info]   CI (99.9%): [7144.086, 7810.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1092.248 ±(99.9%) 48.464 MB/sec [Average]
[info]   (min, avg, max) = (1072.580, 1092.248, 1102.511), stdev = 12.586
[info]   CI (99.9%): [1043.784, 1140.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   229857.015 ±(99.9%) 54.459 B/op [Average]
[info]   (min, avg, max) = (229848.057, 229857.015, 229880.412), stdev = 14.143
[info]   CI (99.9%): [229802.556, 229911.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1204.238 ±(99.9%) 1152.480 MB/sec [Average]
[info]   (min, avg, max) = (668.850, 1204.238, 1340.516), stdev = 299.295
[info]   CI (99.9%): [51.758, 2356.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   253720.206 ±(99.9%) 246304.297 B/op [Average]
[info]   (min, avg, max) = (139439.775, 253720.206, 287305.541), stdev = 63964.444
[info]   CI (99.9%): [7415.908, 500024.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.287 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.146), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.313 ±(99.9%) 59.933 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.313, 30.417), stdev = 15.564
[info]   CI (99.9%): [≈ 0, 71.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.35% complete, ETA 01:05:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 143091.813 ops/s
[info] # Warmup Iteration   2: 141989.427 ops/s
[info] # Warmup Iteration   3: 163478.895 ops/s
[info] # Warmup Iteration   4: 163409.570 ops/s
[info] # Warmup Iteration   5: 164394.367 ops/s
[info] Iteration   1: 164204.731 ops/s
[info]                  ·gc.alloc.rate:                   1590.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              15248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19377.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.599 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 163787.593 ops/s
[info]                  ·gc.alloc.rate:                   1586.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              15248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12962.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.800 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 164616.782 ops/s
[info]                  ·gc.alloc.rate:                   1595.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              15248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12909.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.796 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 164142.560 ops/s
[info]                  ·gc.alloc.rate:                   1590.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              15248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19443.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 164199.024 ops/s
[info]                  ·gc.alloc.rate:                   1591.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              15248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12974.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.399 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala":
[info]   164190.138 ±(99.9%) 1133.528 ops/s [Average]
[info]   (min, avg, max) = (163787.593, 164190.138, 164616.782), stdev = 294.374
[info]   CI (99.9%): [163056.610, 165323.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1590.827 ±(99.9%) 11.360 MB/sec [Average]
[info]   (min, avg, max) = (1586.844, 1590.827, 1595.125), stdev = 2.950
[info]   CI (99.9%): [1579.468, 1602.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   15248.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (15248.003, 15248.003, 15248.003), stdev = 0.001
[info]   CI (99.9%): [15248.002, 15248.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1620.564 ±(99.9%) 1420.761 MB/sec [Average]
[info]   (min, avg, max) = (1348.965, 1620.564, 2027.708), stdev = 368.967
[info]   CI (99.9%): [199.803, 3041.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   15533.534 ±(99.9%) 13628.941 B/op [Average]
[info]   (min, avg, max) = (12909.999, 15533.534, 19443.269), stdev = 3539.393
[info]   CI (99.9%): [1904.593, 29162.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.559 ±(99.9%) 1.002 B/op [Average]
[info]   (min, avg, max) = (0.200, 0.559, 0.800), stdev = 0.260
[info]   CI (99.9%): [≈ 0, 1.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 42.59% complete, ETA 01:05:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3452.542 ops/s
[info] # Warmup Iteration   2: 7009.707 ops/s
[info] # Warmup Iteration   3: 6972.378 ops/s
[info] # Warmup Iteration   4: 7176.039 ops/s
[info] # Warmup Iteration   5: 7203.617 ops/s
[info] Iteration   1: 7203.009 ops/s
[info]                  ·gc.alloc.rate:               1314.630 MB/sec
[info]                  ·gc.alloc.rate.norm:          287248.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1337.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 292233.256 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 7205.304 ops/s
[info]                  ·gc.alloc.rate:                   1315.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              287248.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     292443.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.280 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7205.006 ops/s
[info]                  ·gc.alloc.rate:               1315.092 MB/sec
[info]                  ·gc.alloc.rate.norm:          287248.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 292879.629 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 7184.161 ops/s
[info]                  ·gc.alloc.rate:                   1311.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              287248.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     294027.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.120 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7181.816 ops/s
[info]                  ·gc.alloc.rate:               1310.801 MB/sec
[info]                  ·gc.alloc.rate.norm:          287248.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 294734.087 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson":
[info]   7195.859 ±(99.9%) 45.482 ops/s [Average]
[info]   (min, avg, max) = (7181.816, 7195.859, 7205.304), stdev = 11.811
[info]   CI (99.9%): [7150.377, 7241.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1313.490 ±(99.9%) 7.887 MB/sec [Average]
[info]   (min, avg, max) = (1310.801, 1313.490, 1315.149), stdev = 2.048
[info]   CI (99.9%): [1305.603, 1321.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   287248.089 ±(99.9%) 0.248 B/op [Average]
[info]   (min, avg, max) = (287248.060, 287248.089, 287248.204), stdev = 0.064
[info]   CI (99.9%): [287247.841, 287248.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1340.990 ±(99.9%) 11.492 MB/sec [Average]
[info]   (min, avg, max) = (1337.445, 1340.990, 1344.961), stdev = 2.984
[info]   CI (99.9%): [1329.498, 1352.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   293263.497 ±(99.9%) 4141.838 B/op [Average]
[info]   (min, avg, max) = (292233.256, 293263.497, 294734.087), stdev = 1075.622
[info]   CI (99.9%): [289121.658, 297405.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   7.280 ±(99.9%) 45.658 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.280, 27.280), stdev = 11.857
[info]   CI (99.9%): [≈ 0, 52.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 42.82% complete, ETA 01:05:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11663.832 ops/s
[info] # Warmup Iteration   2: 16281.759 ops/s
[info] # Warmup Iteration   3: 16637.928 ops/s
[info] # Warmup Iteration   4: 16351.672 ops/s
[info] # Warmup Iteration   5: 16752.452 ops/s
[info] Iteration   1: 16828.545 ops/s
[info]                  ·gc.alloc.rate:                   993.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              92872.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62674.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.841 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 16631.950 ops/s
[info]                  ·gc.alloc.rate:                   981.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              92865.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126864.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.940 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 16619.002 ops/s
[info]                  ·gc.alloc.rate:                   980.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              92808.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63497.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.971 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 16669.194 ops/s
[info]                  ·gc.alloc.rate:                   983.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              92808.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126676.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.897 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 16818.877 ops/s
[info]                  ·gc.alloc.rate:               991.756 MB/sec
[info]                  ·gc.alloc.rate.norm:          92808.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62863.446 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce":
[info]   16713.514 ±(99.9%) 394.023 ops/s [Average]
[info]   (min, avg, max) = (16619.002, 16713.514, 16828.545), stdev = 102.326
[info]   CI (99.9%): [16319.491, 17107.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   985.867 ±(99.9%) 23.450 MB/sec [Average]
[info]   (min, avg, max) = (980.034, 985.867, 993.080), stdev = 6.090
[info]   CI (99.9%): [962.417, 1009.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   92832.403 ±(99.9%) 128.803 B/op [Average]
[info]   (min, avg, max) = (92808.026, 92832.403, 92872.026), stdev = 33.450
[info]   CI (99.9%): [92703.600, 92961.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   938.994 ±(99.9%) 1414.009 MB/sec [Average]
[info]   (min, avg, max) = (670.173, 938.994, 1341.739), stdev = 367.214
[info]   CI (99.9%): [≈ 0, 2353.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   88515.242 ±(99.9%) 134478.331 B/op [Average]
[info]   (min, avg, max) = (62674.081, 88515.242, 126864.206), stdev = 34923.596
[info]   CI (99.9%): [≈ 0, 222993.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.530 ±(99.9%) 9.817 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.530, 5.897), stdev = 2.549
[info]   CI (99.9%): [≈ 0, 13.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.06% complete, ETA 01:04:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12604.427 ops/s
[info] # Warmup Iteration   2: 18661.301 ops/s
[info] # Warmup Iteration   3: 18729.777 ops/s
[info] # Warmup Iteration   4: 18784.337 ops/s
[info] # Warmup Iteration   5: 18717.177 ops/s
[info] Iteration   1: 18646.930 ops/s
[info]                  ·gc.alloc.rate:                   874.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              73808.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112763.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.271 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 18716.332 ops/s
[info]                  ·gc.alloc.rate:               877.781 MB/sec
[info]                  ·gc.alloc.rate.norm:          73808.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56184.718 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 18721.889 ops/s
[info]                  ·gc.alloc.rate:               878.084 MB/sec
[info]                  ·gc.alloc.rate.norm:          73808.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56166.714 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 18785.192 ops/s
[info]                  ·gc.alloc.rate:                   881.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              73808.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55975.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.976 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 18568.272 ops/s
[info]                  ·gc.alloc.rate:               871.057 MB/sec
[info]                  ·gc.alloc.rate.norm:          73808.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113428.235 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala":
[info]   18687.723 ±(99.9%) 318.806 ops/s [Average]
[info]   (min, avg, max) = (18568.272, 18687.723, 18785.192), stdev = 82.793
[info]   CI (99.9%): [18368.917, 19006.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   876.497 ±(99.9%) 14.709 MB/sec [Average]
[info]   (min, avg, max) = (871.057, 876.497, 881.045), stdev = 3.820
[info]   CI (99.9%): [861.788, 891.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   73808.025 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (73808.023, 73808.025, 73808.032), stdev = 0.004
[info]   CI (99.9%): [73808.010, 73808.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   935.859 ±(99.9%) 1411.335 MB/sec [Average]
[info]   (min, avg, max) = (668.177, 935.859, 1338.642), stdev = 366.519
[info]   CI (99.9%): [≈ 0, 2347.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   78903.634 ±(99.9%) 120193.653 B/op [Average]
[info]   (min, avg, max) = (55975.397, 78903.634, 113428.235), stdev = 31213.910
[info]   CI (99.9%): [≈ 0, 199097.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.449 ±(99.9%) 13.122 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.449, 6.976), stdev = 3.408
[info]   CI (99.9%): [≈ 0, 15.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.29% complete, ETA 01:04:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 384457.122 ops/s
[info] # Warmup Iteration   2: 418444.162 ops/s
[info] # Warmup Iteration   3: 415876.670 ops/s
[info] # Warmup Iteration   4: 427359.606 ops/s
[info] # Warmup Iteration   5: 377135.426 ops/s
[info] Iteration   1: 417698.051 ops/s
[info]                  ·gc.alloc.rate:                   947.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2532.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 425863.341 ops/s
[info]                  ·gc.alloc.rate:                   965.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4968.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 425287.803 ops/s
[info]                  ·gc.alloc.rate:               964.255 MB/sec
[info]                  ·gc.alloc.rate.norm:          3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2487.476 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 426787.646 ops/s
[info]                  ·gc.alloc.rate:                   967.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4962.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.307 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 422753.175 ops/s
[info]                  ·gc.alloc.rate:               958.492 MB/sec
[info]                  ·gc.alloc.rate.norm:          3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2506.158 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala":
[info]   423678.003 ±(99.9%) 14102.529 ops/s [Average]
[info]   (min, avg, max) = (417698.051, 423678.003, 426787.646), stdev = 3662.382
[info]   CI (99.9%): [409575.474, 437780.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   960.566 ±(99.9%) 31.807 MB/sec [Average]
[info]   (min, avg, max) = (947.066, 960.566, 967.540), stdev = 8.260
[info]   CI (99.9%): [928.759, 992.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3568.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3568.001, 3568.001, 3568.001), stdev = 0.001
[info]   CI (99.9%): [3568.001, 3568.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   941.536 ±(99.9%) 1418.166 MB/sec [Average]
[info]   (min, avg, max) = (672.234, 941.536, 1345.616), stdev = 368.293
[info]   CI (99.9%): [≈ 0, 2359.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3491.320 ±(99.9%) 5181.224 B/op [Average]
[info]   (min, avg, max) = (2487.476, 3491.320, 4968.143), stdev = 1345.547
[info]   CI (99.9%): [≈ 0, 8672.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.139 ±(99.9%) 0.606 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.139, 0.308), stdev = 0.157
[info]   CI (99.9%): [≈ 0, 0.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 43.53% complete, ETA 01:04:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 442023.781 ops/s
[info] # Warmup Iteration   2: 493960.903 ops/s
[info] # Warmup Iteration   3: 494416.334 ops/s
[info] # Warmup Iteration   4: 497153.993 ops/s
[info] # Warmup Iteration   5: 497331.235 ops/s
[info] Iteration   1: 493255.480 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 496060.083 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 494971.704 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 495475.969 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 495833.934 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   495119.434 ±(99.9%) 4313.149 ops/s [Average]
[info]   (min, avg, max) = (493255.480, 495119.434, 496060.083), stdev = 1120.111
[info]   CI (99.9%): [490806.285, 499432.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 43.76% complete, ETA 01:04:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13805.742 ops/s
[info] # Warmup Iteration   2: 18602.328 ops/s
[info] # Warmup Iteration   3: 18432.097 ops/s
[info] # Warmup Iteration   4: 18539.261 ops/s
[info] # Warmup Iteration   5: 18579.187 ops/s
[info] Iteration   1: 18605.454 ops/s
[info]                  ·gc.alloc.rate:                   942.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              79688.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56632.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.283 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 18285.529 ops/s
[info]                  ·gc.alloc.rate:                   925.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              79674.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115234.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.583 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 18442.892 ops/s
[info]                  ·gc.alloc.rate:               933.665 MB/sec
[info]                  ·gc.alloc.rate.norm:          79672.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57129.940 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 17889.593 ops/s
[info]                  ·gc.alloc.rate:               905.618 MB/sec
[info]                  ·gc.alloc.rate.norm:          79672.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58954.198 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 18259.264 ops/s
[info]                  ·gc.alloc.rate:                   924.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              79672.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115593.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.176 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson":
[info]   18296.546 ±(99.9%) 1025.969 ops/s [Average]
[info]   (min, avg, max) = (17889.593, 18296.546, 18605.454), stdev = 266.441
[info]   CI (99.9%): [17270.577, 19322.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   926.434 ±(99.9%) 52.485 MB/sec [Average]
[info]   (min, avg, max) = (905.618, 926.434, 942.378), stdev = 13.630
[info]   CI (99.9%): [873.948, 978.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   79675.741 ±(99.9%) 26.806 B/op [Average]
[info]   (min, avg, max) = (79672.023, 79675.741, 79688.034), stdev = 6.961
[info]   CI (99.9%): [79648.935, 79702.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   937.993 ±(99.9%) 1414.202 MB/sec [Average]
[info]   (min, avg, max) = (669.498, 937.993, 1341.655), stdev = 367.264
[info]   CI (99.9%): [≈ 0, 2352.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   80708.846 ±(99.9%) 122039.036 B/op [Average]
[info]   (min, avg, max) = (56632.571, 80708.846, 115593.089), stdev = 31693.150
[info]   CI (99.9%): [≈ 0, 202747.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.208 ±(99.9%) 12.294 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.208, 7.176), stdev = 3.193
[info]   CI (99.9%): [≈ 0, 15.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.00% complete, ETA 01:03:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8522.016 ops/s
[info] # Warmup Iteration   2: 11821.364 ops/s
[info] # Warmup Iteration   3: 11767.058 ops/s
[info] # Warmup Iteration   4: 11941.066 ops/s
[info] # Warmup Iteration   5: 11959.369 ops/s
[info] Iteration   1: 11655.979 ops/s
[info]                  ·gc.alloc.rate:               1201.828 MB/sec
[info]                  ·gc.alloc.rate.norm:          162267.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 90754.262 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 11660.038 ops/s
[info]                  ·gc.alloc.rate:                   1202.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              162264.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     181491.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.429 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 11644.155 ops/s
[info]                  ·gc.alloc.rate:               1200.593 MB/sec
[info]                  ·gc.alloc.rate.norm:          162264.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 181830.606 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 11860.931 ops/s
[info]                  ·gc.alloc.rate:                   1222.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              162264.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     178681.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.524 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 11501.807 ops/s
[info]                  ·gc.alloc.rate:                   1185.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              162264.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     184485.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.848 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce":
[info]   11664.582 ±(99.9%) 492.974 ops/s [Average]
[info]   (min, avg, max) = (11501.807, 11664.582, 11860.931), stdev = 128.024
[info]   CI (99.9%): [11171.608, 12157.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1202.676 ±(99.9%) 50.789 MB/sec [Average]
[info]   (min, avg, max) = (1185.850, 1202.676, 1222.863), stdev = 13.190
[info]   CI (99.9%): [1151.887, 1253.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   162264.707 ±(99.9%) 5.741 B/op [Average]
[info]   (min, avg, max) = (162264.037, 162264.707, 162267.374), stdev = 1.491
[info]   CI (99.9%): [162258.966, 162270.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1211.414 ±(99.9%) 1160.778 MB/sec [Average]
[info]   (min, avg, max) = (672.169, 1211.414, 1348.246), stdev = 301.450
[info]   CI (99.9%): [50.636, 2372.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   163448.522 ±(99.9%) 156679.994 B/op [Average]
[info]   (min, avg, max) = (90754.262, 163448.522, 184485.207), stdev = 40689.297
[info]   CI (99.9%): [6768.528, 320128.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.360 ±(99.9%) 14.046 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.360, 8.429), stdev = 3.648
[info]   CI (99.9%): [≈ 0, 17.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.24% complete, ETA 01:03:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7508.777 ops/s
[info] # Warmup Iteration   2: 12556.146 ops/s
[info] # Warmup Iteration   3: 12204.020 ops/s
[info] # Warmup Iteration   4: 12314.426 ops/s
[info] # Warmup Iteration   5: 12352.902 ops/s
[info] Iteration   1: 12616.196 ops/s
[info]                  ·gc.alloc.rate:                   1170.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              146070.527 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166701.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.791 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 12353.231 ops/s
[info]                  ·gc.alloc.rate:               1146.693 MB/sec
[info]                  ·gc.alloc.rate.norm:          146080.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 85118.301 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 12618.774 ops/s
[info]                  ·gc.alloc.rate:                   1171.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              146080.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166828.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.596 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 12608.844 ops/s
[info]                  ·gc.alloc.rate:                   1170.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              146080.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167210.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.393 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 12664.584 ops/s
[info]                  ·gc.alloc.rate:                   1175.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              146055.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166719.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.348 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala":
[info]   12572.326 ±(99.9%) 479.129 ops/s [Average]
[info]   (min, avg, max) = (12353.231, 12572.326, 12664.584), stdev = 124.428
[info]   CI (99.9%): [12093.197, 13051.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1166.931 ±(99.9%) 44.227 MB/sec [Average]
[info]   (min, avg, max) = (1146.693, 1166.931, 1175.367), stdev = 11.486
[info]   CI (99.9%): [1122.704, 1211.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   146073.326 ±(99.9%) 40.554 B/op [Average]
[info]   (min, avg, max) = (146055.987, 146073.326, 146080.047), stdev = 10.532
[info]   CI (99.9%): [146032.772, 146113.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1204.689 ±(99.9%) 1154.949 MB/sec [Average]
[info]   (min, avg, max) = (668.158, 1204.689, 1341.652), stdev = 299.937
[info]   CI (99.9%): [49.740, 2359.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   150515.548 ±(99.9%) 140774.721 B/op [Average]
[info]   (min, avg, max) = (85118.301, 150515.548, 167210.081), stdev = 36558.748
[info]   CI (99.9%): [9740.827, 291290.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.226 ±(99.9%) 18.137 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.226, 10.393), stdev = 4.710
[info]   CI (99.9%): [≈ 0, 24.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.47% complete, ETA 01:03:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 258686.394 ops/s
[info] # Warmup Iteration   2: 273261.000 ops/s
[info] # Warmup Iteration   3: 271176.133 ops/s
[info] # Warmup Iteration   4: 277013.567 ops/s
[info] # Warmup Iteration   5: 270277.394 ops/s
[info] Iteration   1: 276852.863 ops/s
[info]                  ·gc.alloc.rate:                   1601.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              9104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7661.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.237 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 277394.153 ops/s
[info]                  ·gc.alloc.rate:               1605.030 MB/sec
[info]                  ·gc.alloc.rate.norm:          9104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7651.812 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 276576.638 ops/s
[info]                  ·gc.alloc.rate:                   1599.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              9104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11521.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.592 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 275058.758 ops/s
[info]                  ·gc.alloc.rate:                   1591.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              9104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7733.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.238 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 274773.948 ops/s
[info]                  ·gc.alloc.rate:                   1589.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              9104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11627.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala":
[info]   276131.272 ±(99.9%) 4435.152 ops/s [Average]
[info]   (min, avg, max) = (274773.948, 276131.272, 277394.153), stdev = 1151.795
[info]   CI (99.9%): [271696.120, 280566.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1597.503 ±(99.9%) 25.544 MB/sec [Average]
[info]   (min, avg, max) = (1589.470, 1597.503, 1605.030), stdev = 6.634
[info]   CI (99.9%): [1571.959, 1623.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   9104.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9104.002, 9104.002, 9104.002), stdev = 0.001
[info]   CI (99.9%): [9104.001, 9104.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1620.731 ±(99.9%) 1429.641 MB/sec [Average]
[info]   (min, avg, max) = (1347.630, 1620.731, 2030.105), stdev = 371.273
[info]   CI (99.9%): [191.091, 3050.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9239.287 ±(99.9%) 8211.939 B/op [Average]
[info]   (min, avg, max) = (7651.812, 9239.287, 11627.824), stdev = 2132.614
[info]   CI (99.9%): [1027.348, 17451.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.237 ±(99.9%) 0.853 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.237, 0.592), stdev = 0.222
[info]   CI (99.9%): [≈ 0, 1.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 44.71% complete, ETA 01:03:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4861.250 ops/s
[info] # Warmup Iteration   2: 10804.073 ops/s
[info] # Warmup Iteration   3: 10963.141 ops/s
[info] # Warmup Iteration   4: 10756.132 ops/s
[info] # Warmup Iteration   5: 10742.981 ops/s
[info] Iteration   1: 10755.565 ops/s
[info]                  ·gc.alloc.rate:               1380.685 MB/sec
[info]                  ·gc.alloc.rate.norm:          202024.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1333.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 195133.775 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 10735.820 ops/s
[info]                  ·gc.alloc.rate:                   1378.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              202024.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     195790.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 10658.621 ops/s
[info]                  ·gc.alloc.rate:                   1368.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              202024.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     296326.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.148 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 10983.300 ops/s
[info]                  ·gc.alloc.rate:                   1409.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              202024.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     192133.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.983 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 11053.398 ops/s
[info]                  ·gc.alloc.rate:                   1419.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              202024.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     191201.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.964 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson":
[info]   10837.341 ±(99.9%) 658.335 ops/s [Average]
[info]   (min, avg, max) = (10658.621, 10837.341, 11053.398), stdev = 170.968
[info]   CI (99.9%): [10179.006, 11495.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1391.239 ±(99.9%) 84.944 MB/sec [Average]
[info]   (min, avg, max) = (1368.217, 1391.239, 1419.290), stdev = 22.060
[info]   CI (99.9%): [1306.295, 1476.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   202024.129 ±(99.9%) 0.725 B/op [Average]
[info]   (min, avg, max) = (202024.041, 202024.129, 202024.466), stdev = 0.188
[info]   CI (99.9%): [202023.404, 202024.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1472.038 ±(99.9%) 1151.388 MB/sec [Average]
[info]   (min, avg, max) = (1333.596, 1472.038, 2006.881), stdev = 299.012
[info]   CI (99.9%): [320.650, 2623.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   214117.177 ±(99.9%) 177118.196 B/op [Average]
[info]   (min, avg, max) = (191201.991, 214117.177, 296326.004), stdev = 45997.033
[info]   CI (99.9%): [36998.981, 391235.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.029 ±(99.9%) 8.372 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.029, 6.148), stdev = 2.174
[info]   CI (99.9%): [≈ 0, 11.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.94% complete, ETA 01:02:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19372.861 ops/s
[info] # Warmup Iteration   2: 26956.504 ops/s
[info] # Warmup Iteration   3: 27149.309 ops/s
[info] # Warmup Iteration   4: 26553.138 ops/s
[info] # Warmup Iteration   5: 26415.398 ops/s
[info] Iteration   1: 27242.491 ops/s
[info]                  ·gc.alloc.rate:                   1195.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              69056.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77432.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 26908.310 ops/s
[info]                  ·gc.alloc.rate:                   1181.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              69056.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78432.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.088 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 27090.657 ops/s
[info]                  ·gc.alloc.rate:                   1188.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              69056.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77983.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.419 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 27275.289 ops/s
[info]                  ·gc.alloc.rate:               1196.774 MB/sec
[info]                  ·gc.alloc.rate.norm:          69056.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38745.037 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 27279.223 ops/s
[info]                  ·gc.alloc.rate:               1196.885 MB/sec
[info]                  ·gc.alloc.rate.norm:          69056.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77594.009 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce":
[info]   27159.194 ±(99.9%) 616.295 ops/s [Average]
[info]   (min, avg, max) = (26908.310, 27159.194, 27279.223), stdev = 160.050
[info]   CI (99.9%): [26542.899, 27775.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1191.767 ±(99.9%) 26.272 MB/sec [Average]
[info]   (min, avg, max) = (1181.167, 1191.767, 1196.885), stdev = 6.823
[info]   CI (99.9%): [1165.495, 1218.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   69056.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (69056.016, 69056.016, 69056.017), stdev = 0.001
[info]   CI (99.9%): [69056.014, 69056.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1208.113 ±(99.9%) 1155.181 MB/sec [Average]
[info]   (min, avg, max) = (671.470, 1208.113, 1344.866), stdev = 299.997
[info]   CI (99.9%): [52.931, 2363.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   70037.603 ±(99.9%) 67376.021 B/op [Average]
[info]   (min, avg, max) = (38745.037, 70037.603, 78432.799), stdev = 17497.339
[info]   CI (99.9%): [2661.583, 137413.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.904 ±(99.9%) 11.697 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.904, 6.088), stdev = 3.038
[info]   CI (99.9%): [≈ 0, 14.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.18% complete, ETA 01:02:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52820.114 ops/s
[info] # Warmup Iteration   2: 82224.164 ops/s
[info] # Warmup Iteration   3: 81862.262 ops/s
[info] # Warmup Iteration   4: 81066.217 ops/s
[info] # Warmup Iteration   5: 79613.858 ops/s
[info] Iteration   1: 79280.234 ops/s
[info]                  ·gc.alloc.rate:                   1465.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              29096.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26567.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.413 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 79583.069 ops/s
[info]                  ·gc.alloc.rate:                   1471.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              29096.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26492.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.647 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 81629.965 ops/s
[info]                  ·gc.alloc.rate:                   1509.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              29096.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25867.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.204 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 80839.672 ops/s
[info]                  ·gc.alloc.rate:                   1495.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              29096.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39264.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.811 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 78702.452 ops/s
[info]                  ·gc.alloc.rate:               1455.194 MB/sec
[info]                  ·gc.alloc.rate.norm:          29096.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26935.751 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala":
[info]   80007.078 ±(99.9%) 4611.583 ops/s [Average]
[info]   (min, avg, max) = (78702.452, 80007.078, 81629.965), stdev = 1197.614
[info]   CI (99.9%): [75395.495, 84618.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1479.297 ±(99.9%) 85.414 MB/sec [Average]
[info]   (min, avg, max) = (1455.194, 1479.297, 1509.104), stdev = 22.182
[info]   CI (99.9%): [1393.883, 1564.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   29096.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (29096.005, 29096.006, 29096.006), stdev = 0.001
[info]   CI (99.9%): [29096.004, 29096.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1476.884 ±(99.9%) 1164.077 MB/sec [Average]
[info]   (min, avg, max) = (1338.280, 1476.884, 2017.634), stdev = 302.307
[info]   CI (99.9%): [312.807, 2640.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   29025.321 ±(99.9%) 22089.892 B/op [Average]
[info]   (min, avg, max) = (25867.298, 29025.321, 39264.373), stdev = 5736.675
[info]   CI (99.9%): [6935.429, 51115.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.815 ±(99.9%) 2.487 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.815, 1.647), stdev = 0.646
[info]   CI (99.9%): [≈ 0, 3.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.41% complete, ETA 01:02:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 647128.117 ops/s
[info] # Warmup Iteration   2: 700632.204 ops/s
[info] # Warmup Iteration   3: 701913.948 ops/s
[info] # Warmup Iteration   4: 699525.659 ops/s
[info] # Warmup Iteration   5: 700784.091 ops/s
[info] Iteration   1: 697981.943 ops/s
[info]                  ·gc.alloc.rate:                   958.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              2160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3031.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 690988.365 ops/s
[info]                  ·gc.alloc.rate:                   948.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              2160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1530.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 694575.779 ops/s
[info]                  ·gc.alloc.rate:               953.248 MB/sec
[info]                  ·gc.alloc.rate.norm:          2160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1523.066 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 693299.845 ops/s
[info]                  ·gc.alloc.rate:                   951.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              2160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3054.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 679701.665 ops/s
[info]                  ·gc.alloc.rate:               933.201 MB/sec
[info]                  ·gc.alloc.rate.norm:          2160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1558.685 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala":
[info]   691309.520 ±(99.9%) 26816.390 ops/s [Average]
[info]   (min, avg, max) = (679701.665, 691309.520, 697981.943), stdev = 6964.131
[info]   CI (99.9%): [664493.129, 718125.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   948.990 ±(99.9%) 36.529 MB/sec [Average]
[info]   (min, avg, max) = (933.201, 948.990, 958.283), stdev = 9.487
[info]   CI (99.9%): [912.461, 985.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2160.001, 2160.001, 2160.001), stdev = 0.001
[info]   CI (99.9%): [2160.001, 2160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   941.669 ±(99.9%) 1418.377 MB/sec [Average]
[info]   (min, avg, max) = (672.157, 941.669, 1345.556), stdev = 368.348
[info]   CI (99.9%): [≈ 0, 2360.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2139.704 ±(99.9%) 3175.533 B/op [Average]
[info]   (min, avg, max) = (1523.066, 2139.704, 3054.652), stdev = 824.676
[info]   CI (99.9%): [≈ 0, 5315.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.075 ±(99.9%) 0.275 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.142), stdev = 0.071
[info]   CI (99.9%): [≈ 0, 0.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 45.65% complete, ETA 01:01:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 688511.100 ops/s
[info] # Warmup Iteration   2: 747809.280 ops/s
[info] # Warmup Iteration   3: 748818.963 ops/s
[info] # Warmup Iteration   4: 755570.566 ops/s
[info] # Warmup Iteration   5: 755602.041 ops/s
[info] Iteration   1: 756991.372 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 757528.475 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 728450.399 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 759076.116 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 759100.724 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   752229.417 ±(99.9%) 51312.273 ops/s [Average]
[info]   (min, avg, max) = (728450.399, 752229.417, 759100.724), stdev = 13325.634
[info]   CI (99.9%): [700917.145, 803541.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 45.88% complete, ETA 01:01:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43718.091 ops/s
[info] # Warmup Iteration   2: 74300.466 ops/s
[info] # Warmup Iteration   3: 74354.714 ops/s
[info] # Warmup Iteration   4: 74745.145 ops/s
[info] # Warmup Iteration   5: 74878.639 ops/s
[info] Iteration   1: 74620.798 ops/s
[info]                  ·gc.alloc.rate:                   1801.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              37984.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42312.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.317 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 74612.649 ops/s
[info]                  ·gc.alloc.rate:                   1800.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              37984.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42415.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.635 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 74718.284 ops/s
[info]                  ·gc.alloc.rate:                   1803.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              37984.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28301.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.315 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 74880.831 ops/s
[info]                  ·gc.alloc.rate:                   1807.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              37984.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42429.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.875 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 74771.129 ops/s
[info]                  ·gc.alloc.rate:                   1804.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              37984.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42602.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.438 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson":
[info]   74720.738 ±(99.9%) 429.853 ops/s [Average]
[info]   (min, avg, max) = (74612.649, 74720.738, 74880.831), stdev = 111.632
[info]   CI (99.9%): [74290.885, 75150.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1803.580 ±(99.9%) 10.269 MB/sec [Average]
[info]   (min, avg, max) = (1800.749, 1803.580, 1807.160), stdev = 2.667
[info]   CI (99.9%): [1793.310, 1813.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   37984.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (37984.006, 37984.006, 37984.006), stdev = 0.001
[info]   CI (99.9%): [37984.006, 37984.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1880.882 ±(99.9%) 1155.808 MB/sec [Average]
[info]   (min, avg, max) = (1344.084, 1880.882, 2024.371), stdev = 300.160
[info]   CI (99.9%): [725.074, 3036.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   39612.496 ±(99.9%) 24350.887 B/op [Average]
[info]   (min, avg, max) = (28301.590, 39612.496, 42602.869), stdev = 6323.848
[info]   CI (99.9%): [15261.609, 63963.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.316 ±(99.9%) 3.166 B/op [Average]
[info]   (min, avg, max) = (0.438, 1.316, 2.635), stdev = 0.822
[info]   CI (99.9%): [≈ 0, 4.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 46.12% complete, ETA 01:01:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4658.089 ops/s
[info] # Warmup Iteration   2: 12039.803 ops/s
[info] # Warmup Iteration   3: 12549.556 ops/s
[info] # Warmup Iteration   4: 12383.841 ops/s
[info] # Warmup Iteration   5: 12219.414 ops/s
[info] Iteration   1: 12091.019 ops/s
[info]                  ·gc.alloc.rate:               637.893 MB/sec
[info]                  ·gc.alloc.rate.norm:          83003.229 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 66592.770 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 12619.553 ops/s
[info]                  ·gc.alloc.rate:                   665.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              83000.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83822.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.655 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 206.394 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 12628.991 ops/s
[info]                  ·gc.alloc.rate:               666.017 MB/sec
[info]                  ·gc.alloc.rate.norm:          83000.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 83756.585 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 12621.923 ops/s
[info]                  ·gc.alloc.rate:               665.614 MB/sec
[info]                  ·gc.alloc.rate.norm:          83000.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 83809.663 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 12527.793 ops/s
[info]                  ·gc.alloc.rate:                   660.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              83000.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84438.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.615 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce":
[info]   12497.856 ±(99.9%) 890.265 ops/s [Average]
[info]   (min, avg, max) = (12091.019, 12497.856, 12628.991), stdev = 231.199
[info]   CI (99.9%): [11607.591, 13388.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate":
[info]   659.137 ±(99.9%) 46.507 MB/sec [Average]
[info]   (min, avg, max) = (637.893, 659.137, 666.017), stdev = 12.078
[info]   CI (99.9%): [612.630, 705.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   83000.676 ±(99.9%) 5.495 B/op [Average]
[info]   (min, avg, max) = (83000.034, 83000.676, 83003.229), stdev = 1.427
[info]   CI (99.9%): [82995.181, 83006.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   640.036 ±(99.9%) 276.089 MB/sec [Average]
[info]   (min, avg, max) = (511.776, 640.036, 672.107), stdev = 71.699
[info]   CI (99.9%): [363.947, 916.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   80484.073 ±(99.9%) 29921.384 B/op [Average]
[info]   (min, avg, max) = (66592.770, 80484.073, 84438.403), stdev = 7770.488
[info]   CI (99.9%): [50562.689, 110405.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.335 ±(99.9%) 2.841 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.335, 1.655), stdev = 0.738
[info]   CI (99.9%): [≈ 0, 3.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   41.802 ±(99.9%) 354.324 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41.802, 206.394), stdev = 92.017
[info]   CI (99.9%): [≈ 0, 396.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.35% complete, ETA 01:01:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3668.495 ops/s
[info] # Warmup Iteration   2: 16467.546 ops/s
[info] # Warmup Iteration   3: 17093.532 ops/s
[info] # Warmup Iteration   4: 16598.366 ops/s
[info] # Warmup Iteration   5: 16656.381 ops/s
[info] Iteration   1: 16694.316 ops/s
[info]                  ·gc.alloc.rate:                   712.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              67152.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62957.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.099 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 197.867 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 16734.573 ops/s
[info]                  ·gc.alloc.rate:                   714.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              67152.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62803.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.958 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 17125.390 ops/s
[info]                  ·gc.alloc.rate:               730.500 MB/sec
[info]                  ·gc.alloc.rate.norm:          67133.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61403.651 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 16707.109 ops/s
[info]                  ·gc.alloc.rate:               712.659 MB/sec
[info]                  ·gc.alloc.rate.norm:          67120.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62939.661 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 17047.015 ops/s
[info]                  ·gc.alloc.rate:                   727.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              67120.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61715.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.766 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala":
[info]   16861.681 ±(99.9%) 798.374 ops/s [Average]
[info]   (min, avg, max) = (16694.316, 16861.681, 17125.390), stdev = 207.335
[info]   CI (99.9%): [16063.307, 17660.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   719.305 ±(99.9%) 33.662 MB/sec [Average]
[info]   (min, avg, max) = (712.324, 719.305, 730.500), stdev = 8.742
[info]   CI (99.9%): [685.644, 752.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   67135.469 ±(99.9%) 61.808 B/op [Average]
[info]   (min, avg, max) = (67120.025, 67135.469, 67152.035), stdev = 16.051
[info]   CI (99.9%): [67073.662, 67197.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   668.103 ±(99.9%) 1.144 MB/sec [Average]
[info]   (min, avg, max) = (667.780, 668.103, 668.479), stdev = 0.297
[info]   CI (99.9%): [666.959, 669.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   62363.787 ±(99.9%) 2868.137 B/op [Average]
[info]   (min, avg, max) = (61403.651, 62363.787, 62957.264), stdev = 744.846
[info]   CI (99.9%): [59495.650, 65231.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.436 ±(99.9%) 3.580 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.436, 2.099), stdev = 0.930
[info]   CI (99.9%): [≈ 0, 4.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   41.118 ±(99.9%) 337.536 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41.118, 197.867), stdev = 87.657
[info]   CI (99.9%): [≈ 0, 378.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.59% complete, ETA 01:00:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 90755.434 ops/s
[info] # Warmup Iteration   2: 100416.642 ops/s
[info] # Warmup Iteration   3: 97106.745 ops/s
[info] # Warmup Iteration   4: 98420.942 ops/s
[info] # Warmup Iteration   5: 100570.957 ops/s
[info] Iteration   1: 100862.243 ops/s
[info]                  ·gc.alloc.rate:                   253.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              3952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7983.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 101152.702 ops/s
[info]                  ·gc.alloc.rate:      254.044 MB/sec
[info]                  ·gc.alloc.rate.norm: 3952.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 100924.754 ops/s
[info]                  ·gc.alloc.rate:               253.472 MB/sec
[info]                  ·gc.alloc.rate.norm:          3952.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7978.070 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 100798.504 ops/s
[info]                  ·gc.alloc.rate:      253.156 MB/sec
[info]                  ·gc.alloc.rate.norm: 3952.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 100999.146 ops/s
[info]                  ·gc.alloc.rate:                   253.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              3952.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7971.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.487 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala":
[info]   100947.470 ±(99.9%) 526.430 ops/s [Average]
[info]   (min, avg, max) = (100798.504, 100947.470, 101152.702), stdev = 136.712
[info]   CI (99.9%): [100421.040, 101473.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   253.523 ±(99.9%) 1.346 MB/sec [Average]
[info]   (min, avg, max) = (253.156, 253.523, 254.044), stdev = 0.350
[info]   CI (99.9%): [252.176, 254.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3952.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3952.004, 3952.004, 3952.005), stdev = 0.001
[info]   CI (99.9%): [3952.004, 3952.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.996 ±(99.9%) 1079.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.996, 511.694), stdev = 280.248
[info]   CI (99.9%): [≈ 0, 1386.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4786.543 ±(99.9%) 16825.381 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4786.543, 7983.131), stdev = 4369.498
[info]   CI (99.9%): [≈ 0, 21611.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.052 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.130 ±(99.9%) 0.815 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.130, 0.487), stdev = 0.212
[info]   CI (99.9%): [≈ 0, 0.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 46.82% complete, ETA 01:00:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2502.082 ops/s
[info] # Warmup Iteration   2: 13551.944 ops/s
[info] # Warmup Iteration   3: 13959.948 ops/s
[info] # Warmup Iteration   4: 14292.044 ops/s
[info] # Warmup Iteration   5: 14050.883 ops/s
[info] Iteration   1: 14329.640 ops/s
[info]                  ·gc.alloc.rate:               1115.096 MB/sec
[info]                  ·gc.alloc.rate.norm:          122472.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1337.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 146911.848 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 14344.995 ops/s
[info]                  ·gc.alloc.rate:               1116.728 MB/sec
[info]                  ·gc.alloc.rate.norm:          122472.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 73379.125 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 14179.518 ops/s
[info]                  ·gc.alloc.rate:                   1103.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              122472.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148539.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.311 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 14277.789 ops/s
[info]                  ·gc.alloc.rate:                   1111.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              122473.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147693.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.589 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 13802.182 ops/s
[info]                  ·gc.alloc.rate:               1074.081 MB/sec
[info]                  ·gc.alloc.rate.norm:          122472.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76449.963 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson":
[info]   14186.825 ±(99.9%) 864.664 ops/s [Average]
[info]   (min, avg, max) = (13802.182, 14186.825, 14344.995), stdev = 224.550
[info]   CI (99.9%): [13322.161, 15051.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1104.262 ±(99.9%) 67.723 MB/sec [Average]
[info]   (min, avg, max) = (1074.081, 1104.262, 1116.728), stdev = 17.588
[info]   CI (99.9%): [1036.539, 1171.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   122472.233 ±(99.9%) 1.743 B/op [Average]
[info]   (min, avg, max) = (122472.030, 122472.233, 122473.043), stdev = 0.453
[info]   CI (99.9%): [122470.491, 122473.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1071.285 ±(99.9%) 1411.364 MB/sec [Average]
[info]   (min, avg, max) = (669.088, 1071.285, 1340.475), stdev = 366.527
[info]   CI (99.9%): [≈ 0, 2482.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   118594.812 ±(99.9%) 153615.195 B/op [Average]
[info]   (min, avg, max) = (73379.125, 118594.812, 148539.641), stdev = 39893.378
[info]   CI (99.9%): [≈ 0, 272210.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.380 ±(99.9%) 7.910 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.380, 4.589), stdev = 2.054
[info]   CI (99.9%): [≈ 0, 9.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 47.06% complete, ETA 01:00:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37786.574 ops/s
[info] # Warmup Iteration   2: 51631.823 ops/s
[info] # Warmup Iteration   3: 49704.620 ops/s
[info] # Warmup Iteration   4: 51594.822 ops/s
[info] # Warmup Iteration   5: 52937.787 ops/s
[info] Iteration   1: 52550.218 ops/s
[info]                  ·gc.alloc.rate:                   1477.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              44248.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60262.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.117 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 52454.919 ops/s
[info]                  ·gc.alloc.rate:                   1474.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              44248.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40312.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.498 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 52858.573 ops/s
[info]                  ·gc.alloc.rate:               1486.056 MB/sec
[info]                  ·gc.alloc.rate.norm:          44248.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 40045.301 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 52554.105 ops/s
[info]                  ·gc.alloc.rate:                   1477.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              44248.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40336.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.494 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 52103.387 ops/s
[info]                  ·gc.alloc.rate:                   1464.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              44248.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40747.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.258 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce":
[info]   52504.241 ±(99.9%) 1042.643 ops/s [Average]
[info]   (min, avg, max) = (52103.387, 52504.241, 52858.573), stdev = 270.771
[info]   CI (99.9%): [51461.598, 53546.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1476.218 ±(99.9%) 29.396 MB/sec [Average]
[info]   (min, avg, max) = (1464.842, 1476.218, 1486.056), stdev = 7.634
[info]   CI (99.9%): [1446.823, 1505.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   44248.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (44248.008, 44248.008, 44248.009), stdev = 0.001
[info]   CI (99.9%): [44248.007, 44248.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1479.446 ±(99.9%) 1148.263 MB/sec [Average]
[info]   (min, avg, max) = (1343.575, 1479.446, 2012.870), stdev = 298.200
[info]   CI (99.9%): [331.182, 2627.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   44341.081 ±(99.9%) 34286.000 B/op [Average]
[info]   (min, avg, max) = (40045.301, 44341.081, 60262.645), stdev = 8903.965
[info]   CI (99.9%): [10055.081, 78627.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.104), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.873 ±(99.9%) 4.798 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.873, 3.117), stdev = 1.246
[info]   CI (99.9%): [≈ 0, 6.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.29% complete, ETA 01:00:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52879.710 ops/s
[info] # Warmup Iteration   2: 73711.786 ops/s
[info] # Warmup Iteration   3: 74717.387 ops/s
[info] # Warmup Iteration   4: 75130.385 ops/s
[info] # Warmup Iteration   5: 75413.415 ops/s
[info] Iteration   1: 75049.026 ops/s
[info]                  ·gc.alloc.rate:               1548.030 MB/sec
[info]                  ·gc.alloc.rate.norm:          32464.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28066.151 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 75266.422 ops/s
[info]                  ·gc.alloc.rate:                   1552.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              32464.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42045.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.741 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 74791.606 ops/s
[info]                  ·gc.alloc.rate:                   1542.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              32464.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28259.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.314 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 75625.144 ops/s
[info]                  ·gc.alloc.rate:                   1559.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              32464.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27990.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.866 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 73885.707 ops/s
[info]                  ·gc.alloc.rate:               1524.494 MB/sec
[info]                  ·gc.alloc.rate.norm:          32464.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28691.178 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala":
[info]   74923.581 ±(99.9%) 2525.086 ops/s [Average]
[info]   (min, avg, max) = (73885.707, 74923.581, 75625.144), stdev = 655.757
[info]   CI (99.9%): [72398.495, 77448.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1545.550 ±(99.9%) 51.409 MB/sec [Average]
[info]   (min, avg, max) = (1524.494, 1545.550, 1559.954), stdev = 13.351
[info]   CI (99.9%): [1494.141, 1596.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   32464.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (32464.006, 32464.006, 32464.006), stdev = 0.001
[info]   CI (99.9%): [32464.005, 32464.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1476.868 ±(99.9%) 1149.235 MB/sec [Average]
[info]   (min, avg, max) = (1338.320, 1476.868, 2010.724), stdev = 298.453
[info]   CI (99.9%): [327.633, 2626.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   31010.686 ±(99.9%) 23777.081 B/op [Average]
[info]   (min, avg, max) = (27990.308, 31010.686, 42045.839), stdev = 6174.832
[info]   CI (99.9%): [7233.605, 54787.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.784 ±(99.9%) 3.003 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.784, 1.741), stdev = 0.780
[info]   CI (99.9%): [≈ 0, 3.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.53% complete, ETA 00:59:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 246715.416 ops/s
[info] # Warmup Iteration   2: 266022.424 ops/s
[info] # Warmup Iteration   3: 271472.632 ops/s
[info] # Warmup Iteration   4: 276116.941 ops/s
[info] # Warmup Iteration   5: 273972.372 ops/s
[info] Iteration   1: 277573.813 ops/s
[info]                  ·gc.alloc.rate:                   531.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              3016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2900.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 277276.429 ops/s
[info]                  ·gc.alloc.rate:      531.368 MB/sec
[info]                  ·gc.alloc.rate.norm: 3016.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 274395.451 ops/s
[info]                  ·gc.alloc.rate:                   525.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              3016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3859.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.720 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.864 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 275245.405 ops/s
[info]                  ·gc.alloc.rate:                   527.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              3016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3847.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.238 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 272530.326 ops/s
[info]                  ·gc.alloc.rate:               522.245 MB/sec
[info]                  ·gc.alloc.rate.norm:          3016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3881.606 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala":
[info]   275404.285 ±(99.9%) 8057.514 ops/s [Average]
[info]   (min, avg, max) = (272530.326, 275404.285, 277573.813), stdev = 2092.511
[info]   CI (99.9%): [267346.771, 283461.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   527.781 ±(99.9%) 15.470 MB/sec [Average]
[info]   (min, avg, max) = (522.245, 527.781, 531.921), stdev = 4.018
[info]   CI (99.9%): [512.311, 543.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3016.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3016.002, 3016.002, 3016.002), stdev = 0.001
[info]   CI (99.9%): [3016.001, 3016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   505.900 ±(99.9%) 1121.597 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 505.900, 672.923), stdev = 291.275
[info]   CI (99.9%): [≈ 0, 1627.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2897.758 ±(99.9%) 6440.680 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2897.758, 3881.606), stdev = 1672.624
[info]   CI (99.9%): [≈ 0, 9338.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.359 ±(99.9%) 2.931 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.359, 1.720), stdev = 0.761
[info]   CI (99.9%): [≈ 0, 3.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.056 ±(99.9%) 16.813 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.056, 9.864), stdev = 4.366
[info]   CI (99.9%): [≈ 0, 18.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.517
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 47.76% complete, ETA 00:59:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 229635.730 ops/s
[info] # Warmup Iteration   2: 265841.963 ops/s
[info] # Warmup Iteration   3: 275147.211 ops/s
[info] # Warmup Iteration   4: 275840.817 ops/s
[info] # Warmup Iteration   5: 276476.940 ops/s
[info] Iteration   1: 276485.746 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 276708.898 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 241722.329 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 276557.740 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 276294.117 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc":
[info]   269553.766 ±(99.9%) 59912.021 ops/s [Average]
[info]   (min, avg, max) = (241722.329, 269553.766, 276708.898), stdev = 15558.962
[info]   CI (99.9%): [209641.745, 329465.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 48.00% complete, ETA 00:59:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49683.013 ops/s
[info] # Warmup Iteration   2: 67211.270 ops/s
[info] # Warmup Iteration   3: 66963.980 ops/s
[info] # Warmup Iteration   4: 66584.206 ops/s
[info] # Warmup Iteration   5: 67905.483 ops/s
[info] Iteration   1: 67776.247 ops/s
[info]                  ·gc.alloc.rate:                   1518.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              35272.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31138.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.483 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 66100.194 ops/s
[info]                  ·gc.alloc.rate:                   1481.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              35272.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31959.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.496 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 67924.464 ops/s
[info]                  ·gc.alloc.rate:                   1522.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              35272.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31132.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.894 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 67844.706 ops/s
[info]                  ·gc.alloc.rate:                   1520.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              35272.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46845.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.415 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 67352.732 ops/s
[info]                  ·gc.alloc.rate:                   1509.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              35272.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31502.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.459 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson":
[info]   67399.669 ±(99.9%) 2923.776 ops/s [Average]
[info]   (min, avg, max) = (66100.194, 67399.669, 67924.464), stdev = 759.295
[info]   CI (99.9%): [64475.892, 70323.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1510.544 ±(99.9%) 65.452 MB/sec [Average]
[info]   (min, avg, max) = (1481.448, 1510.544, 1522.312), stdev = 16.998
[info]   CI (99.9%): [1445.091, 1575.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   35272.008 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (35272.006, 35272.008, 35272.017), stdev = 0.005
[info]   CI (99.9%): [35271.991, 35272.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1478.905 ±(99.9%) 1163.580 MB/sec [Average]
[info]   (min, avg, max) = (1340.897, 1478.905, 2019.435), stdev = 302.178
[info]   CI (99.9%): [315.325, 2642.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   34515.702 ±(99.9%) 26573.209 B/op [Average]
[info]   (min, avg, max) = (31132.373, 34515.702, 46845.646), stdev = 6900.978
[info]   CI (99.9%): [7942.493, 61088.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.549 ±(99.9%) 4.223 B/op [Average]
[info]   (min, avg, max) = (0.483, 1.549, 2.894), stdev = 1.097
[info]   CI (99.9%): [≈ 0, 5.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 48.24% complete, ETA 00:58:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108701.244 ops/s
[info] # Warmup Iteration   2: 126975.816 ops/s
[info] # Warmup Iteration   3: 126835.351 ops/s
[info] # Warmup Iteration   4: 128404.076 ops/s
[info] # Warmup Iteration   5: 127761.231 ops/s
[info] Iteration   1: 126897.953 ops/s
[info]                  ·gc.alloc.rate:               1899.622 MB/sec
[info]                  ·gc.alloc.rate.norm:          23560.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2020.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25062.484 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 130126.533 ops/s
[info]                  ·gc.alloc.rate:                   1948.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              23560.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24484.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.511 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 130453.501 ops/s
[info]                  ·gc.alloc.rate:                   1952.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              23560.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16306.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.251 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 125209.627 ops/s
[info]                  ·gc.alloc.rate:                   1874.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              23560.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25512.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.785 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 130709.306 ops/s
[info]                  ·gc.alloc.rate:                   1956.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              23560.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24476.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.752 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce":
[info]   128679.384 ±(99.9%) 9544.438 ops/s [Average]
[info]   (min, avg, max) = (125209.627, 128679.384, 130709.306), stdev = 2478.660
[info]   CI (99.9%): [119134.946, 138223.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate":
[info]   1926.277 ±(99.9%) 142.886 MB/sec [Average]
[info]   (min, avg, max) = (1874.313, 1926.277, 1956.547), stdev = 37.107
[info]   CI (99.9%): [1783.391, 2069.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   23560.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (23560.003, 23560.003, 23560.004), stdev = 0.001
[info]   CI (99.9%): [23560.003, 23560.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1891.838 ±(99.9%) 1162.929 MB/sec [Average]
[info]   (min, avg, max) = (1351.650, 1891.838, 2032.651), stdev = 302.009
[info]   CI (99.9%): [728.908, 3054.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   23168.558 ±(99.9%) 14865.261 B/op [Average]
[info]   (min, avg, max) = (16306.521, 23168.558, 25512.941), stdev = 3860.461
[info]   CI (99.9%): [8303.296, 38033.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.660 ±(99.9%) 2.237 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.660, 1.511), stdev = 0.581
[info]   CI (99.9%): [≈ 0, 2.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 48.47% complete, ETA 00:58:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6774.718 ops/s
[info] # Warmup Iteration   2: 535497.836 ops/s
[info] # Warmup Iteration   3: 537083.154 ops/s
[info] # Warmup Iteration   4: 543435.789 ops/s
[info] # Warmup Iteration   5: 500031.481 ops/s
[info] Iteration   1: 509060.254 ops/s
[info]                  ·gc.alloc.rate:                   282.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1581.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 543963.392 ops/s
[info]                  ·gc.alloc.rate:      301.482 MB/sec
[info]                  ·gc.alloc.rate.norm: 872.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 539194.869 ops/s
[info]                  ·gc.alloc.rate:               298.761 MB/sec
[info]                  ·gc.alloc.rate.norm:          872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1493.415 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 543678.520 ops/s
[info]                  ·gc.alloc.rate:      301.244 MB/sec
[info]                  ·gc.alloc.rate.norm: 872.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 541621.898 ops/s
[info]                  ·gc.alloc.rate:               300.101 MB/sec
[info]                  ·gc.alloc.rate.norm:          872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1486.688 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava":
[info]   535503.787 ±(99.9%) 57396.136 ops/s [Average]
[info]   (min, avg, max) = (509060.254, 535503.787, 543963.392), stdev = 14905.594
[info]   CI (99.9%): [478107.650, 592899.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   296.730 ±(99.9%) 31.848 MB/sec [Average]
[info]   (min, avg, max) = (282.061, 296.730, 301.482), stdev = 8.271
[info]   CI (99.9%): [264.882, 328.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   872.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (872.001, 872.001, 872.001), stdev = 0.001
[info]   CI (99.9%): [872.001, 872.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   306.993 ±(99.9%) 1079.124 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.993, 511.668), stdev = 280.245
[info]   CI (99.9%): [≈ 0, 1386.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   912.378 ±(99.9%) 3210.391 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 912.378, 1581.786), stdev = 833.728
[info]   CI (99.9%): [≈ 0, 4122.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.003 ±(99.9%) 0.028 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.016), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.087 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.050), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.71% complete, ETA 00:58:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 268962.362 ops/s
[info] # Warmup Iteration   2: 391800.512 ops/s
[info] # Warmup Iteration   3: 387619.016 ops/s
[info] # Warmup Iteration   4: 395584.532 ops/s
[info] # Warmup Iteration   5: 396572.693 ops/s
[info] Iteration   1: 396979.488 ops/s
[info]                  ·gc.alloc.rate:               405.746 MB/sec
[info]                  ·gc.alloc.rate.norm:          1608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2028.316 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 391009.089 ops/s
[info]                  ·gc.alloc.rate:               399.501 MB/sec
[info]                  ·gc.alloc.rate.norm:          1608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2059.217 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 395971.866 ops/s
[info]                  ·gc.alloc.rate:                   404.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              1608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2033.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.230 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 383461.988 ops/s
[info]                  ·gc.alloc.rate:      391.959 MB/sec
[info]                  ·gc.alloc.rate.norm: 1608.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 392172.310 ops/s
[info]                  ·gc.alloc.rate:                   400.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              1608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2680.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.109 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.465 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala":
[info]   391918.948 ±(99.9%) 20597.113 ops/s [Average]
[info]   (min, avg, max) = (383461.988, 391918.948, 396979.488), stdev = 5349.005
[info]   CI (99.9%): [371321.835, 412516.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   400.503 ±(99.9%) 20.964 MB/sec [Average]
[info]   (min, avg, max) = (391.959, 400.503, 405.746), stdev = 5.444
[info]   CI (99.9%): [379.539, 421.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1608.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1608.001, 1608.001, 1608.001), stdev = 0.001
[info]   CI (99.9%): [1608.001, 1608.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   440.580 ±(99.9%) 983.451 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 440.580, 667.803), stdev = 255.399
[info]   CI (99.9%): [≈ 0, 1424.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1760.201 ±(99.9%) 3936.489 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1760.201, 2680.019), stdev = 1022.294
[info]   CI (99.9%): [≈ 0, 5696.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.433 ±(99.9%) 3.609 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.433, 2.109), stdev = 0.937
[info]   CI (99.9%): [≈ 0, 4.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.739 ±(99.9%) 14.483 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.739, 8.465), stdev = 3.761
[info]   CI (99.9%): [≈ 0, 16.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.94% complete, ETA 00:58:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 882238.932 ops/s
[info] # Warmup Iteration   2: 920741.205 ops/s
[info] # Warmup Iteration   3: 940077.304 ops/s
[info] # Warmup Iteration   4: 933447.759 ops/s
[info] # Warmup Iteration   5: 934614.888 ops/s
[info] Iteration   1: 902359.750 ops/s
[info]                  ·gc.alloc.rate:      311.885 MB/sec
[info]                  ·gc.alloc.rate.norm: 544.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 898332.553 ops/s
[info]                  ·gc.alloc.rate:               310.503 MB/sec
[info]                  ·gc.alloc.rate.norm:          544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 896.331 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 917992.101 ops/s
[info]                  ·gc.alloc.rate:                   317.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     877.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 935104.965 ops/s
[info]                  ·gc.alloc.rate:      323.203 MB/sec
[info]                  ·gc.alloc.rate.norm: 544.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 924315.848 ops/s
[info]                  ·gc.alloc.rate:               319.468 MB/sec
[info]                  ·gc.alloc.rate.norm:          544.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 871.159 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala":
[info]   915621.044 ±(99.9%) 58890.892 ops/s [Average]
[info]   (min, avg, max) = (898332.553, 915621.044, 935104.965), stdev = 15293.778
[info]   CI (99.9%): [856730.152, 974511.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   316.473 ±(99.9%) 20.344 MB/sec [Average]
[info]   (min, avg, max) = (310.503, 316.473, 323.203), stdev = 5.283
[info]   CI (99.9%): [296.129, 336.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   544.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (544.000, 544.000, 544.001), stdev = 0.001
[info]   CI (99.9%): [544.000, 544.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.963 ±(99.9%) 1079.017 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.963, 511.614), stdev = 280.217
[info]   CI (99.9%): [≈ 0, 1385.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   528.923 ±(99.9%) 1859.582 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 528.923, 896.331), stdev = 482.928
[info]   CI (99.9%): [≈ 0, 2388.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.082 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.048), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.140 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.081), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 49.18% complete, ETA 00:57:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45503.858 ops/s
[info] # Warmup Iteration   2: 74309.088 ops/s
[info] # Warmup Iteration   3: 74829.437 ops/s
[info] # Warmup Iteration   4: 75072.190 ops/s
[info] # Warmup Iteration   5: 74325.336 ops/s
[info] Iteration   1: 77264.878 ops/s
[info]                  ·gc.alloc.rate:                   3210.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3374.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68734.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.272 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 77234.686 ops/s
[info]                  ·gc.alloc.rate:                   3209.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3383.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68950.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.969 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 70754.073 ops/s
[info]                  ·gc.alloc.rate:                   2940.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2712.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60337.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.463 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 75257.351 ops/s
[info]                  ·gc.alloc.rate:                   3128.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3396.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71019.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.306 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 77292.835 ops/s
[info]                  ·gc.alloc.rate:                   3212.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3399.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69230.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.967 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson":
[info]   75560.765 ±(99.9%) 10874.649 ops/s [Average]
[info]   (min, avg, max) = (70754.073, 75560.765, 77292.835), stdev = 2824.112
[info]   CI (99.9%): [64686.116, 86435.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3140.368 ±(99.9%) 451.768 MB/sec [Average]
[info]   (min, avg, max) = (2940.508, 3140.368, 3212.209), stdev = 117.323
[info]   CI (99.9%): [2688.599, 3592.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   65408.006 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (65408.006, 65408.006, 65408.007), stdev = 0.001
[info]   CI (99.9%): [65408.004, 65408.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3253.430 ±(99.9%) 1164.921 MB/sec [Average]
[info]   (min, avg, max) = (2712.568, 3253.430, 3399.932), stdev = 302.526
[info]   CI (99.9%): [2088.508, 4418.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   67654.526 ±(99.9%) 16129.984 B/op [Average]
[info]   (min, avg, max) = (60337.758, 67654.526, 71019.536), stdev = 4188.906
[info]   CI (99.9%): [51524.542, 83784.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.087, 0.146), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.796 ±(99.9%) 4.322 B/op [Average]
[info]   (min, avg, max) = (0.463, 1.796, 2.969), stdev = 1.122
[info]   CI (99.9%): [≈ 0, 6.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 49.41% complete, ETA 00:57:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 186506.497 ops/s
[info] # Warmup Iteration   2: 248124.592 ops/s
[info] # Warmup Iteration   3: 247469.501 ops/s
[info] # Warmup Iteration   4: 253043.757 ops/s
[info] # Warmup Iteration   5: 252748.966 ops/s
[info] Iteration   1: 253083.876 ops/s
[info]                  ·gc.alloc.rate:                   1665.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              10360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8351.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.388 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 251979.035 ops/s
[info]                  ·gc.alloc.rate:                   1658.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              10360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12596.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.520 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 250358.611 ops/s
[info]                  ·gc.alloc.rate:                   1648.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              10360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8467.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.523 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 253651.397 ops/s
[info]                  ·gc.alloc.rate:                   1669.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              10360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12559.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 253937.385 ops/s
[info]                  ·gc.alloc.rate:                   1671.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              10360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8373.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce":
[info]   252602.061 ±(99.9%) 5625.623 ops/s [Average]
[info]   (min, avg, max) = (250358.611, 252602.061, 253937.385), stdev = 1460.956
[info]   CI (99.9%): [246976.438, 258227.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1662.888 ±(99.9%) 36.569 MB/sec [Average]
[info]   (min, avg, max) = (1648.407, 1662.888, 1671.561), stdev = 9.497
[info]   CI (99.9%): [1626.319, 1699.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10360.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10360.002, 10360.002, 10360.002), stdev = 0.001
[info]   CI (99.9%): [10360.002, 10360.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1616.452 ±(99.9%) 1420.595 MB/sec [Average]
[info]   (min, avg, max) = (1342.879, 1616.452, 2024.399), stdev = 368.924
[info]   CI (99.9%): [195.858, 3037.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10069.468 ±(99.9%) 8818.702 B/op [Average]
[info]   (min, avg, max) = (8351.325, 10069.468, 12596.276), stdev = 2290.189
[info]   CI (99.9%): [1250.766, 18888.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.415 ±(99.9%) 0.425 B/op [Average]
[info]   (min, avg, max) = (0.258, 0.415, 0.523), stdev = 0.110
[info]   CI (99.9%): [≈ 0, 0.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 49.65% complete, ETA 00:57:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6157.771 ops/s
[info] # Warmup Iteration   2: 1386126.535 ops/s
[info] # Warmup Iteration   3: 1428332.228 ops/s
[info] # Warmup Iteration   4: 1442302.190 ops/s
[info] # Warmup Iteration   5: 1441669.543 ops/s
[info] Iteration   1: 1442691.733 ops/s
[info]                  ·gc.alloc.rate:                   491.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     558.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1435796.586 ops/s
[info]                  ·gc.alloc.rate:               488.978 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 560.803 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1436472.799 ops/s
[info]                  ·gc.alloc.rate:                   489.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     727.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1438986.468 ops/s
[info]                  ·gc.alloc.rate:                   490.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     726.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1433714.234 ops/s
[info]                  ·gc.alloc.rate:      488.258 MB/sec
[info]                  ·gc.alloc.rate.norm: 536.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava":
[info]   1437532.364 ±(99.9%) 13261.992 ops/s [Average]
[info]   (min, avg, max) = (1433714.234, 1437532.364, 1442691.733), stdev = 3444.097
[info]   CI (99.9%): [1424270.372, 1450794.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   489.570 ±(99.9%) 4.528 MB/sec [Average]
[info]   (min, avg, max) = (488.258, 489.570, 491.325), stdev = 1.176
[info]   CI (99.9%): [485.042, 494.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   536.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (536.000, 536.000, 536.000), stdev = 0.001
[info]   CI (99.9%): [536.000, 536.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   470.177 ±(99.9%) 1053.674 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 470.177, 663.845), stdev = 273.636
[info]   CI (99.9%): [≈ 0, 1523.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   514.460 ±(99.9%) 1153.268 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 514.460, 727.329), stdev = 299.500
[info]   CI (99.9%): [≈ 0, 1667.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.025 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.016), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.017), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.88% complete, ETA 00:57:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 934173.139 ops/s
[info] # Warmup Iteration   2: 1276138.348 ops/s
[info] # Warmup Iteration   3: 1315085.283 ops/s
[info] # Warmup Iteration   4: 1336826.245 ops/s
[info] # Warmup Iteration   5: 1338038.215 ops/s
[info] Iteration   1: 1328175.715 ops/s
[info]                  ·gc.alloc.rate:                   776.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1582.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.157 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.556 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1332196.011 ops/s
[info]                  ·gc.alloc.rate:               779.071 MB/sec
[info]                  ·gc.alloc.rate.norm:          920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 789.372 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 1319103.432 ops/s
[info]                  ·gc.alloc.rate:                   771.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     797.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1287244.203 ops/s
[info]                  ·gc.alloc.rate:               752.457 MB/sec
[info]                  ·gc.alloc.rate.norm:          920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 817.310 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1322500.036 ops/s
[info]                  ·gc.alloc.rate:                   773.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     795.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala":
[info]   1317843.879 ±(99.9%) 68675.912 ops/s [Average]
[info]   (min, avg, max) = (1287244.203, 1317843.879, 1332196.011), stdev = 17834.916
[info]   CI (99.9%): [1249167.967, 1386519.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   770.430 ±(99.9%) 40.439 MB/sec [Average]
[info]   (min, avg, max) = (752.457, 770.430, 779.071), stdev = 10.502
[info]   CI (99.9%): [729.991, 810.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   920.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (920.000, 920.000, 920.000), stdev = 0.001
[info]   CI (99.9%): [920.000, 920.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   801.863 ±(99.9%) 1149.144 MB/sec [Average]
[info]   (min, avg, max) = (668.178, 801.863, 1335.709), stdev = 298.429
[info]   CI (99.9%): [≈ 0, 1951.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   956.427 ±(99.9%) 1348.746 B/op [Average]
[info]   (min, avg, max) = (789.372, 956.427, 1582.719), stdev = 350.265
[info]   CI (99.9%): [≈ 0, 2305.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.448 ±(99.9%) 3.679 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.448, 2.157), stdev = 0.956
[info]   CI (99.9%): [≈ 0, 4.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.531 ±(99.9%) 4.360 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.531, 2.556), stdev = 1.132
[info]   CI (99.9%): [≈ 0, 4.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 4.000), stdev = 1.673
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.12% complete, ETA 00:56:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1189682.676 ops/s
[info] # Warmup Iteration   2: 1254226.490 ops/s
[info] # Warmup Iteration   3: 1328681.008 ops/s
[info] # Warmup Iteration   4: 1330817.310 ops/s
[info] # Warmup Iteration   5: 1338984.402 ops/s
[info] Iteration   1: 1340486.431 ops/s
[info]                  ·gc.alloc.rate:               456.580 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 600.677 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1336490.337 ops/s
[info]                  ·gc.alloc.rate:               455.174 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 602.468 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1341899.384 ops/s
[info]                  ·gc.alloc.rate:      457.069 MB/sec
[info]                  ·gc.alloc.rate.norm: 536.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1337640.897 ops/s
[info]                  ·gc.alloc.rate:                   455.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     791.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.793 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.109 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1382839.254 ops/s
[info]                  ·gc.alloc.rate:                   470.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     765.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala":
[info]   1347871.261 ±(99.9%) 75730.168 ops/s [Average]
[info]   (min, avg, max) = (1336490.337, 1347871.261, 1382839.254), stdev = 19666.884
[info]   CI (99.9%): [1272141.093, 1423601.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   459.081 ±(99.9%) 25.808 MB/sec [Average]
[info]   (min, avg, max) = (455.174, 459.081, 470.993), stdev = 6.702
[info]   CI (99.9%): [433.273, 484.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   536.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (536.000, 536.000, 536.000), stdev = 0.001
[info]   CI (99.9%): [536.000, 536.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.674 ±(99.9%) 1065.637 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.674, 672.559), stdev = 276.743
[info]   CI (99.9%): [≈ 0, 1539.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   551.951 ±(99.9%) 1236.385 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 551.951, 791.224), stdev = 321.085
[info]   CI (99.9%): [≈ 0, 1788.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.367 ±(99.9%) 3.070 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.367, 1.793), stdev = 0.797
[info]   CI (99.9%): [≈ 0, 3.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.431 ±(99.9%) 3.612 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.431, 2.109), stdev = 0.938
[info]   CI (99.9%): [≈ 0, 4.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 50.35% complete, ETA 00:56:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1296566.843 ops/s
[info] # Warmup Iteration   2: 1412590.620 ops/s
[info] # Warmup Iteration   3: 1420007.389 ops/s
[info] # Warmup Iteration   4: 1418689.464 ops/s
[info] # Warmup Iteration   5: 1419313.497 ops/s
[info] Iteration   1: 1419616.394 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1419382.194 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1418832.638 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1419519.752 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1419795.747 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc":
[info]   1419429.345 ±(99.9%) 1409.164 ops/s [Average]
[info]   (min, avg, max) = (1418832.638, 1419429.345, 1419795.747), stdev = 365.955
[info]   CI (99.9%): [1418020.181, 1420838.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 50.59% complete, ETA 00:56:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24659.603 ops/s
[info] # Warmup Iteration   2: 34225.888 ops/s
[info] # Warmup Iteration   3: 35256.069 ops/s
[info] # Warmup Iteration   4: 35179.989 ops/s
[info] # Warmup Iteration   5: 35443.615 ops/s
[info] Iteration   1: 35507.268 ops/s
[info]                  ·gc.alloc.rate:                   1707.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              75656.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59453.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.691 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 35369.743 ops/s
[info]                  ·gc.alloc.rate:                   1700.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              75656.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89653.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.705 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 35049.069 ops/s
[info]                  ·gc.alloc.rate:                   1684.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              75656.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60426.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.739 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 35287.044 ops/s
[info]                  ·gc.alloc.rate:                   1696.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              75656.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90191.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.786 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 35376.080 ops/s
[info]                  ·gc.alloc.rate:                   1700.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              75656.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90097.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.630 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson":
[info]   35317.841 ±(99.9%) 653.349 ops/s [Average]
[info]   (min, avg, max) = (35049.069, 35317.841, 35507.268), stdev = 169.673
[info]   CI (99.9%): [34664.492, 35971.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1697.878 ±(99.9%) 31.841 MB/sec [Average]
[info]   (min, avg, max) = (1684.828, 1697.878, 1707.162), stdev = 8.269
[info]   CI (99.9%): [1666.037, 1729.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   75656.012 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (75656.012, 75656.012, 75656.013), stdev = 0.001
[info]   CI (99.9%): [75656.011, 75656.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1749.955 ±(99.9%) 1428.437 MB/sec [Average]
[info]   (min, avg, max) = (1341.552, 1749.955, 2025.232), stdev = 370.961
[info]   CI (99.9%): [321.518, 3178.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   77964.574 ±(99.9%) 63378.159 B/op [Average]
[info]   (min, avg, max) = (59453.362, 77964.574, 90191.620), stdev = 16459.107
[info]   CI (99.9%): [14586.415, 141342.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.083, 0.104), stdev = 0.015
[info]   CI (99.9%): [0.027, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.710 ±(99.9%) 2.512 B/op [Average]
[info]   (min, avg, max) = (2.786, 3.710, 4.630), stdev = 0.652
[info]   CI (99.9%): [1.198, 6.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 7.000), stdev = 2.280
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 50.82% complete, ETA 00:56:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15300.960 ops/s
[info] # Warmup Iteration   2: 18011.627 ops/s
[info] # Warmup Iteration   3: 18365.548 ops/s
[info] # Warmup Iteration   4: 18311.813 ops/s
[info] # Warmup Iteration   5: 18078.257 ops/s
[info] Iteration   1: 18697.994 ops/s
[info]                  ·gc.alloc.rate:                   1962.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              165176.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170174.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.257 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 18627.331 ops/s
[info]                  ·gc.alloc.rate:                   1955.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              165194.284 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171104.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 18744.766 ops/s
[info]                  ·gc.alloc.rate:                   1967.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              165200.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170250.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.739 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 18723.514 ops/s
[info]                  ·gc.alloc.rate:                   1965.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              165200.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113783.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.749 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 18355.464 ops/s
[info]                  ·gc.alloc.rate:                   1926.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              165200.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174286.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.355 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce":
[info]   18629.814 ±(99.9%) 614.646 ops/s [Average]
[info]   (min, avg, max) = (18355.464, 18629.814, 18744.766), stdev = 159.622
[info]   CI (99.9%): [18015.168, 19244.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate":
[info]   1955.535 ±(99.9%) 64.622 MB/sec [Average]
[info]   (min, avg, max) = (1926.618, 1955.535, 1967.487), stdev = 16.782
[info]   CI (99.9%): [1890.913, 2020.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   165194.077 ±(99.9%) 40.003 B/op [Average]
[info]   (min, avg, max) = (165176.033, 165194.077, 165200.024), stdev = 10.389
[info]   CI (99.9%): [165154.075, 165234.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1892.300 ±(99.9%) 1159.753 MB/sec [Average]
[info]   (min, avg, max) = (1353.568, 1892.300, 2032.590), stdev = 301.184
[info]   CI (99.9%): [732.548, 3052.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   159919.884 ±(99.9%) 99521.826 B/op [Average]
[info]   (min, avg, max) = (113783.319, 159919.884, 174286.708), stdev = 25845.502
[info]   CI (99.9%): [60398.058, 259441.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.083, 0.104), stdev = 0.021
[info]   CI (99.9%): [0.003, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7.027 ±(99.9%) 6.622 B/op [Average]
[info]   (min, avg, max) = (5.257, 7.027, 8.749), stdev = 1.720
[info]   CI (99.9%): [0.405, 13.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.06% complete, ETA 00:55:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68070.788 ops/s
[info] # Warmup Iteration   2: 96381.267 ops/s
[info] # Warmup Iteration   3: 98214.713 ops/s
[info] # Warmup Iteration   4: 98436.212 ops/s
[info] # Warmup Iteration   5: 98506.487 ops/s
[info] Iteration   1: 98763.032 ops/s
[info]                  ·gc.alloc.rate:                   1296.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              20656.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21294.440 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.995 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 98690.013 ops/s
[info]                  ·gc.alloc.rate:                   1295.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              20656.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21332.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.332 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 98597.151 ops/s
[info]                  ·gc.alloc.rate:                   1294.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              20656.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21384.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.662 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 98081.626 ops/s
[info]                  ·gc.alloc.rate:                   1287.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              20656.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21517.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.336 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 98792.730 ops/s
[info]                  ·gc.alloc.rate:                   1296.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              20656.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21403.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.995 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala":
[info]   98584.910 ±(99.9%) 1121.668 ops/s [Average]
[info]   (min, avg, max) = (98081.626, 98584.910, 98792.730), stdev = 291.294
[info]   CI (99.9%): [97463.242, 99706.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1293.893 ±(99.9%) 14.869 MB/sec [Average]
[info]   (min, avg, max) = (1287.231, 1293.893, 1296.596), stdev = 3.862
[info]   CI (99.9%): [1279.024, 1308.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   20656.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (20656.004, 20656.004, 20656.005), stdev = 0.001
[info]   CI (99.9%): [20656.004, 20656.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1339.642 ±(99.9%) 10.727 MB/sec [Average]
[info]   (min, avg, max) = (1336.447, 1339.642, 1343.524), stdev = 2.786
[info]   CI (99.9%): [1328.915, 1350.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   21386.530 ±(99.9%) 327.839 B/op [Average]
[info]   (min, avg, max) = (21294.440, 21386.530, 21517.967), stdev = 85.139
[info]   CI (99.9%): [21058.691, 21714.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.064 ±(99.9%) 1.903 B/op [Average]
[info]   (min, avg, max) = (0.332, 1.064, 1.662), stdev = 0.494
[info]   CI (99.9%): [≈ 0, 2.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.29% complete, ETA 00:55:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 265063.356 ops/s
[info] # Warmup Iteration   2: 276364.160 ops/s
[info] # Warmup Iteration   3: 273204.121 ops/s
[info] # Warmup Iteration   4: 275772.800 ops/s
[info] # Warmup Iteration   5: 275768.302 ops/s
[info] Iteration   1: 276652.908 ops/s
[info]                  ·gc.alloc.rate:                   899.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3831.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 276386.178 ops/s
[info]                  ·gc.alloc.rate:               899.242 MB/sec
[info]                  ·gc.alloc.rate.norm:          5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3835.046 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 276580.224 ops/s
[info]                  ·gc.alloc.rate:                   899.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7664.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.355 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 275901.816 ops/s
[info]                  ·gc.alloc.rate:               897.919 MB/sec
[info]                  ·gc.alloc.rate.norm:          5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3841.759 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 274872.041 ops/s
[info]                  ·gc.alloc.rate:                   894.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3856.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala":
[info]   276078.633 ±(99.9%) 2831.663 ops/s [Average]
[info]   (min, avg, max) = (274872.041, 276078.633, 276652.908), stdev = 735.374
[info]   CI (99.9%): [273246.970, 278910.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   898.242 ±(99.9%) 9.233 MB/sec [Average]
[info]   (min, avg, max) = (894.210, 898.242, 899.977), stdev = 2.398
[info]   CI (99.9%): [889.009, 907.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5120.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5120.002, 5120.002, 5120.002), stdev = 0.001
[info]   CI (99.9%): [5120.001, 5120.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   808.275 ±(99.9%) 1159.833 MB/sec [Average]
[info]   (min, avg, max) = (673.464, 808.275, 1347.087), stdev = 301.205
[info]   CI (99.9%): [≈ 0, 1968.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4605.826 ±(99.9%) 6584.350 B/op [Average]
[info]   (min, avg, max) = (3831.359, 4605.826, 7664.603), stdev = 1709.935
[info]   CI (99.9%): [≈ 0, 11190.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.119 ±(99.9%) 0.559 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.119, 0.355), stdev = 0.145
[info]   CI (99.9%): [≈ 0, 0.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 51.53% complete, ETA 00:55:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10157.097 ops/s
[info] # Warmup Iteration   2: 16251.891 ops/s
[info] # Warmup Iteration   3: 16295.986 ops/s
[info] # Warmup Iteration   4: 16545.833 ops/s
[info] # Warmup Iteration   5: 16445.534 ops/s
[info] Iteration   1: 16519.363 ops/s
[info]                  ·gc.alloc.rate:                   2106.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              200640.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     191951.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.950 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 15762.844 ops/s
[info]                  ·gc.alloc.rate:                   2009.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              200640.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     201567.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.393 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 16589.271 ops/s
[info]                  ·gc.alloc.rate:                   2114.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              200640.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     191962.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.925 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 16605.161 ops/s
[info]                  ·gc.alloc.rate:                   2116.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              200640.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     192093.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.919 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 16499.128 ops/s
[info]                  ·gc.alloc.rate:                   2104.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              200640.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     193708.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.971 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson":
[info]   16395.153 ±(99.9%) 1372.038 ops/s [Average]
[info]   (min, avg, max) = (15762.844, 16395.153, 16605.161), stdev = 356.314
[info]   CI (99.9%): [15023.115, 17767.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2090.428 ±(99.9%) 175.196 MB/sec [Average]
[info]   (min, avg, max) = (2009.625, 2090.428, 2116.974), stdev = 45.498
[info]   CI (99.9%): [1915.232, 2265.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   200640.029 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (200640.026, 200640.029, 200640.038), stdev = 0.005
[info]   CI (99.9%): [200640.010, 200640.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2023.177 ±(99.9%) 24.656 MB/sec [Average]
[info]   (min, avg, max) = (2015.189, 2023.177, 2031.470), stdev = 6.403
[info]   CI (99.9%): [1998.520, 2047.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   194256.832 ±(99.9%) 15993.029 B/op [Average]
[info]   (min, avg, max) = (191951.223, 194256.832, 201567.369), stdev = 4153.339
[info]   CI (99.9%): [178263.803, 210249.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.432 ±(99.9%) 9.131 B/op [Average]
[info]   (min, avg, max) = (3.971, 6.432, 10.393), stdev = 2.371
[info]   CI (99.9%): [≈ 0, 15.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 51.76% complete, ETA 00:54:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15195.341 ops/s
[info] # Warmup Iteration   2: 21372.484 ops/s
[info] # Warmup Iteration   3: 21258.425 ops/s
[info] # Warmup Iteration   4: 21029.695 ops/s
[info] # Warmup Iteration   5: 21832.485 ops/s
[info] Iteration   1: 21410.782 ops/s
[info]                  ·gc.alloc.rate:                   1732.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              127368.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148082.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.591 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 21848.658 ops/s
[info]                  ·gc.alloc.rate:                   1767.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              127352.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96878.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.499 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 21786.433 ops/s
[info]                  ·gc.alloc.rate:                   1762.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              127352.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146001.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 21823.302 ops/s
[info]                  ·gc.alloc.rate:                   1765.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              127352.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145987.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.501 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 21800.054 ops/s
[info]                  ·gc.alloc.rate:                   1763.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              127352.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97581.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.503 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce":
[info]   21733.846 ±(99.9%) 701.366 ops/s [Average]
[info]   (min, avg, max) = (21410.782, 21733.846, 21848.658), stdev = 182.142
[info]   CI (99.9%): [21032.480, 22435.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1758.667 ±(99.9%) 56.482 MB/sec [Average]
[info]   (min, avg, max) = (1732.656, 1758.667, 1767.932), stdev = 14.668
[info]   CI (99.9%): [1702.185, 1815.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   127355.378 ±(99.9%) 28.909 B/op [Average]
[info]   (min, avg, max) = (127352.020, 127355.378, 127368.807), stdev = 7.507
[info]   CI (99.9%): [127326.469, 127384.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1751.262 ±(99.9%) 1416.885 MB/sec [Average]
[info]   (min, avg, max) = (1344.884, 1751.262, 2024.356), stdev = 367.960
[info]   CI (99.9%): [334.378, 3168.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   126906.281 ±(99.9%) 104373.900 B/op [Average]
[info]   (min, avg, max) = (96878.000, 126906.281, 148082.652), stdev = 27105.570
[info]   CI (99.9%): [22532.380, 231280.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.022 ±(99.9%) 8.250 B/op [Average]
[info]   (min, avg, max) = (1.499, 3.022, 6.015), stdev = 2.142
[info]   CI (99.9%): [≈ 0, 11.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.00% complete, ETA 00:54:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 63905.868 ops/s
[info] # Warmup Iteration   2: 97760.283 ops/s
[info] # Warmup Iteration   3: 98766.057 ops/s
[info] # Warmup Iteration   4: 99006.643 ops/s
[info] # Warmup Iteration   5: 99090.635 ops/s
[info] Iteration   1: 99143.485 ops/s
[info]                  ·gc.alloc.rate:                   1358.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              21560.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21202.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.322 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 99043.671 ops/s
[info]                  ·gc.alloc.rate:                   1356.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              21559.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31877.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.654 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 99237.604 ops/s
[info]                  ·gc.alloc.rate:               1359.466 MB/sec
[info]                  ·gc.alloc.rate.norm:          21560.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21245.354 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 99459.162 ops/s
[info]                  ·gc.alloc.rate:                   1362.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              21560.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21234.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.318 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 99531.903 ops/s
[info]                  ·gc.alloc.rate:                   1363.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              21560.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21251.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.329 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala":
[info]   99283.165 ±(99.9%) 797.997 ops/s [Average]
[info]   (min, avg, max) = (99043.671, 99283.165, 99531.903), stdev = 207.237
[info]   CI (99.9%): [98485.168, 100081.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1360.180 ±(99.9%) 11.535 MB/sec [Average]
[info]   (min, avg, max) = (1356.802, 1360.180, 1363.992), stdev = 2.996
[info]   CI (99.9%): [1348.645, 1371.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   21560.004 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (21559.984, 21560.004, 21560.025), stdev = 0.014
[info]   CI (99.9%): [21559.949, 21560.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1473.549 ±(99.9%) 1146.466 MB/sec [Average]
[info]   (min, avg, max) = (1335.614, 1473.549, 2006.119), stdev = 297.734
[info]   CI (99.9%): [327.083, 2620.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23362.272 ±(99.9%) 18330.539 B/op [Average]
[info]   (min, avg, max) = (21202.260, 23362.272, 31877.837), stdev = 4760.383
[info]   CI (99.9%): [5031.733, 41692.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.925 ±(99.9%) 2.759 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.925, 1.654), stdev = 0.717
[info]   CI (99.9%): [≈ 0, 3.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.24% complete, ETA 00:54:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 308802.826 ops/s
[info] # Warmup Iteration   2: 332582.067 ops/s
[info] # Warmup Iteration   3: 324168.364 ops/s
[info] # Warmup Iteration   4: 324983.962 ops/s
[info] # Warmup Iteration   5: 324819.880 ops/s
[info] Iteration   1: 325137.453 ops/s
[info]                  ·gc.alloc.rate:               1036.287 MB/sec
[info]                  ·gc.alloc.rate.norm:          5016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3253.433 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   2: 324493.276 ops/s
[info]                  ·gc.alloc.rate:                   1034.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              5016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6520.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.404 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 318475.752 ops/s
[info]                  ·gc.alloc.rate:               1015.017 MB/sec
[info]                  ·gc.alloc.rate.norm:          5016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3324.946 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 325150.348 ops/s
[info]                  ·gc.alloc.rate:                   1036.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              5016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6514.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.403 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 299464.532 ops/s
[info]                  ·gc.alloc.rate:               954.729 MB/sec
[info]                  ·gc.alloc.rate.norm:          5016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3537.649 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala":
[info]   318544.272 ±(99.9%) 42468.172 ops/s [Average]
[info]   (min, avg, max) = (299464.532, 318544.272, 325150.348), stdev = 11028.849
[info]   CI (99.9%): [276076.100, 361012.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1015.377 ±(99.9%) 135.083 MB/sec [Average]
[info]   (min, avg, max) = (954.729, 1015.377, 1036.672), stdev = 35.081
[info]   CI (99.9%): [880.294, 1150.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5016.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5016.001, 5016.001, 5016.001), stdev = 0.001
[info]   CI (99.9%): [5016.001, 5016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   941.810 ±(99.9%) 1418.567 MB/sec [Average]
[info]   (min, avg, max) = (672.147, 941.810, 1346.447), stdev = 368.397
[info]   CI (99.9%): [≈ 0, 2360.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4630.195 ±(99.9%) 6646.253 B/op [Average]
[info]   (min, avg, max) = (3253.433, 4630.195, 6520.079), stdev = 1726.011
[info]   CI (99.9%): [≈ 0, 11276.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.161 ±(99.9%) 0.851 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.161, 0.404), stdev = 0.221
[info]   CI (99.9%): [≈ 0, 1.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 52.47% complete, ETA 00:54:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 341552.466 ops/s
[info] # Warmup Iteration   2: 369746.944 ops/s
[info] # Warmup Iteration   3: 380574.493 ops/s
[info] # Warmup Iteration   4: 380464.393 ops/s
[info] # Warmup Iteration   5: 380726.293 ops/s
[info] Iteration   1: 380550.556 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 379863.701 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 379581.940 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 380880.846 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 379364.229 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc":
[info]   380048.254 ±(99.9%) 2484.274 ops/s [Average]
[info]   (min, avg, max) = (379364.229, 380048.254, 380880.846), stdev = 645.158
[info]   CI (99.9%): [377563.981, 382532.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 52.71% complete, ETA 00:53:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18533.472 ops/s
[info] # Warmup Iteration   2: 25726.942 ops/s
[info] # Warmup Iteration   3: 26013.745 ops/s
[info] # Warmup Iteration   4: 25990.175 ops/s
[info] # Warmup Iteration   5: 25878.100 ops/s
[info] Iteration   1: 26107.845 ops/s
[info]                  ·gc.alloc.rate:                   1780.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              107312.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80916.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.255 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 25305.960 ops/s
[info]                  ·gc.alloc.rate:                   1725.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              107312.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125406.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.884 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 26221.007 ops/s
[info]                  ·gc.alloc.rate:                   1787.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              107311.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80827.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.748 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 26167.626 ops/s
[info]                  ·gc.alloc.rate:               1784.212 MB/sec
[info]                  ·gc.alloc.rate.norm:          107312.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2022.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 121656.772 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 25674.222 ops/s
[info]                  ·gc.alloc.rate:                   1750.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              107312.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124248.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.828 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson":
[info]   25895.332 ±(99.9%) 1517.978 ops/s [Average]
[info]   (min, avg, max) = (25305.960, 25895.332, 26221.007), stdev = 394.214
[info]   CI (99.9%): [24377.354, 27413.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1765.644 ±(99.9%) 103.491 MB/sec [Average]
[info]   (min, avg, max) = (1725.468, 1765.644, 1787.819), stdev = 26.876
[info]   CI (99.9%): [1662.153, 1869.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   107312.017 ±(99.9%) 0.212 B/op [Average]
[info]   (min, avg, max) = (107311.940, 107312.017, 107312.096), stdev = 0.055
[info]   CI (99.9%): [107311.805, 107312.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1750.965 ±(99.9%) 1429.080 MB/sec [Average]
[info]   (min, avg, max) = (1342.293, 1750.965, 2026.824), stdev = 371.128
[info]   CI (99.9%): [321.885, 3180.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   106610.972 ±(99.9%) 90628.159 B/op [Average]
[info]   (min, avg, max) = (80827.317, 106610.972, 125406.541), stdev = 23535.845
[info]   CI (99.9%): [15982.813, 197239.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.543 ±(99.9%) 6.949 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.543, 3.884), stdev = 1.805
[info]   CI (99.9%): [≈ 0, 9.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 52.94% complete, ETA 00:53:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17345.777 ops/s
[info] # Warmup Iteration   2: 22978.668 ops/s
[info] # Warmup Iteration   3: 23693.282 ops/s
[info] # Warmup Iteration   4: 24047.661 ops/s
[info] # Warmup Iteration   5: 24075.019 ops/s
[info] Iteration   1: 24173.604 ops/s
[info]                  ·gc.alloc.rate:                   1295.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              84304.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87522.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 23426.849 ops/s
[info]                  ·gc.alloc.rate:               1255.363 MB/sec
[info]                  ·gc.alloc.rate.norm:          84304.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 90308.837 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 24097.744 ops/s
[info]                  ·gc.alloc.rate:                   1291.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              84304.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87885.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.079 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 23809.435 ops/s
[info]                  ·gc.alloc.rate:                   1275.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              84304.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89076.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.128 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 24006.935 ops/s
[info]                  ·gc.alloc.rate:               1285.843 MB/sec
[info]                  ·gc.alloc.rate.norm:          84304.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 88436.751 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce":
[info]   23902.913 ±(99.9%) 1151.060 ops/s [Average]
[info]   (min, avg, max) = (23426.849, 23902.913, 24173.604), stdev = 298.927
[info]   CI (99.9%): [22751.854, 25053.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate":
[info]   1280.611 ±(99.9%) 61.403 MB/sec [Average]
[info]   (min, avg, max) = (1255.363, 1280.611, 1295.057), stdev = 15.946
[info]   CI (99.9%): [1219.208, 1342.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   84304.018 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (84304.018, 84304.018, 84304.019), stdev = 0.001
[info]   CI (99.9%): [84304.016, 84304.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1346.401 ±(99.9%) 7.162 MB/sec [Average]
[info]   (min, avg, max) = (1344.495, 1346.401, 1348.877), stdev = 1.860
[info]   CI (99.9%): [1339.240, 1353.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   88645.947 ±(99.9%) 4233.780 B/op [Average]
[info]   (min, avg, max) = (87522.288, 88645.947, 90308.837), stdev = 1099.499
[info]   CI (99.9%): [84412.167, 92879.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.455 ±(99.9%) 8.629 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.455, 4.128), stdev = 2.241
[info]   CI (99.9%): [≈ 0, 11.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.18% complete, ETA 00:53:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16953.802 ops/s
[info] # Warmup Iteration   2: 27241.635 ops/s
[info] # Warmup Iteration   3: 27621.022 ops/s
[info] # Warmup Iteration   4: 27650.735 ops/s
[info] # Warmup Iteration   5: 27719.749 ops/s
[info] Iteration   1: 27851.678 ops/s
[info]                  ·gc.alloc.rate:               1108.751 MB/sec
[info]                  ·gc.alloc.rate.norm:          62640.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37755.662 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 27634.755 ops/s
[info]                  ·gc.alloc.rate:                   1099.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              62640.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76106.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.299 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 27825.477 ops/s
[info]                  ·gc.alloc.rate:                   1107.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              62640.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75657.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.710 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 27097.449 ops/s
[info]                  ·gc.alloc.rate:               1078.456 MB/sec
[info]                  ·gc.alloc.rate.norm:          62640.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38902.781 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 27170.945 ops/s
[info]                  ·gc.alloc.rate:               1081.413 MB/sec
[info]                  ·gc.alloc.rate.norm:          62640.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77629.426 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala":
[info]   27516.061 ±(99.9%) 1384.098 ops/s [Average]
[info]   (min, avg, max) = (27097.449, 27516.061, 27851.678), stdev = 359.446
[info]   CI (99.9%): [26131.962, 28900.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1095.237 ±(99.9%) 55.517 MB/sec [Average]
[info]   (min, avg, max) = (1078.456, 1095.237, 1108.751), stdev = 14.418
[info]   CI (99.9%): [1039.720, 1150.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   62640.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (62640.016, 62640.016, 62640.017), stdev = 0.001
[info]   CI (99.9%): [62640.014, 62640.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1070.494 ±(99.9%) 1411.201 MB/sec [Average]
[info]   (min, avg, max) = (668.289, 1070.494, 1340.189), stdev = 366.484
[info]   CI (99.9%): [≈ 0, 2481.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   61210.406 ±(99.9%) 80494.958 B/op [Average]
[info]   (min, avg, max) = (37755.662, 61210.406, 77629.426), stdev = 20904.285
[info]   CI (99.9%): [≈ 0, 141705.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.256 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.146), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.602 ±(99.9%) 14.563 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.602, 8.299), stdev = 3.782
[info]   CI (99.9%): [≈ 0, 17.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.41% complete, ETA 00:53:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 472629.821 ops/s
[info] # Warmup Iteration   2: 506311.188 ops/s
[info] # Warmup Iteration   3: 514925.973 ops/s
[info] # Warmup Iteration   4: 516982.938 ops/s
[info] # Warmup Iteration   5: 516190.961 ops/s
[info] Iteration   1: 514593.409 ops/s
[info]                  ·gc.alloc.rate:                   1339.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4119.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 517745.679 ops/s
[info]                  ·gc.alloc.rate:                   1347.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4095.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.380 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 516273.780 ops/s
[info]                  ·gc.alloc.rate:                   1343.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4110.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 517829.399 ops/s
[info]                  ·gc.alloc.rate:                   1347.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4101.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 506758.736 ops/s
[info]                  ·gc.alloc.rate:                   1318.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4195.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala":
[info]   514640.201 ±(99.9%) 17709.115 ops/s [Average]
[info]   (min, avg, max) = (506758.736, 514640.201, 517829.399), stdev = 4599.001
[info]   CI (99.9%): [496931.086, 532349.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1339.433 ±(99.9%) 46.256 MB/sec [Average]
[info]   (min, avg, max) = (1318.858, 1339.433, 1347.790), stdev = 12.013
[info]   CI (99.9%): [1293.177, 1385.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4096.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4096.001, 4096.001, 4096.001), stdev = 0.001
[info]   CI (99.9%): [4096.001, 4096.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1348.700 ±(99.9%) 6.387 MB/sec [Average]
[info]   (min, avg, max) = (1347.001, 1348.700, 1350.979), stdev = 1.659
[info]   CI (99.9%): [1342.313, 1355.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4124.630 ±(99.9%) 157.051 B/op [Average]
[info]   (min, avg, max) = (4095.533, 4124.630, 4195.761), stdev = 40.786
[info]   CI (99.9%): [3967.579, 4281.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.191 ±(99.9%) 0.454 B/op [Average]
[info]   (min, avg, max) = (0.063, 0.191, 0.380), stdev = 0.118
[info]   CI (99.9%): [≈ 0, 0.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 53.65% complete, ETA 00:52:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9052.840 ops/s
[info] # Warmup Iteration   2: 20541.935 ops/s
[info] # Warmup Iteration   3: 20793.480 ops/s
[info] # Warmup Iteration   4: 21005.704 ops/s
[info] # Warmup Iteration   5: 20616.189 ops/s
[info] Iteration   1: 20290.363 ops/s
[info]                  ·gc.alloc.rate:                   1529.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              118616.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2003.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155317.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.229 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 20566.334 ops/s
[info]                  ·gc.alloc.rate:               1550.310 MB/sec
[info]                  ·gc.alloc.rate.norm:          118616.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1337.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 102313.775 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 20556.518 ops/s
[info]                  ·gc.alloc.rate:                   1549.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              118616.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102567.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.594 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 20980.506 ops/s
[info]                  ·gc.alloc.rate:                   1581.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              118616.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151077.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.684 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 20395.906 ops/s
[info]                  ·gc.alloc.rate:               1537.152 MB/sec
[info]                  ·gc.alloc.rate.norm:          118616.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 103783.271 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson":
[info]   20557.925 ±(99.9%) 1012.374 ops/s [Average]
[info]   (min, avg, max) = (20290.363, 20557.925, 20980.506), stdev = 262.910
[info]   CI (99.9%): [19545.551, 21570.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1549.703 ±(99.9%) 75.672 MB/sec [Average]
[info]   (min, avg, max) = (1529.932, 1549.703, 1581.261), stdev = 19.652
[info]   CI (99.9%): [1474.031, 1625.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   118616.023 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (118616.021, 118616.023, 118616.031), stdev = 0.004
[info]   CI (99.9%): [118616.006, 118616.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1607.933 ±(99.9%) 1408.737 MB/sec [Average]
[info]   (min, avg, max) = (1337.240, 1607.933, 2014.008), stdev = 365.845
[info]   CI (99.9%): [199.196, 3016.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   123012.058 ±(99.9%) 106285.706 B/op [Average]
[info]   (min, avg, max) = (102313.775, 123012.058, 155317.801), stdev = 27602.060
[info]   CI (99.9%): [16726.352, 229297.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.902 ±(99.9%) 7.900 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.902, 4.684), stdev = 2.051
[info]   CI (99.9%): [≈ 0, 9.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 5.000), stdev = 1.643
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 53.88% complete, ETA 00:52:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42701.756 ops/s
[info] # Warmup Iteration   2: 56988.384 ops/s
[info] # Warmup Iteration   3: 56281.614 ops/s
[info] # Warmup Iteration   4: 58272.457 ops/s
[info] # Warmup Iteration   5: 57493.726 ops/s
[info] Iteration   1: 58446.917 ops/s
[info]                  ·gc.alloc.rate:                   1620.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              43640.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54208.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.682 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 58421.857 ops/s
[info]                  ·gc.alloc.rate:               1620.107 MB/sec
[info]                  ·gc.alloc.rate.norm:          43640.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36205.132 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 58393.917 ops/s
[info]                  ·gc.alloc.rate:                   1619.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              43640.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54410.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.366 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 57192.821 ops/s
[info]                  ·gc.alloc.rate:                   1585.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              43640.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37102.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.146 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 58213.229 ops/s
[info]                  ·gc.alloc.rate:                   1614.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              43640.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36506.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.688 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce":
[info]   58133.748 ±(99.9%) 2056.069 ops/s [Average]
[info]   (min, avg, max) = (57192.821, 58133.748, 58446.917), stdev = 533.955
[info]   CI (99.9%): [56077.679, 60189.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1611.992 ±(99.9%) 57.272 MB/sec [Average]
[info]   (min, avg, max) = (1585.812, 1611.992, 1620.830), stdev = 14.873
[info]   CI (99.9%): [1554.720, 1669.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   43640.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (43640.007, 43640.008, 43640.008), stdev = 0.001
[info]   CI (99.9%): [43640.007, 43640.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1614.930 ±(99.9%) 1410.012 MB/sec [Average]
[info]   (min, avg, max) = (1344.092, 1614.930, 2018.741), stdev = 366.176
[info]   CI (99.9%): [204.918, 3024.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   43686.478 ±(99.9%) 37361.836 B/op [Average]
[info]   (min, avg, max) = (36205.132, 43686.478, 54410.040), stdev = 9702.750
[info]   CI (99.9%): [6324.642, 81048.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.576 ±(99.9%) 4.676 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.576, 3.366), stdev = 1.214
[info]   CI (99.9%): [≈ 0, 6.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.12% complete, ETA 00:52:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 117422.917 ops/s
[info] # Warmup Iteration   2: 163964.264 ops/s
[info] # Warmup Iteration   3: 166343.954 ops/s
[info] # Warmup Iteration   4: 168082.778 ops/s
[info] # Warmup Iteration   5: 165956.917 ops/s
[info] Iteration   1: 167431.351 ops/s
[info]                  ·gc.alloc.rate:                   1486.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              13976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18864.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.587 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 166249.383 ops/s
[info]                  ·gc.alloc.rate:                   1476.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              13976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12682.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.788 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 163604.990 ops/s
[info]                  ·gc.alloc.rate:                   1453.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              13976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12906.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 165795.020 ops/s
[info]                  ·gc.alloc.rate:                   1472.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              13976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12754.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 162674.730 ops/s
[info]                  ·gc.alloc.rate:                   1444.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              13976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13025.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.604 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala":
[info]   165151.095 ±(99.9%) 7541.578 ops/s [Average]
[info]   (min, avg, max) = (162674.730, 165151.095, 167431.351), stdev = 1958.524
[info]   CI (99.9%): [157609.516, 172692.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1466.714 ±(99.9%) 66.539 MB/sec [Average]
[info]   (min, avg, max) = (1444.612, 1466.714, 1486.834), stdev = 17.280
[info]   CI (99.9%): [1400.176, 1533.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   13976.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13976.003, 13976.003, 13976.003), stdev = 0.001
[info]   CI (99.9%): [13976.002, 13976.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1475.770 ±(99.9%) 1143.237 MB/sec [Average]
[info]   (min, avg, max) = (1339.766, 1475.770, 2006.855), stdev = 296.895
[info]   CI (99.9%): [332.533, 2619.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   14046.716 ±(99.9%) 10382.459 B/op [Average]
[info]   (min, avg, max) = (12682.607, 14046.716, 18864.123), stdev = 2696.292
[info]   CI (99.9%): [3664.257, 24429.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.515 ±(99.9%) 0.864 B/op [Average]
[info]   (min, avg, max) = (0.200, 0.515, 0.788), stdev = 0.224
[info]   CI (99.9%): [≈ 0, 1.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.35% complete, ETA 00:52:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1258263.064 ops/s
[info] # Warmup Iteration   2: 1366290.368 ops/s
[info] # Warmup Iteration   3: 1376080.603 ops/s
[info] # Warmup Iteration   4: 1375134.846 ops/s
[info] # Warmup Iteration   5: 1375952.333 ops/s
[info] Iteration   1: 1365396.012 ops/s
[info]                  ·gc.alloc.rate:                   1131.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1549.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1371641.279 ops/s
[info]                  ·gc.alloc.rate:                   1136.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1543.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1369542.048 ops/s
[info]                  ·gc.alloc.rate:               1134.730 MB/sec
[info]                  ·gc.alloc.rate.norm:          1304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 773.191 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1372954.374 ops/s
[info]                  ·gc.alloc.rate:                   1137.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1543.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1325078.490 ops/s
[info]                  ·gc.alloc.rate:                   1097.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1600.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala":
[info]   1360922.441 ±(99.9%) 77940.119 ops/s [Average]
[info]   (min, avg, max) = (1325078.490, 1360922.441, 1372954.374), stdev = 20240.801
[info]   CI (99.9%): [1282982.322, 1438862.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1127.598 ±(99.9%) 64.752 MB/sec [Average]
[info]   (min, avg, max) = (1097.826, 1127.598, 1137.676), stdev = 16.816
[info]   CI (99.9%): [1062.846, 1192.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1304.000, 1304.000, 1304.000), stdev = 0.001
[info]   CI (99.9%): [1304.000, 1304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1211.209 ±(99.9%) 1158.923 MB/sec [Average]
[info]   (min, avg, max) = (672.824, 1211.209, 1347.575), stdev = 300.969
[info]   CI (99.9%): [52.285, 2370.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1401.965 ±(99.9%) 1356.659 B/op [Average]
[info]   (min, avg, max) = (773.191, 1401.965, 1600.653), stdev = 352.320
[info]   CI (99.9%): [45.306, 2758.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.063 ±(99.9%) 0.157 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.063, 0.099), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 54.59% complete, ETA 00:51:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1317446.497 ops/s
[info] # Warmup Iteration   2: 1433108.804 ops/s
[info] # Warmup Iteration   3: 1434657.542 ops/s
[info] # Warmup Iteration   4: 1439533.272 ops/s
[info] # Warmup Iteration   5: 1436983.479 ops/s
[info] Iteration   1: 1439534.546 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1474593.788 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1478039.606 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1478943.551 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1458516.035 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc":
[info]   1465925.505 ±(99.9%) 65084.514 ops/s [Average]
[info]   (min, avg, max) = (1439534.546, 1465925.505, 1478943.551), stdev = 16902.242
[info]   CI (99.9%): [1400840.992, 1531010.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 54.82% complete, ETA 00:51:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 75893.273 ops/s
[info] # Warmup Iteration   2: 124393.524 ops/s
[info] # Warmup Iteration   3: 122158.244 ops/s
[info] # Warmup Iteration   4: 125952.717 ops/s
[info] # Warmup Iteration   5: 127923.764 ops/s
[info] Iteration   1: 126780.932 ops/s
[info]                  ·gc.alloc.rate:                   1594.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              19792.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16580.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 123533.698 ops/s
[info]                  ·gc.alloc.rate:                   1553.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              19792.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25583.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.530 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 123627.814 ops/s
[info]                  ·gc.alloc.rate:                   1554.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              19792.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17070.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.855 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 123796.256 ops/s
[info]                  ·gc.alloc.rate:               1556.767 MB/sec
[info]                  ·gc.alloc.rate.norm:          19792.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17081.619 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 126017.300 ops/s
[info]                  ·gc.alloc.rate:                   1585.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              19792.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25210.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.520 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson":
[info]   124751.200 ±(99.9%) 5896.343 ops/s [Average]
[info]   (min, avg, max) = (123533.698, 124751.200, 126780.932), stdev = 1531.261
[info]   CI (99.9%): [118854.857, 130647.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1568.971 ±(99.9%) 74.929 MB/sec [Average]
[info]   (min, avg, max) = (1553.573, 1568.971, 1594.808), stdev = 19.459
[info]   CI (99.9%): [1494.043, 1643.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   19792.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (19792.003, 19792.004, 19792.004), stdev = 0.001
[info]   CI (99.9%): [19792.003, 19792.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1609.532 ±(99.9%) 1420.347 MB/sec [Average]
[info]   (min, avg, max) = (1336.001, 1609.532, 2018.976), stdev = 368.860
[info]   CI (99.9%): [189.185, 3029.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   20305.356 ±(99.9%) 17922.205 B/op [Average]
[info]   (min, avg, max) = (16580.140, 20305.356, 25583.201), stdev = 4654.340
[info]   CI (99.9%): [2383.151, 38227.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.217 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.146), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.633 ±(99.9%) 2.762 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.633, 1.855), stdev = 0.717
[info]   CI (99.9%): [≈ 0, 3.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.06% complete, ETA 00:51:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23092.577 ops/s
[info] # Warmup Iteration   2: 34325.649 ops/s
[info] # Warmup Iteration   3: 35365.538 ops/s
[info] # Warmup Iteration   4: 35442.782 ops/s
[info] # Warmup Iteration   5: 35628.872 ops/s
[info] Iteration   1: 35084.547 ops/s
[info]                  ·gc.alloc.rate:                   1259.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              56496.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59945.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.934 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 34725.964 ops/s
[info]                  ·gc.alloc.rate:                   1246.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              56496.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60624.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.830 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 35638.871 ops/s
[info]                  ·gc.alloc.rate:                   1279.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              56496.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59159.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.839 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 35700.016 ops/s
[info]                  ·gc.alloc.rate:               1281.702 MB/sec
[info]                  ·gc.alloc.rate.norm:          56496.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29571.682 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 35698.605 ops/s
[info]                  ·gc.alloc.rate:                   1281.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              56496.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59190.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.835 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala":
[info]   35369.600 ±(99.9%) 1706.327 ops/s [Average]
[info]   (min, avg, max) = (34725.964, 35369.600, 35700.016), stdev = 443.128
[info]   CI (99.9%): [33663.273, 37075.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1269.795 ±(99.9%) 61.116 MB/sec [Average]
[info]   (min, avg, max) = (1246.565, 1269.795, 1281.702), stdev = 15.872
[info]   CI (99.9%): [1208.679, 1330.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   56496.012 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (56496.012, 56496.012, 56496.013), stdev = 0.001
[info]   CI (99.9%): [56496.011, 56496.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1205.523 ±(99.9%) 1150.891 MB/sec [Average]
[info]   (min, avg, max) = (670.881, 1205.523, 1342.575), stdev = 298.883
[info]   CI (99.9%): [54.633, 2356.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   53698.449 ±(99.9%) 51986.851 B/op [Average]
[info]   (min, avg, max) = (29571.682, 53698.449, 60624.244), stdev = 13500.820
[info]   CI (99.9%): [1711.598, 105685.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.488 ±(99.9%) 4.115 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.488, 2.830), stdev = 1.069
[info]   CI (99.9%): [≈ 0, 5.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.29% complete, ETA 00:50:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 517055.774 ops/s
[info] # Warmup Iteration   2: 548708.139 ops/s
[info] # Warmup Iteration   3: 549371.517 ops/s
[info] # Warmup Iteration   4: 551608.218 ops/s
[info] # Warmup Iteration   5: 534886.739 ops/s
[info] Iteration   1: 535092.166 ops/s
[info]                  ·gc.alloc.rate:               1044.403 MB/sec
[info]                  ·gc.alloc.rate.norm:          3072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1980.882 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 537267.579 ops/s
[info]                  ·gc.alloc.rate:                   1048.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              3072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3943.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 552153.020 ops/s
[info]                  ·gc.alloc.rate:                   1078.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              3072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3839.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 553280.728 ops/s
[info]                  ·gc.alloc.rate:               1079.901 MB/sec
[info]                  ·gc.alloc.rate.norm:          3072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1916.686 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 552627.954 ops/s
[info]                  ·gc.alloc.rate:                   1078.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              3072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3839.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala":
[info]   546084.289 ±(99.9%) 34975.153 ops/s [Average]
[info]   (min, avg, max) = (535092.166, 546084.289, 553280.728), stdev = 9082.936
[info]   CI (99.9%): [511109.136, 581059.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1066.014 ±(99.9%) 68.292 MB/sec [Average]
[info]   (min, avg, max) = (1044.403, 1066.014, 1079.901), stdev = 17.735
[info]   CI (99.9%): [997.722, 1134.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3072.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3072.001, 3072.001, 3072.001), stdev = 0.001
[info]   CI (99.9%): [3072.001, 3072.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1077.911 ±(99.9%) 1421.174 MB/sec [Average]
[info]   (min, avg, max) = (673.450, 1077.911, 1348.290), stdev = 369.074
[info]   CI (99.9%): [≈ 0, 2499.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3104.092 ±(99.9%) 4065.313 B/op [Average]
[info]   (min, avg, max) = (1916.686, 3104.092, 3943.776), stdev = 1055.749
[info]   CI (99.9%): [≈ 0, 7169.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.072 ±(99.9%) 0.304 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.072, 0.183), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 55.53% complete, ETA 00:50:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11562.157 ops/s
[info] # Warmup Iteration   2: 26346.350 ops/s
[info] # Warmup Iteration   3: 26230.928 ops/s
[info] # Warmup Iteration   4: 26308.870 ops/s
[info] # Warmup Iteration   5: 26370.842 ops/s
[info] Iteration   1: 26158.748 ops/s
[info]                  ·gc.alloc.rate:                   1869.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              112472.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80437.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.505 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 26173.114 ops/s
[info]                  ·gc.alloc.rate:                   1870.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              112472.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120912.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.755 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 26115.313 ops/s
[info]                  ·gc.alloc.rate:                   1867.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              112472.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121417.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.273 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 26457.457 ops/s
[info]                  ·gc.alloc.rate:                   1891.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              112472.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120189.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.953 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 27145.146 ops/s
[info]                  ·gc.alloc.rate:                   1939.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              112472.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117370.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.207 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson":
[info]   26409.955 ±(99.9%) 1666.015 ops/s [Average]
[info]   (min, avg, max) = (26115.313, 26409.955, 27145.146), stdev = 432.659
[info]   CI (99.9%): [24743.940, 28075.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1887.650 ±(99.9%) 118.681 MB/sec [Average]
[info]   (min, avg, max) = (1867.097, 1887.650, 1939.907), stdev = 30.821
[info]   CI (99.9%): [1768.969, 2006.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   112472.017 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (112472.016, 112472.017, 112472.018), stdev = 0.001
[info]   CI (99.9%): [112472.014, 112472.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1881.788 ±(99.9%) 1172.937 MB/sec [Average]
[info]   (min, avg, max) = (1336.970, 1881.788, 2024.404), stdev = 304.608
[info]   CI (99.9%): [708.851, 3054.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   112065.565 ±(99.9%) 68347.209 B/op [Average]
[info]   (min, avg, max) = (80437.719, 112065.565, 121417.232), stdev = 17749.553
[info]   CI (99.9%): [43718.356, 180412.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.739 ±(99.9%) 7.660 B/op [Average]
[info]   (min, avg, max) = (1.207, 3.739, 6.273), stdev = 1.989
[info]   CI (99.9%): [≈ 0, 11.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.76% complete, ETA 00:50:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 171781.110 ops/s
[info] # Warmup Iteration   2: 237764.225 ops/s
[info] # Warmup Iteration   3: 234962.477 ops/s
[info] # Warmup Iteration   4: 235056.017 ops/s
[info] # Warmup Iteration   5: 232771.559 ops/s
[info] Iteration   1: 235146.823 ops/s
[info]                  ·gc.alloc.rate:                   653.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              4376.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4469.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.063 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.809 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 234420.355 ops/s
[info]                  ·gc.alloc.rate:               651.789 MB/sec
[info]                  ·gc.alloc.rate.norm:          4376.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4483.560 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 238126.443 ops/s
[info]                  ·gc.alloc.rate:                   662.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              4376.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4416.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 238643.773 ops/s
[info]                  ·gc.alloc.rate:               663.501 MB/sec
[info]                  ·gc.alloc.rate.norm:          4376.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4406.428 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 238706.249 ops/s
[info]                  ·gc.alloc.rate:                   663.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              4376.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4407.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala":
[info]   237008.729 ±(99.9%) 7931.439 ops/s [Average]
[info]   (min, avg, max) = (234420.355, 237008.729, 238706.249), stdev = 2059.769
[info]   CI (99.9%): [229077.290, 244940.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   659.001 ±(99.9%) 22.038 MB/sec [Average]
[info]   (min, avg, max) = (651.789, 659.001, 663.662), stdev = 5.723
[info]   CI (99.9%): [636.963, 681.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   4376.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4376.002, 4376.002, 4376.002), stdev = 0.001
[info]   CI (99.9%): [4376.002, 4376.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   668.096 ±(99.9%) 1.022 MB/sec [Average]
[info]   (min, avg, max) = (667.809, 668.096, 668.427), stdev = 0.265
[info]   CI (99.9%): [667.074, 669.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4436.651 ±(99.9%) 142.722 B/op [Average]
[info]   (min, avg, max) = (4406.428, 4436.651, 4483.560), stdev = 37.065
[info]   CI (99.9%): [4293.929, 4579.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.429 ±(99.9%) 3.518 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.429, 2.063), stdev = 0.914
[info]   CI (99.9%): [≈ 0, 3.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.872 ±(99.9%) 23.549 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.872, 13.809), stdev = 6.116
[info]   CI (99.9%): [≈ 0, 26.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.00% complete, ETA 00:50:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1520620.976 ops/s
[info] # Warmup Iteration   2: 1606146.997 ops/s
[info] # Warmup Iteration   3: 1659711.031 ops/s
[info] # Warmup Iteration   4: 1353978.855 ops/s
[info] # Warmup Iteration   5: 1626196.466 ops/s
[info] Iteration   1: 1642376.944 ops/s
[info]                  ·gc.alloc.rate:                   960.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     644.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1633300.968 ops/s
[info]                  ·gc.alloc.rate:                   954.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1295.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1653124.793 ops/s
[info]                  ·gc.alloc.rate:               966.585 MB/sec
[info]                  ·gc.alloc.rate.norm:          920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 639.917 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1649542.204 ops/s
[info]                  ·gc.alloc.rate:                   964.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1282.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1649236.863 ops/s
[info]                  ·gc.alloc.rate:               964.067 MB/sec
[info]                  ·gc.alloc.rate.norm:          920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 642.387 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala":
[info]   1645516.354 ±(99.9%) 30259.395 ops/s [Average]
[info]   (min, avg, max) = (1633300.968, 1645516.354, 1653124.793), stdev = 7858.269
[info]   CI (99.9%): [1615256.960, 1675775.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   962.021 ±(99.9%) 18.114 MB/sec [Average]
[info]   (min, avg, max) = (954.743, 962.021, 966.585), stdev = 4.704
[info]   CI (99.9%): [943.907, 980.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   920.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (920.000, 920.000, 920.000), stdev = 0.001
[info]   CI (99.9%): [920.000, 920.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   941.281 ±(99.9%) 1416.971 MB/sec [Average]
[info]   (min, avg, max) = (672.157, 941.281, 1344.490), stdev = 367.983
[info]   CI (99.9%): [≈ 0, 2358.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   900.811 ±(99.9%) 1364.067 B/op [Average]
[info]   (min, avg, max) = (639.917, 900.811, 1295.365), stdev = 354.244
[info]   CI (99.9%): [≈ 0, 2264.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.158 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.099), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 56.24% complete, ETA 00:49:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1442144.260 ops/s
[info] # Warmup Iteration   2: 1558781.226 ops/s
[info] # Warmup Iteration   3: 1564585.564 ops/s
[info] # Warmup Iteration   4: 1563162.612 ops/s
[info] # Warmup Iteration   5: 1562423.738 ops/s
[info] Iteration   1: 1564137.965 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1563978.278 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1563848.428 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1565013.075 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1563360.254 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc":
[info]   1564067.600 ±(99.9%) 2322.570 ops/s [Average]
[info]   (min, avg, max) = (1563360.254, 1564067.600, 1565013.075), stdev = 603.164
[info]   CI (99.9%): [1561745.030, 1566390.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 56.47% complete, ETA 00:49:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 110997.284 ops/s
[info] # Warmup Iteration   2: 175994.443 ops/s
[info] # Warmup Iteration   3: 178346.797 ops/s
[info] # Warmup Iteration   4: 179701.907 ops/s
[info] # Warmup Iteration   5: 178028.139 ops/s
[info] Iteration   1: 179250.548 ops/s
[info]                  ·gc.alloc.rate:                   1160.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              10192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11712.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.914 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 179791.234 ops/s
[info]                  ·gc.alloc.rate:                   1164.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              10192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11686.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.911 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 179810.306 ops/s
[info]                  ·gc.alloc.rate:               1164.434 MB/sec
[info]                  ·gc.alloc.rate.norm:          10192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5845.149 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 176762.454 ops/s
[info]                  ·gc.alloc.rate:                   1144.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              10192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11916.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.556 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 178717.454 ops/s
[info]                  ·gc.alloc.rate:               1157.639 MB/sec
[info]                  ·gc.alloc.rate.norm:          10192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11796.715 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson":
[info]   178866.399 ±(99.9%) 4848.839 ops/s [Average]
[info]   (min, avg, max) = (176762.454, 178866.399, 179810.306), stdev = 1259.228
[info]   CI (99.9%): [174017.560, 183715.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1158.415 ±(99.9%) 31.045 MB/sec [Average]
[info]   (min, avg, max) = (1144.896, 1158.415, 1164.434), stdev = 8.062
[info]   CI (99.9%): [1127.369, 1189.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   10192.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10192.002, 10192.002, 10192.002), stdev = 0.001
[info]   CI (99.9%): [10192.002, 10192.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1203.046 ±(99.9%) 1152.182 MB/sec [Average]
[info]   (min, avg, max) = (667.807, 1203.046, 1339.908), stdev = 299.218
[info]   CI (99.9%): [50.864, 2355.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10591.290 ±(99.9%) 10222.263 B/op [Average]
[info]   (min, avg, max) = (5845.149, 10591.290, 11916.108), stdev = 2654.689
[info]   CI (99.9%): [369.027, 20813.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.476 ±(99.9%) 1.765 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.476, 0.914), stdev = 0.458
[info]   CI (99.9%): [≈ 0, 2.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 56.71% complete, ETA 00:49:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56044.880 ops/s
[info] # Warmup Iteration   2: 71638.635 ops/s
[info] # Warmup Iteration   3: 70978.660 ops/s
[info] # Warmup Iteration   4: 72590.210 ops/s
[info] # Warmup Iteration   5: 72932.223 ops/s
[info] Iteration   1: 72588.272 ops/s
[info]                  ·gc.alloc.rate:               1562.134 MB/sec
[info]                  ·gc.alloc.rate.norm:          33856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29088.997 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 72801.950 ops/s
[info]                  ·gc.alloc.rate:                   1566.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              33856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43568.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.900 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 72964.069 ops/s
[info]                  ·gc.alloc.rate:               1569.957 MB/sec
[info]                  ·gc.alloc.rate.norm:          33856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29026.126 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 73114.449 ops/s
[info]                  ·gc.alloc.rate:                   1572.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              33856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28994.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.344 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 72385.457 ops/s
[info]                  ·gc.alloc.rate:               1557.144 MB/sec
[info]                  ·gc.alloc.rate.norm:          33856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2023.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 43990.575 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce":
[info]   72770.839 ±(99.9%) 1119.709 ops/s [Average]
[info]   (min, avg, max) = (72385.457, 72770.839, 73114.449), stdev = 290.785
[info]   CI (99.9%): [71651.130, 73890.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate":
[info]   1565.667 ±(99.9%) 23.916 MB/sec [Average]
[info]   (min, avg, max) = (1557.144, 1565.667, 1572.761), stdev = 6.211
[info]   CI (99.9%): [1541.751, 1589.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   33856.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (33856.006, 33856.006, 33856.006), stdev = 0.001
[info]   CI (99.9%): [33856.005, 33856.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1614.812 ±(99.9%) 1422.532 MB/sec [Average]
[info]   (min, avg, max) = (1342.182, 1614.812, 2023.265), stdev = 369.427
[info]   CI (99.9%): [192.280, 3037.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   34933.806 ±(99.9%) 31100.204 B/op [Average]
[info]   (min, avg, max) = (28994.471, 34933.806, 43990.575), stdev = 8076.624
[info]   CI (99.9%): [3833.602, 66034.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.449 ±(99.9%) 2.443 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.449, 1.344), stdev = 0.634
[info]   CI (99.9%): [≈ 0, 2.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.94% complete, ETA 00:49:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64892.243 ops/s
[info] # Warmup Iteration   2: 86161.959 ops/s
[info] # Warmup Iteration   3: 93301.191 ops/s
[info] # Warmup Iteration   4: 93643.421 ops/s
[info] # Warmup Iteration   5: 93925.173 ops/s
[info] Iteration   1: 93133.056 ops/s
[info]                  ·gc.alloc.rate:                   1190.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              20112.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22536.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.704 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 91458.455 ops/s
[info]                  ·gc.alloc.rate:                   1168.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              20112.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22960.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.433 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 92253.784 ops/s
[info]                  ·gc.alloc.rate:               1178.940 MB/sec
[info]                  ·gc.alloc.rate.norm:          20112.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1336.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22791.919 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 93454.826 ops/s
[info]                  ·gc.alloc.rate:               1194.488 MB/sec
[info]                  ·gc.alloc.rate.norm:          20112.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11258.182 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 93418.999 ops/s
[info]                  ·gc.alloc.rate:                   1194.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              20112.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22558.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala":
[info]   92743.824 ±(99.9%) 3337.644 ops/s [Average]
[info]   (min, avg, max) = (91458.455, 92743.824, 93454.826), stdev = 866.776
[info]   CI (99.9%): [89406.180, 96081.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1185.284 ±(99.9%) 43.012 MB/sec [Average]
[info]   (min, avg, max) = (1168.767, 1185.284, 1194.488), stdev = 11.170
[info]   CI (99.9%): [1142.272, 1228.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   20112.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (20112.005, 20112.005, 20112.005), stdev = 0.001
[info]   CI (99.9%): [20112.004, 20112.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1202.392 ±(99.9%) 1148.964 MB/sec [Average]
[info]   (min, avg, max) = (668.644, 1202.392, 1339.360), stdev = 298.382
[info]   CI (99.9%): [53.427, 2351.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20421.225 ±(99.9%) 19735.658 B/op [Average]
[info]   (min, avg, max) = (11258.182, 20421.225, 22960.849), stdev = 5125.288
[info]   CI (99.9%): [685.567, 40156.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.638 ±(99.9%) 2.452 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.638, 1.433), stdev = 0.637
[info]   CI (99.9%): [≈ 0, 3.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.18% complete, ETA 00:48:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 91798.257 ops/s
[info] # Warmup Iteration   2: 102288.014 ops/s
[info] # Warmup Iteration   3: 103677.049 ops/s
[info] # Warmup Iteration   4: 104880.387 ops/s
[info] # Warmup Iteration   5: 103478.320 ops/s
[info] Iteration   1: 105053.846 ops/s
[info]                  ·gc.alloc.rate:                   1229.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              18408.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20119.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.936 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 103938.925 ops/s
[info]                  ·gc.alloc.rate:                   1215.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              18408.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20345.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.946 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 104777.205 ops/s
[info]                  ·gc.alloc.rate:               1225.495 MB/sec
[info]                  ·gc.alloc.rate.norm:          18408.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10101.030 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 102774.063 ops/s
[info]                  ·gc.alloc.rate:               1202.065 MB/sec
[info]                  ·gc.alloc.rate.norm:          18408.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20606.118 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 102495.222 ops/s
[info]                  ·gc.alloc.rate:                   1198.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              18408.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20682.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.320 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala":
[info]   103807.852 ±(99.9%) 4432.860 ops/s [Average]
[info]   (min, avg, max) = (102495.222, 103807.852, 105053.846), stdev = 1151.200
[info]   CI (99.9%): [99374.992, 108240.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1214.226 ±(99.9%) 52.203 MB/sec [Average]
[info]   (min, avg, max) = (1198.757, 1214.226, 1229.007), stdev = 13.557
[info]   CI (99.9%): [1162.023, 1266.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   18408.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (18408.004, 18408.004, 18408.005), stdev = 0.001
[info]   CI (99.9%): [18408.004, 18408.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1210.398 ±(99.9%) 1157.953 MB/sec [Average]
[info]   (min, avg, max) = (672.466, 1210.398, 1346.873), stdev = 300.717
[info]   CI (99.9%): [52.446, 2368.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   18370.912 ±(99.9%) 17822.143 B/op [Average]
[info]   (min, avg, max) = (10101.030, 18370.912, 20682.457), stdev = 4628.354
[info]   CI (99.9%): [548.768, 36193.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.440 ±(99.9%) 1.830 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.440, 0.946), stdev = 0.475
[info]   CI (99.9%): [≈ 0, 2.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 57.41% complete, ETA 00:48:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28244.054 ops/s
[info] # Warmup Iteration   2: 43749.007 ops/s
[info] # Warmup Iteration   3: 45300.121 ops/s
[info] # Warmup Iteration   4: 46473.905 ops/s
[info] # Warmup Iteration   5: 46584.584 ops/s
[info] Iteration   1: 46225.439 ops/s
[info]                  ·gc.alloc.rate:                   2216.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              75448.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2011.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68461.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.835 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 44178.131 ops/s
[info]                  ·gc.alloc.rate:                   2117.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              75448.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2688.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95780.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.966 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 46458.022 ops/s
[info]                  ·gc.alloc.rate:                   2227.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              75448.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68479.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.116 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 46674.278 ops/s
[info]                  ·gc.alloc.rate:                   2237.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              75448.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68317.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.808 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 46642.422 ops/s
[info]                  ·gc.alloc.rate:                   2235.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              75448.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2706.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91335.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.107 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson":
[info]   46035.658 ±(99.9%) 4057.277 ops/s [Average]
[info]   (min, avg, max) = (44178.131, 46035.658, 46674.278), stdev = 1053.662
[info]   CI (99.9%): [41978.381, 50092.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2206.932 ±(99.9%) 194.573 MB/sec [Average]
[info]   (min, avg, max) = (2117.811, 2206.932, 2237.523), stdev = 50.530
[info]   CI (99.9%): [2012.359, 2401.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   75448.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (75448.009, 75448.010, 75448.010), stdev = 0.001
[info]   CI (99.9%): [75448.008, 75448.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2290.761 ±(99.9%) 1430.546 MB/sec [Average]
[info]   (min, avg, max) = (2011.070, 2290.761, 2706.712), stdev = 371.508
[info]   CI (99.9%): [860.216, 3721.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   78474.830 ±(99.9%) 53363.745 B/op [Average]
[info]   (min, avg, max) = (68317.030, 78474.830, 95780.304), stdev = 13858.395
[info]   CI (99.9%): [25111.085, 131838.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.075, 0.083), stdev = 0.011
[info]   CI (99.9%): [0.031, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.566 ±(99.9%) 1.616 B/op [Average]
[info]   (min, avg, max) = (2.107, 2.566, 2.966), stdev = 0.420
[info]   CI (99.9%): [0.950, 4.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 11.000), stdev = 3.782
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 57.65% complete, ETA 00:48:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 91963.182 ops/s
[info] # Warmup Iteration   2: 118672.053 ops/s
[info] # Warmup Iteration   3: 120050.400 ops/s
[info] # Warmup Iteration   4: 121396.533 ops/s
[info] # Warmup Iteration   5: 121737.708 ops/s
[info] Iteration   1: 121282.440 ops/s
[info]                  ·gc.alloc.rate:                   1138.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              14768.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17358.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.540 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 121426.162 ops/s
[info]                  ·gc.alloc.rate:                   1139.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              14768.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17341.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.079 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 121263.151 ops/s
[info]                  ·gc.alloc.rate:               1137.940 MB/sec
[info]                  ·gc.alloc.rate.norm:          14768.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8684.674 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 121383.416 ops/s
[info]                  ·gc.alloc.rate:                   1138.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              14768.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17369.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.540 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 121444.489 ops/s
[info]                  ·gc.alloc.rate:                   1139.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              14768.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17394.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.809 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce":
[info]   121359.932 ±(99.9%) 319.043 ops/s [Average]
[info]   (min, avg, max) = (121263.151, 121359.932, 121444.489), stdev = 82.854
[info]   CI (99.9%): [121040.889, 121678.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1138.763 ±(99.9%) 2.852 MB/sec [Average]
[info]   (min, avg, max) = (1137.940, 1138.763, 1139.507), stdev = 0.741
[info]   CI (99.9%): [1135.911, 1141.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   14768.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (14768.004, 14768.004, 14768.004), stdev = 0.001
[info]   CI (99.9%): [14768.003, 14768.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1205.297 ±(99.9%) 1154.027 MB/sec [Average]
[info]   (min, avg, max) = (669.192, 1205.297, 1342.172), stdev = 299.697
[info]   CI (99.9%): [51.270, 2359.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   15629.589 ±(99.9%) 14949.641 B/op [Average]
[info]   (min, avg, max) = (8684.674, 15629.589, 17394.545), stdev = 3882.374
[info]   CI (99.9%): [679.948, 30579.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.594 ±(99.9%) 1.541 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.594, 1.079), stdev = 0.400
[info]   CI (99.9%): [≈ 0, 2.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.88% complete, ETA 00:48:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 243549.426 ops/s
[info] # Warmup Iteration   2: 340226.171 ops/s
[info] # Warmup Iteration   3: 329615.870 ops/s
[info] # Warmup Iteration   4: 339927.380 ops/s
[info] # Warmup Iteration   5: 346674.397 ops/s
[info] Iteration   1: 339963.571 ops/s
[info]                  ·gc.alloc.rate:               504.659 MB/sec
[info]                  ·gc.alloc.rate.norm:          2336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2368.513 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 340041.909 ops/s
[info]                  ·gc.alloc.rate:               504.753 MB/sec
[info]                  ·gc.alloc.rate.norm:          2336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2367.914 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 342054.924 ops/s
[info]                  ·gc.alloc.rate:                   507.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              2336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3068.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.542 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.696 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 298746.188 ops/s
[info]                  ·gc.alloc.rate:                   443.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              2336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3513.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 342441.337 ops/s
[info]                  ·gc.alloc.rate:      508.282 MB/sec
[info]                  ·gc.alloc.rate.norm: 2336.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala":
[info]   332649.586 ±(99.9%) 73109.523 ops/s [Average]
[info]   (min, avg, max) = (298746.188, 332649.586, 342441.337), stdev = 18986.311
[info]   CI (99.9%): [259540.063, 405759.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   493.794 ±(99.9%) 108.509 MB/sec [Average]
[info]   (min, avg, max) = (443.474, 493.794, 508.282), stdev = 28.179
[info]   CI (99.9%): [385.285, 602.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   2336.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2336.001, 2336.001, 2336.001), stdev = 0.001
[info]   CI (99.9%): [2336.001, 2336.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   471.442 ±(99.9%) 1057.931 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 471.442, 666.949), stdev = 274.741
[info]   CI (99.9%): [≈ 0, 1529.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2263.520 ±(99.9%) 5221.193 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2263.520, 3513.047), stdev = 1355.927
[info]   CI (99.9%): [≈ 0, 7484.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.513 ±(99.9%) 4.369 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.513, 2.542), stdev = 1.135
[info]   CI (99.9%): [≈ 0, 4.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.361 ±(99.9%) 20.095 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.361, 11.696), stdev = 5.218
[info]   CI (99.9%): [≈ 0, 22.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 58.12% complete, ETA 00:47:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 615464.188 ops/s
[info] # Warmup Iteration   2: 674967.668 ops/s
[info] # Warmup Iteration   3: 677873.954 ops/s
[info] # Warmup Iteration   4: 667789.451 ops/s
[info] # Warmup Iteration   5: 710699.789 ops/s
[info] Iteration   1: 674028.821 ops/s
[info]                  ·gc.alloc.rate:                   835.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1569.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 667892.768 ops/s
[info]                  ·gc.alloc.rate:                   828.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3164.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 664701.529 ops/s
[info]                  ·gc.alloc.rate:               824.577 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1589.956 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 677252.901 ops/s
[info]                  ·gc.alloc.rate:               839.994 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1560.478 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 675869.561 ops/s
[info]                  ·gc.alloc.rate:                   838.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1564.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala":
[info]   671949.116 ±(99.9%) 20808.328 ops/s [Average]
[info]   (min, avg, max) = (664701.529, 671949.116, 677252.901), stdev = 5403.857
[info]   CI (99.9%): [651140.788, 692757.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   833.516 ±(99.9%) 25.376 MB/sec [Average]
[info]   (min, avg, max) = (824.577, 833.516, 839.994), stdev = 6.590
[info]   CI (99.9%): [808.141, 858.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   806.147 ±(99.9%) 1156.930 MB/sec [Average]
[info]   (min, avg, max) = (671.512, 806.147, 1343.610), stdev = 300.451
[info]   CI (99.9%): [≈ 0, 1963.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1889.796 ±(99.9%) 2744.690 B/op [Average]
[info]   (min, avg, max) = (1560.478, 1889.796, 3164.707), stdev = 712.787
[info]   CI (99.9%): [≈ 0, 4634.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.251 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.068, 0.146), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 58.35% complete, ETA 00:47:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 664210.686 ops/s
[info] # Warmup Iteration   2: 706870.396 ops/s
[info] # Warmup Iteration   3: 703256.479 ops/s
[info] # Warmup Iteration   4: 703568.169 ops/s
[info] # Warmup Iteration   5: 704735.961 ops/s
[info] Iteration   1: 705923.409 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 705031.772 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 703809.995 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 702502.473 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 707377.923 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc":
[info]   704929.114 ±(99.9%) 7239.016 ops/s [Average]
[info]   (min, avg, max) = (702502.473, 704929.114, 707377.923), stdev = 1879.949
[info]   CI (99.9%): [697690.099, 712168.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 58.59% complete, ETA 00:47:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 202455.304 ops/s
[info] # Warmup Iteration   2: 251516.670 ops/s
[info] # Warmup Iteration   3: 231115.095 ops/s
[info] # Warmup Iteration   4: 241352.286 ops/s
[info] # Warmup Iteration   5: 238369.836 ops/s
[info] Iteration   1: 240442.351 ops/s
[info]                  ·gc.alloc.rate:                   785.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4375.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 241787.011 ops/s
[info]                  ·gc.alloc.rate:               790.251 MB/sec
[info]                  ·gc.alloc.rate.norm:          5144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4349.264 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 242169.971 ops/s
[info]                  ·gc.alloc.rate:               791.657 MB/sec
[info]                  ·gc.alloc.rate.norm:          5144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4342.297 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 227896.588 ops/s
[info]                  ·gc.alloc.rate:                   744.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4614.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 217119.926 ops/s
[info]                  ·gc.alloc.rate:                   709.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4843.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson":
[info]   233883.169 ±(99.9%) 42662.727 ops/s [Average]
[info]   (min, avg, max) = (217119.926, 233883.169, 242169.971), stdev = 11079.375
[info]   CI (99.9%): [191220.443, 276545.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   764.542 ±(99.9%) 139.110 MB/sec [Average]
[info]   (min, avg, max) = (709.909, 764.542, 791.657), stdev = 36.127
[info]   CI (99.9%): [625.432, 903.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   5144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5144.002, 5144.002, 5144.002), stdev = 0.001
[info]   CI (99.9%): [5144.002, 5144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   668.323 ±(99.9%) 0.556 MB/sec [Average]
[info]   (min, avg, max) = (668.159, 668.323, 668.540), stdev = 0.144
[info]   CI (99.9%): [667.767, 668.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4504.932 ±(99.9%) 847.282 B/op [Average]
[info]   (min, avg, max) = (4342.297, 4504.932, 4843.073), stdev = 220.037
[info]   CI (99.9%): [3657.650, 5352.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.086 ±(99.9%) 0.304 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.086, 0.151), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 58.82% complete, ETA 00:46:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86702.221 ops/s
[info] # Warmup Iteration   2: 125561.318 ops/s
[info] # Warmup Iteration   3: 123086.438 ops/s
[info] # Warmup Iteration   4: 124750.790 ops/s
[info] # Warmup Iteration   5: 122657.393 ops/s
[info] Iteration   1: 125951.366 ops/s
[info]                  ·gc.alloc.rate:                   1727.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              21584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25163.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 123800.407 ops/s
[info]                  ·gc.alloc.rate:                   1698.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              21584.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17098.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 126159.599 ops/s
[info]                  ·gc.alloc.rate:                   1730.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              21584.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25204.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.519 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 126559.048 ops/s
[info]                  ·gc.alloc.rate:                   1735.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              21584.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16779.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 126493.748 ops/s
[info]                  ·gc.alloc.rate:                   1734.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              21584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25217.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.554 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce":
[info]   125792.834 ±(99.9%) 4393.692 ops/s [Average]
[info]   (min, avg, max) = (123800.407, 125792.834, 126559.048), stdev = 1141.028
[info]   CI (99.9%): [121399.142, 130186.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate":
[info]   1725.317 ±(99.9%) 59.338 MB/sec [Average]
[info]   (min, avg, max) = (1698.379, 1725.317, 1735.605), stdev = 15.410
[info]   CI (99.9%): [1665.980, 1784.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   21584.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (21584.003, 21584.004, 21584.004), stdev = 0.001
[info]   CI (99.9%): [21584.003, 21584.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1751.207 ±(99.9%) 1419.795 MB/sec [Average]
[info]   (min, avg, max) = (1345.400, 1751.207, 2026.789), stdev = 368.716
[info]   CI (99.9%): [331.412, 3171.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   21892.620 ±(99.9%) 17418.987 B/op [Average]
[info]   (min, avg, max) = (16779.436, 21892.620, 25217.511), stdev = 4523.656
[info]   CI (99.9%): [4473.633, 39311.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.571 ±(99.9%) 2.159 B/op [Average]
[info]   (min, avg, max) = (0.259, 0.571, 1.554), stdev = 0.561
[info]   CI (99.9%): [≈ 0, 2.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.06% complete, ETA 00:46:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 124417.885 ops/s
[info] # Warmup Iteration   2: 185992.310 ops/s
[info] # Warmup Iteration   3: 186580.320 ops/s
[info] # Warmup Iteration   4: 182797.058 ops/s
[info] # Warmup Iteration   5: 183450.613 ops/s
[info] Iteration   1: 184991.471 ops/s
[info]                  ·gc.alloc.rate:                   1103.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              9384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5684.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 182540.995 ops/s
[info]                  ·gc.alloc.rate:                   1088.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              9384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11521.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 184617.747 ops/s
[info]                  ·gc.alloc.rate:                   1101.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              9384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11403.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.532 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 184989.290 ops/s
[info]                  ·gc.alloc.rate:               1103.161 MB/sec
[info]                  ·gc.alloc.rate.norm:          9384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5698.567 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 185084.470 ops/s
[info]                  ·gc.alloc.rate:                   1103.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              9384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11396.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala":
[info]   184444.795 ±(99.9%) 4155.700 ops/s [Average]
[info]   (min, avg, max) = (182540.995, 184444.795, 185084.470), stdev = 1079.222
[info]   CI (99.9%): [180289.095, 188600.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1100.062 ±(99.9%) 24.348 MB/sec [Average]
[info]   (min, avg, max) = (1088.908, 1100.062, 1103.708), stdev = 6.323
[info]   CI (99.9%): [1075.715, 1124.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9384.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9384.002, 9384.002, 9384.002), stdev = 0.001
[info]   CI (99.9%): [9384.002, 9384.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1070.728 ±(99.9%) 1411.563 MB/sec [Average]
[info]   (min, avg, max) = (668.418, 1070.728, 1340.434), stdev = 366.578
[info]   CI (99.9%): [≈ 0, 2482.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9140.767 ±(99.9%) 12126.449 B/op [Average]
[info]   (min, avg, max) = (5684.276, 9140.767, 11521.046), stdev = 3149.200
[info]   CI (99.9%): [≈ 0, 21267.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.213 ±(99.9%) 0.748 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.213, 0.532), stdev = 0.194
[info]   CI (99.9%): [≈ 0, 0.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.29% complete, ETA 00:46:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 484673.752 ops/s
[info] # Warmup Iteration   2: 508980.766 ops/s
[info] # Warmup Iteration   3: 504619.960 ops/s
[info] # Warmup Iteration   4: 507830.262 ops/s
[info] # Warmup Iteration   5: 509871.431 ops/s
[info] Iteration   1: 509413.143 ops/s
[info]                  ·gc.alloc.rate:                   989.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              3056.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4157.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 510001.876 ops/s
[info]                  ·gc.alloc.rate:               990.310 MB/sec
[info]                  ·gc.alloc.rate.norm:          3056.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2077.278 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 506171.315 ops/s
[info]                  ·gc.alloc.rate:                   982.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              3056.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4187.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 510283.154 ops/s
[info]                  ·gc.alloc.rate:               990.826 MB/sec
[info]                  ·gc.alloc.rate.norm:          3056.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2077.206 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 491449.985 ops/s
[info]                  ·gc.alloc.rate:                   954.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              3056.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4315.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala":
[info]   505463.894 ±(99.9%) 30823.510 ops/s [Average]
[info]   (min, avg, max) = (491449.985, 505463.894, 510283.154), stdev = 8004.768
[info]   CI (99.9%): [474640.385, 536287.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   981.525 ±(99.9%) 60.086 MB/sec [Average]
[info]   (min, avg, max) = (954.205, 981.525, 990.826), stdev = 15.604
[info]   CI (99.9%): [921.439, 1041.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3056.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3056.001, 3056.001, 3056.001), stdev = 0.001
[info]   CI (99.9%): [3056.001, 3056.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1077.358 ±(99.9%) 1420.274 MB/sec [Average]
[info]   (min, avg, max) = (673.150, 1077.358, 1347.489), stdev = 368.841
[info]   CI (99.9%): [≈ 0, 2497.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3362.919 ±(99.9%) 4525.127 B/op [Average]
[info]   (min, avg, max) = (2077.206, 3362.919, 4315.558), stdev = 1175.161
[info]   CI (99.9%): [≈ 0, 7888.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.091 ±(99.9%) 0.336 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.091, 0.194), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 59.53% complete, ETA 00:46:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33633.634 ops/s
[info] # Warmup Iteration   2: 67941.350 ops/s
[info] # Warmup Iteration   3: 69943.679 ops/s
[info] # Warmup Iteration   4: 69681.825 ops/s
[info] # Warmup Iteration   5: 67264.527 ops/s
[info] Iteration   1: 68800.555 ops/s
[info]                  ·gc.alloc.rate:                   2858.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              65384.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3365.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76967.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.429 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 68956.192 ops/s
[info]                  ·gc.alloc.rate:                   2864.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              65384.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2700.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61638.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.851 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 70129.672 ops/s
[info]                  ·gc.alloc.rate:                   2913.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              65384.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2707.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60755.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.402 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 70074.101 ops/s
[info]                  ·gc.alloc.rate:                   2911.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              65384.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2712.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60913.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.935 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 69324.067 ops/s
[info]                  ·gc.alloc.rate:                   2879.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              65384.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3394.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77074.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.418 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson":
[info]   69456.917 ±(99.9%) 2383.593 ops/s [Average]
[info]   (min, avg, max) = (68800.555, 69456.917, 70129.672), stdev = 619.011
[info]   CI (99.9%): [67073.325, 71840.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2885.617 ±(99.9%) 98.195 MB/sec [Average]
[info]   (min, avg, max) = (2858.990, 2885.617, 2913.405), stdev = 25.501
[info]   CI (99.9%): [2787.421, 2983.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   65384.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (65384.006, 65384.006, 65384.007), stdev = 0.001
[info]   CI (99.9%): [65384.005, 65384.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2976.021 ±(99.9%) 1421.199 MB/sec [Average]
[info]   (min, avg, max) = (2700.584, 2976.021, 3394.801), stdev = 369.081
[info]   CI (99.9%): [1554.822, 4397.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   67469.851 ±(99.9%) 33598.970 B/op [Average]
[info]   (min, avg, max) = (60755.815, 67469.851, 77074.933), stdev = 8725.546
[info]   CI (99.9%): [33870.880, 101068.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.125), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.607 ±(99.9%) 2.796 B/op [Average]
[info]   (min, avg, max) = (0.935, 1.607, 2.851), stdev = 0.726
[info]   CI (99.9%): [≈ 0, 4.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 59.76% complete, ETA 00:45:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123375.900 ops/s
[info] # Warmup Iteration   2: 171435.469 ops/s
[info] # Warmup Iteration   3: 167296.466 ops/s
[info] # Warmup Iteration   4: 166183.381 ops/s
[info] # Warmup Iteration   5: 171827.194 ops/s
[info] Iteration   1: 172084.715 ops/s
[info]                  ·gc.alloc.rate:               1100.717 MB/sec
[info]                  ·gc.alloc.rate.norm:          10064.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6129.173 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 171786.543 ops/s
[info]                  ·gc.alloc.rate:                   1098.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              10064.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12279.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.954 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 171495.510 ops/s
[info]                  ·gc.alloc.rate:                   1096.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              10064.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12312.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.573 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 171359.817 ops/s
[info]                  ·gc.alloc.rate:               1095.779 MB/sec
[info]                  ·gc.alloc.rate.norm:          10064.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6170.253 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 171310.917 ops/s
[info]                  ·gc.alloc.rate:                   1095.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              10064.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12349.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce":
[info]   171607.501 ±(99.9%) 1250.186 ops/s [Average]
[info]   (min, avg, max) = (171310.917, 171607.501, 172084.715), stdev = 324.669
[info]   CI (99.9%): [170357.315, 172857.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1097.441 ±(99.9%) 8.548 MB/sec [Average]
[info]   (min, avg, max) = (1095.427, 1097.441, 1100.717), stdev = 2.220
[info]   CI (99.9%): [1088.893, 1105.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10064.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10064.003, 10064.003, 10064.003), stdev = 0.001
[info]   CI (99.9%): [10064.002, 10064.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1073.710 ±(99.9%) 1415.272 MB/sec [Average]
[info]   (min, avg, max) = (670.358, 1073.710, 1344.188), stdev = 367.542
[info]   CI (99.9%): [≈ 0, 2488.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9848.228 ±(99.9%) 13001.268 B/op [Average]
[info]   (min, avg, max) = (6129.173, 9848.228, 12349.435), stdev = 3376.388
[info]   CI (99.9%): [≈ 0, 22849.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.382 ±(99.9%) 1.558 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.382, 0.954), stdev = 0.405
[info]   CI (99.9%): [≈ 0, 1.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.00% complete, ETA 00:45:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 392710.893 ops/s
[info] # Warmup Iteration   2: 538371.849 ops/s
[info] # Warmup Iteration   3: 540138.723 ops/s
[info] # Warmup Iteration   4: 541387.712 ops/s
[info] # Warmup Iteration   5: 540473.080 ops/s
[info] Iteration   1: 538936.762 ops/s
[info]                  ·gc.alloc.rate:                   531.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              1552.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1494.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 540568.289 ops/s
[info]                  ·gc.alloc.rate:      533.062 MB/sec
[info]                  ·gc.alloc.rate.norm: 1552.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 539995.550 ops/s
[info]                  ·gc.alloc.rate:                   532.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              1552.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1946.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.996 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 542525.696 ops/s
[info]                  ·gc.alloc.rate:                   534.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              1552.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1937.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 543032.934 ops/s
[info]                  ·gc.alloc.rate:                   535.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              1552.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1936.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala":
[info]   541011.846 ±(99.9%) 6645.042 ops/s [Average]
[info]   (min, avg, max) = (538936.762, 541011.846, 543032.934), stdev = 1725.696
[info]   CI (99.9%): [534366.804, 547656.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   533.512 ±(99.9%) 6.556 MB/sec [Average]
[info]   (min, avg, max) = (531.442, 533.512, 535.537), stdev = 1.703
[info]   CI (99.9%): [526.956, 540.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1552.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1552.001, 1552.001, 1552.001), stdev = 0.001
[info]   CI (99.9%): [1552.001, 1552.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   503.095 ±(99.9%) 1113.894 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 503.095, 668.208), stdev = 289.275
[info]   CI (99.9%): [≈ 0, 1616.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1462.850 ±(99.9%) 3235.568 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1462.850, 1946.388), stdev = 840.267
[info]   CI (99.9%): [≈ 0, 4698.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.438 ±(99.9%) 3.488 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.438, 2.057), stdev = 0.906
[info]   CI (99.9%): [≈ 0, 3.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.275 ±(99.9%) 10.164 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.275, 5.996), stdev = 2.640
[info]   CI (99.9%): [≈ 0, 11.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.24% complete, ETA 00:45:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1060399.129 ops/s
[info] # Warmup Iteration   2: 1144790.983 ops/s
[info] # Warmup Iteration   3: 1156374.115 ops/s
[info] # Warmup Iteration   4: 1143290.800 ops/s
[info] # Warmup Iteration   5: 1154117.152 ops/s
[info] Iteration   1: 1152693.708 ops/s
[info]                  ·gc.alloc.rate:                   855.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1835.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1142695.659 ops/s
[info]                  ·gc.alloc.rate:               848.046 MB/sec
[info]                  ·gc.alloc.rate.norm:          1168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 925.722 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1157001.377 ops/s
[info]                  ·gc.alloc.rate:               858.765 MB/sec
[info]                  ·gc.alloc.rate.norm:          1168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 914.317 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1149495.571 ops/s
[info]                  ·gc.alloc.rate:               853.037 MB/sec
[info]                  ·gc.alloc.rate.norm:          1168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 920.303 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1151924.124 ops/s
[info]                  ·gc.alloc.rate:                   854.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1838.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala":
[info]   1150762.088 ±(99.9%) 20255.407 ops/s [Average]
[info]   (min, avg, max) = (1142695.659, 1150762.088, 1157001.377), stdev = 5260.265
[info]   CI (99.9%): [1130506.681, 1171017.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   854.034 ±(99.9%) 15.156 MB/sec [Average]
[info]   (min, avg, max) = (848.046, 854.034, 858.765), stdev = 3.936
[info]   CI (99.9%): [838.878, 869.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1168.000, 1168.000, 1168.000), stdev = 0.001
[info]   CI (99.9%): [1168.000, 1168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   941.351 ±(99.9%) 1419.304 MB/sec [Average]
[info]   (min, avg, max) = (672.134, 941.351, 1345.591), stdev = 368.589
[info]   CI (99.9%): [≈ 0, 2360.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1286.949 ±(99.9%) 1934.278 B/op [Average]
[info]   (min, avg, max) = (914.317, 1286.949, 1838.518), stdev = 502.326
[info]   CI (99.9%): [≈ 0, 3221.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.180 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.034, 0.085), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 60.47% complete, ETA 00:45:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1051973.855 ops/s
[info] # Warmup Iteration   2: 1131620.769 ops/s
[info] # Warmup Iteration   3: 1138236.310 ops/s
[info] # Warmup Iteration   4: 1137156.760 ops/s
[info] # Warmup Iteration   5: 1137509.307 ops/s
[info] Iteration   1: 1137133.068 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1137813.036 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1137287.541 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1137671.726 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1135704.718 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc":
[info]   1137122.018 ±(99.9%) 3230.840 ops/s [Average]
[info]   (min, avg, max) = (1135704.718, 1137122.018, 1137813.036), stdev = 839.039
[info]   CI (99.9%): [1133891.178, 1140352.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 60.71% complete, ETA 00:44:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 203825.525 ops/s
[info] # Warmup Iteration   2: 331523.813 ops/s
[info] # Warmup Iteration   3: 333669.141 ops/s
[info] # Warmup Iteration   4: 334199.222 ops/s
[info] # Warmup Iteration   5: 318085.888 ops/s
[info] Iteration   1: 335540.911 ops/s
[info]                  ·gc.alloc.rate:                   915.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              4296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6255.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.391 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 329711.803 ops/s
[info]                  ·gc.alloc.rate:               900.384 MB/sec
[info]                  ·gc.alloc.rate.norm:          4296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3183.150 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 336325.153 ops/s
[info]                  ·gc.alloc.rate:                   918.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              4296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3122.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 326172.784 ops/s
[info]                  ·gc.alloc.rate:                   890.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              4296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6441.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.402 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 298677.564 ops/s
[info]                  ·gc.alloc.rate:               815.261 MB/sec
[info]                  ·gc.alloc.rate.norm:          4296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3518.947 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson":
[info]   325285.643 ±(99.9%) 59511.109 ops/s [Average]
[info]   (min, avg, max) = (298677.564, 325285.643, 336325.153), stdev = 15454.846
[info]   CI (99.9%): [265774.534, 384796.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   887.998 ±(99.9%) 162.628 MB/sec [Average]
[info]   (min, avg, max) = (815.261, 887.998, 918.106), stdev = 42.234
[info]   CI (99.9%): [725.370, 1050.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4296.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4296.001, 4296.001, 4296.001), stdev = 0.001
[info]   CI (99.9%): [4296.001, 4296.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   934.172 ±(99.9%) 1406.677 MB/sec [Average]
[info]   (min, avg, max) = (667.146, 934.172, 1335.011), stdev = 365.310
[info]   CI (99.9%): [≈ 0, 2340.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4504.271 ±(99.9%) 6514.074 B/op [Average]
[info]   (min, avg, max) = (3122.052, 4504.271, 6441.639), stdev = 1691.684
[info]   CI (99.9%): [≈ 0, 11018.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.178 ±(99.9%) 0.782 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.178, 0.402), stdev = 0.203
[info]   CI (99.9%): [≈ 0, 0.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 60.94% complete, ETA 00:44:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 482.721 ops/s
[info] # Warmup Iteration   2: 691.819 ops/s
[info] # Warmup Iteration   3: 693.955 ops/s
[info] # Warmup Iteration   4: 647.608 ops/s
[info] # Warmup Iteration   5: 698.692 ops/s
[info] Iteration   1: 694.125 ops/s
[info]                  ·gc.alloc.rate:                   1448.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              3283192.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3017484.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.148 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 697.180 ops/s
[info]                  ·gc.alloc.rate:                   1454.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              3283192.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3006769.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93.891 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 689.130 ops/s
[info]                  ·gc.alloc.rate:                   1438.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              3283193.449 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4568903.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.490 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 686.666 ops/s
[info]                  ·gc.alloc.rate:                   1432.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              3283194.934 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3066359.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.697 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 687.458 ops/s
[info]                  ·gc.alloc.rate:               1434.939 MB/sec
[info]                  ·gc.alloc.rate.norm:          3283192.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3067999.256 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce":
[info]   690.912 ±(99.9%) 17.513 ops/s [Average]
[info]   (min, avg, max) = (686.666, 690.912, 697.180), stdev = 4.548
[info]   CI (99.9%): [673.398, 708.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1441.830 ±(99.9%) 36.509 MB/sec [Average]
[info]   (min, avg, max) = (1432.650, 1441.830, 1454.832), stdev = 9.481
[info]   CI (99.9%): [1405.320, 1478.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3283193.285 ±(99.9%) 3.785 B/op [Average]
[info]   (min, avg, max) = (3283192.619, 3283193.285, 3283194.934), stdev = 0.983
[info]   CI (99.9%): [3283189.500, 3283197.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1468.790 ±(99.9%) 1146.487 MB/sec [Average]
[info]   (min, avg, max) = (1331.332, 1468.790, 2001.355), stdev = 297.739
[info]   CI (99.9%): [322.303, 2615.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3345503.415 ±(99.9%) 2635635.470 B/op [Average]
[info]   (min, avg, max) = (3006769.146, 3345503.415, 4568903.977), stdev = 684466.162
[info]   CI (99.9%): [709867.945, 5981138.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   47.245 ±(99.9%) 127.831 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 47.245, 93.891), stdev = 33.197
[info]   CI (99.9%): [≈ 0, 175.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.18% complete, ETA 00:44:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 348.696 ops/s
[info] # Warmup Iteration   2: 685.101 ops/s
[info] # Warmup Iteration   3: 697.237 ops/s
[info] # Warmup Iteration   4: 681.928 ops/s
[info] # Warmup Iteration   5: 681.428 ops/s
[info] Iteration   1: 684.831 ops/s
[info]                  ·gc.alloc.rate:                   1419.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              3261272.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3046228.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.836 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 673.439 ops/s
[info]                  ·gc.alloc.rate:                   1396.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              3261272.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3099055.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97.234 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 694.268 ops/s
[info]                  ·gc.alloc.rate:                   1439.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              3261272.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3009941.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.148 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 696.532 ops/s
[info]                  ·gc.alloc.rate:               1443.847 MB/sec
[info]                  ·gc.alloc.rate.norm:          3261283.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1331.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3007321.986 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 703.023 ops/s
[info]                  ·gc.alloc.rate:               1457.343 MB/sec
[info]                  ·gc.alloc.rate.norm:          3261210.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1333.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2984866.909 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala":
[info]   690.418 ±(99.9%) 44.348 ops/s [Average]
[info]   (min, avg, max) = (673.439, 690.418, 703.023), stdev = 11.517
[info]   CI (99.9%): [646.070, 734.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1431.185 ±(99.9%) 91.501 MB/sec [Average]
[info]   (min, avg, max) = (1396.493, 1431.185, 1457.343), stdev = 23.762
[info]   CI (99.9%): [1339.685, 1522.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3261262.450 ±(99.9%) 112.873 B/op [Average]
[info]   (min, avg, max) = (3261210.693, 3261262.450, 3261283.535), stdev = 29.313
[info]   CI (99.9%): [3261149.577, 3261375.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1329.212 ±(99.9%) 13.033 MB/sec [Average]
[info]   (min, avg, max) = (1325.500, 1329.212, 1333.853), stdev = 3.385
[info]   CI (99.9%): [1316.179, 1342.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3029482.728 ±(99.9%) 172037.149 B/op [Average]
[info]   (min, avg, max) = (2984866.909, 3029482.728, 3099055.478), stdev = 44677.501
[info]   CI (99.9%): [2857445.579, 3201519.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   38.444 ±(99.9%) 156.131 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38.444, 97.234), stdev = 40.547
[info]   CI (99.9%): [≈ 0, 194.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.41% complete, ETA 00:43:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14506.147 ops/s
[info] # Warmup Iteration   2: 43268.887 ops/s
[info] # Warmup Iteration   3: 44197.162 ops/s
[info] # Warmup Iteration   4: 43916.707 ops/s
[info] # Warmup Iteration   5: 44595.889 ops/s
[info] Iteration   1: 44821.767 ops/s
[info]                  ·gc.alloc.rate:                   782.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              27488.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23496.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.572 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 125.440 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 44946.990 ops/s
[info]                  ·gc.alloc.rate:               785.022 MB/sec
[info]                  ·gc.alloc.rate.norm:          27488.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23431.019 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 44747.481 ops/s
[info]                  ·gc.alloc.rate:                   781.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              27488.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46954.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.732 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 45064.697 ops/s
[info]                  ·gc.alloc.rate:                   787.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              27488.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23310.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.908 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 43585.163 ops/s
[info]                  ·gc.alloc.rate:               761.582 MB/sec
[info]                  ·gc.alloc.rate.norm:          27488.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24102.431 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala":
[info]   44633.220 ±(99.9%) 2303.681 ops/s [Average]
[info]   (min, avg, max) = (43585.163, 44633.220, 45064.697), stdev = 598.259
[info]   CI (99.9%): [42329.538, 46936.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   779.737 ±(99.9%) 39.939 MB/sec [Average]
[info]   (min, avg, max) = (761.582, 779.737, 787.407), stdev = 10.372
[info]   CI (99.9%): [739.798, 819.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   27488.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (27488.010, 27488.010, 27488.010), stdev = 0.001
[info]   CI (99.9%): [27488.009, 27488.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   801.878 ±(99.9%) 1148.784 MB/sec [Average]
[info]   (min, avg, max) = (667.754, 801.878, 1335.555), stdev = 298.335
[info]   CI (99.9%): [≈ 0, 1950.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   28259.022 ±(99.9%) 40260.259 B/op [Average]
[info]   (min, avg, max) = (23310.995, 28259.022, 46954.312), stdev = 10455.461
[info]   CI (99.9%): [≈ 0, 68519.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.735 ±(99.9%) 6.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.735, 3.572), stdev = 1.586
[info]   CI (99.9%): [≈ 0, 6.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   25.816 ±(99.9%) 214.497 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 25.816, 125.440), stdev = 55.704
[info]   CI (99.9%): [≈ 0, 240.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 61.65% complete, ETA 00:43:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 385.508 ops/s
[info] # Warmup Iteration   2: 639.605 ops/s
[info] # Warmup Iteration   3: 652.365 ops/s
[info] # Warmup Iteration   4: 665.009 ops/s
[info] # Warmup Iteration   5: 667.811 ops/s
[info] Iteration   1: 669.042 ops/s
[info]                  ·gc.alloc.rate:                   1431.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              3366720.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3115992.263 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97.815 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 669.895 ops/s
[info]                  ·gc.alloc.rate:                   1433.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              3366721.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3119904.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97.815 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 667.218 ops/s
[info]                  ·gc.alloc.rate:               1427.757 MB/sec
[info]                  ·gc.alloc.rate.norm:          3366722.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1329.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3134739.928 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 664.886 ops/s
[info]                  ·gc.alloc.rate:                   1422.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              3366730.550 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3155188.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.275 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 684.182 ops/s
[info]                  ·gc.alloc.rate:                   1464.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              3366720.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4605315.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.673 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson":
[info]   671.045 ±(99.9%) 29.230 ops/s [Average]
[info]   (min, avg, max) = (664.886, 671.045, 684.182), stdev = 7.591
[info]   CI (99.9%): [641.814, 700.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1435.818 ±(99.9%) 62.969 MB/sec [Average]
[info]   (min, avg, max) = (1422.272, 1435.818, 1464.077), stdev = 16.353
[info]   CI (99.9%): [1372.850, 1498.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3366723.061 ±(99.9%) 16.310 B/op [Average]
[info]   (min, avg, max) = (3366720.631, 3366723.061, 3366730.550), stdev = 4.236
[info]   CI (99.9%): [3366706.751, 3366739.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1463.655 ±(99.9%) 1160.385 MB/sec [Average]
[info]   (min, avg, max) = (1325.338, 1463.655, 2002.701), stdev = 301.348
[info]   CI (99.9%): [303.270, 2624.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3426228.213 ±(99.9%) 2538764.741 B/op [Average]
[info]   (min, avg, max) = (3115992.263, 3426228.213, 4605315.177), stdev = 659309.141
[info]   CI (99.9%): [887463.472, 5964992.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   68.116 ±(99.9%) 166.940 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 68.116, 97.815), stdev = 43.354
[info]   CI (99.9%): [≈ 0, 235.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 61.88% complete, ETA 00:43:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7498.437 ops/s
[info] # Warmup Iteration   2: 13303.266 ops/s
[info] # Warmup Iteration   3: 12839.264 ops/s
[info] # Warmup Iteration   4: 13327.695 ops/s
[info] # Warmup Iteration   5: 13252.169 ops/s
[info] Iteration   1: 13444.705 ops/s
[info]                  ·gc.alloc.rate:                   1083.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              126770.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155488.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.747 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 13460.124 ops/s
[info]                  ·gc.alloc.rate:                   1084.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              126776.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155315.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.302 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 13478.844 ops/s
[info]                  ·gc.alloc.rate:               1085.813 MB/sec
[info]                  ·gc.alloc.rate.norm:          126776.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77626.203 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 12971.674 ops/s
[info]                  ·gc.alloc.rate:                   1044.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              126756.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     161440.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 13371.817 ops/s
[info]                  ·gc.alloc.rate:                   1076.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              126712.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78364.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.450 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce":
[info]   13345.433 ±(99.9%) 819.562 ops/s [Average]
[info]   (min, avg, max) = (12971.674, 13345.433, 13478.844), stdev = 212.838
[info]   CI (99.9%): [12525.870, 14164.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1074.963 ±(99.9%) 66.562 MB/sec [Average]
[info]   (min, avg, max) = (1044.700, 1074.963, 1085.813), stdev = 17.286
[info]   CI (99.9%): [1008.401, 1141.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   126758.112 ±(99.9%) 103.983 B/op [Average]
[info]   (min, avg, max) = (126712.032, 126758.112, 126776.032), stdev = 27.004
[info]   CI (99.9%): [126654.129, 126862.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1063.699 ±(99.9%) 1400.352 MB/sec [Average]
[info]   (min, avg, max) = (664.854, 1063.699, 1330.562), stdev = 363.667
[info]   CI (99.9%): [≈ 0, 2464.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   125647.285 ±(99.9%) 167774.541 B/op [Average]
[info]   (min, avg, max) = (77626.203, 125647.285, 161440.617), stdev = 43570.516
[info]   CI (99.9%): [≈ 0, 293421.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.910 ±(99.9%) 14.826 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.910, 9.747), stdev = 3.850
[info]   CI (99.9%): [≈ 0, 19.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.12% complete, ETA 00:43:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10194.066 ops/s
[info] # Warmup Iteration   2: 15457.620 ops/s
[info] # Warmup Iteration   3: 13786.342 ops/s
[info] # Warmup Iteration   4: 15099.303 ops/s
[info] # Warmup Iteration   5: 15447.491 ops/s
[info] Iteration   1: 15492.666 ops/s
[info]                  ·gc.alloc.rate:                   968.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              98400.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67333.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.115 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 15380.621 ops/s
[info]                  ·gc.alloc.rate:                   961.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              98400.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     135638.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.390 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15458.597 ops/s
[info]                  ·gc.alloc.rate:               966.558 MB/sec
[info]                  ·gc.alloc.rate.norm:          98400.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67477.242 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 15191.847 ops/s
[info]                  ·gc.alloc.rate:                   949.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              98400.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68697.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.313 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 15234.522 ops/s
[info]                  ·gc.alloc.rate:               952.702 MB/sec
[info]                  ·gc.alloc.rate.norm:          98400.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1327.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 137119.359 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala":
[info]   15351.651 ±(99.9%) 514.528 ops/s [Average]
[info]   (min, avg, max) = (15191.847, 15351.651, 15492.666), stdev = 133.621
[info]   CI (99.9%): [14837.123, 15866.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   959.879 ±(99.9%) 32.052 MB/sec [Average]
[info]   (min, avg, max) = (949.813, 959.879, 968.619), stdev = 8.324
[info]   CI (99.9%): [927.827, 991.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   98400.031 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (98400.028, 98400.031, 98400.038), stdev = 0.004
[info]   CI (99.9%): [98400.014, 98400.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   928.392 ±(99.9%) 1399.815 MB/sec [Average]
[info]   (min, avg, max) = (662.810, 928.392, 1327.580), stdev = 363.527
[info]   CI (99.9%): [≈ 0, 2328.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   95253.259 ±(99.9%) 144591.385 B/op [Average]
[info]   (min, avg, max) = (67333.535, 95253.259, 137119.359), stdev = 37549.924
[info]   CI (99.9%): [≈ 0, 239844.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.564 ±(99.9%) 10.728 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.564, 6.390), stdev = 2.786
[info]   CI (99.9%): [≈ 0, 13.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.35% complete, ETA 00:42:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 255337.081 ops/s
[info] # Warmup Iteration   2: 276731.217 ops/s
[info] # Warmup Iteration   3: 276933.345 ops/s
[info] # Warmup Iteration   4: 274262.363 ops/s
[info] # Warmup Iteration   5: 279321.468 ops/s
[info] Iteration   1: 279204.348 ops/s
[info]                  ·gc.alloc.rate:                   984.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              5552.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7525.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.235 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 279189.537 ops/s
[info]                  ·gc.alloc.rate:               984.876 MB/sec
[info]                  ·gc.alloc.rate.norm:          5552.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3762.725 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 278227.741 ops/s
[info]                  ·gc.alloc.rate:                   981.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              5552.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7551.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.707 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 279929.578 ops/s
[info]                  ·gc.alloc.rate:               987.659 MB/sec
[info]                  ·gc.alloc.rate.norm:          5552.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3752.887 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 276197.535 ops/s
[info]                  ·gc.alloc.rate:                   974.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              5552.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7610.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala":
[info]   278549.748 ±(99.9%) 5572.919 ops/s [Average]
[info]   (min, avg, max) = (276197.535, 278549.748, 279929.578), stdev = 1447.269
[info]   CI (99.9%): [272976.829, 284122.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   982.657 ±(99.9%) 19.810 MB/sec [Average]
[info]   (min, avg, max) = (974.329, 982.657, 987.659), stdev = 5.145
[info]   CI (99.9%): [962.847, 1002.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5552.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5552.002, 5552.002, 5552.002), stdev = 0.001
[info]   CI (99.9%): [5552.001, 5552.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1068.134 ±(99.9%) 1408.138 MB/sec [Average]
[info]   (min, avg, max) = (667.474, 1068.134, 1335.656), stdev = 365.689
[info]   CI (99.9%): [≈ 0, 2476.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6040.636 ±(99.9%) 8025.373 B/op [Average]
[info]   (min, avg, max) = (3752.887, 6040.636, 7610.948), stdev = 2084.164
[info]   CI (99.9%): [≈ 0, 14066.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.212 ±(99.9%) 1.129 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.212, 0.707), stdev = 0.293
[info]   CI (99.9%): [≈ 0, 1.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 62.59% complete, ETA 00:42:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 280912.382 ops/s
[info] # Warmup Iteration   2: 339239.535 ops/s
[info] # Warmup Iteration   3: 337335.735 ops/s
[info] # Warmup Iteration   4: 338281.280 ops/s
[info] # Warmup Iteration   5: 334997.825 ops/s
[info] Iteration   1: 339592.363 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 339578.309 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 338971.981 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 339562.646 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 339974.830 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   339536.026 ±(99.9%) 1383.510 ops/s [Average]
[info]   (min, avg, max) = (338971.981, 339536.026, 339974.830), stdev = 359.293
[info]   CI (99.9%): [338152.515, 340919.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 62.82% complete, ETA 00:42:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11109.571 ops/s
[info] # Warmup Iteration   2: 14958.901 ops/s
[info] # Warmup Iteration   3: 14950.103 ops/s
[info] # Warmup Iteration   4: 14775.220 ops/s
[info] # Warmup Iteration   5: 15106.278 ops/s
[info] Iteration   1: 15223.213 ops/s
[info]                  ·gc.alloc.rate:                   1028.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              106304.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137330.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.457 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 14910.768 ops/s
[info]                  ·gc.alloc.rate:               1007.199 MB/sec
[info]                  ·gc.alloc.rate.norm:          106304.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 70101.943 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 15070.776 ops/s
[info]                  ·gc.alloc.rate:                   1017.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              106297.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138715.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.696 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 15265.491 ops/s
[info]                  ·gc.alloc.rate:               1030.940 MB/sec
[info]                  ·gc.alloc.rate.norm:          106288.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 68471.985 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 14858.361 ops/s
[info]                  ·gc.alloc.rate:               1003.421 MB/sec
[info]                  ·gc.alloc.rate.norm:          106288.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1330.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 140906.148 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson":
[info]   15065.722 ±(99.9%) 698.830 ops/s [Average]
[info]   (min, avg, max) = (14858.361, 15065.722, 15265.491), stdev = 181.484
[info]   CI (99.9%): [14366.892, 15764.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1017.586 ±(99.9%) 47.379 MB/sec [Average]
[info]   (min, avg, max) = (1003.421, 1017.586, 1030.940), stdev = 12.304
[info]   CI (99.9%): [970.207, 1064.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   106296.263 ±(99.9%) 30.871 B/op [Average]
[info]   (min, avg, max) = (106288.011, 106296.263, 106304.029), stdev = 8.017
[info]   CI (99.9%): [106265.391, 106327.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1063.112 ±(99.9%) 1402.343 MB/sec [Average]
[info]   (min, avg, max) = (664.144, 1063.112, 1330.237), stdev = 364.184
[info]   CI (99.9%): [≈ 0, 2465.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   111105.288 ±(99.9%) 147095.971 B/op [Average]
[info]   (min, avg, max) = (68471.985, 111105.288, 140906.148), stdev = 38200.357
[info]   CI (99.9%): [≈ 0, 258201.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.031 ±(99.9%) 16.267 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.031, 8.696), stdev = 4.225
[info]   CI (99.9%): [≈ 0, 19.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.06% complete, ETA 00:42:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1016032.841 ops/s
[info] # Warmup Iteration   2: 1087678.836 ops/s
[info] # Warmup Iteration   3: 1089046.410 ops/s
[info] # Warmup Iteration   4: 1087893.633 ops/s
[info] # Warmup Iteration   5: 1088287.432 ops/s
[info] Iteration   1: 1088293.195 ops/s
[info]                  ·gc.alloc.rate:      44.255 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1085686.075 ops/s
[info]                  ·gc.alloc.rate:      44.149 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1084200.627 ops/s
[info]                  ·gc.alloc.rate:      44.089 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1074684.600 ops/s
[info]                  ·gc.alloc.rate:      43.709 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1088473.340 ops/s
[info]                  ·gc.alloc.rate:      44.259 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala":
[info]   1084267.567 ±(99.9%) 21760.748 ops/s [Average]
[info]   (min, avg, max) = (1074684.600, 1084267.567, 1088473.340), stdev = 5651.197
[info]   CI (99.9%): [1062506.819, 1106028.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   44.092 ±(99.9%) 0.872 MB/sec [Average]
[info]   (min, avg, max) = (43.709, 44.092, 44.259), stdev = 0.226
[info]   CI (99.9%): [43.221, 44.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   64.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (64.000, 64.000, 64.000), stdev = 0.001
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 63.29% complete, ETA 00:41:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34789.883 ops/s
[info] # Warmup Iteration   2: 71765.371 ops/s
[info] # Warmup Iteration   3: 72693.526 ops/s
[info] # Warmup Iteration   4: 71934.527 ops/s
[info] # Warmup Iteration   5: 72982.993 ops/s
[info] Iteration   1: 70639.056 ops/s
[info]                  ·gc.alloc.rate:                   3094.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              68944.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3370.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75078.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.855 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 71645.285 ops/s
[info]                  ·gc.alloc.rate:                   3138.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              68944.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3380.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74260.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.287 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 72527.880 ops/s
[info]                  ·gc.alloc.rate:                   3177.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              68944.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58834.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.259 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 72199.132 ops/s
[info]                  ·gc.alloc.rate:                   3163.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              68944.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3394.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73982.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.908 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 71281.409 ops/s
[info]                  ·gc.alloc.rate:                   3122.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              68944.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3398.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75041.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.758 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson":
[info]   71658.552 ±(99.9%) 2874.953 ops/s [Average]
[info]   (min, avg, max) = (70639.056, 71658.552, 72527.880), stdev = 746.616
[info]   CI (99.9%): [68783.599, 74533.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3139.355 ±(99.9%) 125.654 MB/sec [Average]
[info]   (min, avg, max) = (3094.887, 3139.355, 3177.141), stdev = 32.632
[info]   CI (99.9%): [3013.701, 3265.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   68944.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (68944.006, 68944.006, 68944.007), stdev = 0.001
[info]   CI (99.9%): [68944.005, 68944.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3251.135 ±(99.9%) 1162.898 MB/sec [Average]
[info]   (min, avg, max) = (2711.282, 3251.135, 3398.923), stdev = 302.001
[info]   CI (99.9%): [2088.237, 4414.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   71439.529 ±(99.9%) 27195.256 B/op [Average]
[info]   (min, avg, max) = (58834.861, 71439.529, 75078.511), stdev = 7062.522
[info]   CI (99.9%): [44244.273, 98634.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.092 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.092, 0.125), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.013 ±(99.9%) 2.679 B/op [Average]
[info]   (min, avg, max) = (0.908, 2.013, 2.758), stdev = 0.696
[info]   CI (99.9%): [≈ 0, 4.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.53% complete, ETA 00:41:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1053451.013 ops/s
[info] # Warmup Iteration   2: 1563371.106 ops/s
[info] # Warmup Iteration   3: 1560601.068 ops/s
[info] # Warmup Iteration   4: 1582601.954 ops/s
[info] # Warmup Iteration   5: 1612771.542 ops/s
[info] Iteration   1: 1606212.742 ops/s
[info]                  ·gc.alloc.rate:                   898.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              880.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1308.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1606321.105 ops/s
[info]                  ·gc.alloc.rate:               898.172 MB/sec
[info]                  ·gc.alloc.rate.norm:          880.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 654.006 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1592417.757 ops/s
[info]                  ·gc.alloc.rate:                   890.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              880.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     660.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 1607713.311 ops/s
[info]                  ·gc.alloc.rate:                   898.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              880.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1308.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1608540.085 ops/s
[info]                  ·gc.alloc.rate:               899.346 MB/sec
[info]                  ·gc.alloc.rate.norm:          880.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 654.070 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala":
[info]   1604241.000 ±(99.9%) 25726.131 ops/s [Average]
[info]   (min, avg, max) = (1592417.757, 1604241.000, 1608540.085), stdev = 6680.995
[info]   CI (99.9%): [1578514.869, 1629967.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   897.123 ±(99.9%) 13.884 MB/sec [Average]
[info]   (min, avg, max) = (890.723, 897.123, 899.346), stdev = 3.606
[info]   CI (99.9%): [883.239, 911.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   880.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (880.000, 880.000, 880.000), stdev = 0.001
[info]   CI (99.9%): [880.000, 880.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   935.247 ±(99.9%) 1409.027 MB/sec [Average]
[info]   (min, avg, max) = (667.512, 935.247, 1336.315), stdev = 365.920
[info]   CI (99.9%): [≈ 0, 2344.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   916.949 ±(99.9%) 1375.723 B/op [Average]
[info]   (min, avg, max) = (654.006, 916.949, 1308.432), stdev = 357.271
[info]   CI (99.9%): [≈ 0, 2292.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.208 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.203 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.045, 0.102), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.76% complete, ETA 00:41:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1233139.163 ops/s
[info] # Warmup Iteration   2: 1341864.511 ops/s
[info] # Warmup Iteration   3: 1364963.140 ops/s
[info] # Warmup Iteration   4: 1359732.674 ops/s
[info] # Warmup Iteration   5: 1379899.774 ops/s
[info] Iteration   1: 1359215.175 ops/s
[info]                  ·gc.alloc.rate:               379.990 MB/sec
[info]                  ·gc.alloc.rate.norm:          440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 592.406 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1358429.276 ops/s
[info]                  ·gc.alloc.rate:               379.761 MB/sec
[info]                  ·gc.alloc.rate.norm:          440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 592.719 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1347259.859 ops/s
[info]                  ·gc.alloc.rate:                   376.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     597.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1291273.648 ops/s
[info]                  ·gc.alloc.rate:      361.132 MB/sec
[info]                  ·gc.alloc.rate.norm: 440.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1364178.574 ops/s
[info]                  ·gc.alloc.rate:                   381.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     775.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.741 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala":
[info]   1344071.307 ±(99.9%) 116120.218 ops/s [Average]
[info]   (min, avg, max) = (1291273.648, 1344071.307, 1364178.574), stdev = 30156.052
[info]   CI (99.9%): [1227951.089, 1460191.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   375.834 ±(99.9%) 32.302 MB/sec [Average]
[info]   (min, avg, max) = (361.132, 375.834, 381.459), stdev = 8.389
[info]   CI (99.9%): [343.532, 408.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   440.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (440.000, 440.000, 440.000), stdev = 0.001
[info]   CI (99.9%): [440.000, 440.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   441.530 ±(99.9%) 987.579 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 441.530, 672.610), stdev = 256.471
[info]   CI (99.9%): [≈ 0, 1429.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   511.725 ±(99.9%) 1142.401 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 511.725, 775.833), stdev = 296.678
[info]   CI (99.9%): [≈ 0, 1654.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.354 ±(99.9%) 2.985 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.354, 1.741), stdev = 0.775
[info]   CI (99.9%): [≈ 0, 3.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.409 ±(99.9%) 3.443 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.409, 2.008), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 64.00% complete, ETA 00:41:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1264098.945 ops/s
[info] # Warmup Iteration   2: 1415461.037 ops/s
[info] # Warmup Iteration   3: 1413419.439 ops/s
[info] # Warmup Iteration   4: 1413348.123 ops/s
[info] # Warmup Iteration   5: 1413296.175 ops/s
[info] Iteration   1: 1405890.967 ops/s
[info]                  ·gc.alloc.rate:      14.294 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1413234.154 ops/s
[info]                  ·gc.alloc.rate:      14.368 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1411201.510 ops/s
[info]                  ·gc.alloc.rate:      14.347 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1413069.753 ops/s
[info]                  ·gc.alloc.rate:      14.366 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1412832.219 ops/s
[info]                  ·gc.alloc.rate:      14.366 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   1411245.721 ±(99.9%) 11942.162 ops/s [Average]
[info]   (min, avg, max) = (1405890.967, 1411245.721, 1413234.154), stdev = 3101.341
[info]   CI (99.9%): [1399303.559, 1423187.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   14.348 ±(99.9%) 0.121 MB/sec [Average]
[info]   (min, avg, max) = (14.294, 14.348, 14.368), stdev = 0.031
[info]   CI (99.9%): [14.228, 14.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.000, 16.000, 16.000), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 64.24% complete, ETA 00:40:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21339.929 ops/s
[info] # Warmup Iteration   2: 36772.748 ops/s
[info] # Warmup Iteration   3: 38329.747 ops/s
[info] # Warmup Iteration   4: 38100.233 ops/s
[info] # Warmup Iteration   5: 38091.494 ops/s
[info] Iteration   1: 38046.913 ops/s
[info]                  ·gc.alloc.rate:                   1652.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              68360.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82912.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.861 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 37953.247 ops/s
[info]                  ·gc.alloc.rate:               1648.579 MB/sec
[info]                  ·gc.alloc.rate.norm:          68360.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55508.785 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 38068.698 ops/s
[info]                  ·gc.alloc.rate:                   1653.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              68360.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83186.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.443 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 38131.460 ops/s
[info]                  ·gc.alloc.rate:               1656.399 MB/sec
[info]                  ·gc.alloc.rate.norm:          68360.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55513.817 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 37759.526 ops/s
[info]                  ·gc.alloc.rate:                   1640.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              68360.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84229.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.735 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson":
[info]   37991.969 ±(99.9%) 557.656 ops/s [Average]
[info]   (min, avg, max) = (37759.526, 37991.969, 38131.460), stdev = 144.821
[info]   CI (99.9%): [37434.313, 38549.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1650.306 ±(99.9%) 23.857 MB/sec [Average]
[info]   (min, avg, max) = (1640.419, 1650.306, 1656.399), stdev = 6.195
[info]   CI (99.9%): [1626.449, 1674.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   68360.012 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (68360.011, 68360.012, 68360.012), stdev = 0.001
[info]   CI (99.9%): [68360.010, 68360.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1744.319 ±(99.9%) 1414.797 MB/sec [Average]
[info]   (min, avg, max) = (1338.657, 1744.319, 2021.244), stdev = 367.418
[info]   CI (99.9%): [329.522, 3159.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   72270.255 ±(99.9%) 58940.474 B/op [Average]
[info]   (min, avg, max) = (55508.785, 72270.255, 84229.830), stdev = 15306.654
[info]   CI (99.9%): [13329.780, 131210.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.208 ±(99.9%) 5.550 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.208, 3.443), stdev = 1.441
[info]   CI (99.9%): [≈ 0, 6.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 1.095
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce
[info] # Run progress: 64.47% complete, ETA 00:40:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 449515.178 ops/s
[info] # Warmup Iteration   2: 776173.899 ops/s
[info] # Warmup Iteration   3: 815656.171 ops/s
[info] # Warmup Iteration   4: 802877.661 ops/s
[info] # Warmup Iteration   5: 796451.890 ops/s
[info] Iteration   1: 796808.014 ops/s
[info]                  ·gc.alloc.rate:                   2596.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2701.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5334.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 807697.382 ops/s
[info]                  ·gc.alloc.rate:                   2631.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3953.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 813171.619 ops/s
[info]                  ·gc.alloc.rate:                   2649.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2709.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5244.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 809733.742 ops/s
[info]                  ·gc.alloc.rate:                   2638.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2714.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5274.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 817289.487 ops/s
[info]                  ·gc.alloc.rate:                   2663.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2717.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5232.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce":
[info]   808940.049 ±(99.9%) 29638.688 ops/s [Average]
[info]   (min, avg, max) = (796808.014, 808940.049, 817289.487), stdev = 7697.073
[info]   CI (99.9%): [779301.361, 838578.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate":
[info]   2635.979 ±(99.9%) 96.206 MB/sec [Average]
[info]   (min, avg, max) = (2596.699, 2635.979, 2663.289), stdev = 24.984
[info]   CI (99.9%): [2539.773, 2732.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   5128.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5128.001, 5128.001, 5128.001), stdev = 0.001
[info]   CI (99.9%): [5128.000, 5128.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2574.300 ±(99.9%) 1174.495 MB/sec [Average]
[info]   (min, avg, max) = (2028.788, 2574.300, 2717.470), stdev = 305.013
[info]   CI (99.9%): [1399.805, 3748.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5007.877 ±(99.9%) 2275.374 B/op [Average]
[info]   (min, avg, max) = (3953.170, 5007.877, 5334.129), stdev = 590.907
[info]   CI (99.9%): [2732.504, 7283.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.125), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.146 ±(99.9%) 0.236 B/op [Average]
[info]   (min, avg, max) = (0.081, 0.146, 0.243), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava
[info] # Run progress: 64.71% complete, ETA 00:40:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.859 ops/s
[info] # Warmup Iteration   2: 5106828.634 ops/s
[info] # Warmup Iteration   3: 5282910.611 ops/s
[info] # Warmup Iteration   4: 5262377.706 ops/s
[info] # Warmup Iteration   5: 5361997.093 ops/s
[info] Iteration   1: 5247116.675 ops/s
[info]                  ·gc.alloc.rate:               320.055 MB/sec
[info]                  ·gc.alloc.rate.norm:          96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 153.451 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 5361061.258 ops/s
[info]                  ·gc.alloc.rate:      327.016 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 5161168.393 ops/s
[info]                  ·gc.alloc.rate:               314.821 MB/sec
[info]                  ·gc.alloc.rate.norm:          96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 156.006 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 5144461.304 ops/s
[info]                  ·gc.alloc.rate:                   313.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     156.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5153918.863 ops/s
[info]                  ·gc.alloc.rate:      314.369 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava":
[info]   5213545.299 ±(99.9%) 354798.998 ops/s [Average]
[info]   (min, avg, max) = (5144461.304, 5213545.299, 5361061.258), stdev = 92140.173
[info]   CI (99.9%): [4858746.300, 5568344.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   318.011 ±(99.9%) 21.654 MB/sec [Average]
[info]   (min, avg, max) = (313.794, 318.011, 327.016), stdev = 5.623
[info]   CI (99.9%): [296.357, 339.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   96.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (96.000, 96.000, 96.000), stdev = 0.001
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   306.961 ±(99.9%) 1079.012 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.961, 511.611), stdev = 280.216
[info]   CI (99.9%): [≈ 0, 1385.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   93.195 ±(99.9%) 327.625 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 93.195, 156.519), stdev = 85.083
[info]   CI (99.9%): [≈ 0, 420.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.031 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.018), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.010 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala
[info] # Run progress: 64.94% complete, ETA 00:39:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 315895.001 ops/s
[info] # Warmup Iteration   2: 977775.546 ops/s
[info] # Warmup Iteration   3: 987985.964 ops/s
[info] # Warmup Iteration   4: 1006508.293 ops/s
[info] # Warmup Iteration   5: 1010559.314 ops/s
[info] Iteration   1: 997346.532 ops/s
[info]                  ·gc.alloc.rate:               1237.434 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1334.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2105.104 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 992499.174 ops/s
[info]                  ·gc.alloc.rate:                   1230.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2116.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 990699.292 ops/s
[info]                  ·gc.alloc.rate:                   1228.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2123.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 981966.308 ops/s
[info]                  ·gc.alloc.rate:               1217.921 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1071.918 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1008198.964 ops/s
[info]                  ·gc.alloc.rate:                   1250.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2091.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala":
[info]   994142.054 ±(99.9%) 37067.616 ops/s [Average]
[info]   (min, avg, max) = (981966.308, 994142.054, 1008198.964), stdev = 9626.342
[info]   CI (99.9%): [957074.438, 1031209.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1233.087 ±(99.9%) 46.013 MB/sec [Average]
[info]   (min, avg, max) = (1217.921, 1233.087, 1250.374), stdev = 11.949
[info]   CI (99.9%): [1187.074, 1279.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1952.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.000, 1952.000, 1952.000), stdev = 0.001
[info]   CI (99.9%): [1952.000, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1202.904 ±(99.9%) 1149.709 MB/sec [Average]
[info]   (min, avg, max) = (668.807, 1202.904, 1339.538), stdev = 298.576
[info]   CI (99.9%): [53.195, 2352.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1901.735 ±(99.9%) 1786.871 B/op [Average]
[info]   (min, avg, max) = (1071.918, 1901.735, 2123.476), stdev = 464.045
[info]   CI (99.9%): [114.864, 3688.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.066 ±(99.9%) 0.269 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.165), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala
[info] # Run progress: 65.18% complete, ETA 00:39:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7105341.516 ops/s
[info] # Warmup Iteration   2: 7813770.889 ops/s
[info] # Warmup Iteration   3: 7984194.412 ops/s
[info] # Warmup Iteration   4: 8026620.704 ops/s
[info] # Warmup Iteration   5: 7510113.739 ops/s
[info] Iteration   1: 8008778.405 ops/s
[info]                  ·gc.alloc.rate:               366.379 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 100.536 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 7989532.409 ops/s
[info]                  ·gc.alloc.rate:      365.528 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 8007060.635 ops/s
[info]                  ·gc.alloc.rate:               366.304 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 100.560 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 8001081.811 ops/s
[info]                  ·gc.alloc.rate:                   366.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 8027972.329 ops/s
[info]                  ·gc.alloc.rate:      367.227 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala":
[info]   8006885.118 ±(99.9%) 53877.398 ops/s [Average]
[info]   (min, avg, max) = (7989532.409, 8006885.118, 8027972.329), stdev = 13991.789
[info]   CI (99.9%): [7953007.719, 8060762.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   366.293 ±(99.9%) 2.386 MB/sec [Average]
[info]   (min, avg, max) = (365.528, 366.293, 367.227), stdev = 0.620
[info]   CI (99.9%): [363.907, 368.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.957 ±(99.9%) 1078.996 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.957, 511.604), stdev = 280.212
[info]   CI (99.9%): [≈ 0, 1385.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   60.346 ±(99.9%) 212.125 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 60.346, 100.634), stdev = 55.088
[info]   CI (99.9%): [≈ 0, 272.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.001 ±(99.9%) 0.010 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson
[info] # Run progress: 65.41% complete, ETA 00:39:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35542.693 ops/s
[info] # Warmup Iteration   2: 296759.421 ops/s
[info] # Warmup Iteration   3: 291054.927 ops/s
[info] # Warmup Iteration   4: 304629.296 ops/s
[info] # Warmup Iteration   5: 305640.575 ops/s
[info] Iteration   1: 298580.601 ops/s
[info]                  ·gc.alloc.rate:                   1657.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10551.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.219 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 297352.784 ops/s
[info]                  ·gc.alloc.rate:                   1650.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7076.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.331 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 299970.102 ops/s
[info]                  ·gc.alloc.rate:                   1665.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2011.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10548.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.328 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 302112.530 ops/s
[info]                  ·gc.alloc.rate:                   1676.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6994.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 300737.017 ops/s
[info]                  ·gc.alloc.rate:                   1669.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10561.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.327 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson":
[info]   299750.607 ±(99.9%) 7131.060 ops/s [Average]
[info]   (min, avg, max) = (297352.784, 299750.607, 302112.530), stdev = 1851.914
[info]   CI (99.9%): [292619.547, 306881.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1663.982 ±(99.9%) 39.438 MB/sec [Average]
[info]   (min, avg, max) = (1650.603, 1663.982, 1676.879), stdev = 10.242
[info]   CI (99.9%): [1624.543, 1703.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   8736.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8736.001, 8736.001, 8736.002), stdev = 0.001
[info]   CI (99.9%): [8736.001, 8736.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1742.207 ±(99.9%) 1414.544 MB/sec [Average]
[info]   (min, avg, max) = (1337.096, 1742.207, 2017.999), stdev = 367.353
[info]   CI (99.9%): [327.663, 3156.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9146.613 ±(99.9%) 7421.306 B/op [Average]
[info]   (min, avg, max) = (6994.509, 9146.613, 10561.516), stdev = 1927.290
[info]   CI (99.9%): [1725.307, 16567.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.010, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.284 ±(99.9%) 0.232 B/op [Average]
[info]   (min, avg, max) = (0.217, 0.284, 0.331), stdev = 0.060
[info]   CI (99.9%): [0.052, 0.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce
[info] # Run progress: 65.65% complete, ETA 00:39:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2275.986 ops/s
[info] # Warmup Iteration   2: 3605.015 ops/s
[info] # Warmup Iteration   3: 3605.512 ops/s
[info] # Warmup Iteration   4: 3672.062 ops/s
[info] # Warmup Iteration   5: 3704.174 ops/s
[info] Iteration   1: 3701.977 ops/s
[info]                  ·gc.alloc.rate:                   1836.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              780640.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     569453.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.849 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3706.474 ops/s
[info]                  ·gc.alloc.rate:                   1838.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              780640.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     855007.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.186 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3651.341 ops/s
[info]                  ·gc.alloc.rate:                   1811.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              780640.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     869603.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.791 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3699.608 ops/s
[info]                  ·gc.alloc.rate:                   1835.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              780640.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     573161.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.415 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3710.466 ops/s
[info]                  ·gc.alloc.rate:                   1840.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              780640.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     858747.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.310 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce":
[info]   3693.973 ±(99.9%) 93.166 ops/s [Average]
[info]   (min, avg, max) = (3651.341, 3693.973, 3710.466), stdev = 24.195
[info]   CI (99.9%): [3600.807, 3787.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate":
[info]   1832.392 ±(99.9%) 46.134 MB/sec [Average]
[info]   (min, avg, max) = (1811.329, 1832.392, 1840.824), stdev = 11.981
[info]   CI (99.9%): [1786.258, 1878.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   780640.119 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (780640.116, 780640.119, 780640.125), stdev = 0.004
[info]   CI (99.9%): [780640.104, 780640.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1748.648 ±(99.9%) 1424.626 MB/sec [Average]
[info]   (min, avg, max) = (1339.462, 1748.648, 2025.009), stdev = 369.971
[info]   CI (99.9%): [324.023, 3173.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   745194.700 ±(99.9%) 611607.987 B/op [Average]
[info]   (min, avg, max) = (569453.507, 745194.700, 869603.338), stdev = 158832.652
[info]   CI (99.9%): [133586.713, 1356802.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.087, 0.146), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   37.310 ±(99.9%) 74.919 B/op [Average]
[info]   (min, avg, max) = (8.849, 37.310, 62.791), stdev = 19.456
[info]   CI (99.9%): [≈ 0, 112.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala
[info] # Run progress: 65.88% complete, ETA 00:38:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2229.958 ops/s
[info] # Warmup Iteration   2: 4838.688 ops/s
[info] # Warmup Iteration   3: 4986.861 ops/s
[info] # Warmup Iteration   4: 4992.725 ops/s
[info] # Warmup Iteration   5: 4906.461 ops/s
[info] Iteration   1: 4998.480 ops/s
[info]                  ·gc.alloc.rate:                   2094.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              659176.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2000.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     629669.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.547 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4996.875 ops/s
[info]                  ·gc.alloc.rate:                   2093.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              659176.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2009.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     632649.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.225 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4897.665 ops/s
[info]                  ·gc.alloc.rate:               2051.438 MB/sec
[info]                  ·gc.alloc.rate.norm:          659176.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2013.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 647146.262 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 4873.305 ops/s
[info]                  ·gc.alloc.rate:                   2041.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              659176.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     651971.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.723 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4770.259 ops/s
[info]                  ·gc.alloc.rate:                   1998.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              659176.097 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1876.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     618721.144 B/op
[info]                  ·gc.churn.PS_Old_Gen:             0.302 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:        99.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.077 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala":
[info]   4907.317 ±(99.9%) 367.158 ops/s [Average]
[info]   (min, avg, max) = (4770.259, 4907.317, 4998.480), stdev = 95.350
[info]   CI (99.9%): [4540.159, 5274.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2055.847 ±(99.9%) 154.038 MB/sec [Average]
[info]   (min, avg, max) = (1998.684, 2055.847, 2094.421), stdev = 40.003
[info]   CI (99.9%): [1901.809, 2209.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   659176.091 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (659176.086, 659176.091, 659176.097), stdev = 0.004
[info]   CI (99.9%): [659176.074, 659176.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1983.765 ±(99.9%) 233.375 MB/sec [Average]
[info]   (min, avg, max) = (1876.021, 1983.765, 2018.943), stdev = 60.607
[info]   CI (99.9%): [1750.390, 2217.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   636031.523 ±(99.9%) 51990.449 B/op [Average]
[info]   (min, avg, max) = (618721.144, 636031.523, 651971.598), stdev = 13501.755
[info]   CI (99.9%): [584041.073, 688021.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.060 ±(99.9%) 0.520 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.060, 0.302), stdev = 0.135
[info]   CI (99.9%): [≈ 0, 0.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   19.915 ±(99.9%) 171.471 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 19.915, 99.573), stdev = 44.531
[info]   CI (99.9%): [≈ 0, 191.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.231 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.146), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   17.514 ±(99.9%) 75.884 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17.514, 48.077), stdev = 19.707
[info]   CI (99.9%): [≈ 0, 93.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 14.000), stdev = 4.827
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala
[info] # Run progress: 66.12% complete, ETA 00:38:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39237.265 ops/s
[info] # Warmup Iteration   2: 42630.242 ops/s
[info] # Warmup Iteration   3: 42978.333 ops/s
[info] # Warmup Iteration   4: 42826.229 ops/s
[info] # Warmup Iteration   5: 43072.994 ops/s
[info] Iteration   1: 43122.663 ops/s
[info]                  ·gc.alloc.rate:                   717.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              26184.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24579.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.622 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.190 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 43190.544 ops/s
[info]                  ·gc.alloc.rate:                   718.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              26184.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24541.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.759 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 43114.503 ops/s
[info]                  ·gc.alloc.rate:               717.267 MB/sec
[info]                  ·gc.alloc.rate.norm:          26184.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24560.232 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 43100.217 ops/s
[info]                  ·gc.alloc.rate:                   717.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              26184.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49148.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.520 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 43151.748 ops/s
[info]                  ·gc.alloc.rate:               718.074 MB/sec
[info]                  ·gc.alloc.rate.norm:          26184.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24550.755 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala":
[info]   43135.935 ±(99.9%) 138.080 ops/s [Average]
[info]   (min, avg, max) = (43100.217, 43135.935, 43190.544), stdev = 35.859
[info]   CI (99.9%): [42997.855, 43274.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   717.697 ±(99.9%) 2.427 MB/sec [Average]
[info]   (min, avg, max) = (717.057, 717.697, 718.596), stdev = 0.630
[info]   CI (99.9%): [715.270, 720.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26184.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (26184.010, 26184.010, 26184.010), stdev = 0.001
[info]   CI (99.9%): [26184.010, 26184.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   807.814 ±(99.9%) 1158.377 MB/sec [Average]
[info]   (min, avg, max) = (672.786, 807.814, 1345.949), stdev = 300.827
[info]   CI (99.9%): [≈ 0, 1966.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   29476.170 ±(99.9%) 42346.380 B/op [Average]
[info]   (min, avg, max) = (24541.295, 29476.170, 49148.579), stdev = 10997.220
[info]   CI (99.9%): [≈ 0, 71822.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.337 ±(99.9%) 2.767 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.337, 1.622), stdev = 0.719
[info]   CI (99.9%): [≈ 0, 3.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12.294 ±(99.9%) 100.976 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.294, 59.190), stdev = 26.223
[info]   CI (99.9%): [≈ 0, 113.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce
[info] # Run progress: 66.35% complete, ETA 00:38:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2649.816 ops/s
[info] # Warmup Iteration   2: 4100.598 ops/s
[info] # Warmup Iteration   3: 4142.793 ops/s
[info] # Warmup Iteration   4: 4160.074 ops/s
[info] # Warmup Iteration   5: 4164.921 ops/s
[info] Iteration   1: 4189.430 ops/s
[info]                  ·gc.alloc.rate:                   893.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              335456.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     502270.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.912 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4161.687 ops/s
[info]                  ·gc.alloc.rate:                   887.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              335456.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     252887.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.871 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4125.237 ops/s
[info]                  ·gc.alloc.rate:                   879.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              335456.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255282.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.942 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4147.176 ops/s
[info]                  ·gc.alloc.rate:                   884.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              335456.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     508109.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.799 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3836.397 ops/s
[info]                  ·gc.alloc.rate:               817.696 MB/sec
[info]                  ·gc.alloc.rate.norm:          335456.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 274783.208 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce":
[info]   4091.985 ±(99.9%) 557.449 ops/s [Average]
[info]   (min, avg, max) = (3836.397, 4091.985, 4189.430), stdev = 144.768
[info]   CI (99.9%): [3534.536, 4649.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate":
[info]   872.299 ±(99.9%) 119.174 MB/sec [Average]
[info]   (min, avg, max) = (817.696, 872.299, 893.379), stdev = 30.949
[info]   CI (99.9%): [753.125, 991.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   335456.107 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (335456.103, 335456.107, 335456.113), stdev = 0.004
[info]   CI (99.9%): [335456.090, 335456.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   936.876 ±(99.9%) 1411.255 MB/sec [Average]
[info]   (min, avg, max) = (668.731, 936.876, 1339.073), stdev = 366.498
[info]   CI (99.9%): [≈ 0, 2348.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   358666.585 ±(99.9%) 516148.819 B/op [Average]
[info]   (min, avg, max) = (252887.414, 358666.585, 508109.392), stdev = 134042.209
[info]   CI (99.9%): [≈ 0, 874815.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   15.705 ±(99.9%) 70.535 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.705, 46.912), stdev = 18.318
[info]   CI (99.9%): [≈ 0, 86.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala
[info] # Run progress: 66.59% complete, ETA 00:38:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2423.604 ops/s
[info] # Warmup Iteration   2: 4557.693 ops/s
[info] # Warmup Iteration   3: 4739.546 ops/s
[info] # Warmup Iteration   4: 4730.961 ops/s
[info] # Warmup Iteration   5: 4730.567 ops/s
[info] Iteration   1: 4747.863 ops/s
[info]                  ·gc.alloc.rate:                   528.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              175269.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     169573.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      ≈ 10⁻⁵ MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4752.281 ops/s
[info]                  ·gc.alloc.rate:               529.491 MB/sec
[info]                  ·gc.alloc.rate.norm:          175268.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 169431.174 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 4760.880 ops/s
[info]                  ·gc.alloc.rate:                   530.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              175269.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219535.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.769 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 915.276 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4772.118 ops/s
[info]                  ·gc.alloc.rate:                   531.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              175268.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218984.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.864 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4768.225 ops/s
[info]                  ·gc.alloc.rate:                   531.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              175270.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219167.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.870 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala":
[info]   4760.273 ±(99.9%) 39.541 ops/s [Average]
[info]   (min, avg, max) = (4747.863, 4760.273, 4772.118), stdev = 10.269
[info]   CI (99.9%): [4720.732, 4799.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   530.190 ±(99.9%) 4.269 MB/sec [Average]
[info]   (min, avg, max) = (528.741, 530.190, 531.463), stdev = 1.109
[info]   CI (99.9%): [525.921, 534.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   175269.488 ±(99.9%) 2.591 B/op [Average]
[info]   (min, avg, max) = (175268.659, 175269.488, 175270.328), stdev = 0.673
[info]   CI (99.9%): [175266.897, 175272.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   603.121 ±(99.9%) 321.333 MB/sec [Average]
[info]   (min, avg, max) = (511.558, 603.121, 664.142), stdev = 83.449
[info]   CI (99.9%): [281.787, 924.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   199338.586 ±(99.9%) 104880.920 B/op [Average]
[info]   (min, avg, max) = (169431.174, 199338.586, 219535.966), stdev = 27237.242
[info]   CI (99.9%): [94457.666, 304219.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.562 ±(99.9%) 4.750 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.562, 2.769), stdev = 1.234
[info]   CI (99.9%): [≈ 0, 5.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   185.803 ±(99.9%) 1570.301 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 185.803, 915.276), stdev = 407.802
[info]   CI (99.9%): [≈ 0, 1756.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 4.000), stdev = 1.304
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala
[info] # Run progress: 66.82% complete, ETA 00:37:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5559.881 ops/s
[info] # Warmup Iteration   2: 6276.261 ops/s
[info] # Warmup Iteration   3: 6100.506 ops/s
[info] # Warmup Iteration   4: 6275.638 ops/s
[info] # Warmup Iteration   5: 6270.236 ops/s
[info] Iteration   1: 6287.314 ops/s
[info]                  ·gc.alloc.rate:      202.732 MB/sec
[info]                  ·gc.alloc.rate.norm: 50744.069 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6275.555 ops/s
[info]                  ·gc.alloc.rate:      202.348 MB/sec
[info]                  ·gc.alloc.rate.norm: 50744.069 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6250.260 ops/s
[info]                  ·gc.alloc.rate:                   201.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              50744.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128807.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.994 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6254.343 ops/s
[info]                  ·gc.alloc.rate:      201.686 MB/sec
[info]                  ·gc.alloc.rate.norm: 50744.069 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6245.678 ops/s
[info]                  ·gc.alloc.rate:                   201.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              50744.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128910.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.137 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala":
[info]   6262.630 ±(99.9%) 69.029 ops/s [Average]
[info]   (min, avg, max) = (6245.678, 6262.630, 6287.314), stdev = 17.927
[info]   CI (99.9%): [6193.601, 6331.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   201.933 ±(99.9%) 2.239 MB/sec [Average]
[info]   (min, avg, max) = (201.371, 201.933, 202.732), stdev = 0.581
[info]   CI (99.9%): [199.694, 204.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   50744.166 ±(99.9%) 0.827 B/op [Average]
[info]   (min, avg, max) = (50744.069, 50744.166, 50744.551), stdev = 0.215
[info]   CI (99.9%): [50743.339, 50744.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   204.623 ±(99.9%) 1078.918 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.623, 511.560), stdev = 280.192
[info]   CI (99.9%): [≈ 0, 1283.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   51543.739 ±(99.9%) 271775.296 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 51543.739, 128910.896), stdev = 70579.181
[info]   CI (99.9%): [≈ 0, 323319.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.002 ±(99.9%) 0.014 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.008), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.626 ±(99.9%) 3.501 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.626, 1.994), stdev = 0.909
[info]   CI (99.9%): [≈ 0, 4.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 1.095
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 67.06% complete, ETA 00:37:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5668.146 ops/s
[info] # Warmup Iteration   2: 6360.071 ops/s
[info] # Warmup Iteration   3: 6385.861 ops/s
[info] # Warmup Iteration   4: 6334.360 ops/s
[info] # Warmup Iteration   5: 6373.961 ops/s
[info] Iteration   1: 6387.058 ops/s
[info]                  ·gc.alloc.rate:      159.261 MB/sec
[info]                  ·gc.alloc.rate.norm: 39240.068 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6344.299 ops/s
[info]                  ·gc.alloc.rate:                   158.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              39240.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126899.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.935 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 727.754 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6373.083 ops/s
[info]                  ·gc.alloc.rate:      158.909 MB/sec
[info]                  ·gc.alloc.rate.norm: 39240.068 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6377.874 ops/s
[info]                  ·gc.alloc.rate:      159.018 MB/sec
[info]                  ·gc.alloc.rate.norm: 39240.068 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6346.412 ops/s
[info]                  ·gc.alloc.rate:                   158.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              39242.367 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126859.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.459 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc":
[info]   6365.745 ±(99.9%) 74.291 ops/s [Average]
[info]   (min, avg, max) = (6344.299, 6365.745, 6387.058), stdev = 19.293
[info]   CI (99.9%): [6291.454, 6440.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   158.741 ±(99.9%) 1.766 MB/sec [Average]
[info]   (min, avg, max) = (158.250, 158.741, 159.261), stdev = 0.459
[info]   CI (99.9%): [156.975, 160.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   39240.531 ±(99.9%) 3.952 B/op [Average]
[info]   (min, avg, max) = (39240.068, 39240.531, 39242.367), stdev = 1.026
[info]   CI (99.9%): [39236.579, 39244.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   204.681 ±(99.9%) 1079.222 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.681, 511.771), stdev = 280.270
[info]   CI (99.9%): [≈ 0, 1283.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   50751.939 ±(99.9%) 267600.329 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 50751.939, 126899.837), stdev = 69494.956
[info]   CI (99.9%): [≈ 0, 318352.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.588 ±(99.9%) 5.052 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.588, 2.935), stdev = 1.312
[info]   CI (99.9%): [≈ 0, 5.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   145.843 ±(99.9%) 1252.611 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 145.843, 727.754), stdev = 325.299
[info]   CI (99.9%): [≈ 0, 1398.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 1.095
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce
[info] # Run progress: 67.29% complete, ETA 00:37:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5348.230 ops/s
[info] # Warmup Iteration   2: 7530.880 ops/s
[info] # Warmup Iteration   3: 7715.718 ops/s
[info] # Warmup Iteration   4: 7653.956 ops/s
[info] # Warmup Iteration   5: 7814.907 ops/s
[info] Iteration   1: 7505.078 ops/s
[info]                  ·gc.alloc.rate:                   1873.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              392752.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     281664.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.957 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 7654.668 ops/s
[info]                  ·gc.alloc.rate:                   1910.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              392752.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     414992.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.200 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7660.793 ops/s
[info]                  ·gc.alloc.rate:                   1911.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              392752.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     415489.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.816 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 7758.909 ops/s
[info]                  ·gc.alloc.rate:                   1936.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              392773.964 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     410999.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.137 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.840 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 7746.312 ops/s
[info]                  ·gc.alloc.rate:                   1934.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              392776.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     412433.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.740 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce":
[info]   7665.152 ±(99.9%) 390.466 ops/s [Average]
[info]   (min, avg, max) = (7505.078, 7665.152, 7758.909), stdev = 101.403
[info]   CI (99.9%): [7274.687, 8055.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1913.155 ±(99.9%) 97.602 MB/sec [Average]
[info]   (min, avg, max) = (1873.301, 1913.155, 1936.300), stdev = 25.347
[info]   CI (99.9%): [1815.554, 2010.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   392761.238 ±(99.9%) 48.494 B/op [Average]
[info]   (min, avg, max) = (392752.056, 392761.238, 392776.056), stdev = 12.594
[info]   CI (99.9%): [392712.744, 392809.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1888.285 ±(99.9%) 1172.933 MB/sec [Average]
[info]   (min, avg, max) = (1343.448, 1888.285, 2030.831), stdev = 304.607
[info]   CI (99.9%): [715.351, 3061.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   387115.864 ±(99.9%) 227103.345 B/op [Average]
[info]   (min, avg, max) = (281664.247, 387115.864, 415489.002), stdev = 58978.018
[info]   CI (99.9%): [160012.518, 614219.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.298 MB/sec [Average]
[info]   (min, avg, max) = (0.033, 0.087, 0.200), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   17.883 ±(99.9%) 60.957 B/op [Average]
[info]   (min, avg, max) = (6.740, 17.883, 41.062), stdev = 15.830
[info]   CI (99.9%): [≈ 0, 78.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava
[info] # Run progress: 67.53% complete, ETA 00:37:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 306.838 ops/s
[info] # Warmup Iteration   2: 11743.008 ops/s
[info] # Warmup Iteration   3: 11831.088 ops/s
[info] # Warmup Iteration   4: 11842.135 ops/s
[info] # Warmup Iteration   5: 11473.944 ops/s
[info] Iteration   1: 11373.776 ops/s
[info]                  ·gc.alloc.rate:      280.624 MB/sec
[info]                  ·gc.alloc.rate.norm: 38832.041 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 11810.118 ops/s
[info]                  ·gc.alloc.rate:               291.415 MB/sec
[info]                  ·gc.alloc.rate.norm:          38832.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 68171.199 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 11822.182 ops/s
[info]                  ·gc.alloc.rate:                   291.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              38832.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68102.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.771 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 11852.830 ops/s
[info]                  ·gc.alloc.rate:      292.442 MB/sec
[info]                  ·gc.alloc.rate.norm: 38832.036 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 11822.080 ops/s
[info]                  ·gc.alloc.rate:               291.699 MB/sec
[info]                  ·gc.alloc.rate.norm:          38832.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 68102.018 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava":
[info]   11736.197 ±(99.9%) 782.509 ops/s [Average]
[info]   (min, avg, max) = (11373.776, 11736.197, 11852.830), stdev = 203.215
[info]   CI (99.9%): [10953.688, 12518.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   289.577 ±(99.9%) 19.329 MB/sec [Average]
[info]   (min, avg, max) = (280.624, 289.577, 292.442), stdev = 5.020
[info]   CI (99.9%): [270.249, 308.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   38832.041 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (38832.036, 38832.041, 38832.053), stdev = 0.007
[info]   CI (99.9%): [38832.014, 38832.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   306.948 ±(99.9%) 1078.967 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.948, 511.591), stdev = 280.204
[info]   CI (99.9%): [≈ 0, 1385.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   40875.047 ±(99.9%) 143681.591 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 40875.047, 68171.199), stdev = 37313.653
[info]   CI (99.9%): [≈ 0, 184556.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.554 ±(99.9%) 4.772 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.554, 2.771), stdev = 1.239
[info]   CI (99.9%): [≈ 0, 5.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala
[info] # Run progress: 67.76% complete, ETA 00:36:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7076.235 ops/s
[info] # Warmup Iteration   2: 13527.629 ops/s
[info] # Warmup Iteration   3: 13895.218 ops/s
[info] # Warmup Iteration   4: 13984.346 ops/s
[info] # Warmup Iteration   5: 13973.439 ops/s
[info] Iteration   1: 13533.463 ops/s
[info]                  ·gc.alloc.rate:               488.811 MB/sec
[info]                  ·gc.alloc.rate.norm:          56848.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59493.674 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 12462.413 ops/s
[info]                  ·gc.alloc.rate:               450.379 MB/sec
[info]                  ·gc.alloc.rate.norm:          56848.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 64605.405 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 13318.884 ops/s
[info]                  ·gc.alloc.rate:                   481.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              56848.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78479.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.686 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 317.369 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 13986.448 ops/s
[info]                  ·gc.alloc.rate:      505.456 MB/sec
[info]                  ·gc.alloc.rate.norm: 56848.031 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 14007.595 ops/s
[info]                  ·gc.alloc.rate:                   506.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              56848.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74625.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.678 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala":
[info]   13461.761 ±(99.9%) 2433.444 ops/s [Average]
[info]   (min, avg, max) = (12462.413, 13461.761, 14007.595), stdev = 631.958
[info]   CI (99.9%): [11028.317, 15895.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   486.377 ±(99.9%) 87.914 MB/sec [Average]
[info]   (min, avg, max) = (450.379, 486.377, 506.156), stdev = 22.831
[info]   CI (99.9%): [398.463, 574.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   56848.035 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (56848.031, 56848.035, 56848.044), stdev = 0.006
[info]   CI (99.9%): [56848.012, 56848.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   470.396 ±(99.9%) 1054.323 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 470.396, 664.441), stdev = 273.804
[info]   CI (99.9%): [≈ 0, 1524.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   55440.912 ±(99.9%) 122873.465 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 55440.912, 78479.864), stdev = 31909.849
[info]   CI (99.9%): [≈ 0, 178314.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.545 ±(99.9%) 4.608 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.545, 2.686), stdev = 1.197
[info]   CI (99.9%): [≈ 0, 5.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   64.409 ±(99.9%) 544.570 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 64.409, 317.369), stdev = 141.423
[info]   CI (99.9%): [≈ 0, 608.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala
[info] # Run progress: 68.00% complete, ETA 00:36:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21064.986 ops/s
[info] # Warmup Iteration   2: 23738.457 ops/s
[info] # Warmup Iteration   3: 23938.486 ops/s
[info] # Warmup Iteration   4: 23953.878 ops/s
[info] # Warmup Iteration   5: 23891.627 ops/s
[info] Iteration   1: 23945.218 ops/s
[info]                  ·gc.alloc.rate:                   487.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              32048.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33625.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.718 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 23984.171 ops/s
[info]                  ·gc.alloc.rate:               488.516 MB/sec
[info]                  ·gc.alloc.rate.norm:          32048.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33571.218 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 23539.387 ops/s
[info]                  ·gc.alloc.rate:                   479.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              32048.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45006.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.716 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 114.719 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 24088.524 ops/s
[info]                  ·gc.alloc.rate:      490.611 MB/sec
[info]                  ·gc.alloc.rate.norm: 32048.018 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 23978.459 ops/s
[info]                  ·gc.alloc.rate:               488.266 MB/sec
[info]                  ·gc.alloc.rate.norm:          32048.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44180.713 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala":
[info]   23907.152 ±(99.9%) 818.233 ops/s [Average]
[info]   (min, avg, max) = (23539.387, 23907.152, 24088.524), stdev = 212.493
[info]   CI (99.9%): [23088.918, 24725.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   486.864 ±(99.9%) 16.752 MB/sec [Average]
[info]   (min, avg, max) = (479.350, 486.864, 490.611), stdev = 4.350
[info]   CI (99.9%): [470.112, 503.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   32048.018 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (32048.018, 32048.018, 32048.020), stdev = 0.001
[info]   CI (99.9%): [32048.015, 32048.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.921 ±(99.9%) 1066.475 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.921, 673.171), stdev = 276.960
[info]   CI (99.9%): [≈ 0, 1540.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   31276.847 ±(99.9%) 70584.365 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 31276.847, 45006.416), stdev = 18330.535
[info]   CI (99.9%): [≈ 0, 101861.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.354 ±(99.9%) 2.932 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.354, 1.716), stdev = 0.761
[info]   CI (99.9%): [≈ 0, 3.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   23.687 ±(99.9%) 196.051 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 23.687, 114.719), stdev = 50.914
[info]   CI (99.9%): [≈ 0, 219.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson
[info] # Run progress: 68.24% complete, ETA 00:36:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 976.312 ops/s
[info] # Warmup Iteration   2: 2333.144 ops/s
[info] # Warmup Iteration   3: 2382.487 ops/s
[info] # Warmup Iteration   4: 2388.100 ops/s
[info] # Warmup Iteration   5: 2402.147 ops/s
[info] Iteration   1: 2406.583 ops/s
[info]                  ·gc.alloc.rate:               1506.534 MB/sec
[info]                  ·gc.alloc.rate.norm:          985216.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1335.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 873450.303 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 2413.181 ops/s
[info]                  ·gc.alloc.rate:                   1510.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              985216.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     872655.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.574 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2413.586 ops/s
[info]                  ·gc.alloc.rate:                   1511.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              985216.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1311914.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.569 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2450.293 ops/s
[info]                  ·gc.alloc.rate:               1534.272 MB/sec
[info]                  ·gc.alloc.rate.norm:          985216.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 863759.667 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 2452.119 ops/s
[info]                  ·gc.alloc.rate:               1535.024 MB/sec
[info]                  ·gc.alloc.rate.norm:          985216.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 864551.553 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson":
[info]   2427.152 ±(99.9%) 85.264 ops/s [Average]
[info]   (min, avg, max) = (2406.583, 2427.152, 2452.119), stdev = 22.143
[info]   CI (99.9%): [2341.889, 2512.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1519.535 ±(99.9%) 53.582 MB/sec [Average]
[info]   (min, avg, max) = (1506.534, 1519.535, 1535.024), stdev = 13.915
[info]   CI (99.9%): [1465.953, 1573.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   985216.181 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (985216.176, 985216.181, 985216.192), stdev = 0.007
[info]   CI (99.9%): [985216.155, 985216.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1475.617 ±(99.9%) 1155.032 MB/sec [Average]
[info]   (min, avg, max) = (1335.628, 1475.617, 2012.132), stdev = 299.958
[info]   CI (99.9%): [320.585, 2630.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   957266.112 ±(99.9%) 763600.070 B/op [Average]
[info]   (min, avg, max) = (863759.667, 957266.112, 1311914.031), stdev = 198304.513
[info]   CI (99.9%): [193666.042, 1720866.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.429 ±(99.9%) 28.623 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.429, 13.574), stdev = 7.433
[info]   CI (99.9%): [≈ 0, 34.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 9.000), stdev = 3.130
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce
[info] # Run progress: 68.47% complete, ETA 00:35:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6007.643 ops/s
[info] # Warmup Iteration   2: 8837.646 ops/s
[info] # Warmup Iteration   3: 8980.546 ops/s
[info] # Warmup Iteration   4: 9007.195 ops/s
[info] # Warmup Iteration   5: 8982.345 ops/s
[info] Iteration   1: 8890.503 ops/s
[info]                  ·gc.alloc.rate:                   1979.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              350456.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     356265.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.685 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 8925.234 ops/s
[info]                  ·gc.alloc.rate:                   1987.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              350456.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     355848.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.102 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 8922.955 ops/s
[info]                  ·gc.alloc.rate:                   1987.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              350494.368 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     356515.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.671 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 9006.123 ops/s
[info]                  ·gc.alloc.rate:                   2005.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              350504.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354045.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.913 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 8906.693 ops/s
[info]                  ·gc.alloc.rate:               1983.452 MB/sec
[info]                  ·gc.alloc.rate.norm:          350504.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2028.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 358491.043 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce":
[info]   8930.302 ±(99.9%) 171.882 ops/s [Average]
[info]   (min, avg, max) = (8890.503, 8930.302, 9006.123), stdev = 44.637
[info]   CI (99.9%): [8758.420, 9102.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate":
[info]   1988.729 ±(99.9%) 38.790 MB/sec [Average]
[info]   (min, avg, max) = (1979.687, 1988.729, 2005.829), stdev = 10.074
[info]   CI (99.9%): [1949.939, 2027.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   350482.913 ±(99.9%) 95.644 B/op [Average]
[info]   (min, avg, max) = (350456.049, 350482.913, 350504.048), stdev = 24.839
[info]   CI (99.9%): [350387.268, 350578.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2021.330 ±(99.9%) 24.734 MB/sec [Average]
[info]   (min, avg, max) = (2012.506, 2021.330, 2028.649), stdev = 6.423
[info]   CI (99.9%): [1996.597, 2046.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   356233.428 ±(99.9%) 6122.317 B/op [Average]
[info]   (min, avg, max) = (354045.726, 356233.428, 358491.043), stdev = 1589.946
[info]   CI (99.9%): [350111.111, 362355.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.041 ±(99.9%) 0.158 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.102), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7.264 ±(99.9%) 27.780 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.264, 18.052), stdev = 7.214
[info]   CI (99.9%): [≈ 0, 35.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava
[info] # Run progress: 68.71% complete, ETA 00:35:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2488.008 ops/s
[info] # Warmup Iteration   2: 53878.699 ops/s
[info] # Warmup Iteration   3: 55941.483 ops/s
[info] # Warmup Iteration   4: 56375.839 ops/s
[info] # Warmup Iteration   5: 55447.613 ops/s
[info] Iteration   1: 54401.617 ops/s
[info]                  ·gc.alloc.rate:                   508.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              14712.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14800.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.564 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 55909.088 ops/s
[info]                  ·gc.alloc.rate:               522.751 MB/sec
[info]                  ·gc.alloc.rate.norm:          14712.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18667.979 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 56122.916 ops/s
[info]                  ·gc.alloc.rate:      524.654 MB/sec
[info]                  ·gc.alloc.rate.norm: 14712.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 55612.119 ops/s
[info]                  ·gc.alloc.rate:                   519.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              14712.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18768.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.510 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 55667.025 ops/s
[info]                  ·gc.alloc.rate:               520.355 MB/sec
[info]                  ·gc.alloc.rate.norm:          14712.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18787.128 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava":
[info]   55542.553 ±(99.9%) 2578.233 ops/s [Average]
[info]   (min, avg, max) = (54401.617, 55542.553, 56122.916), stdev = 669.559
[info]   CI (99.9%): [52964.320, 58120.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   519.242 ±(99.9%) 24.069 MB/sec [Average]
[info]   (min, avg, max) = (508.608, 519.242, 524.654), stdev = 6.251
[info]   CI (99.9%): [495.173, 543.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   14712.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (14712.008, 14712.008, 14712.009), stdev = 0.001
[info]   CI (99.9%): [14712.007, 14712.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   500.530 ±(99.9%) 1106.831 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 500.530, 664.490), stdev = 287.440
[info]   CI (99.9%): [≈ 0, 1607.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   14204.830 ±(99.9%) 31275.374 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14204.830, 18787.128), stdev = 8122.115
[info]   CI (99.9%): [≈ 0, 45480.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.014 ±(99.9%) 0.090 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.054), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.415 ±(99.9%) 2.615 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.415, 1.564), stdev = 0.679
[info]   CI (99.9%): [≈ 0, 3.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala
[info] # Run progress: 68.94% complete, ETA 00:35:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23702.671 ops/s
[info] # Warmup Iteration   2: 39989.862 ops/s
[info] # Warmup Iteration   3: 40781.944 ops/s
[info] # Warmup Iteration   4: 41477.296 ops/s
[info] # Warmup Iteration   5: 41575.801 ops/s
[info] Iteration   1: 41430.686 ops/s
[info]                  ·gc.alloc.rate:               616.841 MB/sec
[info]                  ·gc.alloc.rate.norm:          23431.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19434.007 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 41562.906 ops/s
[info]                  ·gc.alloc.rate:                   618.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              23431.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25161.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.607 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.708 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 40636.408 ops/s
[info]                  ·gc.alloc.rate:                   605.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              23431.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25735.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.225 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 40702.571 ops/s
[info]                  ·gc.alloc.rate:               606.087 MB/sec
[info]                  ·gc.alloc.rate.norm:          23431.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25706.327 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 41130.452 ops/s
[info]                  ·gc.alloc.rate:                   612.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              23431.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25438.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.593 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala":
[info]   41092.605 ±(99.9%) 1607.565 ops/s [Average]
[info]   (min, avg, max) = (40636.408, 41092.605, 41562.906), stdev = 417.480
[info]   CI (99.9%): [39485.040, 42700.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   611.825 ±(99.9%) 23.847 MB/sec [Average]
[info]   (min, avg, max) = (605.021, 611.825, 618.806), stdev = 6.193
[info]   CI (99.9%): [587.978, 635.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   23431.853 ±(99.9%) 0.271 B/op [Average]
[info]   (min, avg, max) = (23431.783, 23431.853, 23431.932), stdev = 0.070
[info]   CI (99.9%): [23431.582, 23432.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   634.062 ±(99.9%) 263.617 MB/sec [Average]
[info]   (min, avg, max) = (511.596, 634.062, 664.919), stdev = 68.461
[info]   CI (99.9%): [370.444, 897.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   24295.129 ±(99.9%) 10502.047 B/op [Average]
[info]   (min, avg, max) = (19434.007, 24295.129, 25735.171), stdev = 2727.348
[info]   CI (99.9%): [13793.082, 34797.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.546 ±(99.9%) 4.437 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.546, 2.607), stdev = 1.152
[info]   CI (99.9%): [≈ 0, 4.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   20.705 ±(99.9%) 167.985 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20.705, 98.708), stdev = 43.625
[info]   CI (99.9%): [≈ 0, 188.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala
[info] # Run progress: 69.18% complete, ETA 00:35:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73442.087 ops/s
[info] # Warmup Iteration   2: 82906.943 ops/s
[info] # Warmup Iteration   3: 83479.087 ops/s
[info] # Warmup Iteration   4: 80312.347 ops/s
[info] # Warmup Iteration   5: 82589.964 ops/s
[info] Iteration   1: 83825.266 ops/s
[info]                  ·gc.alloc.rate:                   630.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              11832.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12619.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.909 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.849 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 83898.560 ops/s
[info]                  ·gc.alloc.rate:      630.739 MB/sec
[info]                  ·gc.alloc.rate.norm: 11832.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 83641.005 ops/s
[info]                  ·gc.alloc.rate:                   629.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              11832.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12647.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 83607.718 ops/s
[info]                  ·gc.alloc.rate:                   628.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              11832.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12639.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 83701.345 ops/s
[info]                  ·gc.alloc.rate:               629.222 MB/sec
[info]                  ·gc.alloc.rate.norm:          11832.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12625.749 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala":
[info]   83734.779 ±(99.9%) 475.785 ops/s [Average]
[info]   (min, avg, max) = (83607.718, 83734.779, 83898.560), stdev = 123.560
[info]   CI (99.9%): [83258.994, 84210.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   629.549 ±(99.9%) 3.431 MB/sec [Average]
[info]   (min, avg, max) = (628.557, 629.549, 630.739), stdev = 0.891
[info]   CI (99.9%): [626.118, 632.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   11832.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11832.005, 11832.005, 11832.006), stdev = 0.001
[info]   CI (99.9%): [11832.005, 11832.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   537.484 ±(99.9%) 1156.977 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 537.484, 672.392), stdev = 300.463
[info]   CI (99.9%): [≈ 0, 1694.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10106.492 ±(99.9%) 21755.028 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10106.492, 12647.491), stdev = 5649.712
[info]   CI (99.9%): [≈ 0, 31861.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.390 ±(99.9%) 3.270 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.390, 1.909), stdev = 0.849
[info]   CI (99.9%): [≈ 0, 3.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.326 ±(99.9%) 61.401 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.326, 35.849), stdev = 15.946
[info]   CI (99.9%): [≈ 0, 68.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 69.41% complete, ETA 00:34:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 91958.863 ops/s
[info] # Warmup Iteration   2: 101912.424 ops/s
[info] # Warmup Iteration   3: 103869.480 ops/s
[info] # Warmup Iteration   4: 103427.728 ops/s
[info] # Warmup Iteration   5: 103837.501 ops/s
[info] Iteration   1: 103709.155 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 104136.471 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 102148.925 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 103354.276 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 103504.556 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   103370.677 ±(99.9%) 2863.412 ops/s [Average]
[info]   (min, avg, max) = (102148.925, 103370.677, 104136.471), stdev = 743.619
[info]   CI (99.9%): [100507.264, 106234.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
[info]   CI (99.9%): [0.004, 0.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson
[info] # Run progress: 69.65% complete, ETA 00:34:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2894.719 ops/s
[info] # Warmup Iteration   2: 5898.967 ops/s
[info] # Warmup Iteration   3: 6027.345 ops/s
[info] # Warmup Iteration   4: 6060.017 ops/s
[info] # Warmup Iteration   5: 6030.229 ops/s
[info] Iteration   1: 6048.920 ops/s
[info]                  ·gc.alloc.rate:                   1811.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              471168.319 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     520648.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.415 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6034.556 ops/s
[info]                  ·gc.alloc.rate:                   1807.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              471167.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     523332.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.286 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6052.484 ops/s
[info]                  ·gc.alloc.rate:               1812.057 MB/sec
[info]                  ·gc.alloc.rate.norm:          471168.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 348659.314 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 5888.511 ops/s
[info]                  ·gc.alloc.rate:                   1763.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              471168.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     538797.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 6059.820 ops/s
[info]                  ·gc.alloc.rate:                   1814.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              471168.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     524980.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson":
[info]   6016.858 ±(99.9%) 278.534 ops/s [Average]
[info]   (min, avg, max) = (5888.511, 6016.858, 6059.820), stdev = 72.334
[info]   CI (99.9%): [5738.324, 6295.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1801.815 ±(99.9%) 82.833 MB/sec [Average]
[info]   (min, avg, max) = (1763.583, 1801.815, 1814.224), stdev = 21.512
[info]   CI (99.9%): [1718.982, 1884.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   471167.992 ±(99.9%) 1.641 B/op [Average]
[info]   (min, avg, max) = (471167.251, 471167.992, 471168.319), stdev = 0.426
[info]   CI (99.9%): [471166.351, 471169.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1877.727 ±(99.9%) 1155.926 MB/sec [Average]
[info]   (min, avg, max) = (1340.902, 1877.727, 2021.426), stdev = 300.190
[info]   CI (99.9%): [721.801, 3033.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   491283.588 ±(99.9%) 308196.660 B/op [Average]
[info]   (min, avg, max) = (348659.314, 491283.588, 538797.159), stdev = 80037.694
[info]   CI (99.9%): [183086.928, 799480.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   11.972 ±(99.9%) 40.038 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.972, 27.032), stdev = 10.398
[info]   CI (99.9%): [≈ 0, 52.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce
[info] # Run progress: 69.88% complete, ETA 00:34:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3331132.808 ops/s
[info] # Warmup Iteration   2: 4842438.582 ops/s
[info] # Warmup Iteration   3: 4841310.764 ops/s
[info] # Warmup Iteration   4: 4890413.285 ops/s
[info] # Warmup Iteration   5: 4960260.239 ops/s
[info] Iteration   1: 4944255.122 ops/s
[info]                  ·gc.alloc.rate:                   3267.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              1040.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3384.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1077.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4931644.067 ops/s
[info]                  ·gc.alloc.rate:                   3258.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              1040.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3392.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1082.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4923965.042 ops/s
[info]                  ·gc.alloc.rate:                   3253.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              1040.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3396.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1085.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4920401.302 ops/s
[info]                  ·gc.alloc.rate:                   3251.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              1040.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3400.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1087.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4955544.971 ops/s
[info]                  ·gc.alloc.rate:                   3274.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              1040.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3403.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1080.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce":
[info]   4935162.101 ±(99.9%) 56256.851 ops/s [Average]
[info]   (min, avg, max) = (4920401.302, 4935162.101, 4955544.971), stdev = 14609.725
[info]   CI (99.9%): [4878905.250, 4991418.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate":
[info]   3261.105 ±(99.9%) 36.728 MB/sec [Average]
[info]   (min, avg, max) = (3251.530, 3261.105, 3274.359), stdev = 9.538
[info]   CI (99.9%): [3224.378, 3297.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1040.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1040.000, 1040.000, 1040.000), stdev = 0.001
[info]   CI (99.9%): [1040.000, 1040.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3395.431 ±(99.9%) 28.456 MB/sec [Average]
[info]   (min, avg, max) = (3384.621, 3395.431, 3403.164), stdev = 7.390
[info]   CI (99.9%): [3366.975, 3423.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1082.846 ±(99.9%) 15.579 B/op [Average]
[info]   (min, avg, max) = (1077.411, 1082.846, 1087.743), stdev = 4.046
[info]   CI (99.9%): [1067.267, 1098.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.125), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.024, 0.040), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava
[info] # Run progress: 70.12% complete, ETA 00:34:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.874 ops/s
[info] # Warmup Iteration   2: 38326831.729 ops/s
[info] # Warmup Iteration   3: 37861636.964 ops/s
[info] # Warmup Iteration   4: 40051128.215 ops/s
[info] # Warmup Iteration   5: 38637549.781 ops/s
[info] Iteration   1: 40029180.223 ops/s
[info]                  ·gc.alloc.rate:               407.086 MB/sec
[info]                  ·gc.alloc.rate.norm:          16.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20.116 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 40137011.402 ops/s
[info]                  ·gc.alloc.rate:      408.041 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 40182299.119 ops/s
[info]                  ·gc.alloc.rate:               408.590 MB/sec
[info]                  ·gc.alloc.rate.norm:          16.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20.038 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 40137614.704 ops/s
[info]                  ·gc.alloc.rate:                   408.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              16.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 40214476.981 ops/s
[info]                  ·gc.alloc.rate:      408.839 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava":
[info]   40140116.486 ±(99.9%) 269762.361 ops/s [Average]
[info]   (min, avg, max) = (40029180.223, 40140116.486, 40214476.981), stdev = 70056.429
[info]   CI (99.9%): [39870354.124, 40409878.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   408.116 ±(99.9%) 2.599 MB/sec [Average]
[info]   (min, avg, max) = (407.086, 408.116, 408.839), stdev = 0.675
[info]   CI (99.9%): [405.518, 410.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   16.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.000, 16.000, 16.000), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   337.460 ±(99.9%) 1210.062 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 337.460, 663.802), stdev = 314.249
[info]   CI (99.9%): [≈ 0, 1547.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   13.237 ±(99.9%) 47.461 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.237, 26.030), stdev = 12.325
[info]   CI (99.9%): [≈ 0, 60.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.048 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.028), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala
[info] # Run progress: 70.35% complete, ETA 00:33:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3943583.418 ops/s
[info] # Warmup Iteration   2: 8525407.171 ops/s
[info] # Warmup Iteration   3: 8599431.267 ops/s
[info] # Warmup Iteration   4: 8613514.482 ops/s
[info] # Warmup Iteration   5: 8626309.801 ops/s
[info] Iteration   1: 8756565.352 ops/s
[info]                  ·gc.alloc.rate:                   3293.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              592.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3375.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     606.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 8660136.469 ops/s
[info]                  ·gc.alloc.rate:                   3257.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              592.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2707.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     492.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 8630145.381 ops/s
[info]                  ·gc.alloc.rate:                   3246.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              592.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3391.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     618.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 8714183.394 ops/s
[info]                  ·gc.alloc.rate:                   3277.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              592.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3396.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     613.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 8621254.181 ops/s
[info]                  ·gc.alloc.rate:                   3243.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              592.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3401.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     620.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala":
[info]   8676456.955 ±(99.9%) 222031.497 ops/s [Average]
[info]   (min, avg, max) = (8621254.181, 8676456.955, 8756565.352), stdev = 57660.875
[info]   CI (99.9%): [8454425.458, 8898488.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   3263.760 ±(99.9%) 83.337 MB/sec [Average]
[info]   (min, avg, max) = (3243.416, 3263.760, 3293.890), stdev = 21.642
[info]   CI (99.9%): [3180.423, 3347.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   592.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (592.000, 592.000, 592.000), stdev = 0.001
[info]   CI (99.9%): [592.000, 592.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   3254.462 ±(99.9%) 1178.756 MB/sec [Average]
[info]   (min, avg, max) = (2707.148, 3254.462, 3401.644), stdev = 306.119
[info]   CI (99.9%): [2075.707, 4433.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   590.293 ±(99.9%) 212.624 B/op [Average]
[info]   (min, avg, max) = (492.000, 590.293, 620.880), stdev = 55.218
[info]   CI (99.9%): [377.669, 802.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.013, 0.019), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala
[info] # Run progress: 70.59% complete, ETA 00:33:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40543184.308 ops/s
[info] # Warmup Iteration   2: 43577975.361 ops/s
[info] # Warmup Iteration   3: 44472101.609 ops/s
[info] # Warmup Iteration   4: 43158225.999 ops/s
[info] # Warmup Iteration   5: 43302344.088 ops/s
[info] Iteration   1: 40833347.735 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 42361708.213 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 44181031.679 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 44487051.761 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 44489641.291 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala":
[info]   43270556.136 ±(99.9%) 6256847.701 ops/s [Average]
[info]   (min, avg, max) = (40833347.735, 43270556.136, 44489641.291), stdev = 1624883.478
[info]   CI (99.9%): [37013708.435, 49527403.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala
[info] # Run progress: 70.82% complete, ETA 00:33:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13619174.181 ops/s
[info] # Warmup Iteration   2: 16983124.926 ops/s
[info] # Warmup Iteration   3: 17269526.163 ops/s
[info] # Warmup Iteration   4: 17277464.109 ops/s
[info] # Warmup Iteration   5: 17280249.481 ops/s
[info] Iteration   1: 17275742.474 ops/s
[info]                  ·gc.alloc.rate:                   1141.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 16743000.208 ops/s
[info]                  ·gc.alloc.rate:               1106.803 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 63.371 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 17283265.994 ops/s
[info]                  ·gc.alloc.rate:                   1142.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 16755033.732 ops/s
[info]                  ·gc.alloc.rate:                   1107.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 17257038.667 ops/s
[info]                  ·gc.alloc.rate:                   1140.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala":
[info]   17062816.215 ±(99.9%) 1103782.889 ops/s [Average]
[info]   (min, avg, max) = (16743000.208, 17062816.215, 17283265.994), stdev = 286648.911
[info]   CI (99.9%): [15959033.325, 18166599.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate":
[info]   1127.669 ±(99.9%) 72.080 MB/sec [Average]
[info]   (min, avg, max) = (1106.803, 1127.669, 1142.085), stdev = 18.719
[info]   CI (99.9%): [1055.589, 1199.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate.norm":
[info]   104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (104.000, 104.000, 104.000), stdev = 0.001
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space":
[info]   1214.818 ±(99.9%) 1163.251 MB/sec [Average]
[info]   (min, avg, max) = (674.420, 1214.818, 1350.901), stdev = 302.093
[info]   CI (99.9%): [51.568, 2378.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   111.830 ±(99.9%) 104.502 B/op [Average]
[info]   (min, avg, max) = (63.371, 111.830, 126.773), stdev = 27.139
[info]   CI (99.9%): [7.329, 216.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.125), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.011), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson
[info] # Run progress: 71.06% complete, ETA 00:32:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4359258.823 ops/s
[info] # Warmup Iteration   2: 7559064.652 ops/s
[info] # Warmup Iteration   3: 7628005.944 ops/s
[info] # Warmup Iteration   4: 7600417.105 ops/s
[info] # Warmup Iteration   5: 7548837.717 ops/s
[info] Iteration   1: 7717181.427 ops/s
[info]                  ·gc.alloc.rate:                   3726.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4060.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     828.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 7701854.370 ops/s
[info]                  ·gc.alloc.rate:                   3719.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3393.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     693.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 7724507.975 ops/s
[info]                  ·gc.alloc.rate:                   3729.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3397.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     692.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 7682291.368 ops/s
[info]                  ·gc.alloc.rate:                   3709.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4082.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     836.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 7706551.796 ops/s
[info]                  ·gc.alloc.rate:                   3722.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3405.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     695.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson":
[info]   7706477.387 ±(99.9%) 62269.208 ops/s [Average]
[info]   (min, avg, max) = (7682291.368, 7706477.387, 7724507.975), stdev = 16171.116
[info]   CI (99.9%): [7644208.179, 7768746.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3721.523 ±(99.9%) 29.985 MB/sec [Average]
[info]   (min, avg, max) = (3709.624, 3721.523, 3729.862), stdev = 7.787
[info]   CI (99.9%): [3691.539, 3751.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (760.000, 760.000, 760.000), stdev = 0.001
[info]   CI (99.9%): [760.000, 760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3667.719 ±(99.9%) 1419.354 MB/sec [Average]
[info]   (min, avg, max) = (3393.013, 3667.719, 4082.055), stdev = 368.602
[info]   CI (99.9%): [2248.366, 5087.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   749.069 ±(99.9%) 292.599 B/op [Average]
[info]   (min, avg, max) = (692.291, 749.069, 836.301), stdev = 75.987
[info]   CI (99.9%): [456.469, 1041.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.092 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.092, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.034 B/op [Average]
[info]   (min, avg, max) = (0.004, 0.019, 0.026), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 7.000), stdev = 1.414
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce
[info] # Run progress: 71.29% complete, ETA 00:32:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7242989.502 ops/s
[info] # Warmup Iteration   2: 11538781.726 ops/s
[info] # Warmup Iteration   3: 11799142.897 ops/s
[info] # Warmup Iteration   4: 11969948.517 ops/s
[info] # Warmup Iteration   5: 11886670.877 ops/s
[info] Iteration   1: 11919828.191 ops/s
[info]                  ·gc.alloc.rate:                   2362.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2694.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     355.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 11833824.361 ops/s
[info]                  ·gc.alloc.rate:                   2345.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     269.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 11991099.635 ops/s
[info]                  ·gc.alloc.rate:                   2378.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2707.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     355.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 12002090.380 ops/s
[info]                  ·gc.alloc.rate:                   2379.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     266.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 11793651.776 ops/s
[info]                  ·gc.alloc.rate:                   2337.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2713.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     362.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce":
[info]   11908098.868 ±(99.9%) 357488.004 ops/s [Average]
[info]   (min, avg, max) = (11793651.776, 11908098.868, 12002090.380), stdev = 92838.499
[info]   CI (99.9%): [11550610.865, 12265586.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate":
[info]   2360.828 ±(99.9%) 71.915 MB/sec [Average]
[info]   (min, avg, max) = (2337.882, 2360.828, 2379.184), stdev = 18.676
[info]   CI (99.9%): [2288.914, 2432.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2434.589 ±(99.9%) 1426.435 MB/sec [Average]
[info]   (min, avg, max) = (2024.777, 2434.589, 2713.830), stdev = 370.441
[info]   CI (99.9%): [1008.154, 3861.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   321.791 ±(99.9%) 189.608 B/op [Average]
[info]   (min, avg, max) = (266.600, 321.791, 362.172), stdev = 49.241
[info]   CI (99.9%): [132.183, 511.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.008, 0.014), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 1.095
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava
[info] # Run progress: 71.53% complete, ETA 00:32:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.850 ops/s
[info] # Warmup Iteration   2: 54733840.549 ops/s
[info] # Warmup Iteration   3: 57564834.980 ops/s
[info] # Warmup Iteration   4: 60484485.545 ops/s
[info] # Warmup Iteration   5: 60123653.287 ops/s
[info] Iteration   1: 60109644.607 ops/s
[info]                  ·gc.alloc.rate:                   1833.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 59984913.817 ops/s
[info]                  ·gc.alloc.rate:                   1829.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.285 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 60673140.212 ops/s
[info]                  ·gc.alloc.rate:               1850.400 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2008.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52.099 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 60619965.290 ops/s
[info]                  ·gc.alloc.rate:               1848.753 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34.780 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 60024057.289 ops/s
[info]                  ·gc.alloc.rate:                   1830.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2011.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava":
[info]   60282344.243 ±(99.9%) 1293999.186 ops/s [Average]
[info]   (min, avg, max) = (59984913.817, 60282344.243, 60673140.212), stdev = 336047.479
[info]   CI (99.9%): [58988345.057, 61576343.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   1838.481 ±(99.9%) 39.400 MB/sec [Average]
[info]   (min, avg, max) = (1829.513, 1838.481, 1850.400), stdev = 10.232
[info]   CI (99.9%): [1799.081, 1877.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1874.514 ±(99.9%) 1151.532 MB/sec [Average]
[info]   (min, avg, max) = (1339.578, 1874.514, 2011.736), stdev = 299.049
[info]   CI (99.9%): [722.982, 3026.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   48.961 ±(99.9%) 30.542 B/op [Average]
[info]   (min, avg, max) = (34.780, 48.961, 52.750), stdev = 7.932
[info]   CI (99.9%): [18.419, 79.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.465 ±(99.9%) 3.917 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.465, 2.285), stdev = 1.017
[info]   CI (99.9%): [≈ 0, 4.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.103 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.060), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.414
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala
[info] # Run progress: 71.76% complete, ETA 00:32:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4956987.593 ops/s
[info] # Warmup Iteration   2: 11713871.514 ops/s
[info] # Warmup Iteration   3: 12240814.205 ops/s
[info] # Warmup Iteration   4: 12131430.081 ops/s
[info] # Warmup Iteration   5: 12227574.597 ops/s
[info] Iteration   1: 12273252.816 ops/s
[info]                  ·gc.alloc.rate:                   2433.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     258.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 12213730.907 ops/s
[info]                  ·gc.alloc.rate:                   2421.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2692.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     346.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 12231541.250 ops/s
[info]                  ·gc.alloc.rate:                   2424.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2699.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     347.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 12050970.575 ops/s
[info]                  ·gc.alloc.rate:                   2388.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     265.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 12152744.594 ops/s
[info]                  ·gc.alloc.rate:                   2409.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     351.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala":
[info]   12184448.029 ±(99.9%) 332266.658 ops/s [Average]
[info]   (min, avg, max) = (12050970.575, 12184448.029, 12273252.816), stdev = 86288.596
[info]   CI (99.9%): [11852181.370, 12516714.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2415.598 ±(99.9%) 65.974 MB/sec [Average]
[info]   (min, avg, max) = (2388.963, 2415.598, 2433.299), stdev = 17.133
[info]   CI (99.9%): [2349.624, 2481.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2429.693 ±(99.9%) 1432.739 MB/sec [Average]
[info]   (min, avg, max) = (2014.305, 2429.693, 2711.549), stdev = 372.078
[info]   CI (99.9%): [996.954, 3862.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   313.772 ±(99.9%) 183.360 B/op [Average]
[info]   (min, avg, max) = (258.276, 313.772, 351.086), stdev = 47.618
[info]   CI (99.9%): [130.411, 497.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.079, 0.146), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.010, 0.019), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala
[info] # Run progress: 72.00% complete, ETA 00:31:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30137711.431 ops/s
[info] # Warmup Iteration   2: 44823957.502 ops/s
[info] # Warmup Iteration   3: 45492586.969 ops/s
[info] # Warmup Iteration   4: 43397133.931 ops/s
[info] # Warmup Iteration   5: 43574937.971 ops/s
[info] Iteration   1: 45520327.405 ops/s
[info]                  ·gc.alloc.rate:                   925.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 45222476.447 ops/s
[info]                  ·gc.alloc.rate:               919.504 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23.391 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 45514150.685 ops/s
[info]                  ·gc.alloc.rate:                   925.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 45177469.680 ops/s
[info]                  ·gc.alloc.rate:                   918.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 45499596.584 ops/s
[info]                  ·gc.alloc.rate:               925.248 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23.272 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala":
[info]   45386804.160 ±(99.9%) 660226.133 ops/s [Average]
[info]   (min, avg, max) = (45177469.680, 45386804.160, 45520327.405), stdev = 171458.630
[info]   CI (99.9%): [44726578.028, 46047030.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   922.844 ±(99.9%) 13.494 MB/sec [Average]
[info]   (min, avg, max) = (918.544, 922.844, 925.516), stdev = 3.504
[info]   CI (99.9%): [909.349, 936.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   32.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (32.000, 32.000, 32.000), stdev = 0.001
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   941.539 ±(99.9%) 1418.533 MB/sec [Average]
[info]   (min, avg, max) = (672.143, 941.539, 1345.267), stdev = 368.388
[info]   CI (99.9%): [≈ 0, 2360.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   32.657 ±(99.9%) 49.308 B/op [Average]
[info]   (min, avg, max) = (23.254, 32.657, 46.866), stdev = 12.805
[info]   CI (99.9%): [≈ 0, 81.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 72.24% complete, ETA 00:31:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38792158.018 ops/s
[info] # Warmup Iteration   2: 50792300.138 ops/s
[info] # Warmup Iteration   3: 44878357.905 ops/s
[info] # Warmup Iteration   4: 44882430.966 ops/s
[info] # Warmup Iteration   5: 44894701.520 ops/s
[info] Iteration   1: 44778715.396 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 44782695.790 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 44861138.292 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 44876885.180 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 44725807.196 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc":
[info]   44805048.371 ±(99.9%) 241847.060 ops/s [Average]
[info]   (min, avg, max) = (44725807.196, 44805048.371, 44876885.180), stdev = 62806.914
[info]   CI (99.9%): [44563201.310, 45046895.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala
[info] # Run progress: 72.47% complete, ETA 00:31:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13427536.304 ops/s
[info] # Warmup Iteration   2: 13381036.491 ops/s
[info] # Warmup Iteration   3: 13615697.995 ops/s
[info] # Warmup Iteration   4: 13615399.706 ops/s
[info] # Warmup Iteration   5: 13698809.252 ops/s
[info] Iteration   1: 13709551.053 ops/s
[info]                  ·gc.alloc.rate:                   2299.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     233.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 13711296.160 ops/s
[info]                  ·gc.alloc.rate:                   2299.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     233.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 13717869.789 ops/s
[info]                  ·gc.alloc.rate:                   2300.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2714.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     311.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 13555196.916 ops/s
[info]                  ·gc.alloc.rate:                   2273.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 13691653.322 ops/s
[info]                  ·gc.alloc.rate:                   2296.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2718.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     312.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala":
[info]   13677113.448 ±(99.9%) 265085.331 ops/s [Average]
[info]   (min, avg, max) = (13555196.916, 13677113.448, 13717869.789), stdev = 68841.819
[info]   CI (99.9%): [13412028.117, 13942198.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate":
[info]   2294.132 ±(99.9%) 44.421 MB/sec [Average]
[info]   (min, avg, max) = (2273.723, 2294.132, 2300.998), stdev = 11.536
[info]   CI (99.9%): [2249.711, 2338.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space":
[info]   2307.502 ±(99.9%) 1438.703 MB/sec [Average]
[info]   (min, avg, max) = (2032.409, 2307.502, 2718.996), stdev = 373.627
[info]   CI (99.9%): [868.799, 3746.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   265.482 ±(99.9%) 163.657 B/op [Average]
[info]   (min, avg, max) = (233.324, 265.482, 312.581), stdev = 42.501
[info]   CI (99.9%): [101.825, 429.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.011 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.007, 0.012), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson
[info] # Run progress: 72.71% complete, ETA 00:31:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1630182.889 ops/s
[info] # Warmup Iteration   2: 2232746.955 ops/s
[info] # Warmup Iteration   3: 2267251.342 ops/s
[info] # Warmup Iteration   4: 2262173.717 ops/s
[info] # Warmup Iteration   5: 2279200.442 ops/s
[info] Iteration   1: 2321824.737 ops/s
[info]                  ·gc.alloc.rate:                   1970.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              1336.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     912.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2324439.418 ops/s
[info]                  ·gc.alloc.rate:                   1973.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              1336.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1368.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2288198.387 ops/s
[info]                  ·gc.alloc.rate:                   1942.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              1336.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1392.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2322688.574 ops/s
[info]                  ·gc.alloc.rate:                   1971.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              1336.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1373.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2325950.808 ops/s
[info]                  ·gc.alloc.rate:                   1974.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              1336.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1374.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson":
[info]   2316620.385 ±(99.9%) 61487.208 ops/s [Average]
[info]   (min, avg, max) = (2288198.387, 2316620.385, 2325950.808), stdev = 15968.033
[info]   CI (99.9%): [2255133.177, 2378107.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1966.463 ±(99.9%) 52.156 MB/sec [Average]
[info]   (min, avg, max) = (1942.351, 1966.463, 1974.308), stdev = 13.545
[info]   CI (99.9%): [1914.307, 2018.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1336.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1336.000, 1336.000, 1336.000), stdev = 0.001
[info]   CI (99.9%): [1336.000, 1336.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1890.135 ±(99.9%) 1172.229 MB/sec [Average]
[info]   (min, avg, max) = (1345.600, 1890.135, 2030.982), stdev = 304.424
[info]   CI (99.9%): [717.906, 3062.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1284.401 ±(99.9%) 802.109 B/op [Average]
[info]   (min, avg, max) = (912.135, 1284.401, 1392.871), stdev = 208.305
[info]   CI (99.9%): [482.292, 2086.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.097 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.045, 0.085), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 72.94% complete, ETA 00:30:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145037.934 ops/s
[info] # Warmup Iteration   2: 161373.563 ops/s
[info] # Warmup Iteration   3: 160871.018 ops/s
[info] # Warmup Iteration   4: 162121.346 ops/s
[info] # Warmup Iteration   5: 162521.909 ops/s
[info] Iteration   1: 163421.078 ops/s
[info]                  ·gc.alloc.rate:                   2998.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2708.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26081.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.601 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 163578.329 ops/s
[info]                  ·gc.alloc.rate:                   3000.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2712.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26097.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.202 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 163196.737 ops/s
[info]                  ·gc.alloc.rate:                   2993.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3396.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32750.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.004 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 163400.087 ops/s
[info]                  ·gc.alloc.rate:                   2997.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2719.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26196.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.602 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 162278.599 ops/s
[info]                  ·gc.alloc.rate:                   2977.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3402.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32994.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.404 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala":
[info]   163174.966 ±(99.9%) 1998.907 ops/s [Average]
[info]   (min, avg, max) = (162278.599, 163174.966, 163578.329), stdev = 519.110
[info]   CI (99.9%): [161176.059, 165173.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2993.505 ±(99.9%) 36.549 MB/sec [Average]
[info]   (min, avg, max) = (2977.104, 2993.505, 3000.851), stdev = 9.492
[info]   CI (99.9%): [2956.957, 3030.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   28872.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (28872.003, 28872.003, 28872.003), stdev = 0.001
[info]   CI (99.9%): [28872.002, 28872.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2987.807 ±(99.9%) 1446.179 MB/sec [Average]
[info]   (min, avg, max) = (2708.332, 2987.807, 3402.215), stdev = 375.568
[info]   CI (99.9%): [1541.628, 4433.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   28824.379 ±(99.9%) 14235.420 B/op [Average]
[info]   (min, avg, max) = (26081.762, 28824.379, 32994.730), stdev = 3696.893
[info]   CI (99.9%): [14588.959, 43059.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.125), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.762 ±(99.9%) 1.265 B/op [Average]
[info]   (min, avg, max) = (0.404, 0.762, 1.202), stdev = 0.328
[info]   CI (99.9%): [≈ 0, 2.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 73.18% complete, ETA 00:30:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12292.982 ops/s
[info] # Warmup Iteration   2: 26562.286 ops/s
[info] # Warmup Iteration   3: 26747.685 ops/s
[info] # Warmup Iteration   4: 27065.731 ops/s
[info] # Warmup Iteration   5: 26580.086 ops/s
[info] Iteration   1: 27042.319 ops/s
[info]                  ·gc.alloc.rate:                   2071.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              120584.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116872.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.423 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 26925.131 ops/s
[info]                  ·gc.alloc.rate:                   2062.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              120584.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117726.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.650 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 27016.404 ops/s
[info]                  ·gc.alloc.rate:                   2069.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              120584.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117562.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.851 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 27036.078 ops/s
[info]                  ·gc.alloc.rate:                   2071.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              120584.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117785.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.424 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 26620.396 ops/s
[info]                  ·gc.alloc.rate:               2039.555 MB/sec
[info]                  ·gc.alloc.rate.norm:          120584.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2026.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119823.192 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson":
[info]   26928.065 ±(99.9%) 686.650 ops/s [Average]
[info]   (min, avg, max) = (26620.396, 26928.065, 27042.319), stdev = 178.321
[info]   CI (99.9%): [26241.415, 27614.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2063.171 ±(99.9%) 52.680 MB/sec [Average]
[info]   (min, avg, max) = (2039.555, 2063.171, 2071.765), stdev = 13.681
[info]   CI (99.9%): [2010.491, 2115.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   120584.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (120584.016, 120584.016, 120584.017), stdev = 0.001
[info]   CI (99.9%): [120584.014, 120584.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2018.079 ±(99.9%) 28.635 MB/sec [Average]
[info]   (min, avg, max) = (2007.996, 2018.079, 2026.686), stdev = 7.437
[info]   CI (99.9%): [1989.443, 2046.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   117954.114 ±(99.9%) 4260.510 B/op [Average]
[info]   (min, avg, max) = (116872.453, 117954.114, 119823.192), stdev = 1106.441
[info]   CI (99.9%): [113693.604, 122214.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.670 ±(99.9%) 6.933 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.670, 4.851), stdev = 1.801
[info]   CI (99.9%): [≈ 0, 9.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.41% complete, ETA 00:30:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80645.613 ops/s
[info] # Warmup Iteration   2: 132123.582 ops/s
[info] # Warmup Iteration   3: 132901.578 ops/s
[info] # Warmup Iteration   4: 133227.405 ops/s
[info] # Warmup Iteration   5: 133605.503 ops/s
[info] Iteration   1: 132343.862 ops/s
[info]                  ·gc.alloc.rate:                   1281.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              15240.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15867.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.238 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 131174.244 ops/s
[info]                  ·gc.alloc.rate:                   1270.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              15240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16025.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.999 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 131561.236 ops/s
[info]                  ·gc.alloc.rate:                   1273.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              15240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16002.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.249 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 132898.485 ops/s
[info]                  ·gc.alloc.rate:                   1287.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              15240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15864.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.740 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 133879.617 ops/s
[info]                  ·gc.alloc.rate:               1296.315 MB/sec
[info]                  ·gc.alloc.rate.norm:          15240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15779.660 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala":
[info]   132371.489 ±(99.9%) 4148.541 ops/s [Average]
[info]   (min, avg, max) = (131174.244, 132371.489, 133879.617), stdev = 1077.363
[info]   CI (99.9%): [128222.948, 136520.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1281.934 ±(99.9%) 39.721 MB/sec [Average]
[info]   (min, avg, max) = (1270.562, 1281.934, 1296.315), stdev = 10.315
[info]   CI (99.9%): [1242.213, 1321.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15240.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (15240.003, 15240.003, 15240.004), stdev = 0.001
[info]   CI (99.9%): [15240.003, 15240.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1338.064 ±(99.9%) 11.640 MB/sec [Average]
[info]   (min, avg, max) = (1334.593, 1338.064, 1342.218), stdev = 3.023
[info]   CI (99.9%): [1326.425, 1349.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   15907.945 ±(99.9%) 397.406 B/op [Average]
[info]   (min, avg, max) = (15779.660, 15907.945, 16025.328), stdev = 103.205
[info]   CI (99.9%): [15510.539, 16305.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.645 ±(99.9%) 1.981 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.645, 1.238), stdev = 0.514
[info]   CI (99.9%): [≈ 0, 2.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.65% complete, ETA 00:30:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 459225.274 ops/s
[info] # Warmup Iteration   2: 500839.041 ops/s
[info] # Warmup Iteration   3: 506693.176 ops/s
[info] # Warmup Iteration   4: 500868.304 ops/s
[info] # Warmup Iteration   5: 515131.686 ops/s
[info] Iteration   1: 507232.159 ops/s
[info]                  ·gc.alloc.rate:               1049.358 MB/sec
[info]                  ·gc.alloc.rate.norm:          3256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2085.482 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 504703.897 ops/s
[info]                  ·gc.alloc.rate:                   1044.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              3256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4191.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 503255.008 ops/s
[info]                  ·gc.alloc.rate:               1041.162 MB/sec
[info]                  ·gc.alloc.rate.norm:          3256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2103.077 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 517160.934 ops/s
[info]                  ·gc.alloc.rate:                   1069.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              3256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4095.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 515359.164 ops/s
[info]                  ·gc.alloc.rate:               1066.417 MB/sec
[info]                  ·gc.alloc.rate.norm:          3256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4113.515 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala":
[info]   509542.233 ±(99.9%) 24365.512 ops/s [Average]
[info]   (min, avg, max) = (503255.008, 509542.233, 517160.934), stdev = 6327.646
[info]   CI (99.9%): [485176.720, 533907.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1054.190 ±(99.9%) 50.563 MB/sec [Average]
[info]   (min, avg, max) = (1041.162, 1054.190, 1069.877), stdev = 13.131
[info]   CI (99.9%): [1003.627, 1104.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3256.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3256.001, 3256.001, 3256.001), stdev = 0.001
[info]   CI (99.9%): [3256.001, 3256.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1076.348 ±(99.9%) 1420.269 MB/sec [Average]
[info]   (min, avg, max) = (672.118, 1076.348, 1347.273), stdev = 368.839
[info]   CI (99.9%): [≈ 0, 2496.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3317.814 ±(99.9%) 4303.245 B/op [Average]
[info]   (min, avg, max) = (2085.482, 3317.814, 4191.977), stdev = 1117.539
[info]   CI (99.9%): [≈ 0, 7621.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.090 ±(99.9%) 0.484 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.090, 0.260), stdev = 0.126
[info]   CI (99.9%): [≈ 0, 0.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 73.88% complete, ETA 00:29:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 481089.480 ops/s
[info] # Warmup Iteration   2: 531191.192 ops/s
[info] # Warmup Iteration   3: 548072.668 ops/s
[info] # Warmup Iteration   4: 546325.037 ops/s
[info] # Warmup Iteration   5: 547876.093 ops/s
[info] Iteration   1: 543699.075 ops/s
[info]                  ·gc.alloc.rate:               530.731 MB/sec
[info]                  ·gc.alloc.rate.norm:          1536.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1480.884 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 545146.692 ops/s
[info]                  ·gc.alloc.rate:      532.149 MB/sec
[info]                  ·gc.alloc.rate.norm: 1536.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 544703.338 ops/s
[info]                  ·gc.alloc.rate:                   531.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              1536.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1943.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.751 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.059 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 525375.566 ops/s
[info]                  ·gc.alloc.rate:                   512.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              1536.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2014.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 541441.343 ops/s
[info]                  ·gc.alloc.rate:               528.428 MB/sec
[info]                  ·gc.alloc.rate.norm:          1536.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1953.827 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   540073.203 ±(99.9%) 32114.100 ops/s [Average]
[info]   (min, avg, max) = (525375.566, 540073.203, 545146.692), stdev = 8339.930
[info]   CI (99.9%): [507959.103, 572187.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   527.168 ±(99.9%) 31.134 MB/sec [Average]
[info]   (min, avg, max) = (512.930, 527.168, 532.149), stdev = 8.085
[info]   CI (99.9%): [496.035, 558.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1536.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1536.001, 1536.001, 1536.001), stdev = 0.001
[info]   CI (99.9%): [1536.001, 1536.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   505.813 ±(99.9%) 1121.315 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 505.813, 672.716), stdev = 291.202
[info]   CI (99.9%): [≈ 0, 1627.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   1478.455 ±(99.9%) 3287.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1478.455, 2014.489), stdev = 853.671
[info]   CI (99.9%): [≈ 0, 4765.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.359 ±(99.9%) 2.998 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.359, 1.751), stdev = 0.779
[info]   CI (99.9%): [≈ 0, 3.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   1.037 ±(99.9%) 8.661 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.037, 5.059), stdev = 2.249
[info]   CI (99.9%): [≈ 0, 9.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 74.12% complete, ETA 00:29:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35064.958 ops/s
[info] # Warmup Iteration   2: 62655.977 ops/s
[info] # Warmup Iteration   3: 61163.681 ops/s
[info] # Warmup Iteration   4: 62278.448 ops/s
[info] # Warmup Iteration   5: 62789.729 ops/s
[info] Iteration   1: 63081.593 ops/s
[info]                  ·gc.alloc.rate:               1102.061 MB/sec
[info]                  ·gc.alloc.rate.norm:          27496.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16636.413 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 62979.360 ops/s
[info]                  ·gc.alloc.rate:                   1100.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              27496.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33344.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 62630.061 ops/s
[info]                  ·gc.alloc.rate:               1094.619 MB/sec
[info]                  ·gc.alloc.rate.norm:          27496.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16781.300 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 63041.142 ops/s
[info]                  ·gc.alloc.rate:                   1101.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              27496.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33369.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.559 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 62619.936 ops/s
[info]                  ·gc.alloc.rate:               1093.966 MB/sec
[info]                  ·gc.alloc.rate.norm:          27496.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33642.762 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson":
[info]   62870.418 ±(99.9%) 874.111 ops/s [Average]
[info]   (min, avg, max) = (62619.936, 62870.418, 63081.593), stdev = 227.004
[info]   CI (99.9%): [61996.307, 63744.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1098.449 ±(99.9%) 14.842 MB/sec [Average]
[info]   (min, avg, max) = (1093.966, 1098.449, 1102.061), stdev = 3.854
[info]   CI (99.9%): [1083.607, 1113.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   27496.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (27496.007, 27496.007, 27496.007), stdev = 0.001
[info]   CI (99.9%): [27496.006, 27496.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1068.853 ±(99.9%) 1411.062 MB/sec [Average]
[info]   (min, avg, max) = (666.800, 1068.853, 1338.523), stdev = 366.448
[info]   CI (99.9%): [≈ 0, 2479.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   26754.837 ±(99.9%) 35316.464 B/op [Average]
[info]   (min, avg, max) = (16636.413, 26754.837, 33642.762), stdev = 9171.574
[info]   CI (99.9%): [≈ 0, 62071.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.520 ±(99.9%) 2.831 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.520, 1.559), stdev = 0.735
[info]   CI (99.9%): [≈ 0, 3.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 74.35% complete, ETA 00:29:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 282905.791 ops/s
[info] # Warmup Iteration   2: 334392.388 ops/s
[info] # Warmup Iteration   3: 341526.410 ops/s
[info] # Warmup Iteration   4: 338391.773 ops/s
[info] # Warmup Iteration   5: 335796.277 ops/s
[info] Iteration   1: 339989.790 ops/s
[info]                  ·gc.alloc.rate:                   2467.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              11424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9377.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 339367.957 ops/s
[info]                  ·gc.alloc.rate:                   2464.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              11424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2706.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12549.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.579 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 330064.622 ops/s
[info]                  ·gc.alloc.rate:                   2395.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              11424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12927.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.496 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 341799.896 ops/s
[info]                  ·gc.alloc.rate:                   2480.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              11424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9373.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 330282.511 ops/s
[info]                  ·gc.alloc.rate:                   2397.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              11424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2717.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12947.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce":
[info]   336300.955 ±(99.9%) 21813.640 ops/s [Average]
[info]   (min, avg, max) = (330064.622, 336300.955, 341799.896), stdev = 5664.933
[info]   CI (99.9%): [314487.315, 358114.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2441.193 ±(99.9%) 158.768 MB/sec [Average]
[info]   (min, avg, max) = (2395.784, 2441.193, 2480.959), stdev = 41.232
[info]   CI (99.9%): [2282.425, 2599.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   11424.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11424.001, 11424.001, 11424.001), stdev = 0.001
[info]   CI (99.9%): [11424.001, 11424.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2439.310 ±(99.9%) 1436.188 MB/sec [Average]
[info]   (min, avg, max) = (2025.823, 2439.310, 2717.137), stdev = 372.973
[info]   CI (99.9%): [1003.122, 3875.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11435.312 ±(99.9%) 7265.433 B/op [Average]
[info]   (min, avg, max) = (9373.870, 11435.312, 12947.969), stdev = 1886.810
[info]   CI (99.9%): [4169.879, 18700.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.125), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.351 ±(99.9%) 0.683 B/op [Average]
[info]   (min, avg, max) = (0.192, 0.351, 0.579), stdev = 0.177
[info]   CI (99.9%): [≈ 0, 1.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.59% complete, ETA 00:28:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 185836.971 ops/s
[info] # Warmup Iteration   2: 359186.735 ops/s
[info] # Warmup Iteration   3: 350275.608 ops/s
[info] # Warmup Iteration   4: 353188.657 ops/s
[info] # Warmup Iteration   5: 360242.810 ops/s
[info] Iteration   1: 360686.514 ops/s
[info]                  ·gc.alloc.rate:                   955.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              4168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5820.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.454 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 361751.937 ops/s
[info]                  ·gc.alloc.rate:               958.056 MB/sec
[info]                  ·gc.alloc.rate.norm:          4168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2901.078 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 361470.289 ops/s
[info]                  ·gc.alloc.rate:                   957.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              4168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5812.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.544 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 361896.274 ops/s
[info]                  ·gc.alloc.rate:               958.343 MB/sec
[info]                  ·gc.alloc.rate.norm:          4168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2905.678 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 359850.735 ops/s
[info]                  ·gc.alloc.rate:                   953.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              4168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5848.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala":
[info]   361131.150 ±(99.9%) 3291.665 ops/s [Average]
[info]   (min, avg, max) = (359850.735, 361131.150, 361896.274), stdev = 854.835
[info]   CI (99.9%): [357839.485, 364422.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   956.463 ±(99.9%) 8.519 MB/sec [Average]
[info]   (min, avg, max) = (953.061, 956.463, 958.343), stdev = 2.212
[info]   CI (99.9%): [947.944, 964.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   4168.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4168.001, 4168.001, 4168.001), stdev = 0.001
[info]   CI (99.9%): [4168.001, 4168.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1068.367 ±(99.9%) 1409.219 MB/sec [Average]
[info]   (min, avg, max) = (666.841, 1068.367, 1337.419), stdev = 365.970
[info]   CI (99.9%): [≈ 0, 2477.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4657.790 ±(99.9%) 6167.229 B/op [Average]
[info]   (min, avg, max) = (2901.078, 4657.790, 5848.908), stdev = 1601.610
[info]   CI (99.9%): [≈ 0, 10825.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.231 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.218 ±(99.9%) 1.006 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.218, 0.544), stdev = 0.261
[info]   CI (99.9%): [≈ 0, 1.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.82% complete, ETA 00:28:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 429491.771 ops/s
[info] # Warmup Iteration   2: 458540.209 ops/s
[info] # Warmup Iteration   3: 452746.710 ops/s
[info] # Warmup Iteration   4: 459573.096 ops/s
[info] # Warmup Iteration   5: 458811.615 ops/s
[info] Iteration   1: 460260.717 ops/s
[info]                  ·gc.alloc.rate:                   907.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2302.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 459965.541 ops/s
[info]                  ·gc.alloc.rate:               907.151 MB/sec
[info]                  ·gc.alloc.rate.norm:          3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2304.467 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 459302.710 ops/s
[info]                  ·gc.alloc.rate:                   905.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4615.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.357 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 460227.568 ops/s
[info]                  ·gc.alloc.rate:               907.664 MB/sec
[info]                  ·gc.alloc.rate.norm:          3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2303.046 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 459971.704 ops/s
[info]                  ·gc.alloc.rate:               907.161 MB/sec
[info]                  ·gc.alloc.rate.norm:          3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2304.282 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala":
[info]   459945.648 ±(99.9%) 1482.861 ops/s [Average]
[info]   (min, avg, max) = (459302.710, 459945.648, 460260.717), stdev = 385.094
[info]   CI (99.9%): [458462.787, 461428.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   907.110 ±(99.9%) 2.933 MB/sec [Average]
[info]   (min, avg, max) = (905.838, 907.110, 907.735), stdev = 0.762
[info]   CI (99.9%): [904.177, 910.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3104.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3104.001, 3104.001, 3104.001), stdev = 0.001
[info]   CI (99.9%): [3104.001, 3104.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   808.158 ±(99.9%) 1159.761 MB/sec [Average]
[info]   (min, avg, max) = (673.439, 808.158, 1346.936), stdev = 301.186
[info]   CI (99.9%): [≈ 0, 1967.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2766.049 ±(99.9%) 3981.075 B/op [Average]
[info]   (min, avg, max) = (2302.956, 2766.049, 4615.497), stdev = 1033.873
[info]   CI (99.9%): [≈ 0, 6747.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.114 ±(99.9%) 0.632 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.114, 0.357), stdev = 0.164
[info]   CI (99.9%): [≈ 0, 0.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 75.06% complete, ETA 00:28:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74423.445 ops/s
[info] # Warmup Iteration   2: 111668.234 ops/s
[info] # Warmup Iteration   3: 115110.880 ops/s
[info] # Warmup Iteration   4: 113676.658 ops/s
[info] # Warmup Iteration   5: 113062.347 ops/s
[info] Iteration   1: 113006.983 ops/s
[info]                  ·gc.alloc.rate:                   4091.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              56984.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4068.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56658.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.160 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 115122.002 ops/s
[info]                  ·gc.alloc.rate:                   4168.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              56984.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4076.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55725.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.138 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 113493.701 ops/s
[info]                  ·gc.alloc.rate:                   4109.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              56984.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4081.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56599.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.866 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 115126.940 ops/s
[info]                  ·gc.alloc.rate:                   4169.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              56984.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4085.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55842.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.854 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 115082.187 ops/s
[info]                  ·gc.alloc.rate:                   4166.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              56984.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4087.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55897.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.423 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson":
[info]   114366.363 ±(99.9%) 3979.098 ops/s [Average]
[info]   (min, avg, max) = (113006.983, 114366.363, 115126.940), stdev = 1033.359
[info]   CI (99.9%): [110387.265, 118345.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4140.970 ±(99.9%) 144.872 MB/sec [Average]
[info]   (min, avg, max) = (4091.526, 4140.970, 4169.275), stdev = 37.623
[info]   CI (99.9%): [3996.099, 4285.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   56984.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (56984.004, 56984.004, 56984.004), stdev = 0.001
[info]   CI (99.9%): [56984.003, 56984.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4079.760 ±(99.9%) 30.013 MB/sec [Average]
[info]   (min, avg, max) = (4068.188, 4079.760, 4087.314), stdev = 7.794
[info]   CI (99.9%): [4049.747, 4109.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   56144.881 ±(99.9%) 1721.477 B/op [Average]
[info]   (min, avg, max) = (55725.521, 56144.881, 56658.972), stdev = 447.062
[info]   CI (99.9%): [54423.404, 57866.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.079, 0.104), stdev = 0.017
[info]   CI (99.9%): [0.012, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.088 ±(99.9%) 0.912 B/op [Average]
[info]   (min, avg, max) = (0.854, 1.088, 1.423), stdev = 0.237
[info]   CI (99.9%): [0.176, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 75.29% complete, ETA 00:28:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 273350.035 ops/s
[info] # Warmup Iteration   2: 351422.562 ops/s
[info] # Warmup Iteration   3: 348644.212 ops/s
[info] # Warmup Iteration   4: 345727.800 ops/s
[info] # Warmup Iteration   5: 348941.807 ops/s
[info] Iteration   1: 353357.984 ops/s
[info]                  ·gc.alloc.rate:               1197.994 MB/sec
[info]                  ·gc.alloc.rate.norm:          5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2987.768 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 347542.387 ops/s
[info]                  ·gc.alloc.rate:                   1178.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6076.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.377 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 351696.774 ops/s
[info]                  ·gc.alloc.rate:                   1192.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6009.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 352453.193 ops/s
[info]                  ·gc.alloc.rate:                   1194.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6002.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 353624.122 ops/s
[info]                  ·gc.alloc.rate:                   1198.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2992.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce":
[info]   351734.892 ±(99.9%) 9490.514 ops/s [Average]
[info]   (min, avg, max) = (347542.387, 351734.892, 353624.122), stdev = 2464.656
[info]   CI (99.9%): [342244.378, 361225.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1192.601 ±(99.9%) 31.320 MB/sec [Average]
[info]   (min, avg, max) = (1178.789, 1192.601, 1198.862), stdev = 8.134
[info]   CI (99.9%): [1161.281, 1223.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5336.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5336.001, 5336.001, 5336.001), stdev = 0.001
[info]   CI (99.9%): [5336.001, 5336.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1074.586 ±(99.9%) 1416.524 MB/sec [Average]
[info]   (min, avg, max) = (670.789, 1074.586, 1344.285), stdev = 367.867
[info]   CI (99.9%): [≈ 0, 2491.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4814.028 ±(99.9%) 6411.499 B/op [Average]
[info]   (min, avg, max) = (2987.768, 4814.028, 6076.905), stdev = 1665.046
[info]   CI (99.9%): [≈ 0, 11225.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.150 ±(99.9%) 0.551 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.150, 0.377), stdev = 0.143
[info]   CI (99.9%): [≈ 0, 0.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.53% complete, ETA 00:27:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 489236.088 ops/s
[info] # Warmup Iteration   2: 741009.482 ops/s
[info] # Warmup Iteration   3: 747630.029 ops/s
[info] # Warmup Iteration   4: 744231.907 ops/s
[info] # Warmup Iteration   5: 747877.820 ops/s
[info] Iteration   1: 749059.852 ops/s
[info]                  ·gc.alloc.rate:               555.926 MB/sec
[info]                  ·gc.alloc.rate.norm:          1168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1074.929 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 743713.228 ops/s
[info]                  ·gc.alloc.rate:                   551.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1411.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.303 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.873 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 750384.152 ops/s
[info]                  ·gc.alloc.rate:      556.886 MB/sec
[info]                  ·gc.alloc.rate.norm: 1168.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 750176.605 ops/s
[info]                  ·gc.alloc.rate:                   556.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1399.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 728492.479 ops/s
[info]                  ·gc.alloc.rate:                   540.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1440.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala":
[info]   744365.263 ±(99.9%) 35730.589 ops/s [Average]
[info]   (min, avg, max) = (728492.479, 744365.263, 750384.152), stdev = 9279.120
[info]   CI (99.9%): [708634.674, 780095.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   552.434 ±(99.9%) 26.542 MB/sec [Average]
[info]   (min, avg, max) = (540.646, 552.434, 556.886), stdev = 6.893
[info]   CI (99.9%): [525.893, 578.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1168.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1168.001, 1168.001, 1168.001), stdev = 0.001
[info]   CI (99.9%): [1168.001, 1168.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   502.556 ±(99.9%) 1112.398 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 502.556, 667.175), stdev = 288.886
[info]   CI (99.9%): [≈ 0, 1614.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1065.387 ±(99.9%) 2364.019 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1065.387, 1440.587), stdev = 613.928
[info]   CI (99.9%): [≈ 0, 3429.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.473 ±(99.9%) 3.939 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.473, 2.303), stdev = 1.023
[info]   CI (99.9%): [≈ 0, 4.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.001 ±(99.9%) 8.335 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.001, 4.873), stdev = 2.165
[info]   CI (99.9%): [≈ 0, 9.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 4.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.76% complete, ETA 00:27:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2318951.622 ops/s
[info] # Warmup Iteration   2: 2546950.337 ops/s
[info] # Warmup Iteration   3: 2079613.248 ops/s
[info] # Warmup Iteration   4: 2040543.801 ops/s
[info] # Warmup Iteration   5: 2028084.083 ops/s
[info] Iteration   1: 2064401.465 ops/s
[info]                  ·gc.alloc.rate:               954.904 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 512.439 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 2090100.139 ops/s
[info]                  ·gc.alloc.rate:                   966.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1012.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2089751.238 ops/s
[info]                  ·gc.alloc.rate:               966.652 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 506.723 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2056102.078 ops/s
[info]                  ·gc.alloc.rate:                   951.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     515.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2087603.154 ops/s
[info]                  ·gc.alloc.rate:                   965.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1014.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala":
[info]   2077591.615 ±(99.9%) 62099.641 ops/s [Average]
[info]   (min, avg, max) = (2056102.078, 2077591.615, 2090100.139), stdev = 16127.080
[info]   CI (99.9%): [2015491.974, 2139691.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   961.022 ±(99.9%) 28.830 MB/sec [Average]
[info]   (min, avg, max) = (951.047, 961.022, 966.912), stdev = 7.487
[info]   CI (99.9%): [932.192, 989.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   728.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (728.000, 728.000, 728.000), stdev = 0.001
[info]   CI (99.9%): [728.000, 728.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   941.715 ±(99.9%) 1418.978 MB/sec [Average]
[info]   (min, avg, max) = (672.157, 941.715, 1346.249), stdev = 368.504
[info]   CI (99.9%): [≈ 0, 2360.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   712.296 ±(99.9%) 1059.383 B/op [Average]
[info]   (min, avg, max) = (506.723, 712.296, 1014.992), stdev = 275.118
[info]   CI (99.9%): [≈ 0, 1771.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.108 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.063), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 76.00% complete, ETA 00:27:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2283046.263 ops/s
[info] # Warmup Iteration   2: 2588386.346 ops/s
[info] # Warmup Iteration   3: 2476949.646 ops/s
[info] # Warmup Iteration   4: 2471263.007 ops/s
[info] # Warmup Iteration   5: 2475278.111 ops/s
[info] Iteration   1: 2473345.663 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2474239.390 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2469033.337 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2465330.082 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2458928.866 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2468175.468 ±(99.9%) 24188.196 ops/s [Average]
[info]   (min, avg, max) = (2458928.866, 2468175.468, 2474239.390), stdev = 6281.598
[info]   CI (99.9%): [2443987.272, 2492363.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 76.24% complete, ETA 00:27:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 308036.442 ops/s
[info] # Warmup Iteration   2: 380233.416 ops/s
[info] # Warmup Iteration   3: 365527.773 ops/s
[info] # Warmup Iteration   4: 364662.028 ops/s
[info] # Warmup Iteration   5: 366815.189 ops/s
[info] Iteration   1: 377071.152 ops/s
[info]                  ·gc.alloc.rate:               542.409 MB/sec
[info]                  ·gc.alloc.rate.norm:          2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2135.332 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 377011.948 ops/s
[info]                  ·gc.alloc.rate:                   542.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2796.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.545 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 365614.675 ops/s
[info]                  ·gc.alloc.rate:      526.150 MB/sec
[info]                  ·gc.alloc.rate.norm: 2264.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 378922.634 ops/s
[info]                  ·gc.alloc.rate:                   545.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2781.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 378326.537 ops/s
[info]                  ·gc.alloc.rate:                   544.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2784.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson":
[info]   375389.389 ±(99.9%) 21276.046 ops/s [Average]
[info]   (min, avg, max) = (365614.675, 375389.389, 378922.634), stdev = 5525.322
[info]   CI (99.9%): [354113.344, 396665.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   540.046 ±(99.9%) 30.251 MB/sec [Average]
[info]   (min, avg, max) = (526.150, 540.046, 545.084), stdev = 7.856
[info]   CI (99.9%): [509.795, 570.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2264.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2264.001, 2264.001, 2264.001), stdev = 0.001
[info]   CI (99.9%): [2264.001, 2264.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   504.133 ±(99.9%) 1116.748 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 504.133, 669.851), stdev = 290.016
[info]   CI (99.9%): [≈ 0, 1620.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2099.677 ±(99.9%) 4648.802 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2099.677, 2796.169), stdev = 1207.279
[info]   CI (99.9%): [≈ 0, 6748.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.418 ±(99.9%) 3.507 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.418, 2.047), stdev = 0.911
[info]   CI (99.9%): [≈ 0, 3.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.744 ±(99.9%) 14.641 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.744, 8.545), stdev = 3.802
[info]   CI (99.9%): [≈ 0, 16.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 76.47% complete, ETA 00:26:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45642.168 ops/s
[info] # Warmup Iteration   2: 60161.520 ops/s
[info] # Warmup Iteration   3: 59976.239 ops/s
[info] # Warmup Iteration   4: 60860.900 ops/s
[info] # Warmup Iteration   5: 59653.917 ops/s
[info] Iteration   1: 58433.613 ops/s
[info]                  ·gc.alloc.rate:                   1808.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              48704.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54408.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.121 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 60573.305 ops/s
[info]                  ·gc.alloc.rate:                   1874.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              48704.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52556.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.164 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 60992.909 ops/s
[info]                  ·gc.alloc.rate:                   1887.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              48704.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52279.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.074 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 61078.046 ops/s
[info]                  ·gc.alloc.rate:                   1890.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              48704.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34844.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.073 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 60388.373 ops/s
[info]                  ·gc.alloc.rate:                   1868.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              48704.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52922.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.085 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce":
[info]   60293.249 ±(99.9%) 4152.253 ops/s [Average]
[info]   (min, avg, max) = (58433.613, 60293.249, 61078.046), stdev = 1078.327
[info]   CI (99.9%): [56140.996, 64445.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1866.029 ±(99.9%) 127.535 MB/sec [Average]
[info]   (min, avg, max) = (1808.929, 1866.029, 1890.166), stdev = 33.121
[info]   CI (99.9%): [1738.494, 1993.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   48704.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48704.007, 48704.007, 48704.008), stdev = 0.001
[info]   CI (99.9%): [48704.006, 48704.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1890.574 ±(99.9%) 1158.746 MB/sec [Average]
[info]   (min, avg, max) = (1352.307, 1890.574, 2030.587), stdev = 300.923
[info]   CI (99.9%): [731.828, 3049.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   49402.324 ±(99.9%) 31495.106 B/op [Average]
[info]   (min, avg, max) = (34844.966, 49402.324, 54408.684), stdev = 8179.179
[info]   CI (99.9%): [17907.219, 80897.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.303 ±(99.9%) 1.853 B/op [Average]
[info]   (min, avg, max) = (1.073, 1.303, 2.164), stdev = 0.481
[info]   CI (99.9%): [≈ 0, 3.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.71% complete, ETA 00:26:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33982.902 ops/s
[info] # Warmup Iteration   2: 64539.444 ops/s
[info] # Warmup Iteration   3: 64171.821 ops/s
[info] # Warmup Iteration   4: 65818.833 ops/s
[info] # Warmup Iteration   5: 65053.503 ops/s
[info] Iteration   1: 64616.723 ops/s
[info]                  ·gc.alloc.rate:                   1162.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              28304.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32497.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.521 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 64004.765 ops/s
[info]                  ·gc.alloc.rate:               1151.117 MB/sec
[info]                  ·gc.alloc.rate.norm:          28304.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16412.408 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 65757.783 ops/s
[info]                  ·gc.alloc.rate:                   1182.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              28304.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31982.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.491 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 64488.905 ops/s
[info]                  ·gc.alloc.rate:               1159.777 MB/sec
[info]                  ·gc.alloc.rate.norm:          28304.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32660.297 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 64449.176 ops/s
[info]                  ·gc.alloc.rate:                   1159.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              28304.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32712.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.542 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   64663.470 ±(99.9%) 2517.681 ops/s [Average]
[info]   (min, avg, max) = (64004.765, 64663.470, 65757.783), stdev = 653.834
[info]   CI (99.9%): [62145.789, 67181.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1163.030 ±(99.9%) 45.099 MB/sec [Average]
[info]   (min, avg, max) = (1151.117, 1163.030, 1182.610), stdev = 11.712
[info]   CI (99.9%): [1117.932, 1208.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   28304.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (28304.007, 28304.007, 28304.007), stdev = 0.001
[info]   CI (99.9%): [28304.006, 28304.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1203.306 ±(99.9%) 1153.419 MB/sec [Average]
[info]   (min, avg, max) = (667.489, 1203.306, 1340.202), stdev = 299.539
[info]   CI (99.9%): [49.887, 2356.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   29253.167 ±(99.9%) 27663.025 B/op [Average]
[info]   (min, avg, max) = (16412.408, 29253.167, 32712.591), stdev = 7184.000
[info]   CI (99.9%): [1590.143, 56916.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.311 ±(99.9%) 4.867 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.311, 2.542), stdev = 1.264
[info]   CI (99.9%): [≈ 0, 6.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.94% complete, ETA 00:26:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92278.259 ops/s
[info] # Warmup Iteration   2: 99474.795 ops/s
[info] # Warmup Iteration   3: 102265.036 ops/s
[info] # Warmup Iteration   4: 102354.499 ops/s
[info] # Warmup Iteration   5: 102691.435 ops/s
[info] Iteration   1: 102451.242 ops/s
[info]                  ·gc.alloc.rate:                   1571.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              24136.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31033.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.320 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 101807.665 ops/s
[info]                  ·gc.alloc.rate:                   1561.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              24136.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20832.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.643 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 101908.732 ops/s
[info]                  ·gc.alloc.rate:                   1563.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              24136.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20842.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.643 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 101847.969 ops/s
[info]                  ·gc.alloc.rate:                   1561.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              24136.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31319.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.965 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 101531.394 ops/s
[info]                  ·gc.alloc.rate:                   1557.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              24136.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20972.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.645 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   101909.400 ±(99.9%) 1292.414 ops/s [Average]
[info]   (min, avg, max) = (101531.394, 101909.400, 102451.242), stdev = 335.636
[info]   CI (99.9%): [100616.986, 103201.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1562.974 ±(99.9%) 19.692 MB/sec [Average]
[info]   (min, avg, max) = (1557.118, 1562.974, 1571.166), stdev = 5.114
[info]   CI (99.9%): [1543.282, 1582.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   24136.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (24136.004, 24136.004, 24136.005), stdev = 0.001
[info]   CI (99.9%): [24136.004, 24136.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1619.509 ±(99.9%) 1419.856 MB/sec [Average]
[info]   (min, avg, max) = (1347.839, 1619.509, 2026.702), stdev = 368.732
[info]   CI (99.9%): [199.653, 3039.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   24999.954 ±(99.9%) 21715.173 B/op [Average]
[info]   (min, avg, max) = (20832.363, 24999.954, 31319.444), stdev = 5639.362
[info]   CI (99.9%): [3284.781, 46715.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.643 ±(99.9%) 0.878 B/op [Average]
[info]   (min, avg, max) = (0.320, 0.643, 0.965), stdev = 0.228
[info]   CI (99.9%): [≈ 0, 1.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 77.18% complete, ETA 00:26:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7320.326 ops/s
[info] # Warmup Iteration   2: 17228.395 ops/s
[info] # Warmup Iteration   3: 17389.213 ops/s
[info] # Warmup Iteration   4: 17404.239 ops/s
[info] # Warmup Iteration   5: 17253.350 ops/s
[info] Iteration   1: 17373.401 ops/s
[info]                  ·gc.alloc.rate:                   1211.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              109712.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120752.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.543 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 17309.757 ops/s
[info]                  ·gc.alloc.rate:                   1206.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              109712.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121320.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.678 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 17098.154 ops/s
[info]                  ·gc.alloc.rate:               1191.945 MB/sec
[info]                  ·gc.alloc.rate.norm:          109712.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1335.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 122970.538 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 17514.644 ops/s
[info]                  ·gc.alloc.rate:                   1221.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              109712.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60066.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.871 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 17583.821 ops/s
[info]                  ·gc.alloc.rate:                   1226.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              109712.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119893.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.726 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson":
[info]   17375.955 ±(99.9%) 730.620 ops/s [Average]
[info]   (min, avg, max) = (17098.154, 17375.955, 17583.821), stdev = 189.740
[info]   CI (99.9%): [16645.335, 18106.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1211.420 ±(99.9%) 51.345 MB/sec [Average]
[info]   (min, avg, max) = (1191.945, 1211.420, 1226.204), stdev = 13.334
[info]   CI (99.9%): [1160.075, 1262.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   109712.027 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (109712.025, 109712.027, 109712.036), stdev = 0.005
[info]   CI (99.9%): [109712.009, 109712.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1202.397 ±(99.9%) 1149.291 MB/sec [Average]
[info]   (min, avg, max) = (668.503, 1202.397, 1339.997), stdev = 298.467
[info]   CI (99.9%): [53.106, 2351.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   109000.741 ±(99.9%) 105423.360 B/op [Average]
[info]   (min, avg, max) = (60066.561, 109000.741, 122970.538), stdev = 27378.112
[info]   CI (99.9%): [3577.381, 214424.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.764 ±(99.9%) 11.504 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.764, 7.543), stdev = 2.988
[info]   CI (99.9%): [≈ 0, 15.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.41% complete, ETA 00:25:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 76398.051 ops/s
[info] # Warmup Iteration   2: 142871.223 ops/s
[info] # Warmup Iteration   3: 143873.040 ops/s
[info] # Warmup Iteration   4: 145121.136 ops/s
[info] # Warmup Iteration   5: 147328.754 ops/s
[info] Iteration   1: 142992.232 ops/s
[info]                  ·gc.alloc.rate:                   1113.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              12248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7339.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.229 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 147275.376 ops/s
[info]                  ·gc.alloc.rate:                   1146.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              12248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14252.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.112 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 147003.299 ops/s
[info]                  ·gc.alloc.rate:                   1144.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              12248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14292.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.669 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 145819.024 ops/s
[info]                  ·gc.alloc.rate:                   1134.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              12248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14430.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.449 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 143236.536 ops/s
[info]                  ·gc.alloc.rate:               1114.871 MB/sec
[info]                  ·gc.alloc.rate.norm:          12248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7359.751 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   145265.293 ±(99.9%) 7856.252 ops/s [Average]
[info]   (min, avg, max) = (142992.232, 145265.293, 147275.376), stdev = 2040.244
[info]   CI (99.9%): [137409.041, 153121.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1130.669 ±(99.9%) 60.686 MB/sec [Average]
[info]   (min, avg, max) = (1113.279, 1130.669, 1146.317), stdev = 15.760
[info]   CI (99.9%): [1069.983, 1191.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   12248.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12248.003, 12248.003, 12248.003), stdev = 0.001
[info]   CI (99.9%): [12248.003, 12248.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1068.596 ±(99.9%) 1406.316 MB/sec [Average]
[info]   (min, avg, max) = (667.133, 1068.596, 1337.038), stdev = 365.216
[info]   CI (99.9%): [≈ 0, 2474.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   11534.853 ±(99.9%) 14713.688 B/op [Average]
[info]   (min, avg, max) = (7339.621, 11534.853, 14430.638), stdev = 3821.098
[info]   CI (99.9%): [≈ 0, 26248.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.492 ±(99.9%) 1.644 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.492, 1.112), stdev = 0.427
[info]   CI (99.9%): [≈ 0, 2.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.65% complete, ETA 00:25:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 485788.214 ops/s
[info] # Warmup Iteration   2: 567261.370 ops/s
[info] # Warmup Iteration   3: 564670.737 ops/s
[info] # Warmup Iteration   4: 569170.427 ops/s
[info] # Warmup Iteration   5: 561432.000 ops/s
[info] Iteration   1: 561934.096 ops/s
[info]                  ·gc.alloc.rate:      619.961 MB/sec
[info]                  ·gc.alloc.rate.norm: 1736.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 556410.131 ops/s
[info]                  ·gc.alloc.rate:                   613.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              1736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1902.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.777 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.024 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 566312.194 ops/s
[info]                  ·gc.alloc.rate:                   624.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              1736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1868.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 566951.651 ops/s
[info]                  ·gc.alloc.rate:                   625.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              1736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1865.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 566687.381 ops/s
[info]                  ·gc.alloc.rate:                   625.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              1736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1866.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   563659.091 ±(99.9%) 17495.391 ops/s [Average]
[info]   (min, avg, max) = (556410.131, 563659.091, 566951.651), stdev = 4543.497
[info]   CI (99.9%): [546163.699, 581154.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   621.837 ±(99.9%) 19.241 MB/sec [Average]
[info]   (min, avg, max) = (613.858, 621.837, 625.532), stdev = 4.997
[info]   CI (99.9%): [602.596, 641.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1736.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1736.001, 1736.001, 1736.001), stdev = 0.001
[info]   CI (99.9%): [1736.001, 1736.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   537.943 ±(99.9%) 1157.963 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 537.943, 672.646), stdev = 300.719
[info]   CI (99.9%): [≈ 0, 1695.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1500.756 ±(99.9%) 3231.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1500.756, 1902.253), stdev = 839.086
[info]   CI (99.9%): [≈ 0, 4731.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.372 ±(99.9%) 3.024 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.372, 1.777), stdev = 0.785
[info]   CI (99.9%): [≈ 0, 3.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.051 ±(99.9%) 8.554 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.051, 5.024), stdev = 2.221
[info]   CI (99.9%): [≈ 0, 9.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 77.88% complete, ETA 00:25:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 508030.497 ops/s
[info] # Warmup Iteration   2: 555753.918 ops/s
[info] # Warmup Iteration   3: 552810.734 ops/s
[info] # Warmup Iteration   4: 546435.502 ops/s
[info] # Warmup Iteration   5: 553814.438 ops/s
[info] Iteration   1: 549487.161 ops/s
[info]                  ·gc.alloc.rate:      5.586 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 542359.626 ops/s
[info]                  ·gc.alloc.rate:      5.514 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 543925.328 ops/s
[info]                  ·gc.alloc.rate:      5.530 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 541151.251 ops/s
[info]                  ·gc.alloc.rate:      5.502 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 540439.888 ops/s
[info]                  ·gc.alloc.rate:      5.494 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   543472.651 ±(99.9%) 13910.984 ops/s [Average]
[info]   (min, avg, max) = (540439.888, 543472.651, 549487.161), stdev = 3612.638
[info]   CI (99.9%): [529561.667, 557383.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   5.525 ±(99.9%) 0.142 MB/sec [Average]
[info]   (min, avg, max) = (5.494, 5.525, 5.586), stdev = 0.037
[info]   CI (99.9%): [5.384, 5.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.001, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 78.12% complete, ETA 00:24:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36033.039 ops/s
[info] # Warmup Iteration   2: 63541.061 ops/s
[info] # Warmup Iteration   3: 65151.448 ops/s
[info] # Warmup Iteration   4: 65186.947 ops/s
[info] # Warmup Iteration   5: 65406.013 ops/s
[info] Iteration   1: 64204.880 ops/s
[info]                  ·gc.alloc.rate:                   1177.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32689.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.551 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 64059.359 ops/s
[info]                  ·gc.alloc.rate:                   1175.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32789.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.534 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 65188.023 ops/s
[info]                  ·gc.alloc.rate:                   1196.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32262.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 65782.764 ops/s
[info]                  ·gc.alloc.rate:               1206.980 MB/sec
[info]                  ·gc.alloc.rate.norm:          28872.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15993.525 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 63914.818 ops/s
[info]                  ·gc.alloc.rate:                   1172.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32987.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson":
[info]   64629.969 ±(99.9%) 3138.981 ops/s [Average]
[info]   (min, avg, max) = (63914.818, 64629.969, 65782.764), stdev = 815.183
[info]   CI (99.9%): [61490.988, 67768.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1185.801 ±(99.9%) 58.049 MB/sec [Average]
[info]   (min, avg, max) = (1172.662, 1185.801, 1206.980), stdev = 15.075
[info]   CI (99.9%): [1127.753, 1243.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   28872.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (28872.007, 28872.007, 28872.007), stdev = 0.001
[info]   CI (99.9%): [28872.006, 28872.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1202.694 ±(99.9%) 1149.711 MB/sec [Average]
[info]   (min, avg, max) = (668.601, 1202.694, 1339.812), stdev = 298.576
[info]   CI (99.9%): [52.983, 2352.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   29344.545 ±(99.9%) 28757.189 B/op [Average]
[info]   (min, avg, max) = (15993.525, 29344.545, 32987.397), stdev = 7468.151
[info]   CI (99.9%): [587.355, 58101.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.223 ±(99.9%) 3.573 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.223, 2.551), stdev = 0.928
[info]   CI (99.9%): [≈ 0, 4.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce
[info] # Run progress: 78.35% complete, ETA 00:24:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1136534.792 ops/s
[info] # Warmup Iteration   2: 2162260.019 ops/s
[info] # Warmup Iteration   3: 2252266.415 ops/s
[info] # Warmup Iteration   4: 2265011.475 ops/s
[info] # Warmup Iteration   5: 2260871.467 ops/s
[info] Iteration   1: 2233430.668 ops/s
[info]                  ·gc.alloc.rate:                   3348.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2707.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1907.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2268553.791 ops/s
[info]                  ·gc.alloc.rate:                   3402.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4070.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2823.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2271749.007 ops/s
[info]                  ·gc.alloc.rate:                   3406.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3397.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2353.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2265445.707 ops/s
[info]                  ·gc.alloc.rate:                   3397.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3400.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2362.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2269840.497 ops/s
[info]                  ·gc.alloc.rate:                   3404.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3404.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2360.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce":
[info]   2261803.934 ±(99.9%) 61711.183 ops/s [Average]
[info]   (min, avg, max) = (2233430.668, 2261803.934, 2271749.007), stdev = 16026.198
[info]   CI (99.9%): [2200092.751, 2323515.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate":
[info]   3391.929 ±(99.9%) 93.410 MB/sec [Average]
[info]   (min, avg, max) = (3348.949, 3391.929, 3406.624), stdev = 24.258
[info]   CI (99.9%): [3298.519, 3485.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2360.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.000, 2360.000, 2360.000), stdev = 0.001
[info]   CI (99.9%): [2360.000, 2360.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3396.035 ±(99.9%) 1856.301 MB/sec [Average]
[info]   (min, avg, max) = (2707.131, 3396.035, 4070.501), stdev = 482.076
[info]   CI (99.9%): [1539.734, 5252.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2361.424 ±(99.9%) 1246.575 B/op [Average]
[info]   (min, avg, max) = (1907.712, 2361.424, 2823.257), stdev = 323.732
[info]   CI (99.9%): [1114.849, 3608.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.096, 0.146), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.067 ±(99.9%) 0.084 B/op [Average]
[info]   (min, avg, max) = (0.043, 0.067, 0.101), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.304
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava
[info] # Run progress: 78.59% complete, ETA 00:24:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.875 ops/s
[info] # Warmup Iteration   2: 826632.474 ops/s
[info] # Warmup Iteration   3: 849414.263 ops/s
[info] # Warmup Iteration   4: 852410.552 ops/s
[info] # Warmup Iteration   5: 851664.562 ops/s
[info] Iteration   1: 855043.664 ops/s
[info]                  ·gc.alloc.rate:                   521.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              960.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     941.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.067 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 853684.176 ops/s
[info]                  ·gc.alloc.rate:      520.842 MB/sec
[info]                  ·gc.alloc.rate.norm: 960.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 853605.917 ops/s
[info]                  ·gc.alloc.rate:               520.667 MB/sec
[info]                  ·gc.alloc.rate.norm:          960.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1223.920 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 852509.510 ops/s
[info]                  ·gc.alloc.rate:                   520.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              960.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1225.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 853019.260 ops/s
[info]                  ·gc.alloc.rate:                   520.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              960.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1227.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava":
[info]   853572.505 ±(99.9%) 3660.105 ops/s [Average]
[info]   (min, avg, max) = (852509.510, 853572.505, 855043.664), stdev = 950.518
[info]   CI (99.9%): [849912.401, 857232.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   520.665 ±(99.9%) 2.228 MB/sec [Average]
[info]   (min, avg, max) = (520.000, 520.665, 521.520), stdev = 0.579
[info]   CI (99.9%): [518.437, 522.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   960.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (960.001, 960.001, 960.001), stdev = 0.001
[info]   CI (99.9%): [960.000, 960.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   500.867 ±(99.9%) 1107.800 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 500.867, 665.140), stdev = 287.692
[info]   CI (99.9%): [≈ 0, 1608.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   923.672 ±(99.9%) 2043.835 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 923.672, 1227.249), stdev = 530.777
[info]   CI (99.9%): [≈ 0, 2967.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.024 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.067), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.219 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.123), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala
[info] # Run progress: 78.82% complete, ETA 00:24:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73763.868 ops/s
[info] # Warmup Iteration   2: 307029.811 ops/s
[info] # Warmup Iteration   3: 311208.900 ops/s
[info] # Warmup Iteration   4: 305443.461 ops/s
[info] # Warmup Iteration   5: 306461.541 ops/s
[info] Iteration   1: 311170.249 ops/s
[info]                  ·gc.alloc.rate:                   732.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3371.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.230 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.278 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 313290.720 ops/s
[info]                  ·gc.alloc.rate:                   737.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3348.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 315368.234 ops/s
[info]                  ·gc.alloc.rate:                   742.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3327.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 305253.413 ops/s
[info]                  ·gc.alloc.rate:               718.481 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3438.055 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 306915.061 ops/s
[info]                  ·gc.alloc.rate:               722.299 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.120 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3421.037 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala":
[info]   310399.536 ±(99.9%) 16366.941 ops/s [Average]
[info]   (min, avg, max) = (305253.413, 310399.536, 315368.234), stdev = 4250.443
[info]   CI (99.9%): [294032.595, 326766.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   730.561 ±(99.9%) 38.460 MB/sec [Average]
[info]   (min, avg, max) = (718.481, 730.561, 742.196), stdev = 9.988
[info]   CI (99.9%): [692.101, 769.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3704.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3704.001, 3704.001, 3704.001), stdev = 0.001
[info]   CI (99.9%): [3704.001, 3704.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   666.799 ±(99.9%) 0.897 MB/sec [Average]
[info]   (min, avg, max) = (666.505, 666.799, 667.120), stdev = 0.233
[info]   CI (99.9%): [665.901, 667.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3381.238 ±(99.9%) 181.235 B/op [Average]
[info]   (min, avg, max) = (3327.789, 3381.238, 3438.055), stdev = 47.066
[info]   CI (99.9%): [3200.003, 3562.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.459 ±(99.9%) 3.814 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.459, 2.230), stdev = 0.991
[info]   CI (99.9%): [≈ 0, 4.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.318 ±(99.9%) 19.289 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.318, 11.278), stdev = 5.009
[info]   CI (99.9%): [≈ 0, 21.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala
[info] # Run progress: 79.06% complete, ETA 00:23:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 652603.827 ops/s
[info] # Warmup Iteration   2: 703396.204 ops/s
[info] # Warmup Iteration   3: 722809.048 ops/s
[info] # Warmup Iteration   4: 726122.174 ops/s
[info] # Warmup Iteration   5: 724442.136 ops/s
[info] Iteration   1: 727035.512 ops/s
[info]                  ·gc.alloc.rate:                   650.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              1408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          676.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1463.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.449 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.137 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 723707.339 ops/s
[info]                  ·gc.alloc.rate:                   647.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              1408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          676.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1470.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 709083.046 ops/s
[info]                  ·gc.alloc.rate:               634.610 MB/sec
[info]                  ·gc.alloc.rate.norm:          1408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      675.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1499.305 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 712422.114 ops/s
[info]                  ·gc.alloc.rate:                   637.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              1408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          675.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1492.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 711845.943 ops/s
[info]                  ·gc.alloc.rate:      636.819 MB/sec
[info]                  ·gc.alloc.rate.norm: 1408.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala":
[info]   716818.791 ±(99.9%) 30789.217 ops/s [Average]
[info]   (min, avg, max) = (709083.046, 716818.791, 727035.512), stdev = 7995.862
[info]   CI (99.9%): [686029.573, 747608.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   641.352 ±(99.9%) 27.410 MB/sec [Average]
[info]   (min, avg, max) = (634.610, 641.352, 650.407), stdev = 7.118
[info]   CI (99.9%): [613.942, 668.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1408.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1408.001, 1408.001, 1408.001), stdev = 0.001
[info]   CI (99.9%): [1408.001, 1408.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   540.734 ±(99.9%) 1163.971 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 540.734, 676.296), stdev = 302.279
[info]   CI (99.9%): [≈ 0, 1704.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1185.134 ±(99.9%) 2551.725 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1185.134, 1499.305), stdev = 662.675
[info]   CI (99.9%): [≈ 0, 3736.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.306 ±(99.9%) 2.461 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.306, 1.449), stdev = 0.639
[info]   CI (99.9%): [≈ 0, 2.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.664 ±(99.9%) 5.328 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.664, 3.137), stdev = 1.384
[info]   CI (99.9%): [≈ 0, 5.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless
[info] # Run progress: 79.29% complete, ETA 00:23:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3670027.618 ops/s
[info] # Warmup Iteration   2: 3914118.582 ops/s
[info] # Warmup Iteration   3: 3970677.334 ops/s
[info] # Warmup Iteration   4: 3988715.618 ops/s
[info] # Warmup Iteration   5: 4028561.438 ops/s
[info] Iteration   1: 3998296.940 ops/s
[info]                  ·gc.alloc.rate:                   2337.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     799.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3987295.511 ops/s
[info]                  ·gc.alloc.rate:                   2331.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1069.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3941127.275 ops/s
[info]                  ·gc.alloc.rate:                   2304.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     812.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4052200.101 ops/s
[info]                  ·gc.alloc.rate:                   2368.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2715.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1054.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4072669.595 ops/s
[info]                  ·gc.alloc.rate:                   2380.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     787.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless":
[info]   4010317.884 ±(99.9%) 202879.326 ops/s [Average]
[info]   (min, avg, max) = (3941127.275, 4010317.884, 4072669.595), stdev = 52687.117
[info]   CI (99.9%): [3807438.558, 4213197.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate":
[info]   2344.508 ±(99.9%) 117.351 MB/sec [Average]
[info]   (min, avg, max) = (2304.289, 2344.508, 2380.555), stdev = 30.476
[info]   CI (99.9%): [2227.157, 2461.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm":
[info]   920.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (920.000, 920.000, 920.000), stdev = 0.001
[info]   CI (99.9%): [920.000, 920.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   2306.351 ±(99.9%) 1431.869 MB/sec [Average]
[info]   (min, avg, max) = (2030.101, 2306.351, 2715.869), stdev = 371.852
[info]   CI (99.9%): [874.482, 3738.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   904.873 ±(99.9%) 554.838 B/op [Average]
[info]   (min, avg, max) = (787.877, 904.873, 1069.778), stdev = 144.090
[info]   CI (99.9%): [350.035, 1459.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.125), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.048 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.029, 0.049), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump
[info] # Run progress: 79.53% complete, ETA 00:23:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7348588.440 ops/s
[info] # Warmup Iteration   2: 7926652.365 ops/s
[info] # Warmup Iteration   3: 7706857.137 ops/s
[info] # Warmup Iteration   4: 7970519.508 ops/s
[info] # Warmup Iteration   5: 8063329.704 ops/s
[info] Iteration   1: 8108160.805 ops/s
[info]                  ·gc.alloc.rate:                   865.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 8123258.695 ops/s
[info]                  ·gc.alloc.rate:               867.243 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      675.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 130.870 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 8127629.997 ops/s
[info]                  ·gc.alloc.rate:               867.686 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      675.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 130.803 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 7941183.934 ops/s
[info]                  ·gc.alloc.rate:                   847.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          675.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     133.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 7942243.789 ops/s
[info]                  ·gc.alloc.rate:               848.103 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 267.708 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump":
[info]   8048495.444 ±(99.9%) 376384.198 ops/s [Average]
[info]   (min, avg, max) = (7941183.934, 8048495.444, 8127629.997), stdev = 97745.781
[info]   CI (99.9%): [7672111.246, 8424879.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   859.235 ±(99.9%) 40.047 MB/sec [Average]
[info]   (min, avg, max) = (847.656, 859.235, 867.686), stdev = 10.400
[info]   CI (99.9%): [819.188, 899.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   945.939 ±(99.9%) 1425.765 MB/sec [Average]
[info]   (min, avg, max) = (675.457, 945.939, 1351.640), stdev = 370.267
[info]   CI (99.9%): [≈ 0, 2371.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   185.124 ±(99.9%) 281.042 B/op [Average]
[info]   (min, avg, max) = (130.803, 185.124, 267.708), stdev = 72.986
[info]   CI (99.9%): [≈ 0, 466.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson
[info] # Run progress: 79.76% complete, ETA 00:23:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22270.058 ops/s
[info] # Warmup Iteration   2: 172430.170 ops/s
[info] # Warmup Iteration   3: 177390.032 ops/s
[info] # Warmup Iteration   4: 182699.026 ops/s
[info] # Warmup Iteration   5: 181832.658 ops/s
[info] Iteration   1: 181277.630 ops/s
[info]                  ·gc.alloc.rate:                   1557.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              13520.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11584.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.361 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 180664.055 ops/s
[info]                  ·gc.alloc.rate:                   1552.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              13520.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11638.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.544 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 181437.551 ops/s
[info]                  ·gc.alloc.rate:                   1558.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              13520.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17419.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.722 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 178578.517 ops/s
[info]                  ·gc.alloc.rate:               1533.982 MB/sec
[info]                  ·gc.alloc.rate.norm:          13520.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11818.166 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 178657.995 ops/s
[info]                  ·gc.alloc.rate:               1535.207 MB/sec
[info]                  ·gc.alloc.rate.norm:          13520.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11836.281 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson":
[info]   180123.150 ±(99.9%) 5406.564 ops/s [Average]
[info]   (min, avg, max) = (178578.517, 180123.150, 181437.551), stdev = 1404.068
[info]   CI (99.9%): [174716.585, 185529.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1547.412 ±(99.9%) 46.040 MB/sec [Average]
[info]   (min, avg, max) = (1533.982, 1547.412, 1558.592), stdev = 11.957
[info]   CI (99.9%): [1501.371, 1593.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   13520.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13520.002, 13520.002, 13520.003), stdev = 0.001
[info]   CI (99.9%): [13520.002, 13520.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1472.660 ±(99.9%) 1152.623 MB/sec [Average]
[info]   (min, avg, max) = (1334.258, 1472.660, 2008.078), stdev = 299.333
[info]   CI (99.9%): [320.037, 2625.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   12859.222 ±(99.9%) 9824.498 B/op [Average]
[info]   (min, avg, max) = (11584.398, 12859.222, 17419.060), stdev = 2551.391
[info]   CI (99.9%): [3034.724, 22683.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.326 ±(99.9%) 1.245 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.326, 0.722), stdev = 0.323
[info]   CI (99.9%): [≈ 0, 1.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.00% complete, ETA 00:22:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1038165.578 ops/s
[info] # Warmup Iteration   2: 1100584.950 ops/s
[info] # Warmup Iteration   3: 1107741.408 ops/s
[info] # Warmup Iteration   4: 1107487.189 ops/s
[info] # Warmup Iteration   5: 1107382.614 ops/s
[info] Iteration   1: 1107617.274 ops/s
[info]                  ·gc.alloc.rate:      61.959 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1106867.402 ops/s
[info]                  ·gc.alloc.rate:      61.900 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1095352.287 ops/s
[info]                  ·gc.alloc.rate:               61.245 MB/sec
[info]                  ·gc.alloc.rate.norm:          88.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 735.095 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1104038.135 ops/s
[info]                  ·gc.alloc.rate:      61.730 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1103911.411 ops/s
[info]                  ·gc.alloc.rate:      61.744 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala":
[info]   1103557.302 ±(99.9%) 18777.468 ops/s [Average]
[info]   (min, avg, max) = (1095352.287, 1103557.302, 1107617.274), stdev = 4876.449
[info]   CI (99.9%): [1084779.834, 1122334.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   61.716 ±(99.9%) 1.082 MB/sec [Average]
[info]   (min, avg, max) = (61.245, 61.716, 61.959), stdev = 0.281
[info]   CI (99.9%): [60.634, 62.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   88.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (88.000, 88.000, 88.000), stdev = 0.001
[info]   CI (99.9%): [88.000, 88.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   102.320 ±(99.9%) 881.006 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.320, 511.600), stdev = 228.795
[info]   CI (99.9%): [≈ 0, 983.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   147.019 ±(99.9%) 1265.878 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 147.019, 735.095), stdev = 328.745
[info]   CI (99.9%): [≈ 0, 1412.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.time":
[info]   2.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.24% complete, ETA 00:22:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30283.718 ops/s
[info] # Warmup Iteration   2: 63700.758 ops/s
[info] # Warmup Iteration   3: 63728.676 ops/s
[info] # Warmup Iteration   4: 64734.118 ops/s
[info] # Warmup Iteration   5: 64054.979 ops/s
[info] Iteration   1: 64888.049 ops/s
[info]                  ·gc.alloc.rate:                   2930.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              71056.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3365.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81610.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.525 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 64796.029 ops/s
[info]                  ·gc.alloc.rate:                   2925.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              71056.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2700.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65594.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.517 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 64319.649 ops/s
[info]                  ·gc.alloc.rate:                   2905.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              71056.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2708.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66243.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.528 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 64684.547 ops/s
[info]                  ·gc.alloc.rate:                   2920.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              71056.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3390.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82496.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 64622.364 ops/s
[info]                  ·gc.alloc.rate:                   2917.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              71056.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2716.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66159.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.535 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson":
[info]   64662.128 ±(99.9%) 835.565 ops/s [Average]
[info]   (min, avg, max) = (64319.649, 64662.128, 64888.049), stdev = 216.994
[info]   CI (99.9%): [63826.562, 65497.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2919.692 ±(99.9%) 36.337 MB/sec [Average]
[info]   (min, avg, max) = (2905.116, 2919.692, 2930.038), stdev = 9.437
[info]   CI (99.9%): [2883.354, 2956.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   71056.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (71056.007, 71056.007, 71056.007), stdev = 0.001
[info]   CI (99.9%): [71056.006, 71056.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2976.240 ±(99.9%) 1412.544 MB/sec [Average]
[info]   (min, avg, max) = (2700.489, 2976.240, 3390.576), stdev = 366.833
[info]   CI (99.9%): [1563.696, 4388.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   72420.774 ±(99.9%) 33894.779 B/op [Average]
[info]   (min, avg, max) = (65594.653, 72420.774, 82496.126), stdev = 8802.366
[info]   CI (99.9%): [38525.995, 106315.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.083, 0.104), stdev = 0.021
[info]   CI (99.9%): [0.003, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.026 ±(99.9%) 1.939 B/op [Average]
[info]   (min, avg, max) = (1.517, 2.026, 2.535), stdev = 0.504
[info]   CI (99.9%): [0.087, 3.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.47% complete, ETA 00:22:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1085047.305 ops/s
[info] # Warmup Iteration   2: 1556410.846 ops/s
[info] # Warmup Iteration   3: 1556801.528 ops/s
[info] # Warmup Iteration   4: 1563986.403 ops/s
[info] # Warmup Iteration   5: 1564780.383 ops/s
[info] Iteration   1: 1569271.418 ops/s
[info]                  ·gc.alloc.rate:                   901.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1339.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1560490.181 ops/s
[info]                  ·gc.alloc.rate:               896.342 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 673.214 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1556473.878 ops/s
[info]                  ·gc.alloc.rate:               894.242 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 675.628 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 1556395.844 ops/s
[info]                  ·gc.alloc.rate:                   893.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1351.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1553814.659 ops/s
[info]                  ·gc.alloc.rate:               892.445 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 677.111 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala":
[info]   1559289.196 ±(99.9%) 23371.471 ops/s [Average]
[info]   (min, avg, max) = (1553814.659, 1559289.196, 1569271.418), stdev = 6069.497
[info]   CI (99.9%): [1535917.725, 1582660.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   895.691 ±(99.9%) 13.548 MB/sec [Average]
[info]   (min, avg, max) = (892.445, 895.691, 901.473), stdev = 3.518
[info]   CI (99.9%): [882.143, 909.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   904.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (904.000, 904.000, 904.000), stdev = 0.001
[info]   CI (99.9%): [904.000, 904.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   935.280 ±(99.9%) 1408.766 MB/sec [Average]
[info]   (min, avg, max) = (667.511, 935.280, 1336.610), stdev = 365.852
[info]   CI (99.9%): [≈ 0, 2344.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   943.363 ±(99.9%) 1413.441 B/op [Average]
[info]   (min, avg, max) = (673.214, 943.363, 1351.630), stdev = 367.066
[info]   CI (99.9%): [≈ 0, 2356.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.201 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.71% complete, ETA 00:21:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1238428.827 ops/s
[info] # Warmup Iteration   2: 1352194.507 ops/s
[info] # Warmup Iteration   3: 1388726.800 ops/s
[info] # Warmup Iteration   4: 1383859.140 ops/s
[info] # Warmup Iteration   5: 1394432.272 ops/s
[info] Iteration   1: 1376331.141 ops/s
[info]                  ·gc.alloc.rate:                   384.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     585.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1378676.234 ops/s
[info]                  ·gc.alloc.rate:               385.430 MB/sec
[info]                  ·gc.alloc.rate.norm:          440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 584.047 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1375349.617 ops/s
[info]                  ·gc.alloc.rate:                   384.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     585.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1370203.362 ops/s
[info]                  ·gc.alloc.rate:      383.128 MB/sec
[info]                  ·gc.alloc.rate.norm: 440.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1374353.966 ops/s
[info]                  ·gc.alloc.rate:                   384.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     770.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.714 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.962 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala":
[info]   1374982.864 ±(99.9%) 11997.784 ops/s [Average]
[info]   (min, avg, max) = (1370203.362, 1374982.864, 1378676.234), stdev = 3115.786
[info]   CI (99.9%): [1362985.080, 1386980.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   384.460 ±(99.9%) 3.272 MB/sec [Average]
[info]   (min, avg, max) = (383.128, 384.460, 385.430), stdev = 0.850
[info]   CI (99.9%): [381.188, 387.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   440.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (440.000, 440.000, 440.000), stdev = 0.001
[info]   CI (99.9%): [440.000, 440.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   441.535 ±(99.9%) 987.664 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 441.535, 672.738), stdev = 256.493
[info]   CI (99.9%): [≈ 0, 1429.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   504.924 ±(99.9%) 1129.919 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 504.924, 770.080), stdev = 293.436
[info]   CI (99.9%): [≈ 0, 1634.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.353 ±(99.9%) 2.931 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.353, 1.714), stdev = 0.761
[info]   CI (99.9%): [≈ 0, 3.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.404 ±(99.9%) 3.355 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.404, 1.962), stdev = 0.871
[info]   CI (99.9%): [≈ 0, 3.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 80.94% complete, ETA 00:21:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 910014.412 ops/s
[info] # Warmup Iteration   2: 977556.326 ops/s
[info] # Warmup Iteration   3: 984375.649 ops/s
[info] # Warmup Iteration   4: 979692.509 ops/s
[info] # Warmup Iteration   5: 984655.955 ops/s
[info] Iteration   1: 982407.708 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 983589.776 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 982736.024 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 979786.815 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 971405.799 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   979985.224 ±(99.9%) 19260.344 ops/s [Average]
[info]   (min, avg, max) = (971405.799, 979985.224, 983589.776), stdev = 5001.850
[info]   CI (99.9%): [960724.881, 999245.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.18% complete, ETA 00:21:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21802.665 ops/s
[info] # Warmup Iteration   2: 38612.911 ops/s
[info] # Warmup Iteration   3: 39467.428 ops/s
[info] # Warmup Iteration   4: 38940.721 ops/s
[info] # Warmup Iteration   5: 38880.382 ops/s
[info] Iteration   1: 38340.444 ops/s
[info]                  ·gc.alloc.rate:                   1672.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              68648.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54895.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.855 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 38919.116 ops/s
[info]                  ·gc.alloc.rate:                   1697.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              68648.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81232.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.684 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 39033.764 ops/s
[info]                  ·gc.alloc.rate:                   1702.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              68648.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54122.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.357 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 38909.878 ops/s
[info]                  ·gc.alloc.rate:                   1697.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              68648.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81628.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.526 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 39037.961 ops/s
[info]                  ·gc.alloc.rate:                   1702.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              68648.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54331.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.839 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson":
[info]   38848.233 ±(99.9%) 1117.835 ops/s [Average]
[info]   (min, avg, max) = (38340.444, 38848.233, 39037.961), stdev = 290.298
[info]   CI (99.9%): [37730.397, 39966.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1694.649 ±(99.9%) 48.839 MB/sec [Average]
[info]   (min, avg, max) = (1672.369, 1694.649, 1702.644), stdev = 12.683
[info]   CI (99.9%): [1645.810, 1743.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   68648.011 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (68648.011, 68648.011, 68648.012), stdev = 0.001
[info]   CI (99.9%): [68648.009, 68648.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1611.030 ±(99.9%) 1416.518 MB/sec [Average]
[info]   (min, avg, max) = (1337.333, 1611.030, 2019.022), stdev = 367.865
[info]   CI (99.9%): [194.512, 3027.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   65242.112 ±(99.9%) 56917.978 B/op [Average]
[info]   (min, avg, max) = (54122.304, 65242.112, 81628.662), stdev = 14781.418
[info]   CI (99.9%): [8324.134, 122160.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.852 ±(99.9%) 4.205 B/op [Average]
[info]   (min, avg, max) = (0.839, 1.852, 3.357), stdev = 1.092
[info]   CI (99.9%): [≈ 0, 6.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.41% complete, ETA 00:21:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 227040.050 ops/s
[info] # Warmup Iteration   2: 253156.869 ops/s
[info] # Warmup Iteration   3: 255462.403 ops/s
[info] # Warmup Iteration   4: 256390.396 ops/s
[info] # Warmup Iteration   5: 257731.661 ops/s
[info] Iteration   1: 256849.120 ops/s
[info]                  ·gc.alloc.rate:                   1005.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              6160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8245.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 255065.820 ops/s
[info]                  ·gc.alloc.rate:               998.690 MB/sec
[info]                  ·gc.alloc.rate.norm:          6160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4151.474 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 256383.259 ops/s
[info]                  ·gc.alloc.rate:                   1003.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              6160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8264.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.639 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 249912.784 ops/s
[info]                  ·gc.alloc.rate:               978.361 MB/sec
[info]                  ·gc.alloc.rate.norm:          6160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4241.222 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 248198.797 ops/s
[info]                  ·gc.alloc.rate:               971.412 MB/sec
[info]                  ·gc.alloc.rate.norm:          6160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8544.994 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala":
[info]   253281.956 ±(99.9%) 15247.132 ops/s [Average]
[info]   (min, avg, max) = (248198.797, 253281.956, 256849.120), stdev = 3959.632
[info]   CI (99.9%): [238034.824, 268529.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   991.485 ±(99.9%) 59.869 MB/sec [Average]
[info]   (min, avg, max) = (971.412, 991.485, 1005.492), stdev = 15.548
[info]   CI (99.9%): [931.616, 1051.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6160.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6160.002, 6160.002, 6160.002), stdev = 0.001
[info]   CI (99.9%): [6160.002, 6160.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1077.267 ±(99.9%) 1419.882 MB/sec [Average]
[info]   (min, avg, max) = (673.058, 1077.267, 1347.517), stdev = 368.739
[info]   CI (99.9%): [≈ 0, 2497.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6689.474 ±(99.9%) 8776.441 B/op [Average]
[info]   (min, avg, max) = (4151.474, 6689.474, 8544.994), stdev = 2279.214
[info]   CI (99.9%): [≈ 0, 15465.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.153 ±(99.9%) 1.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.153, 0.639), stdev = 0.277
[info]   CI (99.9%): [≈ 0, 1.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.65% complete, ETA 00:20:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12320.653 ops/s
[info] # Warmup Iteration   2: 27599.060 ops/s
[info] # Warmup Iteration   3: 28126.940 ops/s
[info] # Warmup Iteration   4: 28127.601 ops/s
[info] # Warmup Iteration   5: 27669.551 ops/s
[info] Iteration   1: 28285.578 ops/s
[info]                  ·gc.alloc.rate:                   1497.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              83384.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74241.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.158 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 28284.390 ops/s
[info]                  ·gc.alloc.rate:                   1498.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              83384.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74339.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.317 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 28126.502 ops/s
[info]                  ·gc.alloc.rate:                   1490.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              83384.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112368.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.330 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 28135.003 ops/s
[info]                  ·gc.alloc.rate:               1490.739 MB/sec
[info]                  ·gc.alloc.rate.norm:          83384.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75047.337 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 28019.833 ops/s
[info]                  ·gc.alloc.rate:               1484.484 MB/sec
[info]                  ·gc.alloc.rate.norm:          83384.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75467.539 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson":
[info]   28170.261 ±(99.9%) 439.506 ops/s [Average]
[info]   (min, avg, max) = (28019.833, 28170.261, 28285.578), stdev = 114.138
[info]   CI (99.9%): [27730.755, 28609.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1492.341 ±(99.9%) 22.511 MB/sec [Average]
[info]   (min, avg, max) = (1484.484, 1492.341, 1498.583), stdev = 5.846
[info]   CI (99.9%): [1469.830, 1514.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   83384.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (83384.015, 83384.016, 83384.017), stdev = 0.001
[info]   CI (99.9%): [83384.013, 83384.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1472.593 ±(99.9%) 1153.010 MB/sec [Average]
[info]   (min, avg, max) = (1333.498, 1472.593, 2008.185), stdev = 299.433
[info]   CI (99.9%): [319.582, 2625.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   82292.985 ±(99.9%) 64769.722 B/op [Average]
[info]   (min, avg, max) = (74241.701, 82292.985, 112368.729), stdev = 16820.491
[info]   CI (99.9%): [17523.263, 147062.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.161 ±(99.9%) 4.473 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.161, 2.330), stdev = 1.162
[info]   CI (99.9%): [≈ 0, 5.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.88% complete, ETA 00:20:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 61385.340 ops/s
[info] # Warmup Iteration   2: 112625.261 ops/s
[info] # Warmup Iteration   3: 112845.690 ops/s
[info] # Warmup Iteration   4: 113181.043 ops/s
[info] # Warmup Iteration   5: 113937.407 ops/s
[info] Iteration   1: 112601.707 ops/s
[info]                  ·gc.alloc.rate:                   1448.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              20248.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18659.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.582 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 111632.536 ops/s
[info]                  ·gc.alloc.rate:                   1436.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              20248.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18844.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.174 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 112711.408 ops/s
[info]                  ·gc.alloc.rate:                   1450.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              20248.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28045.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.163 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 114385.378 ops/s
[info]                  ·gc.alloc.rate:                   1471.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              20248.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18468.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.573 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 112295.298 ops/s
[info]                  ·gc.alloc.rate:               1444.989 MB/sec
[info]                  ·gc.alloc.rate.norm:          20248.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18839.937 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala":
[info]   112725.266 ±(99.9%) 3922.350 ops/s [Average]
[info]   (min, avg, max) = (111632.536, 112725.266, 114385.378), stdev = 1018.622
[info]   CI (99.9%): [108802.915, 116647.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1450.295 ±(99.9%) 50.232 MB/sec [Average]
[info]   (min, avg, max) = (1436.192, 1450.295, 1471.531), stdev = 13.045
[info]   CI (99.9%): [1400.063, 1500.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   20248.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (20248.004, 20248.004, 20248.004), stdev = 0.001
[info]   CI (99.9%): [20248.003, 20248.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1473.387 ±(99.9%) 1152.016 MB/sec [Average]
[info]   (min, avg, max) = (1335.012, 1473.387, 2008.522), stdev = 299.175
[info]   CI (99.9%): [321.371, 2625.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20571.712 ±(99.9%) 16098.889 B/op [Average]
[info]   (min, avg, max) = (18468.913, 20571.712, 28045.497), stdev = 4180.830
[info]   CI (99.9%): [4472.823, 36670.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.698 ±(99.9%) 1.885 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.698, 1.174), stdev = 0.490
[info]   CI (99.9%): [≈ 0, 2.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.12% complete, ETA 00:20:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 316389.138 ops/s
[info] # Warmup Iteration   2: 354095.546 ops/s
[info] # Warmup Iteration   3: 353361.859 ops/s
[info] # Warmup Iteration   4: 358356.431 ops/s
[info] # Warmup Iteration   5: 356744.052 ops/s
[info] Iteration   1: 356710.169 ops/s
[info]                  ·gc.alloc.rate:                   1698.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              7496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8908.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 356716.495 ops/s
[info]                  ·gc.alloc.rate:                   1698.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              7496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5945.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.459 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 357099.961 ops/s
[info]                  ·gc.alloc.rate:                   1700.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              7496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8921.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 357817.156 ops/s
[info]                  ·gc.alloc.rate:                   1704.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              7496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5942.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 357853.475 ops/s
[info]                  ·gc.alloc.rate:                   1704.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              7496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8922.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala":
[info]   357239.451 ±(99.9%) 2181.526 ops/s [Average]
[info]   (min, avg, max) = (356710.169, 357239.451, 357853.475), stdev = 566.535
[info]   CI (99.9%): [355057.925, 359420.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1701.408 ±(99.9%) 10.243 MB/sec [Average]
[info]   (min, avg, max) = (1698.912, 1701.408, 1704.289), stdev = 2.660
[info]   CI (99.9%): [1691.165, 1711.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   7496.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7496.001, 7496.001, 7496.001), stdev = 0.001
[info]   CI (99.9%): [7496.001, 7496.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1754.078 ±(99.9%) 1423.062 MB/sec [Average]
[info]   (min, avg, max) = (1347.638, 1754.078, 2028.671), stdev = 369.565
[info]   CI (99.9%): [331.015, 3177.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   7728.138 ±(99.9%) 6271.306 B/op [Average]
[info]   (min, avg, max) = (5942.186, 7728.138, 8922.736), stdev = 1628.638
[info]   CI (99.9%): [1456.833, 13999.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.220 ±(99.9%) 0.592 B/op [Average]
[info]   (min, avg, max) = (0.092, 0.220, 0.459), stdev = 0.154
[info]   CI (99.9%): [≈ 0, 0.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 82.35% complete, ETA 00:20:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 364696.410 ops/s
[info] # Warmup Iteration   2: 422011.295 ops/s
[info] # Warmup Iteration   3: 427901.944 ops/s
[info] # Warmup Iteration   4: 428246.037 ops/s
[info] # Warmup Iteration   5: 417517.096 ops/s
[info] Iteration   1: 428868.857 ops/s
[info]                  ·gc.alloc.rate:               1469.284 MB/sec
[info]                  ·gc.alloc.rate.norm:          5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4938.226 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 428803.942 ops/s
[info]                  ·gc.alloc.rate:                   1469.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4941.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 424653.868 ops/s
[info]                  ·gc.alloc.rate:                   1454.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4994.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 427650.396 ops/s
[info]                  ·gc.alloc.rate:                   1465.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4964.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 427919.901 ops/s
[info]                  ·gc.alloc.rate:                   1466.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4966.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   427579.393 ±(99.9%) 6625.436 ops/s [Average]
[info]   (min, avg, max) = (424653.868, 427579.393, 428868.857), stdev = 1720.605
[info]   CI (99.9%): [420953.956, 434204.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1464.908 ±(99.9%) 22.726 MB/sec [Average]
[info]   (min, avg, max) = (1454.859, 1464.908, 1469.284), stdev = 5.902
[info]   CI (99.9%): [1442.182, 1487.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   5392.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5392.001, 5392.001, 5392.001), stdev = 0.001
[info]   CI (99.9%): [5392.001, 5392.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1347.779 ±(99.9%) 7.467 MB/sec [Average]
[info]   (min, avg, max) = (1345.633, 1347.779, 1350.411), stdev = 1.939
[info]   CI (99.9%): [1340.312, 1355.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   4960.946 ±(99.9%) 87.736 B/op [Average]
[info]   (min, avg, max) = (4938.226, 4960.946, 4994.642), stdev = 22.785
[info]   CI (99.9%): [4873.210, 5048.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.153 ±(99.9%) 0.417 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.153, 0.306), stdev = 0.108
[info]   CI (99.9%): [≈ 0, 0.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 82.59% complete, ETA 00:19:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31601.106 ops/s
[info] # Warmup Iteration   2: 57162.939 ops/s
[info] # Warmup Iteration   3: 56674.688 ops/s
[info] # Warmup Iteration   4: 57426.205 ops/s
[info] # Warmup Iteration   5: 57611.330 ops/s
[info] Iteration   1: 57450.760 ops/s
[info]                  ·gc.alloc.rate:                   1228.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              33648.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36542.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.141 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 57359.129 ops/s
[info]                  ·gc.alloc.rate:                   1226.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              33648.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36629.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.856 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 57373.749 ops/s
[info]                  ·gc.alloc.rate:               1226.633 MB/sec
[info]                  ·gc.alloc.rate.norm:          33648.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1336.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36656.213 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 55698.860 ops/s
[info]                  ·gc.alloc.rate:               1190.812 MB/sec
[info]                  ·gc.alloc.rate.norm:          33648.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37813.484 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 57535.330 ops/s
[info]                  ·gc.alloc.rate:                   1230.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              33648.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36680.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.708 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson":
[info]   57083.565 ±(99.9%) 2992.915 ops/s [Average]
[info]   (min, avg, max) = (55698.860, 57083.565, 57535.330), stdev = 777.250
[info]   CI (99.9%): [54090.651, 60076.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1220.454 ±(99.9%) 64.090 MB/sec [Average]
[info]   (min, avg, max) = (1190.812, 1220.454, 1230.244), stdev = 16.644
[info]   CI (99.9%): [1156.363, 1284.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   33648.010 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (33648.008, 33648.010, 33648.020), stdev = 0.005
[info]   CI (99.9%): [33647.990, 33648.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1336.908 ±(99.9%) 10.976 MB/sec [Average]
[info]   (min, avg, max) = (1333.940, 1336.908, 1341.121), stdev = 2.850
[info]   CI (99.9%): [1325.932, 1347.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   36864.419 ±(99.9%) 2052.758 B/op [Average]
[info]   (min, avg, max) = (36542.584, 36864.419, 37813.484), stdev = 533.095
[info]   CI (99.9%): [34811.661, 38917.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.141 ±(99.9%) 4.663 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.141, 2.856), stdev = 1.211
[info]   CI (99.9%): [≈ 0, 5.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 82.82% complete, ETA 00:19:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56574.163 ops/s
[info] # Warmup Iteration   2: 70429.814 ops/s
[info] # Warmup Iteration   3: 71288.674 ops/s
[info] # Warmup Iteration   4: 72200.984 ops/s
[info] # Warmup Iteration   5: 72249.361 ops/s
[info] Iteration   1: 70891.272 ops/s
[info]                  ·gc.alloc.rate:               1400.457 MB/sec
[info]                  ·gc.alloc.rate.norm:          31088.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29852.198 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 70774.643 ops/s
[info]                  ·gc.alloc.rate:                   1398.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              31088.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29923.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.852 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 72036.799 ops/s
[info]                  ·gc.alloc.rate:               1422.917 MB/sec
[info]                  ·gc.alloc.rate.norm:          31088.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29428.708 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 71403.696 ops/s
[info]                  ·gc.alloc.rate:                   1410.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              31088.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44584.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.918 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 72562.719 ops/s
[info]                  ·gc.alloc.rate:                   1433.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              31088.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29286.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.451 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce":
[info]   71533.826 ±(99.9%) 2931.154 ops/s [Average]
[info]   (min, avg, max) = (70774.643, 71533.826, 72562.719), stdev = 761.211
[info]   CI (99.9%): [68602.672, 74464.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1413.119 ±(99.9%) 57.254 MB/sec [Average]
[info]   (min, avg, max) = (1398.514, 1413.119, 1433.300), stdev = 14.869
[info]   CI (99.9%): [1355.865, 1470.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   31088.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (31088.006, 31088.006, 31088.007), stdev = 0.001
[info]   CI (99.9%): [31088.005, 31088.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1482.167 ±(99.9%) 1163.602 MB/sec [Average]
[info]   (min, avg, max) = (1344.786, 1482.167, 2022.718), stdev = 302.184
[info]   CI (99.9%): [318.565, 2645.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   32615.038 ±(99.9%) 25786.298 B/op [Average]
[info]   (min, avg, max) = (29286.039, 32615.038, 44584.485), stdev = 6696.620
[info]   CI (99.9%): [6828.740, 58401.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.644 ±(99.9%) 2.983 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.644, 1.852), stdev = 0.775
[info]   CI (99.9%): [≈ 0, 3.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.06% complete, ETA 00:19:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52078.564 ops/s
[info] # Warmup Iteration   2: 93909.454 ops/s
[info] # Warmup Iteration   3: 96578.583 ops/s
[info] # Warmup Iteration   4: 97686.250 ops/s
[info] # Warmup Iteration   5: 97199.931 ops/s
[info] Iteration   1: 98086.159 ops/s
[info]                  ·gc.alloc.rate:      663.181 MB/sec
[info]                  ·gc.alloc.rate.norm: 10640.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 97656.413 ops/s
[info]                  ·gc.alloc.rate:                   660.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              10640.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21477.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.231 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 100806.825 ops/s
[info]                  ·gc.alloc.rate:               681.589 MB/sec
[info]                  ·gc.alloc.rate.norm:          10640.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10421.380 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 100598.378 ops/s
[info]                  ·gc.alloc.rate:               680.068 MB/sec
[info]                  ·gc.alloc.rate.norm:          10640.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10442.925 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 100772.906 ops/s
[info]                  ·gc.alloc.rate:                   681.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              10640.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10424.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.300 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   99584.136 ±(99.9%) 6056.930 ops/s [Average]
[info]   (min, avg, max) = (97656.413, 99584.136, 100806.825), stdev = 1572.966
[info]   CI (99.9%): [93527.206, 105641.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   673.362 ±(99.9%) 40.281 MB/sec [Average]
[info]   (min, avg, max) = (660.737, 673.362, 681.589), stdev = 10.461
[info]   CI (99.9%): [633.081, 713.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   10640.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10640.004, 10640.004, 10640.005), stdev = 0.001
[info]   CI (99.9%): [10640.004, 10640.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   667.252 ±(99.9%) 1815.791 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 667.252, 1333.759), stdev = 471.555
[info]   CI (99.9%): [≈ 0, 2483.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   10553.349 ±(99.9%) 29247.418 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10553.349, 21477.853), stdev = 7595.462
[info]   CI (99.9%): [≈ 0, 39800.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.479 ±(99.9%) 3.948 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.479, 2.312), stdev = 1.025
[info]   CI (99.9%): [≈ 0, 4.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.706 ±(99.9%) 63.591 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.706, 37.231), stdev = 16.514
[info]   CI (99.9%): [≈ 0, 71.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 4.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.29% complete, ETA 00:19:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 175729.528 ops/s
[info] # Warmup Iteration   2: 190771.673 ops/s
[info] # Warmup Iteration   3: 189794.443 ops/s
[info] # Warmup Iteration   4: 190796.572 ops/s
[info] # Warmup Iteration   5: 188770.014 ops/s
[info] Iteration   1: 190763.517 ops/s
[info]                  ·gc.alloc.rate:                   785.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              6480.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5553.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.343 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 186503.249 ops/s
[info]                  ·gc.alloc.rate:               768.029 MB/sec
[info]                  ·gc.alloc.rate.norm:          6480.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5677.824 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 185075.927 ops/s
[info]                  ·gc.alloc.rate:                   761.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              6480.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5721.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 186562.200 ops/s
[info]                  ·gc.alloc.rate:                   768.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              6480.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5675.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.527 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 191239.685 ops/s
[info]                  ·gc.alloc.rate:                   787.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              6480.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11079.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.171 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   188028.915 ±(99.9%) 10717.343 ops/s [Average]
[info]   (min, avg, max) = (185075.927, 188028.915, 191239.685), stdev = 2783.260
[info]   CI (99.9%): [177311.573, 198746.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   774.317 ±(99.9%) 44.761 MB/sec [Average]
[info]   (min, avg, max) = (761.995, 774.317, 787.691), stdev = 11.624
[info]   CI (99.9%): [729.556, 819.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6480.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6480.002, 6480.002, 6480.002), stdev = 0.001
[info]   CI (99.9%): [6480.002, 6480.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   807.752 ±(99.9%) 1160.335 MB/sec [Average]
[info]   (min, avg, max) = (672.787, 807.752, 1346.797), stdev = 301.335
[info]   CI (99.9%): [≈ 0, 1968.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6741.655 ±(99.9%) 9340.729 B/op [Average]
[info]   (min, avg, max) = (5553.473, 6741.655, 11079.538), stdev = 2425.758
[info]   CI (99.9%): [≈ 0, 16082.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.244 ±(99.9%) 0.768 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.244, 0.527), stdev = 0.200
[info]   CI (99.9%): [≈ 0, 1.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.53% complete, ETA 00:18:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11852.720 ops/s
[info] # Warmup Iteration   2: 27281.331 ops/s
[info] # Warmup Iteration   3: 27625.799 ops/s
[info] # Warmup Iteration   4: 27505.433 ops/s
[info] # Warmup Iteration   5: 27483.654 ops/s
[info] Iteration   1: 27733.877 ops/s
[info]                  ·gc.alloc.rate:                   1489.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              84544.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75716.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.363 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 27842.997 ops/s
[info]                  ·gc.alloc.rate:                   1495.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              84544.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75514.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.530 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 27555.600 ops/s
[info]                  ·gc.alloc.rate:                   1480.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              84544.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114692.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.756 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 27847.554 ops/s
[info]                  ·gc.alloc.rate:               1495.865 MB/sec
[info]                  ·gc.alloc.rate.norm:          84544.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75823.354 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 27931.314 ops/s
[info]                  ·gc.alloc.rate:                   1500.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              84544.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75707.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.173 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson":
[info]   27782.269 ±(99.9%) 557.629 ops/s [Average]
[info]   (min, avg, max) = (27555.600, 27782.269, 27931.314), stdev = 144.815
[info]   CI (99.9%): [27224.639, 28339.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1492.402 ±(99.9%) 29.865 MB/sec [Average]
[info]   (min, avg, max) = (1480.253, 1492.402, 1500.377), stdev = 7.756
[info]   CI (99.9%): [1462.537, 1522.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   84544.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (84544.015, 84544.016, 84544.017), stdev = 0.001
[info]   CI (99.9%): [84544.014, 84544.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1472.692 ±(99.9%) 1152.639 MB/sec [Average]
[info]   (min, avg, max) = (1334.269, 1472.692, 2008.117), stdev = 299.337
[info]   CI (99.9%): [320.053, 2625.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   83490.937 ±(99.9%) 67165.639 B/op [Average]
[info]   (min, avg, max) = (75514.190, 83490.937, 114692.756), stdev = 17442.703
[info]   CI (99.9%): [16325.299, 150656.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.364 ±(99.9%) 7.226 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.364, 4.756), stdev = 1.877
[info]   CI (99.9%): [≈ 0, 9.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.76% complete, ETA 00:18:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71447.887 ops/s
[info] # Warmup Iteration   2: 139664.383 ops/s
[info] # Warmup Iteration   3: 143785.087 ops/s
[info] # Warmup Iteration   4: 145524.794 ops/s
[info] # Warmup Iteration   5: 143774.859 ops/s
[info] Iteration   1: 143799.135 ops/s
[info]                  ·gc.alloc.rate:                   981.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14597.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.456 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 142660.922 ops/s
[info]                  ·gc.alloc.rate:               973.177 MB/sec
[info]                  ·gc.alloc.rate.norm:          10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7356.339 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 145476.085 ops/s
[info]                  ·gc.alloc.rate:                   992.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14438.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.901 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 146741.552 ops/s
[info]                  ·gc.alloc.rate:               1001.005 MB/sec
[info]                  ·gc.alloc.rate.norm:          10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7162.502 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 146285.024 ops/s
[info]                  ·gc.alloc.rate:                   997.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14383.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.896 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   144992.544 ±(99.9%) 6620.431 ops/s [Average]
[info]   (min, avg, max) = (142660.922, 144992.544, 146741.552), stdev = 1719.305
[info]   CI (99.9%): [138372.113, 151612.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   989.140 ±(99.9%) 44.893 MB/sec [Average]
[info]   (min, avg, max) = (973.177, 989.140, 1001.005), stdev = 11.659
[info]   CI (99.9%): [944.246, 1034.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   10736.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10736.003, 10736.003, 10736.003), stdev = 0.001
[info]   CI (99.9%): [10736.003, 10736.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1068.072 ±(99.9%) 1408.702 MB/sec [Average]
[info]   (min, avg, max) = (666.823, 1068.072, 1336.873), stdev = 365.835
[info]   CI (99.9%): [≈ 0, 2476.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   11587.669 ±(99.9%) 15219.684 B/op [Average]
[info]   (min, avg, max) = (7162.502, 11587.669, 14597.075), stdev = 3952.504
[info]   CI (99.9%): [≈ 0, 26807.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.450 ±(99.9%) 1.730 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.450, 0.901), stdev = 0.449
[info]   CI (99.9%): [≈ 0, 2.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.00% complete, ETA 00:18:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 518902.653 ops/s
[info] # Warmup Iteration   2: 559118.880 ops/s
[info] # Warmup Iteration   3: 565089.468 ops/s
[info] # Warmup Iteration   4: 571052.485 ops/s
[info] # Warmup Iteration   5: 569212.286 ops/s
[info] Iteration   1: 568658.488 ops/s
[info]                  ·gc.alloc.rate:                   633.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              1752.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1861.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.751 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.846 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 569931.941 ops/s
[info]                  ·gc.alloc.rate:                   634.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              1752.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1857.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 558965.405 ops/s
[info]                  ·gc.alloc.rate:      622.247 MB/sec
[info]                  ·gc.alloc.rate.norm: 1752.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 572047.163 ops/s
[info]                  ·gc.alloc.rate:                   636.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              1752.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1849.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 557275.450 ops/s
[info]                  ·gc.alloc.rate:               620.347 MB/sec
[info]                  ·gc.alloc.rate.norm:          1752.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1898.333 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   565375.689 ±(99.9%) 26027.503 ops/s [Average]
[info]   (min, avg, max) = (557275.450, 565375.689, 572047.163), stdev = 6759.260
[info]   CI (99.9%): [539348.186, 591403.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   629.451 ±(99.9%) 29.189 MB/sec [Average]
[info]   (min, avg, max) = (620.347, 629.451, 636.759), stdev = 7.580
[info]   CI (99.9%): [600.262, 658.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1752.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1752.001, 1752.001, 1752.001), stdev = 0.001
[info]   CI (99.9%): [1752.001, 1752.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   537.944 ±(99.9%) 1157.965 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 537.944, 672.783), stdev = 300.720
[info]   CI (99.9%): [≈ 0, 1695.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1493.183 ±(99.9%) 3215.011 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1493.183, 1898.333), stdev = 834.928
[info]   CI (99.9%): [≈ 0, 4708.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.363 ±(99.9%) 2.990 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.363, 1.751), stdev = 0.776
[info]   CI (99.9%): [≈ 0, 3.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.004 ±(99.9%) 8.273 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.004, 4.846), stdev = 2.148
[info]   CI (99.9%): [≈ 0, 9.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 84.24% complete, ETA 00:17:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 538650.764 ops/s
[info] # Warmup Iteration   2: 592089.272 ops/s
[info] # Warmup Iteration   3: 593272.041 ops/s
[info] # Warmup Iteration   4: 593725.985 ops/s
[info] # Warmup Iteration   5: 595011.419 ops/s
[info] Iteration   1: 595117.340 ops/s
[info]                  ·gc.alloc.rate:      12.102 MB/sec
[info]                  ·gc.alloc.rate.norm: 32.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 594374.511 ops/s
[info]                  ·gc.alloc.rate:      12.087 MB/sec
[info]                  ·gc.alloc.rate.norm: 32.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 594272.627 ops/s
[info]                  ·gc.alloc.rate:      12.085 MB/sec
[info]                  ·gc.alloc.rate.norm: 32.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 595141.393 ops/s
[info]                  ·gc.alloc.rate:      12.103 MB/sec
[info]                  ·gc.alloc.rate.norm: 32.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 593824.184 ops/s
[info]                  ·gc.alloc.rate:      12.074 MB/sec
[info]                  ·gc.alloc.rate.norm: 32.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   594546.011 ±(99.9%) 2200.334 ops/s [Average]
[info]   (min, avg, max) = (593824.184, 594546.011, 595141.393), stdev = 571.420
[info]   CI (99.9%): [592345.677, 596746.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   12.090 ±(99.9%) 0.047 MB/sec [Average]
[info]   (min, avg, max) = (12.074, 12.090, 12.103), stdev = 0.012
[info]   CI (99.9%): [12.043, 12.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   32.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (32.001, 32.001, 32.001), stdev = 0.001
[info]   CI (99.9%): [32.001, 32.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 84.47% complete, ETA 00:17:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34479.555 ops/s
[info] # Warmup Iteration   2: 68153.964 ops/s
[info] # Warmup Iteration   3: 67934.793 ops/s
[info] # Warmup Iteration   4: 68443.590 ops/s
[info] # Warmup Iteration   5: 68540.711 ops/s
[info] Iteration   1: 68598.644 ops/s
[info]                  ·gc.alloc.rate:                   1258.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              28864.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15305.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.478 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 68582.515 ops/s
[info]                  ·gc.alloc.rate:                   1257.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              28864.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30634.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.911 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 68364.743 ops/s
[info]                  ·gc.alloc.rate:               1253.965 MB/sec
[info]                  ·gc.alloc.rate.norm:          28864.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1336.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30762.891 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 68387.559 ops/s
[info]                  ·gc.alloc.rate:                   1254.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              28864.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30798.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.958 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 68534.998 ops/s
[info]                  ·gc.alloc.rate:                   1256.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              28864.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30792.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.912 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson":
[info]   68493.692 ±(99.9%) 424.020 ops/s [Average]
[info]   (min, avg, max) = (68364.743, 68493.692, 68598.644), stdev = 110.117
[info]   CI (99.9%): [68069.672, 68917.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1256.173 ±(99.9%) 7.598 MB/sec [Average]
[info]   (min, avg, max) = (1253.965, 1256.173, 1258.080), stdev = 1.973
[info]   CI (99.9%): [1248.576, 1263.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   28864.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (28864.006, 28864.006, 28864.007), stdev = 0.001
[info]   CI (99.9%): [28864.006, 28864.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1203.525 ±(99.9%) 1154.669 MB/sec [Average]
[info]   (min, avg, max) = (667.127, 1203.525, 1340.857), stdev = 299.864
[info]   CI (99.9%): [48.857, 2358.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   27659.009 ±(99.9%) 26592.354 B/op [Average]
[info]   (min, avg, max) = (15305.838, 27659.009, 30798.538), stdev = 6905.950
[info]   CI (99.9%): [1066.655, 54251.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.052 ±(99.9%) 3.292 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.052, 1.912), stdev = 0.855
[info]   CI (99.9%): [≈ 0, 4.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 84.71% complete, ETA 00:17:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62563.498 ops/s
[info] # Warmup Iteration   2: 73514.683 ops/s
[info] # Warmup Iteration   3: 73945.302 ops/s
[info] # Warmup Iteration   4: 75443.875 ops/s
[info] # Warmup Iteration   5: 74199.104 ops/s
[info] Iteration   1: 74685.952 ops/s
[info]                  ·gc.alloc.rate:                   1375.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              28992.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28342.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.877 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 74424.326 ops/s
[info]                  ·gc.alloc.rate:                   1371.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              28992.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28462.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.761 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 74499.625 ops/s
[info]                  ·gc.alloc.rate:               1372.594 MB/sec
[info]                  ·gc.alloc.rate.norm:          28992.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28455.900 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 74662.791 ops/s
[info]                  ·gc.alloc.rate:                   1375.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              28992.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28428.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.755 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 75716.046 ops/s
[info]                  ·gc.alloc.rate:               1394.755 MB/sec
[info]                  ·gc.alloc.rate.norm:          28992.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28065.964 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce":
[info]   74797.748 ±(99.9%) 2021.409 ops/s [Average]
[info]   (min, avg, max) = (74424.326, 74797.748, 75716.046), stdev = 524.953
[info]   CI (99.9%): [72776.339, 76819.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1377.982 ±(99.9%) 36.927 MB/sec [Average]
[info]   (min, avg, max) = (1371.112, 1377.982, 1394.755), stdev = 9.590
[info]   CI (99.9%): [1341.054, 1414.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   28992.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (28992.006, 28992.006, 28992.006), stdev = 0.001
[info]   CI (99.9%): [28992.005, 28992.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1347.477 ±(99.9%) 7.852 MB/sec [Average]
[info]   (min, avg, max) = (1345.129, 1347.477, 1350.205), stdev = 2.039
[info]   CI (99.9%): [1339.625, 1355.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   28351.120 ±(99.9%) 640.875 B/op [Average]
[info]   (min, avg, max) = (28065.964, 28351.120, 28462.677), stdev = 166.433
[info]   CI (99.9%): [27710.244, 28991.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.879 ±(99.9%) 3.385 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.879, 1.761), stdev = 0.879
[info]   CI (99.9%): [≈ 0, 4.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.94% complete, ETA 00:17:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 81518.189 ops/s
[info] # Warmup Iteration   2: 145389.523 ops/s
[info] # Warmup Iteration   3: 149832.727 ops/s
[info] # Warmup Iteration   4: 149860.268 ops/s
[info] # Warmup Iteration   5: 150408.804 ops/s
[info] Iteration   1: 150675.517 ops/s
[info]                  ·gc.alloc.rate:               644.103 MB/sec
[info]                  ·gc.alloc.rate.norm:          6728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5343.772 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 149983.074 ops/s
[info]                  ·gc.alloc.rate:                   641.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              6728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7000.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.297 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.100 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 151160.172 ops/s
[info]                  ·gc.alloc.rate:               646.243 MB/sec
[info]                  ·gc.alloc.rate.norm:          6728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6946.210 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 149672.172 ops/s
[info]                  ·gc.alloc.rate:                   640.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              6728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7011.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.657 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 149143.474 ops/s
[info]                  ·gc.alloc.rate:               637.592 MB/sec
[info]                  ·gc.alloc.rate.norm:          6728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7036.526 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala":
[info]   150126.882 ±(99.9%) 3082.453 ops/s [Average]
[info]   (min, avg, max) = (149143.474, 150126.882, 151160.172), stdev = 800.503
[info]   CI (99.9%): [147044.429, 153209.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   641.887 ±(99.9%) 13.026 MB/sec [Average]
[info]   (min, avg, max) = (637.592, 641.887, 646.243), stdev = 3.383
[info]   CI (99.9%): [628.861, 654.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   6728.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6728.003, 6728.003, 6728.003), stdev = 0.001
[info]   CI (99.9%): [6728.003, 6728.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   636.013 ±(99.9%) 267.842 MB/sec [Average]
[info]   (min, avg, max) = (511.584, 636.013, 667.395), stdev = 69.558
[info]   CI (99.9%): [368.170, 903.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6667.701 ±(99.9%) 2852.685 B/op [Average]
[info]   (min, avg, max) = (5343.772, 6667.701, 7036.526), stdev = 740.833
[info]   CI (99.9%): [3815.016, 9520.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.472 ±(99.9%) 3.931 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.472, 2.297), stdev = 1.021
[info]   CI (99.9%): [≈ 0, 4.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.951 ±(99.9%) 41.233 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.951, 24.100), stdev = 10.708
[info]   CI (99.9%): [≈ 0, 46.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.18% complete, ETA 00:16:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 217494.352 ops/s
[info] # Warmup Iteration   2: 239371.854 ops/s
[info] # Warmup Iteration   3: 234613.082 ops/s
[info] # Warmup Iteration   4: 232519.128 ops/s
[info] # Warmup Iteration   5: 240307.164 ops/s
[info] Iteration   1: 240988.424 ops/s
[info]                  ·gc.alloc.rate:                   858.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8792.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.408 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 240470.636 ops/s
[info]                  ·gc.alloc.rate:               856.860 MB/sec
[info]                  ·gc.alloc.rate.norm:          5608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4403.437 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 241057.091 ops/s
[info]                  ·gc.alloc.rate:                   858.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4394.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 240311.245 ops/s
[info]                  ·gc.alloc.rate:               856.302 MB/sec
[info]                  ·gc.alloc.rate.norm:          5608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4408.384 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 241694.691 ops/s
[info]                  ·gc.alloc.rate:                   861.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8770.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.271 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala":
[info]   240904.418 ±(99.9%) 2104.613 ops/s [Average]
[info]   (min, avg, max) = (240311.245, 240904.418, 241694.691), stdev = 546.561
[info]   CI (99.9%): [238799.804, 243009.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   858.474 ±(99.9%) 7.978 MB/sec [Average]
[info]   (min, avg, max) = (856.302, 858.474, 861.571), stdev = 2.072
[info]   CI (99.9%): [850.495, 866.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5608.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5608.002, 5608.002, 5608.002), stdev = 0.001
[info]   CI (99.9%): [5608.002, 5608.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.568 ±(99.9%) 1421.234 MB/sec [Average]
[info]   (min, avg, max) = (672.811, 942.568, 1347.481), stdev = 369.090
[info]   CI (99.9%): [≈ 0, 2363.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6153.964 ±(99.9%) 9236.349 B/op [Average]
[info]   (min, avg, max) = (4394.927, 6153.964, 8792.260), stdev = 2398.651
[info]   CI (99.9%): [≈ 0, 15390.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.163 ±(99.9%) 0.682 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.163, 0.408), stdev = 0.177
[info]   CI (99.9%): [≈ 0, 0.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 85.41% complete, ETA 00:16:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26472.364 ops/s
[info] # Warmup Iteration   2: 41617.812 ops/s
[info] # Warmup Iteration   3: 41902.720 ops/s
[info] # Warmup Iteration   4: 42315.723 ops/s
[info] # Warmup Iteration   5: 41744.168 ops/s
[info] Iteration   1: 42298.593 ops/s
[info]                  ·gc.alloc.rate:                   1702.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              63328.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49858.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.549 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 42070.970 ops/s
[info]                  ·gc.alloc.rate:                   1692.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              63328.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75298.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.230 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 42283.512 ops/s
[info]                  ·gc.alloc.rate:                   1701.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              63328.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50062.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 42205.188 ops/s
[info]                  ·gc.alloc.rate:               1698.278 MB/sec
[info]                  ·gc.alloc.rate.norm:          63328.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2020.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75343.655 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 42289.508 ops/s
[info]                  ·gc.alloc.rate:                   1701.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              63328.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50214.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.775 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson":
[info]   42229.554 ±(99.9%) 370.417 ops/s [Average]
[info]   (min, avg, max) = (42070.970, 42229.554, 42298.593), stdev = 96.196
[info]   CI (99.9%): [41859.137, 42599.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1699.333 ±(99.9%) 15.151 MB/sec [Average]
[info]   (min, avg, max) = (1692.883, 1699.333, 1702.356), stdev = 3.935
[info]   CI (99.9%): [1684.182, 1714.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63328.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (63328.010, 63328.010, 63328.010), stdev = 0.001
[info]   CI (99.9%): [63328.010, 63328.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1613.606 ±(99.9%) 1417.007 MB/sec [Average]
[info]   (min, avg, max) = (1340.272, 1613.606, 2020.504), stdev = 367.992
[info]   CI (99.9%): [196.598, 3030.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   60155.576 ±(99.9%) 53311.665 B/op [Average]
[info]   (min, avg, max) = (49858.421, 60155.576, 75343.655), stdev = 13844.870
[info]   CI (99.9%): [6843.911, 113467.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.253 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.167), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.331 ±(99.9%) 9.483 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.331, 6.230), stdev = 2.463
[info]   CI (99.9%): [≈ 0, 11.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 85.65% complete, ETA 00:16:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 167238.843 ops/s
[info] # Warmup Iteration   2: 218906.307 ops/s
[info] # Warmup Iteration   3: 224817.031 ops/s
[info] # Warmup Iteration   4: 219097.516 ops/s
[info] # Warmup Iteration   5: 221699.339 ops/s
[info] Iteration   1: 224820.475 ops/s
[info]                  ·gc.alloc.rate:                   1536.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9396.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 224130.836 ops/s
[info]                  ·gc.alloc.rate:                   1531.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9434.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.585 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 224996.871 ops/s
[info]                  ·gc.alloc.rate:                   1537.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14118.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.874 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 224537.408 ops/s
[info]                  ·gc.alloc.rate:                   1533.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9448.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.438 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 224594.720 ops/s
[info]                  ·gc.alloc.rate:                   1534.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9457.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce":
[info]   224616.062 ±(99.9%) 1260.883 ops/s [Average]
[info]   (min, avg, max) = (224130.836, 224616.062, 224996.871), stdev = 327.447
[info]   CI (99.9%): [223355.179, 225876.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1534.611 ±(99.9%) 9.067 MB/sec [Average]
[info]   (min, avg, max) = (1531.203, 1534.611, 1537.118), stdev = 2.355
[info]   CI (99.9%): [1525.544, 1543.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10752.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10752.002, 10752.002, 10752.002), stdev = 0.001
[info]   CI (99.9%): [10752.002, 10752.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1480.475 ±(99.9%) 1158.046 MB/sec [Average]
[info]   (min, avg, max) = (1342.838, 1480.475, 2018.433), stdev = 300.741
[info]   CI (99.9%): [322.429, 2638.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10371.190 ±(99.9%) 8067.406 B/op [Average]
[info]   (min, avg, max) = (9396.594, 10371.190, 14118.753), stdev = 2095.080
[info]   CI (99.9%): [2303.784, 18438.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.438 ±(99.9%) 1.190 B/op [Average]
[info]   (min, avg, max) = (0.146, 0.438, 0.874), stdev = 0.309
[info]   CI (99.9%): [≈ 0, 1.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.88% complete, ETA 00:16:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 304979.565 ops/s
[info] # Warmup Iteration   2: 517447.035 ops/s
[info] # Warmup Iteration   3: 528404.058 ops/s
[info] # Warmup Iteration   4: 526636.537 ops/s
[info] # Warmup Iteration   5: 529442.490 ops/s
[info] Iteration   1: 532501.653 ops/s
[info]                  ·gc.alloc.rate:                   427.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1512.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 532199.647 ops/s
[info]                  ·gc.alloc.rate:               427.449 MB/sec
[info]                  ·gc.alloc.rate.norm:          1264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1512.989 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 531359.259 ops/s
[info]                  ·gc.alloc.rate:                   426.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1515.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 532181.544 ops/s
[info]                  ·gc.alloc.rate:                   427.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1971.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.344 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.933 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 525186.062 ops/s
[info]                  ·gc.alloc.rate:      421.785 MB/sec
[info]                  ·gc.alloc.rate.norm: 1264.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala":
[info]   530685.633 ±(99.9%) 11950.493 ops/s [Average]
[info]   (min, avg, max) = (525186.062, 530685.633, 532501.653), stdev = 3103.505
[info]   CI (99.9%): [518735.141, 542636.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   426.204 ±(99.9%) 9.601 MB/sec [Average]
[info]   (min, avg, max) = (421.785, 426.204, 427.653), stdev = 2.493
[info]   CI (99.9%): [416.604, 435.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1264.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1264.001, 1264.001, 1264.001), stdev = 0.001
[info]   CI (99.9%): [1264.001, 1264.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   440.261 ±(99.9%) 982.235 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 440.261, 666.459), stdev = 255.083
[info]   CI (99.9%): [≈ 0, 1422.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1302.300 ±(99.9%) 2905.284 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1302.300, 1971.078), stdev = 754.493
[info]   CI (99.9%): [≈ 0, 4207.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.474 ±(99.9%) 4.026 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.474, 2.344), stdev = 1.045
[info]   CI (99.9%): [≈ 0, 4.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.402 ±(99.9%) 11.906 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.402, 6.933), stdev = 3.092
[info]   CI (99.9%): [≈ 0, 13.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.12% complete, ETA 00:15:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 617626.572 ops/s
[info] # Warmup Iteration   2: 674008.909 ops/s
[info] # Warmup Iteration   3: 676282.420 ops/s
[info] # Warmup Iteration   4: 676851.105 ops/s
[info] # Warmup Iteration   5: 680435.229 ops/s
[info] Iteration   1: 675466.320 ops/s
[info]                  ·gc.alloc.rate:                   364.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1192.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 679511.947 ops/s
[info]                  ·gc.alloc.rate:               366.110 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1184.987 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 680242.852 ops/s
[info]                  ·gc.alloc.rate:      366.525 MB/sec
[info]                  ·gc.alloc.rate.norm: 848.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 680511.537 ops/s
[info]                  ·gc.alloc.rate:               366.663 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1183.227 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 683392.244 ops/s
[info]                  ·gc.alloc.rate:      368.198 MB/sec
[info]                  ·gc.alloc.rate.norm: 848.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala":
[info]   679824.980 ±(99.9%) 10970.494 ops/s [Average]
[info]   (min, avg, max) = (675466.320, 679824.980, 683392.244), stdev = 2849.003
[info]   CI (99.9%): [668854.485, 690795.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   366.305 ±(99.9%) 5.767 MB/sec [Average]
[info]   (min, avg, max) = (364.030, 366.305, 368.198), stdev = 1.498
[info]   CI (99.9%): [360.538, 372.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   848.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.001, 848.001, 848.001), stdev = 0.001
[info]   CI (99.9%): [848.001, 848.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.988 ±(99.9%) 1079.107 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.988, 511.735), stdev = 280.241
[info]   CI (99.9%): [≈ 0, 1386.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   712.058 ±(99.9%) 2503.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 712.058, 1192.077), stdev = 650.026
[info]   CI (99.9%): [≈ 0, 3215.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.003 ±(99.9%) 0.026 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.015), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.035), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 86.35% complete, ETA 00:15:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 622654.022 ops/s
[info] # Warmup Iteration   2: 678839.203 ops/s
[info] # Warmup Iteration   3: 684385.867 ops/s
[info] # Warmup Iteration   4: 682351.981 ops/s
[info] # Warmup Iteration   5: 684210.083 ops/s
[info] Iteration   1: 688338.109 ops/s
[info]                  ·gc.alloc.rate:      6.998 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 691320.794 ops/s
[info]                  ·gc.alloc.rate:      7.030 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 691116.538 ops/s
[info]                  ·gc.alloc.rate:      7.026 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 691761.242 ops/s
[info]                  ·gc.alloc.rate:      7.032 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 691322.846 ops/s
[info]                  ·gc.alloc.rate:      7.028 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   690771.906 ±(99.9%) 5316.726 ops/s [Average]
[info]   (min, avg, max) = (688338.109, 690771.906, 691761.242), stdev = 1380.737
[info]   CI (99.9%): [685455.179, 696088.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   7.023 ±(99.9%) 0.055 MB/sec [Average]
[info]   (min, avg, max) = (6.998, 7.023, 7.032), stdev = 0.014
[info]   CI (99.9%): [6.968, 7.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.001, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 86.59% complete, ETA 00:15:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21545.789 ops/s
[info] # Warmup Iteration   2: 29842.771 ops/s
[info] # Warmup Iteration   3: 30337.372 ops/s
[info] # Warmup Iteration   4: 29734.191 ops/s
[info] # Warmup Iteration   5: 30555.714 ops/s
[info] Iteration   1: 29676.392 ops/s
[info]                  ·gc.alloc.rate:                   1560.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              82736.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2011.553 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106677.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.208 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 30397.383 ops/s
[info]                  ·gc.alloc.rate:                   1597.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              82736.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69532.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.156 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 30443.334 ops/s
[info]                  ·gc.alloc.rate:                   1600.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              82736.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69513.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.229 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 30457.636 ops/s
[info]                  ·gc.alloc.rate:                   1601.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              82736.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104399.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.227 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 30272.696 ops/s
[info]                  ·gc.alloc.rate:               1591.732 MB/sec
[info]                  ·gc.alloc.rate.norm:          82736.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 70129.018 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson":
[info]   30249.488 ±(99.9%) 1265.088 ops/s [Average]
[info]   (min, avg, max) = (29676.392, 30249.488, 30457.636), stdev = 328.539
[info]   CI (99.9%): [28984.400, 31514.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1590.399 ±(99.9%) 66.873 MB/sec [Average]
[info]   (min, avg, max) = (1560.109, 1590.399, 1601.807), stdev = 17.367
[info]   CI (99.9%): [1523.527, 1657.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   82736.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (82736.014, 82736.014, 82736.015), stdev = 0.001
[info]   CI (99.9%): [82736.013, 82736.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1613.909 ±(99.9%) 1414.868 MB/sec [Average]
[info]   (min, avg, max) = (1342.943, 1613.909, 2021.227), stdev = 367.437
[info]   CI (99.9%): [199.041, 3028.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   84050.413 ±(99.9%) 75603.010 B/op [Average]
[info]   (min, avg, max) = (69513.618, 84050.413, 106677.063), stdev = 19633.862
[info]   CI (99.9%): [8447.403, 159653.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.164 ±(99.9%) 5.075 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.164, 3.229), stdev = 1.318
[info]   CI (99.9%): [≈ 0, 7.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce
[info] # Run progress: 86.82% complete, ETA 00:15:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 229670.468 ops/s
[info] # Warmup Iteration   2: 674904.138 ops/s
[info] # Warmup Iteration   3: 693081.885 ops/s
[info] # Warmup Iteration   4: 684819.688 ops/s
[info] # Warmup Iteration   5: 685872.006 ops/s
[info] Iteration   1: 698523.258 ops/s
[info]                  ·gc.alloc.rate:                   2236.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              5040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2694.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6071.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 697465.489 ops/s
[info]                  ·gc.alloc.rate:                   2234.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              5040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4569.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 701563.592 ops/s
[info]                  ·gc.alloc.rate:                   2246.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              5040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4549.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 700454.924 ops/s
[info]                  ·gc.alloc.rate:                   2243.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              5040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4562.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 699323.850 ops/s
[info]                  ·gc.alloc.rate:                   2239.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              5040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6103.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce":
[info]   699466.223 ±(99.9%) 6175.717 ops/s [Average]
[info]   (min, avg, max) = (697465.489, 699466.223, 701563.592), stdev = 1603.814
[info]   CI (99.9%): [693290.506, 705641.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate":
[info]   2240.164 ±(99.9%) 18.889 MB/sec [Average]
[info]   (min, avg, max) = (2234.398, 2240.164, 2246.584), stdev = 4.906
[info]   CI (99.9%): [2221.275, 2259.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   5040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5040.001, 5040.001, 5040.001), stdev = 0.001
[info]   CI (99.9%): [5040.001, 5040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2298.316 ±(99.9%) 1424.093 MB/sec [Average]
[info]   (min, avg, max) = (2025.614, 2298.316, 2711.795), stdev = 369.832
[info]   CI (99.9%): [874.224, 3722.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5171.380 ±(99.9%) 3220.875 B/op [Average]
[info]   (min, avg, max) = (4549.858, 5171.380, 6103.145), stdev = 836.451
[info]   CI (99.9%): [1950.505, 8392.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.001 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.062, 0.062), stdev = 0.001
[info]   CI (99.9%): [0.062, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.141 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.140, 0.141, 0.141), stdev = 0.001
[info]   CI (99.9%): [0.139, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 1.000
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala
[info] # Run progress: 87.06% complete, ETA 00:14:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 489953.721 ops/s
[info] # Warmup Iteration   2: 1455070.802 ops/s
[info] # Warmup Iteration   3: 1470895.970 ops/s
[info] # Warmup Iteration   4: 1497467.243 ops/s
[info] # Warmup Iteration   5: 1514426.334 ops/s
[info] Iteration   1: 1511221.713 ops/s
[info]                  ·gc.alloc.rate:                   1144.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1388.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1509626.362 ops/s
[info]                  ·gc.alloc.rate:                   1143.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1391.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1507445.865 ops/s
[info]                  ·gc.alloc.rate:                   1141.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1394.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1516163.962 ops/s
[info]                  ·gc.alloc.rate:               1148.770 MB/sec
[info]                  ·gc.alloc.rate.norm:          1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 693.907 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1480067.230 ops/s
[info]                  ·gc.alloc.rate:               1121.245 MB/sec
[info]                  ·gc.alloc.rate.norm:          1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1423.060 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala":
[info]   1504905.026 ±(99.9%) 54874.283 ops/s [Average]
[info]   (min, avg, max) = (1480067.230, 1504905.026, 1516163.962), stdev = 14250.677
[info]   CI (99.9%): [1450030.743, 1559779.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1139.989 ±(99.9%) 41.579 MB/sec [Average]
[info]   (min, avg, max) = (1121.245, 1139.989, 1148.770), stdev = 10.798
[info]   CI (99.9%): [1098.410, 1181.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1192.000, 1192.000, 1192.000), stdev = 0.001
[info]   CI (99.9%): [1192.000, 1192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1202.263 ±(99.9%) 1148.468 MB/sec [Average]
[info]   (min, avg, max) = (668.741, 1202.263, 1338.590), stdev = 298.253
[info]   CI (99.9%): [53.796, 2350.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1258.296 ±(99.9%) 1216.051 B/op [Average]
[info]   (min, avg, max) = (693.907, 1258.296, 1423.060), stdev = 315.805
[info]   CI (99.9%): [42.244, 2474.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.150 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.087), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala
[info] # Run progress: 87.29% complete, ETA 00:14:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5616353.565 ops/s
[info] # Warmup Iteration   2: 6332241.723 ops/s
[info] # Warmup Iteration   3: 6370876.064 ops/s
[info] # Warmup Iteration   4: 6421203.795 ops/s
[info] # Warmup Iteration   5: 6421283.711 ops/s
[info] Iteration   1: 6420544.573 ops/s
[info]                  ·gc.alloc.rate:                   195.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.371 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.336 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 6443995.801 ops/s
[info]                  ·gc.alloc.rate:      196.560 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6337052.766 ops/s
[info]                  ·gc.alloc.rate:               193.345 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 127.063 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 6448763.051 ops/s
[info]                  ·gc.alloc.rate:      196.693 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6446438.374 ops/s
[info]                  ·gc.alloc.rate:      196.599 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala":
[info]   6419358.913 ±(99.9%) 182454.957 ops/s [Average]
[info]   (min, avg, max) = (6337052.766, 6419358.913, 6448763.051), stdev = 47382.973
[info]   CI (99.9%): [6236903.956, 6601813.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   195.818 ±(99.9%) 5.461 MB/sec [Average]
[info]   (min, avg, max) = (193.345, 195.818, 196.693), stdev = 1.418
[info]   CI (99.9%): [190.357, 201.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   204.723 ±(99.9%) 1079.444 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.723, 511.813), stdev = 280.328
[info]   CI (99.9%): [≈ 0, 1284.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   50.494 ±(99.9%) 266.250 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 50.494, 127.063), stdev = 69.144
[info]   CI (99.9%): [≈ 0, 316.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.274 ±(99.9%) 2.361 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.274, 1.371), stdev = 0.613
[info]   CI (99.9%): [≈ 0, 2.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.067 ±(99.9%) 0.578 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.336), stdev = 0.150
[info]   CI (99.9%): [≈ 0, 0.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 1.095
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson
[info] # Run progress: 87.53% complete, ETA 00:14:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51137.228 ops/s
[info] # Warmup Iteration   2: 223297.255 ops/s
[info] # Warmup Iteration   3: 225997.326 ops/s
[info] # Warmup Iteration   4: 228759.230 ops/s
[info] # Warmup Iteration   5: 229758.250 ops/s
[info] Iteration   1: 228686.908 ops/s
[info]                  ·gc.alloc.rate:                   1574.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              10832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9184.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 228868.623 ops/s
[info]                  ·gc.alloc.rate:                   1575.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              10832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13786.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 227202.507 ops/s
[info]                  ·gc.alloc.rate:                   1563.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              10832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9279.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 223168.241 ops/s
[info]                  ·gc.alloc.rate:                   1536.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              10832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9466.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.440 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 225795.041 ops/s
[info]                  ·gc.alloc.rate:                   1553.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              10832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14056.881 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson":
[info]   226744.264 ±(99.9%) 9068.598 ops/s [Average]
[info]   (min, avg, max) = (223168.241, 226744.264, 228868.623), stdev = 2355.086
[info]   CI (99.9%): [217675.666, 235812.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1560.736 ±(99.9%) 61.793 MB/sec [Average]
[info]   (min, avg, max) = (1536.575, 1560.736, 1575.325), stdev = 16.048
[info]   CI (99.9%): [1498.943, 1622.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   10832.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10832.002, 10832.002, 10832.002), stdev = 0.001
[info]   CI (99.9%): [10832.002, 10832.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1607.772 ±(99.9%) 1416.868 MB/sec [Average]
[info]   (min, avg, max) = (1334.755, 1607.772, 2016.606), stdev = 367.956
[info]   CI (99.9%): [190.904, 3024.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   11154.904 ±(99.9%) 9740.511 B/op [Average]
[info]   (min, avg, max) = (9184.925, 11154.904, 14056.881), stdev = 2529.580
[info]   CI (99.9%): [1414.392, 20895.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.146), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.433 ±(99.9%) 1.290 B/op [Average]
[info]   (min, avg, max) = (0.144, 0.433, 1.002), stdev = 0.335
[info]   CI (99.9%): [≈ 0, 1.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce
[info] # Run progress: 87.76% complete, ETA 00:13:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 416973.573 ops/s
[info] # Warmup Iteration   2: 919390.052 ops/s
[info] # Warmup Iteration   3: 967313.687 ops/s
[info] # Warmup Iteration   4: 979773.964 ops/s
[info] # Warmup Iteration   5: 966604.453 ops/s
[info] Iteration   1: 981711.427 ops/s
[info]                  ·gc.alloc.rate:                   1686.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              2704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2151.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 945112.823 ops/s
[info]                  ·gc.alloc.rate:                   1623.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              2704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3357.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 963207.720 ops/s
[info]                  ·gc.alloc.rate:                   1654.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              2704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2199.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 970758.445 ops/s
[info]                  ·gc.alloc.rate:                   1668.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              2704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3278.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 978239.518 ops/s
[info]                  ·gc.alloc.rate:                   1680.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              2704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2172.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce":
[info]   967805.986 ±(99.9%) 56035.158 ops/s [Average]
[info]   (min, avg, max) = (945112.823, 967805.986, 981711.427), stdev = 14552.153
[info]   CI (99.9%): [911770.828, 1023841.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1662.975 ±(99.9%) 96.380 MB/sec [Average]
[info]   (min, avg, max) = (1623.904, 1662.975, 1686.653), stdev = 25.030
[info]   CI (99.9%): [1566.594, 1759.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   2704.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2704.000, 2704.000, 2704.000), stdev = 0.001
[info]   CI (99.9%): [2704.000, 2704.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1615.613 ±(99.9%) 1420.453 MB/sec [Average]
[info]   (min, avg, max) = (1342.299, 1615.613, 2023.224), stdev = 368.887
[info]   CI (99.9%): [195.160, 3036.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2631.912 ±(99.9%) 2415.075 B/op [Average]
[info]   (min, avg, max) = (2151.941, 2631.912, 3357.137), stdev = 627.187
[info]   CI (99.9%): [216.837, 5046.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.146), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.109 ±(99.9%) 0.307 B/op [Average]
[info]   (min, avg, max) = (0.034, 0.109, 0.243), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala
[info] # Run progress: 88.00% complete, ETA 00:13:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 874331.759 ops/s
[info] # Warmup Iteration   2: 2467126.606 ops/s
[info] # Warmup Iteration   3: 2516086.503 ops/s
[info] # Warmup Iteration   4: 2534415.095 ops/s
[info] # Warmup Iteration   5: 2544293.561 ops/s
[info] Iteration   1: 2539256.457 ops/s
[info]                  ·gc.alloc.rate:                   1122.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     826.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2541332.796 ops/s
[info]                  ·gc.alloc.rate:                   1124.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     826.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2525195.091 ops/s
[info]                  ·gc.alloc.rate:               1116.927 MB/sec
[info]                  ·gc.alloc.rate.norm:          696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 416.207 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2526534.134 ops/s
[info]                  ·gc.alloc.rate:                   1117.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     832.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2479058.366 ops/s
[info]                  ·gc.alloc.rate:               1096.702 MB/sec
[info]                  ·gc.alloc.rate.norm:          696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 850.060 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala":
[info]   2522275.369 ±(99.9%) 97146.071 ops/s [Average]
[info]   (min, avg, max) = (2479058.366, 2522275.369, 2541332.796), stdev = 25228.526
[info]   CI (99.9%): [2425129.298, 2619421.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1115.572 ±(99.9%) 42.461 MB/sec [Average]
[info]   (min, avg, max) = (1096.702, 1115.572, 1124.035), stdev = 11.027
[info]   CI (99.9%): [1073.110, 1158.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   696.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (696.000, 696.000, 696.000), stdev = 0.001
[info]   CI (99.9%): [696.000, 696.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1202.501 ±(99.9%) 1150.758 MB/sec [Average]
[info]   (min, avg, max) = (667.920, 1202.501, 1339.457), stdev = 298.848
[info]   CI (99.9%): [51.743, 2353.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   750.413 ±(99.9%) 720.362 B/op [Average]
[info]   (min, avg, max) = (416.207, 750.413, 850.060), stdev = 187.076
[info]   CI (99.9%): [30.050, 1470.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.196 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.122 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.077), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala
[info] # Run progress: 88.24% complete, ETA 00:13:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4543230.317 ops/s
[info] # Warmup Iteration   2: 7100467.540 ops/s
[info] # Warmup Iteration   3: 7203300.681 ops/s
[info] # Warmup Iteration   4: 7016412.418 ops/s
[info] # Warmup Iteration   5: 7170564.691 ops/s
[info] Iteration   1: 7178929.218 ops/s
[info]                  ·gc.alloc.rate:               583.850 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112.160 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 7067302.027 ops/s
[info]                  ·gc.alloc.rate:                   575.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.725 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.384 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7170874.901 ops/s
[info]                  ·gc.alloc.rate:                   583.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 7094809.903 ops/s
[info]                  ·gc.alloc.rate:               577.260 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 149.110 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 7105585.792 ops/s
[info]                  ·gc.alloc.rate:      577.894 MB/sec
[info]                  ·gc.alloc.rate.norm: 128.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala":
[info]   7123500.368 ±(99.9%) 188829.156 ops/s [Average]
[info]   (min, avg, max) = (7067302.027, 7123500.368, 7178929.218), stdev = 49038.332
[info]   CI (99.9%): [6934671.212, 7312329.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   579.454 ±(99.9%) 14.913 MB/sec [Average]
[info]   (min, avg, max) = (575.057, 579.454, 583.850), stdev = 3.873
[info]   CI (99.9%): [564.541, 594.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   505.880 ±(99.9%) 1121.547 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 505.880, 672.827), stdev = 291.262
[info]   CI (99.9%): [≈ 0, 1627.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   111.727 ±(99.9%) 248.166 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 111.727, 149.762), stdev = 64.448
[info]   CI (99.9%): [≈ 0, 359.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.362 ±(99.9%) 2.938 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.362, 1.725), stdev = 0.763
[info]   CI (99.9%): [≈ 0, 3.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.080 ±(99.9%) 0.654 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.080, 0.384), stdev = 0.170
[info]   CI (99.9%): [≈ 0, 0.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 88.47% complete, ETA 00:13:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4207903.166 ops/s
[info] # Warmup Iteration   2: 6240793.159 ops/s
[info] # Warmup Iteration   3: 6337862.807 ops/s
[info] # Warmup Iteration   4: 6291597.147 ops/s
[info] # Warmup Iteration   5: 6340878.443 ops/s
[info] Iteration   1: 6513467.283 ops/s
[info]                  ·gc.alloc.rate:                   397.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 6486609.415 ops/s
[info]                  ·gc.alloc.rate:               395.671 MB/sec
[info]                  ·gc.alloc.rate.norm:          96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 124.127 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 6508191.420 ops/s
[info]                  ·gc.alloc.rate:      396.997 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6505213.907 ops/s
[info]                  ·gc.alloc.rate:                   396.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 6541480.104 ops/s
[info]                  ·gc.alloc.rate:                   399.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     161.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.756 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.422 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc":
[info]   6510992.426 ±(99.9%) 76321.269 ops/s [Average]
[info]   (min, avg, max) = (6486609.415, 6510992.426, 6541480.104), stdev = 19820.391
[info]   CI (99.9%): [6434671.157, 6587313.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   397.159 ±(99.9%) 4.711 MB/sec [Average]
[info]   (min, avg, max) = (395.671, 397.159, 399.052), stdev = 1.223
[info]   CI (99.9%): [392.448, 401.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   96.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (96.000, 96.000, 96.000), stdev = 0.001
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   441.528 ±(99.9%) 987.735 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 441.528, 672.873), stdev = 256.512
[info]   CI (99.9%): [≈ 0, 1429.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   106.679 ±(99.9%) 238.231 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 106.679, 161.873), stdev = 61.868
[info]   CI (99.9%): [≈ 0, 344.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.361 ±(99.9%) 3.003 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.361, 1.756), stdev = 0.780
[info]   CI (99.9%): [≈ 0, 3.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.087 ±(99.9%) 0.722 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.087, 0.422), stdev = 0.188
[info]   CI (99.9%): [≈ 0, 0.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson
[info] # Run progress: 88.71% complete, ETA 00:12:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 55254.647 ops/s
[info] # Warmup Iteration   2: 311749.139 ops/s
[info] # Warmup Iteration   3: 307733.917 ops/s
[info] # Warmup Iteration   4: 316902.330 ops/s
[info] # Warmup Iteration   5: 318096.229 ops/s
[info] Iteration   1: 316993.145 ops/s
[info]                  ·gc.alloc.rate:                   1649.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9943.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.310 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 318262.715 ops/s
[info]                  ·gc.alloc.rate:                   1656.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6615.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 318235.172 ops/s
[info]                  ·gc.alloc.rate:                   1656.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9944.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 317833.461 ops/s
[info]                  ·gc.alloc.rate:                   1654.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6651.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 310770.701 ops/s
[info]                  ·gc.alloc.rate:                   1617.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10222.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.527 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson":
[info]   316419.039 ±(99.9%) 12317.756 ops/s [Average]
[info]   (min, avg, max) = (310770.701, 316419.039, 318262.715), stdev = 3198.882
[info]   CI (99.9%): [304101.283, 328736.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1647.113 ±(99.9%) 64.133 MB/sec [Average]
[info]   (min, avg, max) = (1617.711, 1647.113, 1656.668), stdev = 16.655
[info]   CI (99.9%): [1582.980, 1711.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   8192.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8192.001, 8192.001, 8192.001), stdev = 0.001
[info]   CI (99.9%): [8192.001, 8192.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1742.757 ±(99.9%) 1413.435 MB/sec [Average]
[info]   (min, avg, max) = (1337.772, 1742.757, 2018.645), stdev = 367.065
[info]   CI (99.9%): [329.321, 3156.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   8675.589 ±(99.9%) 7191.615 B/op [Average]
[info]   (min, avg, max) = (6615.102, 8675.589, 10222.308), stdev = 1867.640
[info]   CI (99.9%): [1483.973, 15867.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.270 ±(99.9%) 0.620 B/op [Average]
[info]   (min, avg, max) = (0.103, 0.270, 0.527), stdev = 0.161
[info]   CI (99.9%): [≈ 0, 0.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 88.94% complete, ETA 00:12:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54406.006 ops/s
[info] # Warmup Iteration   2: 64630.313 ops/s
[info] # Warmup Iteration   3: 65447.847 ops/s
[info] # Warmup Iteration   4: 66108.702 ops/s
[info] # Warmup Iteration   5: 64605.810 ops/s
[info] Iteration   1: 65998.942 ops/s
[info]                  ·gc.alloc.rate:                   1947.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              46456.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48188.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.986 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 66199.589 ops/s
[info]                  ·gc.alloc.rate:                   1954.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              46456.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48129.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.475 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 65666.382 ops/s
[info]                  ·gc.alloc.rate:                   1938.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              46456.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48598.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.495 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 66203.753 ops/s
[info]                  ·gc.alloc.rate:                   1954.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              46456.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32178.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.495 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 66203.674 ops/s
[info]                  ·gc.alloc.rate:                   1954.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              46456.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48323.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.495 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce":
[info]   66054.468 ±(99.9%) 901.624 ops/s [Average]
[info]   (min, avg, max) = (65666.382, 66054.468, 66203.753), stdev = 234.149
[info]   CI (99.9%): [65152.844, 66956.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1949.883 ±(99.9%) 27.010 MB/sec [Average]
[info]   (min, avg, max) = (1938.346, 1949.883, 1954.601), stdev = 7.014
[info]   CI (99.9%): [1922.874, 1976.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   46456.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (46456.007, 46456.007, 46456.007), stdev = 0.001
[info]   CI (99.9%): [46456.006, 46456.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1891.966 ±(99.9%) 1159.060 MB/sec [Average]
[info]   (min, avg, max) = (1353.575, 1891.966, 2033.167), stdev = 301.004
[info]   CI (99.9%): [732.906, 3051.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   45083.574 ±(99.9%) 27787.661 B/op [Average]
[info]   (min, avg, max) = (32178.607, 45083.574, 48598.699), stdev = 7216.367
[info]   CI (99.9%): [17295.913, 72871.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.589 ±(99.9%) 3.925 B/op [Average]
[info]   (min, avg, max) = (0.495, 1.589, 2.495), stdev = 1.019
[info]   CI (99.9%): [≈ 0, 5.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.18% complete, ETA 00:12:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59436.940 ops/s
[info] # Warmup Iteration   2: 103121.182 ops/s
[info] # Warmup Iteration   3: 103842.806 ops/s
[info] # Warmup Iteration   4: 104718.124 ops/s
[info] # Warmup Iteration   5: 104703.748 ops/s
[info] Iteration   1: 103891.889 ops/s
[info]                  ·gc.alloc.rate:                   1600.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              24240.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20233.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.631 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 104709.540 ops/s
[info]                  ·gc.alloc.rate:                   1612.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              24240.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30182.881 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.939 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 104394.654 ops/s
[info]                  ·gc.alloc.rate:                   1607.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              24240.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20216.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.628 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 103932.827 ops/s
[info]                  ·gc.alloc.rate:                   1600.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              24240.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30530.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.261 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 102904.278 ops/s
[info]                  ·gc.alloc.rate:               1584.862 MB/sec
[info]                  ·gc.alloc.rate.norm:          24240.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20589.679 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala":
[info]   103966.638 ±(99.9%) 2633.147 ops/s [Average]
[info]   (min, avg, max) = (102904.278, 103966.638, 104709.540), stdev = 683.820
[info]   CI (99.9%): [101333.491, 106599.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1601.244 ±(99.9%) 40.557 MB/sec [Average]
[info]   (min, avg, max) = (1584.862, 1601.244, 1612.612), stdev = 10.533
[info]   CI (99.9%): [1560.688, 1641.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24240.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (24240.004, 24240.004, 24240.004), stdev = 0.001
[info]   CI (99.9%): [24240.004, 24240.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1609.386 ±(99.9%) 1415.518 MB/sec [Average]
[info]   (min, avg, max) = (1335.607, 1609.386, 2016.115), stdev = 367.605
[info]   CI (99.9%): [193.868, 3024.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   24350.521 ±(99.9%) 21124.964 B/op [Average]
[info]   (min, avg, max) = (20216.683, 24350.521, 30530.128), stdev = 5486.086
[info]   CI (99.9%): [3225.557, 45475.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.692 ±(99.9%) 1.797 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.692, 1.261), stdev = 0.467
[info]   CI (99.9%): [≈ 0, 2.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.41% complete, ETA 00:12:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138538.940 ops/s
[info] # Warmup Iteration   2: 146759.977 ops/s
[info] # Warmup Iteration   3: 152873.573 ops/s
[info] # Warmup Iteration   4: 150705.071 ops/s
[info] # Warmup Iteration   5: 149572.881 ops/s
[info] Iteration   1: 152896.397 ops/s
[info]                  ·gc.alloc.rate:                   2245.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2700.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27799.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 151834.902 ops/s
[info]                  ·gc.alloc.rate:                   2230.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21028.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.863 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 153053.448 ops/s
[info]                  ·gc.alloc.rate:                   2249.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20892.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.856 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 153155.368 ops/s
[info]                  ·gc.alloc.rate:               2249.970 MB/sec
[info]                  ·gc.alloc.rate.norm:          23120.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2033.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20898.140 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 150429.353 ops/s
[info]                  ·gc.alloc.rate:                   2209.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2715.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28408.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.218 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala":
[info]   152273.894 ±(99.9%) 4460.459 ops/s [Average]
[info]   (min, avg, max) = (150429.353, 152273.894, 153155.368), stdev = 1158.367
[info]   CI (99.9%): [147813.435, 156734.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2237.074 ±(99.9%) 66.275 MB/sec [Average]
[info]   (min, avg, max) = (2209.687, 2237.074, 2249.970), stdev = 17.212
[info]   CI (99.9%): [2170.798, 2303.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   23120.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (23120.003, 23120.003, 23120.003), stdev = 0.001
[info]   CI (99.9%): [23120.003, 23120.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2302.127 ±(99.9%) 1426.185 MB/sec [Average]
[info]   (min, avg, max) = (2028.760, 2302.127, 2715.112), stdev = 370.376
[info]   CI (99.9%): [875.942, 3728.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   23805.306 ±(99.9%) 15133.595 B/op [Average]
[info]   (min, avg, max) = (20892.608, 23805.306, 28408.270), stdev = 3930.147
[info]   CI (99.9%): [8671.711, 38938.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.602 ±(99.9%) 1.789 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.602, 1.071), stdev = 0.465
[info]   CI (99.9%): [≈ 0, 2.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 89.65% complete, ETA 00:11:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30093.252 ops/s
[info] # Warmup Iteration   2: 47453.303 ops/s
[info] # Warmup Iteration   3: 47602.788 ops/s
[info] # Warmup Iteration   4: 48448.059 ops/s
[info] # Warmup Iteration   5: 48339.051 ops/s
[info] Iteration   1: 48411.878 ops/s
[info]                  ·gc.alloc.rate:                   2486.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              80840.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2691.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87491.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.677 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 48442.177 ops/s
[info]                  ·gc.alloc.rate:                   2488.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              80840.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2698.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87649.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.705 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 48491.680 ops/s
[info]                  ·gc.alloc.rate:                   2491.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              80840.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65835.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 48269.503 ops/s
[info]                  ·gc.alloc.rate:                   2479.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              80840.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2709.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88347.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.358 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 48441.056 ops/s
[info]                  ·gc.alloc.rate:                   2488.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              80840.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2713.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88160.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.029 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson":
[info]   48411.259 ±(99.9%) 324.498 ops/s [Average]
[info]   (min, avg, max) = (48269.503, 48411.259, 48491.680), stdev = 84.271
[info]   CI (99.9%): [48086.761, 48735.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2486.878 ±(99.9%) 17.860 MB/sec [Average]
[info]   (min, avg, max) = (2479.194, 2486.878, 2491.460), stdev = 4.638
[info]   CI (99.9%): [2469.018, 2504.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   80840.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80840.009, 80840.009, 80840.010), stdev = 0.001
[info]   CI (99.9%): [80840.008, 80840.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2568.361 ±(99.9%) 1161.438 MB/sec [Average]
[info]   (min, avg, max) = (2029.042, 2568.361, 2713.845), stdev = 301.622
[info]   CI (99.9%): [1406.923, 3729.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   83497.151 ±(99.9%) 38041.212 B/op [Average]
[info]   (min, avg, max) = (65835.992, 83497.151, 88347.893), stdev = 9879.182
[info]   CI (99.9%): [45455.939, 121538.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.759 ±(99.9%) 2.965 B/op [Average]
[info]   (min, avg, max) = (0.677, 1.759, 2.705), stdev = 0.770
[info]   CI (99.9%): [≈ 0, 4.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 89.88% complete, ETA 00:11:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 159393.496 ops/s
[info] # Warmup Iteration   2: 214327.992 ops/s
[info] # Warmup Iteration   3: 214774.240 ops/s
[info] # Warmup Iteration   4: 215324.692 ops/s
[info] # Warmup Iteration   5: 215210.832 ops/s
[info] Iteration   1: 215669.449 ops/s
[info]                  ·gc.alloc.rate:                   1489.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              10872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9790.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.456 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 215328.585 ops/s
[info]                  ·gc.alloc.rate:                   1487.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              10872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9815.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.609 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 215683.859 ops/s
[info]                  ·gc.alloc.rate:                   1489.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              10872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9814.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.760 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 215832.461 ops/s
[info]                  ·gc.alloc.rate:                   1490.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              10872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9817.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 214495.133 ops/s
[info]                  ·gc.alloc.rate:                   1481.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              10872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14847.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.458 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce":
[info]   215401.897 ±(99.9%) 2077.268 ops/s [Average]
[info]   (min, avg, max) = (214495.133, 215401.897, 215832.461), stdev = 539.460
[info]   CI (99.9%): [213324.629, 217479.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1487.966 ±(99.9%) 14.064 MB/sec [Average]
[info]   (min, avg, max) = (1481.832, 1487.966, 1490.871), stdev = 3.652
[info]   CI (99.9%): [1473.902, 1502.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10872.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10872.002, 10872.002, 10872.002), stdev = 0.001
[info]   CI (99.9%): [10872.002, 10872.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1479.877 ±(99.9%) 1170.498 MB/sec [Average]
[info]   (min, avg, max) = (1341.607, 1479.877, 2023.634), stdev = 303.975
[info]   CI (99.9%): [309.379, 2650.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10817.053 ±(99.9%) 8675.134 B/op [Average]
[info]   (min, avg, max) = (9790.689, 10817.053, 14847.124), stdev = 2252.905
[info]   CI (99.9%): [2141.919, 19492.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.487 ±(99.9%) 0.868 B/op [Average]
[info]   (min, avg, max) = (0.152, 0.487, 0.760), stdev = 0.225
[info]   CI (99.9%): [≈ 0, 1.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.12% complete, ETA 00:11:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 337783.629 ops/s
[info] # Warmup Iteration   2: 550283.273 ops/s
[info] # Warmup Iteration   3: 548812.157 ops/s
[info] # Warmup Iteration   4: 560736.857 ops/s
[info] # Warmup Iteration   5: 557513.146 ops/s
[info] Iteration   1: 559438.826 ops/s
[info]                  ·gc.alloc.rate:                   489.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              1376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1439.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 543767.399 ops/s
[info]                  ·gc.alloc.rate:               475.415 MB/sec
[info]                  ·gc.alloc.rate.norm:          1376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1480.797 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 544568.102 ops/s
[info]                  ·gc.alloc.rate:                   476.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              1376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1926.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.745 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 546613.438 ops/s
[info]                  ·gc.alloc.rate:      477.948 MB/sec
[info]                  ·gc.alloc.rate.norm: 1376.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 559880.461 ops/s
[info]                  ·gc.alloc.rate:                   489.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              1376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1873.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala":
[info]   550853.645 ±(99.9%) 31217.007 ops/s [Average]
[info]   (min, avg, max) = (543767.399, 550853.645, 559880.461), stdev = 8106.957
[info]   CI (99.9%): [519636.639, 582070.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   481.627 ±(99.9%) 27.332 MB/sec [Average]
[info]   (min, avg, max) = (475.415, 481.627, 489.557), stdev = 7.098
[info]   CI (99.9%): [454.295, 508.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1376.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1376.001, 1376.001, 1376.001), stdev = 0.001
[info]   CI (99.9%): [1376.001, 1376.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   471.247 ±(99.9%) 1057.314 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 471.247, 666.535), stdev = 274.581
[info]   CI (99.9%): [≈ 0, 1528.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1343.943 ±(99.9%) 3015.662 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1343.943, 1926.156), stdev = 783.158
[info]   CI (99.9%): [≈ 0, 4359.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.477 ±(99.9%) 3.997 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.477, 2.334), stdev = 1.038
[info]   CI (99.9%): [≈ 0, 4.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.378 ±(99.9%) 11.553 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.378, 6.745), stdev = 3.000
[info]   CI (99.9%): [≈ 0, 12.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.35% complete, ETA 00:10:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 530664.069 ops/s
[info] # Warmup Iteration   2: 559294.904 ops/s
[info] # Warmup Iteration   3: 565235.218 ops/s
[info] # Warmup Iteration   4: 563297.318 ops/s
[info] # Warmup Iteration   5: 562894.413 ops/s
[info] Iteration   1: 563377.784 ops/s
[info]                  ·gc.alloc.rate:      303.558 MB/sec
[info]                  ·gc.alloc.rate.norm: 848.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 555348.613 ops/s
[info]                  ·gc.alloc.rate:               299.285 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1449.950 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 561558.797 ops/s
[info]                  ·gc.alloc.rate:      302.586 MB/sec
[info]                  ·gc.alloc.rate.norm: 848.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 562017.122 ops/s
[info]                  ·gc.alloc.rate:                   302.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1432.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 562527.465 ops/s
[info]                  ·gc.alloc.rate:                   303.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1431.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala":
[info]   560965.956 ±(99.9%) 12368.029 ops/s [Average]
[info]   (min, avg, max) = (555348.613, 560965.956, 563377.784), stdev = 3211.938
[info]   CI (99.9%): [548597.927, 573333.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   302.268 ±(99.9%) 6.571 MB/sec [Average]
[info]   (min, avg, max) = (299.285, 302.268, 303.558), stdev = 1.706
[info]   CI (99.9%): [295.697, 308.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   848.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.001, 848.001, 848.001), stdev = 0.001
[info]   CI (99.9%): [848.001, 848.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.997 ±(99.9%) 1079.136 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.997, 511.731), stdev = 280.248
[info]   CI (99.9%): [≈ 0, 1386.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   862.823 ±(99.9%) 3033.076 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 862.823, 1449.950), stdev = 787.680
[info]   CI (99.9%): [≈ 0, 3895.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.123 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.058), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 90.59% complete, ETA 00:10:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 563137.830 ops/s
[info] # Warmup Iteration   2: 610294.471 ops/s
[info] # Warmup Iteration   3: 600687.999 ops/s
[info] # Warmup Iteration   4: 604406.071 ops/s
[info] # Warmup Iteration   5: 601715.097 ops/s
[info] Iteration   1: 603158.906 ops/s
[info]                  ·gc.alloc.rate:      6.132 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 602533.050 ops/s
[info]                  ·gc.alloc.rate:      6.126 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 603279.609 ops/s
[info]                  ·gc.alloc.rate:      6.133 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 599426.661 ops/s
[info]                  ·gc.alloc.rate:      6.094 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 597537.853 ops/s
[info]                  ·gc.alloc.rate:      6.075 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   601187.216 ±(99.9%) 9910.143 ops/s [Average]
[info]   (min, avg, max) = (597537.853, 601187.216, 603279.609), stdev = 2573.633
[info]   CI (99.9%): [591277.073, 611097.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   6.112 ±(99.9%) 0.101 MB/sec [Average]
[info]   (min, avg, max) = (6.075, 6.112, 6.133), stdev = 0.026
[info]   CI (99.9%): [6.010, 6.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.001, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 90.82% complete, ETA 00:10:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22379.957 ops/s
[info] # Warmup Iteration   2: 31003.000 ops/s
[info] # Warmup Iteration   3: 31109.120 ops/s
[info] # Warmup Iteration   4: 30979.813 ops/s
[info] # Warmup Iteration   5: 31069.232 ops/s
[info] Iteration   1: 31307.119 ops/s
[info]                  ·gc.alloc.rate:                   1652.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              83024.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67428.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.093 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 31129.156 ops/s
[info]                  ·gc.alloc.rate:                   1642.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              83024.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101863.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.210 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 31006.209 ops/s
[info]                  ·gc.alloc.rate:                   1636.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              83024.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68302.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.057 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 31065.792 ops/s
[info]                  ·gc.alloc.rate:                   1638.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              83024.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68273.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.219 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 30749.024 ops/s
[info]                  ·gc.alloc.rate:                   1622.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              83024.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103613.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.196 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson":
[info]   31051.460 ±(99.9%) 782.351 ops/s [Average]
[info]   (min, avg, max) = (30749.024, 31051.460, 31307.119), stdev = 203.174
[info]   CI (99.9%): [30269.109, 31833.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1638.399 ±(99.9%) 41.875 MB/sec [Average]
[info]   (min, avg, max) = (1622.295, 1638.399, 1652.254), stdev = 10.875
[info]   CI (99.9%): [1596.524, 1680.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   83024.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (83024.014, 83024.014, 83024.015), stdev = 0.001
[info]   CI (99.9%): [83024.013, 83024.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1615.076 ±(99.9%) 1423.149 MB/sec [Average]
[info]   (min, avg, max) = (1341.880, 1615.076, 2024.608), stdev = 369.587
[info]   CI (99.9%): [191.927, 3038.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   81896.184 ±(99.9%) 73314.247 B/op [Average]
[info]   (min, avg, max) = (67428.072, 81896.184, 103613.151), stdev = 19039.477
[info]   CI (99.9%): [8581.937, 155210.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.955 ±(99.9%) 5.300 B/op [Average]
[info]   (min, avg, max) = (1.057, 2.955, 4.219), stdev = 1.376
[info]   CI (99.9%): [≈ 0, 8.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 91.06% complete, ETA 00:10:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2801589.316 ops/s
[info] # Warmup Iteration   2: 3319639.614 ops/s
[info] # Warmup Iteration   3: 3364631.695 ops/s
[info] # Warmup Iteration   4: 3342352.360 ops/s
[info] # Warmup Iteration   5: 3401727.370 ops/s
[info] Iteration   1: 3397477.691 ops/s
[info]                  ·gc.alloc.rate:                   3142.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3382.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1567.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3381730.770 ops/s
[info]                  ·gc.alloc.rate:                   3128.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3390.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1577.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3375526.998 ops/s
[info]                  ·gc.alloc.rate:                   3123.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2716.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1266.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3387293.343 ops/s
[info]                  ·gc.alloc.rate:                   3133.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3399.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1579.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3391209.371 ops/s
[info]                  ·gc.alloc.rate:                   3137.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2721.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1263.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce":
[info]   3386647.634 ±(99.9%) 32580.670 ops/s [Average]
[info]   (min, avg, max) = (3375526.998, 3386647.634, 3397477.691), stdev = 8461.097
[info]   CI (99.9%): [3354066.964, 3419228.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   3133.098 ±(99.9%) 29.485 MB/sec [Average]
[info]   (min, avg, max) = (3123.206, 3133.098, 3142.979), stdev = 7.657
[info]   CI (99.9%): [3103.612, 3162.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1456.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1456.000, 1456.000, 1456.000), stdev = 0.001
[info]   CI (99.9%): [1456.000, 1456.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3122.194 ±(99.9%) 1416.190 MB/sec [Average]
[info]   (min, avg, max) = (2716.932, 3122.194, 3399.261), stdev = 367.780
[info]   CI (99.9%): [1706.004, 4538.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1450.827 ±(99.9%) 653.875 B/op [Average]
[info]   (min, avg, max) = (1263.174, 1450.827, 1579.471), stdev = 169.809
[info]   CI (99.9%): [796.953, 2104.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.087, 0.125), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.041, 0.058), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 91.29% complete, ETA 00:09:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 204601.773 ops/s
[info] # Warmup Iteration   2: 7702429.145 ops/s
[info] # Warmup Iteration   3: 7962695.366 ops/s
[info] # Warmup Iteration   4: 7987168.375 ops/s
[info] # Warmup Iteration   5: 8001434.062 ops/s
[info] Iteration   1: 7948323.398 ops/s
[info]                  ·gc.alloc.rate:                   1494.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     264.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 7725193.101 ops/s
[info]                  ·gc.alloc.rate:                   1453.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     272.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 7928236.059 ops/s
[info]                  ·gc.alloc.rate:                   1491.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     265.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.471 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 7825029.260 ops/s
[info]                  ·gc.alloc.rate:               1471.716 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2008.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 403.978 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 7959765.447 ops/s
[info]                  ·gc.alloc.rate:               1497.008 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 264.751 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava":
[info]   7877309.453 ±(99.9%) 386544.496 ops/s [Average]
[info]   (min, avg, max) = (7725193.101, 7877309.453, 7959765.447), stdev = 100384.378
[info]   CI (99.9%): [7490764.957, 8263853.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1481.558 ±(99.9%) 72.438 MB/sec [Average]
[info]   (min, avg, max) = (1453.073, 1481.558, 1497.008), stdev = 18.812
[info]   CI (99.9%): [1409.120, 1553.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1471.117 ±(99.9%) 1156.957 MB/sec [Average]
[info]   (min, avg, max) = (1333.899, 1471.117, 2008.581), stdev = 300.458
[info]   CI (99.9%): [314.160, 2628.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   294.127 ±(99.9%) 236.785 B/op [Average]
[info]   (min, avg, max) = (264.129, 294.127, 403.978), stdev = 61.492
[info]   CI (99.9%): [57.342, 530.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.482 ±(99.9%) 4.070 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.482, 2.373), stdev = 1.057
[info]   CI (99.9%): [≈ 0, 4.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.096 ±(99.9%) 0.808 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.096, 0.471), stdev = 0.210
[info]   CI (99.9%): [≈ 0, 0.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.53% complete, ETA 00:09:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2859267.157 ops/s
[info] # Warmup Iteration   2: 4109261.510 ops/s
[info] # Warmup Iteration   3: 4175096.973 ops/s
[info] # Warmup Iteration   4: 4146335.369 ops/s
[info] # Warmup Iteration   5: 4208246.808 ops/s
[info] Iteration   1: 4199283.309 ops/s
[info]                  ·gc.alloc.rate:                   2518.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     755.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4166675.403 ops/s
[info]                  ·gc.alloc.rate:                   2499.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2696.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1018.589 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4200324.279 ops/s
[info]                  ·gc.alloc.rate:                   2520.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2704.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1013.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4123825.064 ops/s
[info]                  ·gc.alloc.rate:               2474.104 MB/sec
[info]                  ·gc.alloc.rate.norm:          944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2032.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 775.536 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 4131395.541 ops/s
[info]                  ·gc.alloc.rate:                   2478.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2712.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1033.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala":
[info]   4164300.719 ±(99.9%) 139478.208 ops/s [Average]
[info]   (min, avg, max) = (4123825.064, 4164300.719, 4200324.279), stdev = 36222.048
[info]   CI (99.9%): [4024822.511, 4303778.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2498.040 ±(99.9%) 83.654 MB/sec [Average]
[info]   (min, avg, max) = (2474.104, 2498.040, 2520.089), stdev = 21.725
[info]   CI (99.9%): [2414.386, 2581.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (944.000, 944.000, 944.000), stdev = 0.001
[info]   CI (99.9%): [944.000, 944.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2432.739 ±(99.9%) 1434.763 MB/sec [Average]
[info]   (min, avg, max) = (2016.752, 2432.739, 2712.840), stdev = 372.603
[info]   CI (99.9%): [997.976, 3867.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   919.325 ±(99.9%) 541.421 B/op [Average]
[info]   (min, avg, max) = (755.871, 919.325, 1033.449), stdev = 140.605
[info]   CI (99.9%): [377.905, 1460.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.208 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.146), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.078 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.055), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.76% complete, ETA 00:09:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7181010.453 ops/s
[info] # Warmup Iteration   2: 7283631.296 ops/s
[info] # Warmup Iteration   3: 7530933.002 ops/s
[info] # Warmup Iteration   4: 7552066.559 ops/s
[info] # Warmup Iteration   5: 7540987.787 ops/s
[info] Iteration   1: 7576278.784 ops/s
[info]                  ·gc.alloc.rate:                   1424.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     419.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 7629639.521 ops/s
[info]                  ·gc.alloc.rate:                   1434.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     277.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7664450.848 ops/s
[info]                  ·gc.alloc.rate:                   1441.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     276.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 7545789.781 ops/s
[info]                  ·gc.alloc.rate:                   1419.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     281.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 7499847.989 ops/s
[info]                  ·gc.alloc.rate:                   1410.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     283.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala":
[info]   7583201.385 ±(99.9%) 252160.696 ops/s [Average]
[info]   (min, avg, max) = (7499847.989, 7583201.385, 7664450.848), stdev = 65485.332
[info]   CI (99.9%): [7331040.689, 7835362.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1426.196 ±(99.9%) 47.397 MB/sec [Average]
[info]   (min, avg, max) = (1410.527, 1426.196, 1441.449), stdev = 12.309
[info]   CI (99.9%): [1378.799, 1473.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1482.832 ±(99.9%) 1153.032 MB/sec [Average]
[info]   (min, avg, max) = (1346.960, 1482.832, 2018.478), stdev = 299.439
[info]   CI (99.9%): [329.800, 2635.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   307.798 ±(99.9%) 240.242 B/op [Average]
[info]   (min, avg, max) = (276.861, 307.798, 419.302), stdev = 62.390
[info]   CI (99.9%): [67.556, 548.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.125), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.015, 0.026), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 92.00% complete, ETA 00:09:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3677348.550 ops/s
[info] # Warmup Iteration   2: 4908896.883 ops/s
[info] # Warmup Iteration   3: 4905820.474 ops/s
[info] # Warmup Iteration   4: 4979163.545 ops/s
[info] # Warmup Iteration   5: 4959500.239 ops/s
[info] Iteration   1: 5063929.729 ops/s
[info]                  ·gc.alloc.rate:                   3140.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2700.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     839.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 5046593.156 ops/s
[info]                  ·gc.alloc.rate:                   3129.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3383.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1055.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 5022892.465 ops/s
[info]                  ·gc.alloc.rate:                   3116.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3392.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1062.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4883445.872 ops/s
[info]                  ·gc.alloc.rate:                   3028.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2717.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     875.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4931676.773 ops/s
[info]                  ·gc.alloc.rate:                   3058.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3399.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1085.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson":
[info]   4989707.599 ±(99.9%) 301392.893 ops/s [Average]
[info]   (min, avg, max) = (4883445.872, 4989707.599, 5063929.729), stdev = 78270.777
[info]   CI (99.9%): [4688314.707, 5291100.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3094.615 ±(99.9%) 187.209 MB/sec [Average]
[info]   (min, avg, max) = (3028.648, 3094.615, 3140.250), stdev = 48.617
[info]   CI (99.9%): [2907.406, 3281.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3118.745 ±(99.9%) 1441.232 MB/sec [Average]
[info]   (min, avg, max) = (2700.162, 3118.745, 3399.966), stdev = 374.283
[info]   CI (99.9%): [1677.513, 4559.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   983.542 ±(99.9%) 447.928 B/op [Average]
[info]   (min, avg, max) = (839.219, 983.542, 1085.055), stdev = 116.325
[info]   CI (99.9%): [535.614, 1431.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.022, 0.032), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 92.24% complete, ETA 00:08:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2121593.582 ops/s
[info] # Warmup Iteration   2: 2745650.052 ops/s
[info] # Warmup Iteration   3: 2810796.198 ops/s
[info] # Warmup Iteration   4: 2790246.054 ops/s
[info] # Warmup Iteration   5: 2811977.757 ops/s
[info] Iteration   1: 2789788.827 ops/s
[info]                  ·gc.alloc.rate:                   1730.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1135.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2808169.900 ops/s
[info]                  ·gc.alloc.rate:                   1741.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1130.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2807136.898 ops/s
[info]                  ·gc.alloc.rate:                   1740.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     755.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2775483.338 ops/s
[info]                  ·gc.alloc.rate:                   1721.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1147.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2804325.416 ops/s
[info]                  ·gc.alloc.rate:                   1739.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     758.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce":
[info]   2796980.876 ±(99.9%) 54325.171 ops/s [Average]
[info]   (min, avg, max) = (2775483.338, 2796980.876, 2808169.900), stdev = 14108.074
[info]   CI (99.9%): [2742655.705, 2851306.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1734.557 ±(99.9%) 33.541 MB/sec [Average]
[info]   (min, avg, max) = (1721.327, 1734.557, 1741.391), stdev = 8.711
[info]   CI (99.9%): [1701.016, 1768.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1750.229 ±(99.9%) 1410.253 MB/sec [Average]
[info]   (min, avg, max) = (1346.934, 1750.229, 2023.597), stdev = 366.238
[info]   CI (99.9%): [339.976, 3160.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   985.319 ±(99.9%) 803.989 B/op [Average]
[info]   (min, avg, max) = (755.196, 985.319, 1147.389), stdev = 208.793
[info]   CI (99.9%): [181.330, 1789.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.146), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.037 ±(99.9%) 0.102 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.037, 0.082), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 92.47% complete, ETA 00:08:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 117461.385 ops/s
[info] # Warmup Iteration   2: 6948192.294 ops/s
[info] # Warmup Iteration   3: 7180401.004 ops/s
[info] # Warmup Iteration   4: 7163744.047 ops/s
[info] # Warmup Iteration   5: 7186301.203 ops/s
[info] Iteration   1: 7144839.445 ops/s
[info]                  ·gc.alloc.rate:                   690.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 7019616.751 ops/s
[info]                  ·gc.alloc.rate:               677.990 MB/sec
[info]                  ·gc.alloc.rate.norm:          152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 148.833 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 7061413.994 ops/s
[info]                  ·gc.alloc.rate:               681.984 MB/sec
[info]                  ·gc.alloc.rate.norm:          152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 148.253 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 7164104.953 ops/s
[info]                  ·gc.alloc.rate:                   692.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7195373.444 ops/s
[info]                  ·gc.alloc.rate:                   694.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava":
[info]   7117069.717 ±(99.9%) 283680.266 ops/s [Average]
[info]   (min, avg, max) = (7019616.751, 7117069.717, 7195373.444), stdev = 73670.864
[info]   CI (99.9%): [6833389.451, 7400749.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   687.386 ±(99.9%) 27.394 MB/sec [Average]
[info]   (min, avg, max) = (677.990, 687.386, 694.905), stdev = 7.114
[info]   CI (99.9%): [659.991, 714.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   664.925 ±(99.9%) 4.320 MB/sec [Average]
[info]   (min, avg, max) = (663.802, 664.925, 666.491), stdev = 1.122
[info]   CI (99.9%): [660.604, 669.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   147.045 ±(99.9%) 5.363 B/op [Average]
[info]   (min, avg, max) = (145.785, 147.045, 148.833), stdev = 1.393
[info]   CI (99.9%): [141.682, 152.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.013 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.007), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.71% complete, ETA 00:08:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3388895.738 ops/s
[info] # Warmup Iteration   2: 4800793.616 ops/s
[info] # Warmup Iteration   3: 4916290.865 ops/s
[info] # Warmup Iteration   4: 4924652.005 ops/s
[info] # Warmup Iteration   5: 4933176.247 ops/s
[info] Iteration   1: 4934733.559 ops/s
[info]                  ·gc.alloc.rate:                   1304.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     426.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4970403.139 ops/s
[info]                  ·gc.alloc.rate:                   1313.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     423.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 4961752.958 ops/s
[info]                  ·gc.alloc.rate:                   1311.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     424.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4826623.199 ops/s
[info]                  ·gc.alloc.rate:                   1275.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     437.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4858572.000 ops/s
[info]                  ·gc.alloc.rate:                   1284.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     435.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala":
[info]   4910416.971 ±(99.9%) 247569.137 ops/s [Average]
[info]   (min, avg, max) = (4826623.199, 4910416.971, 4970403.139), stdev = 64292.919
[info]   CI (99.9%): [4662847.834, 5157986.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1298.068 ±(99.9%) 65.797 MB/sec [Average]
[info]   (min, avg, max) = (1275.817, 1298.068, 1313.991), stdev = 17.087
[info]   CI (99.9%): [1232.271, 1363.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   416.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (416.000, 416.000, 416.000), stdev = 0.001
[info]   CI (99.9%): [416.000, 416.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1339.681 ±(99.9%) 10.339 MB/sec [Average]
[info]   (min, avg, max) = (1336.889, 1339.681, 1343.609), stdev = 2.685
[info]   CI (99.9%): [1329.342, 1350.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   429.403 ±(99.9%) 24.534 B/op [Average]
[info]   (min, avg, max) = (423.564, 429.403, 437.271), stdev = 6.371
[info]   CI (99.9%): [404.869, 453.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.031 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.020, 0.033), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.94% complete, ETA 00:08:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8968740.285 ops/s
[info] # Warmup Iteration   2: 9405717.383 ops/s
[info] # Warmup Iteration   3: 9522875.189 ops/s
[info] # Warmup Iteration   4: 9372670.989 ops/s
[info] # Warmup Iteration   5: 9355945.565 ops/s
[info] Iteration   1: 9555741.166 ops/s
[info]                  ·gc.alloc.rate:                   922.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 9376843.981 ops/s
[info]                  ·gc.alloc.rate:               905.755 MB/sec
[info]                  ·gc.alloc.rate.norm:          152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112.927 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 9399163.036 ops/s
[info]                  ·gc.alloc.rate:                   907.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     225.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 9422926.230 ops/s
[info]                  ·gc.alloc.rate:               910.148 MB/sec
[info]                  ·gc.alloc.rate.norm:          152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112.376 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 9237780.471 ops/s
[info]                  ·gc.alloc.rate:                   892.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     229.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala":
[info]   9398490.977 ±(99.9%) 437440.668 ops/s [Average]
[info]   (min, avg, max) = (9237780.471, 9398490.977, 9555741.166), stdev = 113601.952
[info]   CI (99.9%): [8961050.309, 9835931.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   907.785 ±(99.9%) 42.339 MB/sec [Average]
[info]   (min, avg, max) = (892.167, 907.785, 922.950), stdev = 10.995
[info]   CI (99.9%): [865.445, 950.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.026 ±(99.9%) 1419.099 MB/sec [Average]
[info]   (min, avg, max) = (672.852, 942.026, 1346.290), stdev = 368.535
[info]   CI (99.9%): [≈ 0, 2361.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   158.138 ±(99.9%) 243.159 B/op [Average]
[info]   (min, avg, max) = (110.812, 158.138, 229.370), stdev = 63.148
[info]   CI (99.9%): [≈ 0, 401.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.017), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 93.18% complete, ETA 00:07:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6713087.678 ops/s
[info] # Warmup Iteration   2: 6804753.684 ops/s
[info] # Warmup Iteration   3: 6928514.390 ops/s
[info] # Warmup Iteration   4: 6922714.085 ops/s
[info] # Warmup Iteration   5: 6894279.007 ops/s
[info] Iteration   1: 6938168.574 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6935859.683 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6935835.597 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6936610.192 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6932240.612 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   6935742.932 ±(99.9%) 8375.559 ops/s [Average]
[info]   (min, avg, max) = (6932240.612, 6935742.932, 6938168.574), stdev = 2175.106
[info]   CI (99.9%): [6927367.373, 6944118.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 93.41% complete, ETA 00:07:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3999570.636 ops/s
[info] # Warmup Iteration   2: 5081993.913 ops/s
[info] # Warmup Iteration   3: 5047220.424 ops/s
[info] # Warmup Iteration   4: 5188506.553 ops/s
[info] # Warmup Iteration   5: 5163449.503 ops/s
[info] Iteration   1: 5156867.371 ops/s
[info]                  ·gc.alloc.rate:                   1651.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              504.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     409.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5076545.318 ops/s
[info]                  ·gc.alloc.rate:                   1625.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              504.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     624.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 5118396.984 ops/s
[info]                  ·gc.alloc.rate:                   1639.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              504.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     413.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 5181931.493 ops/s
[info]                  ·gc.alloc.rate:                   1659.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              504.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     613.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5195546.632 ops/s
[info]                  ·gc.alloc.rate:                   1663.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              504.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     408.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson":
[info]   5145857.559 ±(99.9%) 187160.890 ops/s [Average]
[info]   (min, avg, max) = (5076545.318, 5145857.559, 5195546.632), stdev = 48605.089
[info]   CI (99.9%): [4958696.670, 5333018.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1647.896 ±(99.9%) 59.607 MB/sec [Average]
[info]   (min, avg, max) = (1625.845, 1647.896, 1663.588), stdev = 15.480
[info]   CI (99.9%): [1588.289, 1707.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   504.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (504.000, 504.000, 504.000), stdev = 0.001
[info]   CI (99.9%): [504.000, 504.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1614.007 ±(99.9%) 1418.893 MB/sec [Average]
[info]   (min, avg, max) = (1340.339, 1614.007, 2021.613), stdev = 368.482
[info]   CI (99.9%): [195.114, 3032.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   493.927 ±(99.9%) 440.247 B/op [Average]
[info]   (min, avg, max) = (408.830, 493.927, 624.217), stdev = 114.331
[info]   CI (99.9%): [53.680, 934.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.015, 0.026), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 93.65% complete, ETA 00:07:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 866633.946 ops/s
[info] # Warmup Iteration   2: 1253078.893 ops/s
[info] # Warmup Iteration   3: 1273640.913 ops/s
[info] # Warmup Iteration   4: 1273843.421 ops/s
[info] # Warmup Iteration   5: 1274324.316 ops/s
[info] Iteration   1: 1255803.922 ops/s
[info]                  ·gc.alloc.rate:                   1813.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              2272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1688.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1272660.296 ops/s
[info]                  ·gc.alloc.rate:                   1837.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              2272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2502.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1266141.406 ops/s
[info]                  ·gc.alloc.rate:                   1828.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              2272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2518.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1261222.357 ops/s
[info]                  ·gc.alloc.rate:                   1820.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              2272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2532.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1276901.976 ops/s
[info]                  ·gc.alloc.rate:                   1843.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              2272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1669.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce":
[info]   1266545.992 ±(99.9%) 32703.733 ops/s [Average]
[info]   (min, avg, max) = (1255803.922, 1266545.992, 1276901.976), stdev = 8493.056
[info]   CI (99.9%): [1233842.259, 1299249.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   1828.848 ±(99.9%) 46.743 MB/sec [Average]
[info]   (min, avg, max) = (1813.690, 1828.848, 1843.789), stdev = 12.139
[info]   CI (99.9%): [1782.105, 1875.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2272.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2272.000, 2272.000, 2272.000), stdev = 0.001
[info]   CI (99.9%): [2272.000, 2272.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1756.337 ±(99.9%) 1424.426 MB/sec [Average]
[info]   (min, avg, max) = (1347.611, 1756.337, 2029.307), stdev = 369.919
[info]   CI (99.9%): [331.911, 3180.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2181.959 ±(99.9%) 1769.692 B/op [Average]
[info]   (min, avg, max) = (1669.253, 2181.959, 2532.184), stdev = 459.583
[info]   CI (99.9%): [412.266, 3951.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.075, 0.146), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.093 ±(99.9%) 0.217 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.093, 0.180), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 93.88% complete, ETA 00:06:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.851 ops/s
[info] # Warmup Iteration   2: 1783074.385 ops/s
[info] # Warmup Iteration   3: 1734593.944 ops/s
[info] # Warmup Iteration   4: 1807780.436 ops/s
[info] # Warmup Iteration   5: 1723104.668 ops/s
[info] Iteration   1: 1812844.111 ops/s
[info]                  ·gc.alloc.rate:                   340.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     444.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1785081.823 ops/s
[info]                  ·gc.alloc.rate:               335.871 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 451.068 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1797442.781 ops/s
[info]                  ·gc.alloc.rate:      338.101 MB/sec
[info]                  ·gc.alloc.rate.norm: 296.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1791375.145 ops/s
[info]                  ·gc.alloc.rate:                   336.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     449.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1818433.578 ops/s
[info]                  ·gc.alloc.rate:      341.997 MB/sec
[info]                  ·gc.alloc.rate.norm: 296.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava":
[info]   1801035.488 ±(99.9%) 54554.477 ops/s [Average]
[info]   (min, avg, max) = (1785081.823, 1801035.488, 1818433.578), stdev = 14167.624
[info]   CI (99.9%): [1746481.011, 1855589.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   338.777 ±(99.9%) 10.050 MB/sec [Average]
[info]   (min, avg, max) = (335.871, 338.777, 341.997), stdev = 2.610
[info]   CI (99.9%): [328.727, 348.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   307.026 ±(99.9%) 1079.241 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 307.026, 511.826), stdev = 280.275
[info]   CI (99.9%): [≈ 0, 1386.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   268.943 ±(99.9%) 945.425 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 268.943, 451.068), stdev = 245.524
[info]   CI (99.9%): [≈ 0, 1214.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.074 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.044), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.065 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.039), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.12% complete, ETA 00:06:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 560824.267 ops/s
[info] # Warmup Iteration   2: 1043115.534 ops/s
[info] # Warmup Iteration   3: 1061865.277 ops/s
[info] # Warmup Iteration   4: 1041508.704 ops/s
[info] # Warmup Iteration   5: 1052483.122 ops/s
[info] Iteration   1: 1030176.436 ops/s
[info]                  ·gc.alloc.rate:                   665.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1021.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.184 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1057816.192 ops/s
[info]                  ·gc.alloc.rate:               682.885 MB/sec
[info]                  ·gc.alloc.rate.norm:          1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 994.591 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1059540.733 ops/s
[info]                  ·gc.alloc.rate:                   683.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     992.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1057662.878 ops/s
[info]                  ·gc.alloc.rate:                   682.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     994.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1063519.736 ops/s
[info]                  ·gc.alloc.rate:               686.525 MB/sec
[info]                  ·gc.alloc.rate.norm:          1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 989.773 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala":
[info]   1053743.195 ±(99.9%) 51537.440 ops/s [Average]
[info]   (min, avg, max) = (1030176.436, 1053743.195, 1063519.736), stdev = 13384.110
[info]   CI (99.9%): [1002205.755, 1105280.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   680.266 ±(99.9%) 33.249 MB/sec [Average]
[info]   (min, avg, max) = (665.051, 680.266, 686.525), stdev = 8.635
[info]   CI (99.9%): [647.017, 713.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   668.442 ±(99.9%) 0.966 MB/sec [Average]
[info]   (min, avg, max) = (668.156, 668.442, 668.803), stdev = 0.251
[info]   CI (99.9%): [667.476, 669.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   998.472 ±(99.9%) 49.612 B/op [Average]
[info]   (min, avg, max) = (989.773, 998.472, 1021.265), stdev = 12.884
[info]   CI (99.9%): [948.859, 1048.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.433 ±(99.9%) 3.554 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.433, 2.084), stdev = 0.923
[info]   CI (99.9%): [≈ 0, 3.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.662 ±(99.9%) 5.431 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.662, 3.184), stdev = 1.410
[info]   CI (99.9%): [≈ 0, 6.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.35% complete, ETA 00:06:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2270193.525 ops/s
[info] # Warmup Iteration   2: 2403401.579 ops/s
[info] # Warmup Iteration   3: 2426642.846 ops/s
[info] # Warmup Iteration   4: 2422557.062 ops/s
[info] # Warmup Iteration   5: 2432360.068 ops/s
[info] Iteration   1: 2420309.519 ops/s
[info]                  ·gc.alloc.rate:               455.191 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 332.678 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 2396042.352 ops/s
[info]                  ·gc.alloc.rate:               450.655 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 336.050 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2419222.383 ops/s
[info]                  ·gc.alloc.rate:      455.085 MB/sec
[info]                  ·gc.alloc.rate.norm: 296.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2406489.953 ops/s
[info]                  ·gc.alloc.rate:                   452.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          676.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     442.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.470 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.961 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2419554.331 ops/s
[info]                  ·gc.alloc.rate:                   455.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          676.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     439.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala":
[info]   2412323.708 ±(99.9%) 41417.344 ops/s [Average]
[info]   (min, avg, max) = (2396042.352, 2412323.708, 2420309.519), stdev = 10755.953
[info]   CI (99.9%): [2370906.364, 2453741.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   453.710 ±(99.9%) 7.818 MB/sec [Average]
[info]   (min, avg, max) = (450.655, 453.710, 455.191), stdev = 2.030
[info]   CI (99.9%): [445.892, 461.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   475.087 ±(99.9%) 1070.578 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 475.087, 676.118), stdev = 278.026
[info]   CI (99.9%): [≈ 0, 1545.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   310.145 ±(99.9%) 698.488 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 310.145, 442.190), stdev = 181.395
[info]   CI (99.9%): [≈ 0, 1008.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.302 ±(99.9%) 2.514 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.302, 1.470), stdev = 0.653
[info]   CI (99.9%): [≈ 0, 2.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.198 ±(99.9%) 1.644 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.198, 0.961), stdev = 0.427
[info]   CI (99.9%): [≈ 0, 1.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 94.59% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 733483.337 ops/s
[info] # Warmup Iteration   2: 1233467.378 ops/s
[info] # Warmup Iteration   3: 1241226.027 ops/s
[info] # Warmup Iteration   4: 1223687.091 ops/s
[info] # Warmup Iteration   5: 1232725.781 ops/s
[info] Iteration   1: 1269711.865 ops/s
[info]                  ·gc.alloc.rate:                   787.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.984 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.460 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1268557.973 ops/s
[info]                  ·gc.alloc.rate:                   786.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1660.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1270422.696 ops/s
[info]                  ·gc.alloc.rate:                   787.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1269049.451 ops/s
[info]                  ·gc.alloc.rate:                   786.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     830.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1269645.567 ops/s
[info]                  ·gc.alloc.rate:                   787.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson":
[info]   1269477.511 ±(99.9%) 2726.438 ops/s [Average]
[info]   (min, avg, max) = (1268557.973, 1269477.511, 1270422.696), stdev = 708.047
[info]   CI (99.9%): [1266751.073, 1272203.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   787.239 ±(99.9%) 1.704 MB/sec [Average]
[info]   (min, avg, max) = (786.677, 787.239, 787.842), stdev = 0.443
[info]   CI (99.9%): [785.535, 788.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   803.239 ±(99.9%) 1152.486 MB/sec [Average]
[info]   (min, avg, max) = (669.139, 803.239, 1338.637), stdev = 299.297
[info]   CI (99.9%): [≈ 0, 1955.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   995.955 ±(99.9%) 1431.121 B/op [Average]
[info]   (min, avg, max) = (829.378, 995.955, 1660.796), stdev = 371.658
[info]   CI (99.9%): [≈ 0, 2427.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.422 ±(99.9%) 3.364 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.422, 1.984), stdev = 0.874
[info]   CI (99.9%): [≈ 0, 3.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.523 ±(99.9%) 4.170 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.523, 2.460), stdev = 1.083
[info]   CI (99.9%): [≈ 0, 4.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 94.82% complete, ETA 00:05:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1093863.622 ops/s
[info] # Warmup Iteration   2: 1852893.875 ops/s
[info] # Warmup Iteration   3: 1839277.236 ops/s
[info] # Warmup Iteration   4: 1852641.356 ops/s
[info] # Warmup Iteration   5: 1851129.022 ops/s
[info] Iteration   1: 1853631.268 ops/s
[info]                  ·gc.alloc.rate:               1450.962 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1139.410 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1851849.115 ops/s
[info]                  ·gc.alloc.rate:                   1449.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1141.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1770066.313 ops/s
[info]                  ·gc.alloc.rate:               1386.265 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1195.635 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1818517.598 ops/s
[info]                  ·gc.alloc.rate:                   1423.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1165.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1835634.906 ops/s
[info]                  ·gc.alloc.rate:                   1436.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1734.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce":
[info]   1825939.840 ±(99.9%) 132120.311 ops/s [Average]
[info]   (min, avg, max) = (1770066.313, 1825939.840, 1853631.268), stdev = 34311.225
[info]   CI (99.9%): [1693819.529, 1958060.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1429.453 ±(99.9%) 102.358 MB/sec [Average]
[info]   (min, avg, max) = (1386.265, 1429.453, 1450.962), stdev = 26.582
[info]   CI (99.9%): [1327.095, 1531.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1232.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1232.000, 1232.000, 1232.000), stdev = 0.001
[info]   CI (99.9%): [1232.000, 1232.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1479.923 ±(99.9%) 1168.453 MB/sec [Average]
[info]   (min, avg, max) = (1341.916, 1479.923, 2022.729), stdev = 303.444
[info]   CI (99.9%): [311.469, 2648.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1275.236 ±(99.9%) 992.066 B/op [Average]
[info]   (min, avg, max) = (1139.410, 1275.236, 1734.310), stdev = 257.636
[info]   CI (99.9%): [283.170, 2267.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.141 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.072), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 95.06% complete, ETA 00:05:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.871 ops/s
[info] # Warmup Iteration   2: 2480725.105 ops/s
[info] # Warmup Iteration   3: 2587510.194 ops/s
[info] # Warmup Iteration   4: 2540911.629 ops/s
[info] # Warmup Iteration   5: 2545911.470 ops/s
[info] Iteration   1: 2548074.174 ops/s
[info]                  ·gc.alloc.rate:                   660.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     410.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2544605.480 ops/s
[info]                  ·gc.alloc.rate:               659.660 MB/sec
[info]                  ·gc.alloc.rate.norm:          408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 410.577 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 2548299.464 ops/s
[info]                  ·gc.alloc.rate:               660.618 MB/sec
[info]                  ·gc.alloc.rate.norm:          408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 411.218 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 2531907.600 ops/s
[info]                  ·gc.alloc.rate:                   656.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     413.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2528337.323 ops/s
[info]                  ·gc.alloc.rate:               655.417 MB/sec
[info]                  ·gc.alloc.rate.norm:          408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 414.879 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava":
[info]   2540244.808 ±(99.9%) 36351.850 ops/s [Average]
[info]   (min, avg, max) = (2528337.323, 2540244.808, 2548299.464), stdev = 9440.460
[info]   CI (99.9%): [2503892.958, 2576596.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   658.560 ±(99.9%) 9.572 MB/sec [Average]
[info]   (min, avg, max) = (655.417, 658.560, 660.719), stdev = 2.486
[info]   CI (99.9%): [648.988, 668.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   408.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (408.000, 408.000, 408.000), stdev = 0.001
[info]   CI (99.9%): [408.000, 408.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   665.191 ±(99.9%) 4.602 MB/sec [Average]
[info]   (min, avg, max) = (663.826, 665.191, 666.468), stdev = 1.195
[info]   CI (99.9%): [660.589, 669.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   412.115 ±(99.9%) 8.223 B/op [Average]
[info]   (min, avg, max) = (410.029, 412.115, 414.879), stdev = 2.136
[info]   CI (99.9%): [403.891, 420.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.081 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.039), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.050 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.024), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.29% complete, ETA 00:05:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1209211.436 ops/s
[info] # Warmup Iteration   2: 2354901.000 ops/s
[info] # Warmup Iteration   3: 2472055.559 ops/s
[info] # Warmup Iteration   4: 2415736.062 ops/s
[info] # Warmup Iteration   5: 2514196.083 ops/s
[info] Iteration   1: 2510563.555 ops/s
[info]                  ·gc.alloc.rate:                   1186.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     838.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2516825.586 ops/s
[info]                  ·gc.alloc.rate:               1189.834 MB/sec
[info]                  ·gc.alloc.rate.norm:          744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 418.254 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2448227.822 ops/s
[info]                  ·gc.alloc.rate:                   1157.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     860.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2510184.129 ops/s
[info]                  ·gc.alloc.rate:                   1186.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     840.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2492485.959 ops/s
[info]                  ·gc.alloc.rate:                   1178.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     847.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala":
[info]   2495657.410 ±(99.9%) 107902.819 ops/s [Average]
[info]   (min, avg, max) = (2448227.822, 2495657.410, 2516825.586), stdev = 28022.020
[info]   CI (99.9%): [2387754.591, 2603560.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1179.789 ±(99.9%) 50.979 MB/sec [Average]
[info]   (min, avg, max) = (1157.395, 1179.789, 1189.834), stdev = 13.239
[info]   CI (99.9%): [1128.810, 1230.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1205.379 ±(99.9%) 1154.863 MB/sec [Average]
[info]   (min, avg, max) = (668.887, 1205.379, 1342.225), stdev = 299.914
[info]   CI (99.9%): [50.516, 2360.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   760.937 ±(99.9%) 738.407 B/op [Average]
[info]   (min, avg, max) = (418.254, 760.937, 860.372), stdev = 191.762
[info]   CI (99.9%): [22.530, 1499.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.097 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.066), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.53% complete, ETA 00:05:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2597156.195 ops/s
[info] # Warmup Iteration   2: 3628069.727 ops/s
[info] # Warmup Iteration   3: 3668169.186 ops/s
[info] # Warmup Iteration   4: 3693247.293 ops/s
[info] # Warmup Iteration   5: 3685004.500 ops/s
[info] Iteration   1: 3705849.883 ops/s
[info]                  ·gc.alloc.rate:               960.687 MB/sec
[info]                  ·gc.alloc.rate.norm:          408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 285.458 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 3622914.157 ops/s
[info]                  ·gc.alloc.rate:                   939.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     583.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3705649.948 ops/s
[info]                  ·gc.alloc.rate:               960.643 MB/sec
[info]                  ·gc.alloc.rate.norm:          408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 285.473 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 3707591.938 ops/s
[info]                  ·gc.alloc.rate:                   961.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3674379.717 ops/s
[info]                  ·gc.alloc.rate:                   952.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     576.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala":
[info]   3683277.129 ±(99.9%) 140484.327 ops/s [Average]
[info]   (min, avg, max) = (3622914.157, 3683277.129, 3707591.938), stdev = 36483.334
[info]   CI (99.9%): [3542792.801, 3823761.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   954.858 ±(99.9%) 36.359 MB/sec [Average]
[info]   (min, avg, max) = (939.203, 954.858, 961.117), stdev = 9.442
[info]   CI (99.9%): [918.499, 991.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   408.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (408.000, 408.000, 408.000), stdev = 0.001
[info]   CI (99.9%): [408.000, 408.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   941.510 ±(99.9%) 1419.122 MB/sec [Average]
[info]   (min, avg, max) = (672.146, 941.510, 1346.167), stdev = 368.541
[info]   CI (99.9%): [≈ 0, 2360.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   403.411 ±(99.9%) 621.722 B/op [Average]
[info]   (min, avg, max) = (285.458, 403.411, 583.973), stdev = 161.459
[info]   CI (99.9%): [≈ 0, 1025.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.063 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.036), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 95.76% complete, ETA 00:04:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2702026.555 ops/s
[info] # Warmup Iteration   2: 3789612.547 ops/s
[info] # Warmup Iteration   3: 3828369.593 ops/s
[info] # Warmup Iteration   4: 3826928.732 ops/s
[info] # Warmup Iteration   5: 3828764.016 ops/s
[info] Iteration   1: 3828266.100 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3826271.433 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3827220.545 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3814664.918 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3838478.596 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3826980.318 ±(99.9%) 32565.439 ops/s [Average]
[info]   (min, avg, max) = (3814664.918, 3826980.318, 3838478.596), stdev = 8457.141
[info]   CI (99.9%): [3794414.880, 3859545.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 96.00% complete, ETA 00:04:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1873334.315 ops/s
[info] # Warmup Iteration   2: 2524414.740 ops/s
[info] # Warmup Iteration   3: 2509066.430 ops/s
[info] # Warmup Iteration   4: 2565576.722 ops/s
[info] # Warmup Iteration   5: 2568565.873 ops/s
[info] Iteration   1: 2577055.443 ops/s
[info]                  ·gc.alloc.rate:                   1244.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     820.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2579260.527 ops/s
[info]                  ·gc.alloc.rate:               1245.765 MB/sec
[info]                  ·gc.alloc.rate.norm:          760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 410.136 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2566730.348 ops/s
[info]                  ·gc.alloc.rate:                   1239.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     824.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2575771.167 ops/s
[info]                  ·gc.alloc.rate:               1244.004 MB/sec
[info]                  ·gc.alloc.rate.norm:          760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 822.606 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 2575365.268 ops/s
[info]                  ·gc.alloc.rate:                   1243.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     823.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson":
[info]   2574836.551 ±(99.9%) 18402.555 ops/s [Average]
[info]   (min, avg, max) = (2566730.348, 2574836.551, 2579260.527), stdev = 4779.085
[info]   CI (99.9%): [2556433.996, 2593239.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1243.587 ±(99.9%) 9.001 MB/sec [Average]
[info]   (min, avg, max) = (1239.690, 1243.587, 1245.765), stdev = 2.338
[info]   CI (99.9%): [1234.585, 1252.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (760.000, 760.000, 760.000), stdev = 0.001
[info]   CI (99.9%): [760.000, 760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1211.127 ±(99.9%) 1159.919 MB/sec [Average]
[info]   (min, avg, max) = (672.280, 1211.127, 1347.552), stdev = 301.227
[info]   CI (99.9%): [51.208, 2371.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   740.309 ±(99.9%) 710.746 B/op [Average]
[info]   (min, avg, max) = (410.136, 740.309, 824.675), stdev = 184.578
[info]   CI (99.9%): [29.563, 1451.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.066 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.038), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce
[info] # Run progress: 96.24% complete, ETA 00:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5770.944 ops/s
[info] # Warmup Iteration   2: 9945.606 ops/s
[info] # Warmup Iteration   3: 10851.830 ops/s
[info] # Warmup Iteration   4: 11490.336 ops/s
[info] # Warmup Iteration   5: 11469.863 ops/s
[info] Iteration   1: 11563.247 ops/s
[info]                  ·gc.alloc.rate:                   1629.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              221712.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     182514.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.667 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 11446.473 ops/s
[info]                  ·gc.alloc.rate:                   1612.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              221739.285 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     184563.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.312 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 11434.407 ops/s
[info]                  ·gc.alloc.rate:                   1611.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              221736.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     277685.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 11567.099 ops/s
[info]                  ·gc.alloc.rate:                   1629.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              221736.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     183251.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.161 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 11538.406 ops/s
[info]                  ·gc.alloc.rate:                   1625.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              221736.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     275976.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.357 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce":
[info]   11509.926 ±(99.9%) 248.452 ops/s [Average]
[info]   (min, avg, max) = (11434.407, 11509.926, 11567.099), stdev = 64.522
[info]   CI (99.9%): [11261.475, 11758.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1621.741 ±(99.9%) 35.279 MB/sec [Average]
[info]   (min, avg, max) = (1611.023, 1621.741, 1629.691), stdev = 9.162
[info]   CI (99.9%): [1586.462, 1657.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   221731.890 ±(99.9%) 43.070 B/op [Average]
[info]   (min, avg, max) = (221712.040, 221731.890, 221739.285), stdev = 11.185
[info]   CI (99.9%): [221688.820, 221774.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1614.296 ±(99.9%) 1427.347 MB/sec [Average]
[info]   (min, avg, max) = (1341.572, 1614.296, 2023.158), stdev = 370.678
[info]   CI (99.9%): [186.949, 3041.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   220798.432 ±(99.9%) 196997.259 B/op [Average]
[info]   (min, avg, max) = (182514.785, 220798.432, 277685.591), stdev = 51159.563
[info]   CI (99.9%): [23801.173, 417795.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.096, 0.146), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   13.111 ±(99.9%) 20.128 B/op [Average]
[info]   (min, avg, max) = (5.667, 13.111, 20.057), stdev = 5.227
[info]   CI (99.9%): [≈ 0, 33.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 9.000), stdev = 3.130
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala
[info] # Run progress: 96.47% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5739.698 ops/s
[info] # Warmup Iteration   2: 15075.429 ops/s
[info] # Warmup Iteration   3: 15131.952 ops/s
[info] # Warmup Iteration   4: 15364.879 ops/s
[info] # Warmup Iteration   5: 15343.155 ops/s
[info] Iteration   1: 15283.572 ops/s
[info]                  ·gc.alloc.rate:      241.610 MB/sec
[info]                  ·gc.alloc.rate.norm: 24880.028 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 15275.625 ops/s
[info]                  ·gc.alloc.rate:               241.478 MB/sec
[info]                  ·gc.alloc.rate.norm:          24880.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52710.196 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 15501.177 ops/s
[info]                  ·gc.alloc.rate:      245.040 MB/sec
[info]                  ·gc.alloc.rate.norm: 24878.491 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 15429.381 ops/s
[info]                  ·gc.alloc.rate:                   243.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              24864.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52184.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.244 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 15546.164 ops/s
[info]                  ·gc.alloc.rate:      245.611 MB/sec
[info]                  ·gc.alloc.rate.norm: 24864.028 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala":
[info]   15407.184 ±(99.9%) 476.418 ops/s [Average]
[info]   (min, avg, max) = (15275.625, 15407.184, 15546.164), stdev = 123.724
[info]   CI (99.9%): [14930.766, 15883.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   243.497 ±(99.9%) 7.344 MB/sec [Average]
[info]   (min, avg, max) = (241.478, 243.497, 245.611), stdev = 1.907
[info]   CI (99.9%): [236.153, 250.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24873.321 ±(99.9%) 32.755 B/op [Average]
[info]   (min, avg, max) = (24864.028, 24873.321, 24880.028), stdev = 8.506
[info]   CI (99.9%): [24840.566, 24906.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   204.633 ±(99.9%) 1078.970 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.633, 511.588), stdev = 280.205
[info]   CI (99.9%): [≈ 0, 1283.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20978.876 ±(99.9%) 110617.878 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20978.876, 52710.196), stdev = 28727.112
[info]   CI (99.9%): [≈ 0, 131596.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   ≈ 10⁻³ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.420 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.049, 0.244), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala
[info] # Run progress: 96.71% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19086.263 ops/s
[info] # Warmup Iteration   2: 21331.940 ops/s
[info] # Warmup Iteration   3: 36923.691 ops/s
[info] # Warmup Iteration   4: 36727.818 ops/s
[info] # Warmup Iteration   5: 37117.375 ops/s
[info] Iteration   1: 35165.985 ops/s
[info]                  ·gc.alloc.rate:               385.032 MB/sec
[info]                  ·gc.alloc.rate.norm:          17232.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22896.235 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 37237.390 ops/s
[info]                  ·gc.alloc.rate:      407.826 MB/sec
[info]                  ·gc.alloc.rate.norm: 17232.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 37178.812 ops/s
[info]                  ·gc.alloc.rate:               407.252 MB/sec
[info]                  ·gc.alloc.rate.norm:          17232.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21656.753 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 37160.878 ops/s
[info]                  ·gc.alloc.rate:                   406.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              17232.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21667.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.366 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 37114.132 ops/s
[info]                  ·gc.alloc.rate:                   406.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              17232.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28545.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.660 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.407 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala":
[info]   36771.439 ±(99.9%) 3460.038 ops/s [Average]
[info]   (min, avg, max) = (35165.985, 36771.439, 37237.390), stdev = 898.561
[info]   CI (99.9%): [33311.401, 40231.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   402.659 ±(99.9%) 38.001 MB/sec [Average]
[info]   (min, avg, max) = (385.032, 402.659, 407.826), stdev = 9.869
[info]   CI (99.9%): [364.658, 440.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   17232.012 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (17232.012, 17232.012, 17232.012), stdev = 0.001
[info]   CI (99.9%): [17232.010, 17232.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   441.621 ±(99.9%) 987.990 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 441.621, 673.091), stdev = 256.578
[info]   CI (99.9%): [≈ 0, 1429.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   18953.293 ±(99.9%) 42246.005 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18953.293, 28545.652), stdev = 10971.153
[info]   CI (99.9%): [≈ 0, 61199.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.343 ±(99.9%) 2.836 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.343, 1.660), stdev = 0.737
[info]   CI (99.9%): [≈ 0, 3.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   14.554 ±(99.9%) 120.291 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.554, 70.407), stdev = 31.239
[info]   CI (99.9%): [≈ 0, 134.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson
[info] # Run progress: 96.94% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 893.600 ops/s
[info] # Warmup Iteration   2: 3279.352 ops/s
[info] # Warmup Iteration   3: 2959.565 ops/s
[info] # Warmup Iteration   4: 3672.323 ops/s
[info] # Warmup Iteration   5: 3729.229 ops/s
[info] Iteration   1: 3765.086 ops/s
[info]                  ·gc.alloc.rate:               1186.667 MB/sec
[info]                  ·gc.alloc.rate.norm:          495816.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 278849.937 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 3771.447 ops/s
[info]                  ·gc.alloc.rate:                   1188.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              495816.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     558332.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.685 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3750.222 ops/s
[info]                  ·gc.alloc.rate:               1181.971 MB/sec
[info]                  ·gc.alloc.rate.norm:          495816.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 562725.537 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 3752.529 ops/s
[info]                  ·gc.alloc.rate:               1182.606 MB/sec
[info]                  ·gc.alloc.rate.norm:          495816.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 563543.243 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 3776.664 ops/s
[info]                  ·gc.alloc.rate:               1190.340 MB/sec
[info]                  ·gc.alloc.rate.norm:          495816.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 280462.162 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson":
[info]   3763.190 ±(99.9%) 44.540 ops/s [Average]
[info]   (min, avg, max) = (3750.222, 3763.190, 3776.664), stdev = 11.567
[info]   CI (99.9%): [3718.650, 3807.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1186.066 ±(99.9%) 14.220 MB/sec [Average]
[info]   (min, avg, max) = (1181.971, 1186.066, 1190.340), stdev = 3.693
[info]   CI (99.9%): [1171.846, 1200.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   495816.118 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (495816.114, 495816.118, 495816.124), stdev = 0.005
[info]   CI (99.9%): [495816.100, 495816.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1072.994 ±(99.9%) 1415.370 MB/sec [Average]
[info]   (min, avg, max) = (667.389, 1072.994, 1344.147), stdev = 367.567
[info]   CI (99.9%): [≈ 0, 2488.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   448782.711 ±(99.9%) 594557.057 B/op [Average]
[info]   (min, avg, max) = (278849.937, 448782.711, 563543.243), stdev = 154404.580
[info]   CI (99.9%): [≈ 0, 1043339.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.737 ±(99.9%) 14.956 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.737, 8.685), stdev = 3.884
[info]   CI (99.9%): [≈ 0, 16.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 8.000), stdev = 2.387
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala
[info] # Run progress: 97.18% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26123.777 ops/s
[info] # Warmup Iteration   2: 57803.086 ops/s
[info] # Warmup Iteration   3: 57642.786 ops/s
[info] # Warmup Iteration   4: 58099.240 ops/s
[info] # Warmup Iteration   5: 58547.364 ops/s
[info] Iteration   1: 59418.459 ops/s
[info]                  ·gc.alloc.rate:                   758.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17582.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.886 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.450 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 58227.538 ops/s
[info]                  ·gc.alloc.rate:                   743.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              20099.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17942.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.125 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 59513.088 ops/s
[info]                  ·gc.alloc.rate:                   760.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17546.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.551 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 59698.094 ops/s
[info]                  ·gc.alloc.rate:                   762.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              20099.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34999.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.646 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 59558.588 ops/s
[info]                  ·gc.alloc.rate:               760.624 MB/sec
[info]                  ·gc.alloc.rate.norm:          20100.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17549.610 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala":
[info]   59283.153 ±(99.9%) 2305.200 ops/s [Average]
[info]   (min, avg, max) = (58227.538, 59283.153, 59698.094), stdev = 598.653
[info]   CI (99.9%): [56977.953, 61588.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   757.112 ±(99.9%) 29.394 MB/sec [Average]
[info]   (min, avg, max) = (743.651, 757.112, 762.397), stdev = 7.633
[info]   CI (99.9%): [727.719, 786.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   20099.988 ±(99.9%) 0.131 B/op [Average]
[info]   (min, avg, max) = (20099.949, 20099.988, 20100.020), stdev = 0.034
[info]   CI (99.9%): [20099.857, 20100.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   796.553 ±(99.9%) 1143.031 MB/sec [Average]
[info]   (min, avg, max) = (663.479, 796.553, 1327.559), stdev = 296.841
[info]   CI (99.9%): [≈ 0, 1939.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   21124.087 ±(99.9%) 29875.712 B/op [Average]
[info]   (min, avg, max) = (17546.146, 21124.087, 34999.949), stdev = 7758.628
[info]   CI (99.9%): [≈ 0, 50999.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.602 ±(99.9%) 4.917 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.602, 2.886), stdev = 1.277
[info]   CI (99.9%): [≈ 0, 5.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.954 ±(99.9%) 130.243 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.954, 76.450), stdev = 33.824
[info]   CI (99.9%): [≈ 0, 146.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 4.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala
[info] # Run progress: 97.41% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56436.129 ops/s
[info] # Warmup Iteration   2: 78463.954 ops/s
[info] # Warmup Iteration   3: 78195.409 ops/s
[info] # Warmup Iteration   4: 78058.006 ops/s
[info] # Warmup Iteration   5: 77386.783 ops/s
[info] Iteration   1: 78847.815 ops/s
[info]                  ·gc.alloc.rate:                   517.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10212.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.623 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 80283.456 ops/s
[info]                  ·gc.alloc.rate:               526.443 MB/sec
[info]                  ·gc.alloc.rate.norm:          10320.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10029.471 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 79867.810 ops/s
[info]                  ·gc.alloc.rate:                   523.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13245.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.898 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.393 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 79120.548 ops/s
[info]                  ·gc.alloc.rate:                   518.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13369.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.828 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 77376.180 ops/s
[info]                  ·gc.alloc.rate:                   507.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13658.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.423 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala":
[info]   79099.162 ±(99.9%) 4316.188 ops/s [Average]
[info]   (min, avg, max) = (77376.180, 79099.162, 80283.456), stdev = 1120.900
[info]   CI (99.9%): [74782.974, 83415.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   518.666 ±(99.9%) 28.326 MB/sec [Average]
[info]   (min, avg, max) = (507.361, 518.666, 526.443), stdev = 7.356
[info]   CI (99.9%): [490.340, 546.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   10320.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10320.005, 10320.006, 10320.006), stdev = 0.001
[info]   CI (99.9%): [10320.005, 10320.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   607.801 ±(99.9%) 338.117 MB/sec [Average]
[info]   (min, avg, max) = (511.603, 607.801, 672.158), stdev = 87.808
[info]   CI (99.9%): [269.684, 945.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   12103.036 ±(99.9%) 6996.130 B/op [Average]
[info]   (min, avg, max) = (10029.471, 12103.036, 13658.344), stdev = 1816.873
[info]   CI (99.9%): [5106.906, 19099.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.398 ±(99.9%) 3.228 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.398, 1.898), stdev = 0.838
[info]   CI (99.9%): [≈ 0, 3.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.854 ±(99.9%) 63.597 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.854, 37.393), stdev = 16.516
[info]   CI (99.9%): [≈ 0, 71.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 97.65% complete, ETA 00:02:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64707.302 ops/s
[info] # Warmup Iteration   2: 89682.345 ops/s
[info] # Warmup Iteration   3: 90003.378 ops/s
[info] # Warmup Iteration   4: 89969.711 ops/s
[info] # Warmup Iteration   5: 89965.305 ops/s
[info] Iteration   1: 89996.287 ops/s
[info]                  ·gc.alloc.rate:      10.981 MB/sec
[info]                  ·gc.alloc.rate.norm: 192.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 89908.238 ops/s
[info]                  ·gc.alloc.rate:      10.969 MB/sec
[info]                  ·gc.alloc.rate.norm: 192.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 90000.420 ops/s
[info]                  ·gc.alloc.rate:      10.980 MB/sec
[info]                  ·gc.alloc.rate.norm: 192.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 89886.924 ops/s
[info]                  ·gc.alloc.rate:      10.966 MB/sec
[info]                  ·gc.alloc.rate.norm: 192.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 89913.234 ops/s
[info]                  ·gc.alloc.rate:      10.970 MB/sec
[info]                  ·gc.alloc.rate.norm: 192.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   89941.021 ±(99.9%) 205.171 ops/s [Average]
[info]   (min, avg, max) = (89886.924, 89941.021, 90000.420), stdev = 53.282
[info]   CI (99.9%): [89735.850, 90146.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   10.973 ±(99.9%) 0.027 MB/sec [Average]
[info]   (min, avg, max) = (10.966, 10.973, 10.981), stdev = 0.007
[info]   CI (99.9%): [10.947, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   192.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (192.005, 192.005, 192.005), stdev = 0.001
[info]   CI (99.9%): [192.005, 192.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 97.88% complete, ETA 00:02:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 292230.583 ops/s
[info] # Warmup Iteration   2: 343870.053 ops/s
[info] # Warmup Iteration   3: 347618.055 ops/s
[info] # Warmup Iteration   4: 346691.293 ops/s
[info] # Warmup Iteration   5: 340118.987 ops/s
[info] Iteration   1: 346852.768 ops/s
[info]                  ·gc.alloc.rate:                   2022.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              9176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9179.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 346234.452 ops/s
[info]                  ·gc.alloc.rate:                   2018.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              9176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9208.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.473 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 346468.517 ops/s
[info]                  ·gc.alloc.rate:                   2020.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              9176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9217.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 346676.529 ops/s
[info]                  ·gc.alloc.rate:                   2021.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              9176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9224.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 343610.198 ops/s
[info]                  ·gc.alloc.rate:               2003.375 MB/sec
[info]                  ·gc.alloc.rate.norm:          9176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1356.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6212.337 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce":
[info]   345968.493 ±(99.9%) 5153.814 ops/s [Average]
[info]   (min, avg, max) = (343610.198, 345968.493, 346852.768), stdev = 1338.429
[info]   CI (99.9%): [340814.678, 351122.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2017.177 ±(99.9%) 30.132 MB/sec [Average]
[info]   (min, avg, max) = (2003.375, 2017.177, 2022.175), stdev = 7.825
[info]   CI (99.9%): [1987.044, 2047.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9176.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9176.001, 9176.001, 9176.001), stdev = 0.001
[info]   CI (99.9%): [9176.001, 9176.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1893.329 ±(99.9%) 1156.016 MB/sec [Average]
[info]   (min, avg, max) = (1356.325, 1893.329, 2031.827), stdev = 300.214
[info]   CI (99.9%): [737.313, 3049.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8608.532 ±(99.9%) 5158.399 B/op [Average]
[info]   (min, avg, max) = (6212.337, 8608.532, 9224.193), stdev = 1339.620
[info]   CI (99.9%): [3450.133, 13766.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.246 ±(99.9%) 0.710 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.246, 0.473), stdev = 0.184
[info]   CI (99.9%): [≈ 0, 0.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.12% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 263071.103 ops/s
[info] # Warmup Iteration   2: 470107.186 ops/s
[info] # Warmup Iteration   3: 485562.157 ops/s
[info] # Warmup Iteration   4: 486234.825 ops/s
[info] # Warmup Iteration   5: 482840.355 ops/s
[info] Iteration   1: 476230.200 ops/s
[info]                  ·gc.alloc.rate:               581.094 MB/sec
[info]                  ·gc.alloc.rate.norm:          1920.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1690.744 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 476357.545 ops/s
[info]                  ·gc.alloc.rate:                   581.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              1920.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2203.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.307 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.622 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 479118.979 ops/s
[info]                  ·gc.alloc.rate:                   584.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              1920.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2190.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.205 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 488765.451 ops/s
[info]                  ·gc.alloc.rate:               596.242 MB/sec
[info]                  ·gc.alloc.rate.norm:          1920.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2147.178 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 490224.145 ops/s
[info]                  ·gc.alloc.rate:      598.019 MB/sec
[info]                  ·gc.alloc.rate.norm: 1920.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala":
[info]   482139.264 ±(99.9%) 26310.009 ops/s [Average]
[info]   (min, avg, max) = (476230.200, 482139.264, 490224.145), stdev = 6832.626
[info]   CI (99.9%): [455829.255, 508449.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   588.220 ±(99.9%) 31.850 MB/sec [Average]
[info]   (min, avg, max) = (581.094, 588.220, 598.019), stdev = 8.271
[info]   CI (99.9%): [556.371, 620.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1920.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1920.001, 1920.001, 1920.001), stdev = 0.001
[info]   CI (99.9%): [1920.001, 1920.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   502.455 ±(99.9%) 1112.079 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 502.455, 666.949), stdev = 288.803
[info]   CI (99.9%): [≈ 0, 1614.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1646.292 ±(99.9%) 3637.416 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1646.292, 2203.113), stdev = 944.625
[info]   CI (99.9%): [≈ 0, 5283.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.474 ±(99.9%) 3.948 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.474, 2.307), stdev = 1.025
[info]   CI (99.9%): [≈ 0, 4.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.565 ±(99.9%) 13.042 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.565, 7.622), stdev = 3.387
[info]   CI (99.9%): [≈ 0, 14.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.35% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1128453.717 ops/s
[info] # Warmup Iteration   2: 1253296.239 ops/s
[info] # Warmup Iteration   3: 1257683.059 ops/s
[info] # Warmup Iteration   4: 1234902.795 ops/s
[info] # Warmup Iteration   5: 1256629.739 ops/s
[info] Iteration   1: 1241332.533 ops/s
[info]                  ·gc.alloc.rate:                   649.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              824.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     853.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.578 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1258072.896 ops/s
[info]                  ·gc.alloc.rate:                   658.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              824.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     842.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 1258459.518 ops/s
[info]                  ·gc.alloc.rate:                   658.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              824.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     842.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1259470.296 ops/s
[info]                  ·gc.alloc.rate:               659.387 MB/sec
[info]                  ·gc.alloc.rate.norm:          824.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 841.585 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1257063.694 ops/s
[info]                  ·gc.alloc.rate:                   658.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              824.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     843.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala":
[info]   1254879.787 ±(99.9%) 29349.684 ops/s [Average]
[info]   (min, avg, max) = (1241332.533, 1254879.787, 1259470.296), stdev = 7622.020
[info]   CI (99.9%): [1225530.103, 1284229.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   656.987 ±(99.9%) 15.368 MB/sec [Average]
[info]   (min, avg, max) = (649.895, 656.987, 659.387), stdev = 3.991
[info]   CI (99.9%): [641.619, 672.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   824.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (824.000, 824.000, 824.000), stdev = 0.001
[info]   CI (99.9%): [824.000, 824.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   673.465 ±(99.9%) 0.062 MB/sec [Average]
[info]   (min, avg, max) = (673.442, 673.465, 673.484), stdev = 0.016
[info]   CI (99.9%): [673.402, 673.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   844.692 ±(99.9%) 19.911 B/op [Average]
[info]   (min, avg, max) = (841.585, 844.692, 853.884), stdev = 5.171
[info]   CI (99.9%): [824.781, 864.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.336 ±(99.9%) 2.675 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.336, 1.578), stdev = 0.695
[info]   CI (99.9%): [≈ 0, 3.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.426 ±(99.9%) 3.392 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.426, 2.001), stdev = 0.881
[info]   CI (99.9%): [≈ 0, 3.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 98.59% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77962.564 ops/s
[info] # Warmup Iteration   2: 115170.011 ops/s
[info] # Warmup Iteration   3: 117506.012 ops/s
[info] # Warmup Iteration   4: 115687.409 ops/s
[info] # Warmup Iteration   5: 117938.094 ops/s
[info] Iteration   1: 116865.906 ops/s
[info]                  ·gc.alloc.rate:                   4061.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              54704.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4066.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54763.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.561 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 116737.784 ops/s
[info]                  ·gc.alloc.rate:                   4057.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              54704.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4074.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54931.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.684 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 116423.524 ops/s
[info]                  ·gc.alloc.rate:                   4046.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              54704.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4080.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55162.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.689 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 117902.372 ops/s
[info]                  ·gc.alloc.rate:                   4099.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              54704.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4086.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54522.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.834 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 115325.317 ops/s
[info]                  ·gc.alloc.rate:                   4008.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              54704.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4086.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55765.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.136 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson":
[info]   116650.981 ±(99.9%) 3565.137 ops/s [Average]
[info]   (min, avg, max) = (115325.317, 116650.981, 117902.372), stdev = 925.855
[info]   CI (99.9%): [113085.843, 120216.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4054.909 ±(99.9%) 126.054 MB/sec [Average]
[info]   (min, avg, max) = (4008.504, 4054.909, 4099.731), stdev = 32.736
[info]   CI (99.9%): [3928.854, 4180.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   54704.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (54704.004, 54704.004, 54704.004), stdev = 0.001
[info]   CI (99.9%): [54704.003, 54704.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4078.806 ±(99.9%) 32.559 MB/sec [Average]
[info]   (min, avg, max) = (4066.377, 4078.806, 4086.305), stdev = 8.455
[info]   CI (99.9%): [4046.247, 4111.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   55029.361 ±(99.9%) 1822.844 B/op [Average]
[info]   (min, avg, max) = (54522.929, 55029.361, 55765.744), stdev = 473.387
[info]   CI (99.9%): [53206.517, 56852.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.087, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.181 ±(99.9%) 1.942 B/op [Average]
[info]   (min, avg, max) = (0.561, 1.181, 1.689), stdev = 0.504
[info]   CI (99.9%): [≈ 0, 3.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 98.82% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 276096.560 ops/s
[info] # Warmup Iteration   2: 363952.880 ops/s
[info] # Warmup Iteration   3: 367896.413 ops/s
[info] # Warmup Iteration   4: 370110.151 ops/s
[info] # Warmup Iteration   5: 370563.239 ops/s
[info] Iteration   1: 363118.823 ops/s
[info]                  ·gc.alloc.rate:                   1247.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              5408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5812.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 361160.754 ops/s
[info]                  ·gc.alloc.rate:                   1240.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              5408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5849.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.272 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 364562.012 ops/s
[info]                  ·gc.alloc.rate:                   1252.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              5408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5800.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 365063.800 ops/s
[info]                  ·gc.alloc.rate:               1254.378 MB/sec
[info]                  ·gc.alloc.rate.norm:          5408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2899.070 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 364349.491 ops/s
[info]                  ·gc.alloc.rate:                   1251.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              5408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5813.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce":
[info]   363650.976 ±(99.9%) 6026.711 ops/s [Average]
[info]   (min, avg, max) = (361160.754, 363650.976, 365063.800), stdev = 1565.118
[info]   CI (99.9%): [357624.265, 369677.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1249.553 ±(99.9%) 20.737 MB/sec [Average]
[info]   (min, avg, max) = (1240.997, 1249.553, 1254.378), stdev = 5.385
[info]   CI (99.9%): [1228.816, 1270.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5408.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5408.001, 5408.001, 5408.001), stdev = 0.001
[info]   CI (99.9%): [5408.001, 5408.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1209.049 ±(99.9%) 1155.123 MB/sec [Average]
[info]   (min, avg, max) = (672.435, 1209.049, 1345.841), stdev = 299.982
[info]   CI (99.9%): [53.926, 2364.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5235.008 ±(99.9%) 5028.775 B/op [Average]
[info]   (min, avg, max) = (2899.070, 5235.008, 5849.339), stdev = 1305.957
[info]   CI (99.9%): [206.233, 10263.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.180 ±(99.9%) 0.426 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.180, 0.272), stdev = 0.111
[info]   CI (99.9%): [≈ 0, 0.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.06% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 389406.186 ops/s
[info] # Warmup Iteration   2: 636413.450 ops/s
[info] # Warmup Iteration   3: 641731.297 ops/s
[info] # Warmup Iteration   4: 640771.575 ops/s
[info] # Warmup Iteration   5: 642040.612 ops/s
[info] Iteration   1: 630238.337 ops/s
[info]                  ·gc.alloc.rate:               487.097 MB/sec
[info]                  ·gc.alloc.rate.norm:          1216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1277.593 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 641867.253 ops/s
[info]                  ·gc.alloc.rate:               496.050 MB/sec
[info]                  ·gc.alloc.rate.norm:          1216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1254.446 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 641136.020 ops/s
[info]                  ·gc.alloc.rate:                   495.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              1216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1636.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.344 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.754 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 630738.776 ops/s
[info]                  ·gc.alloc.rate:      487.378 MB/sec
[info]                  ·gc.alloc.rate.norm: 1216.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 629507.750 ops/s
[info]                  ·gc.alloc.rate:                   486.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              1216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1667.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala":
[info]   634697.627 ±(99.9%) 23997.038 ops/s [Average]
[info]   (min, avg, max) = (629507.750, 634697.627, 641867.253), stdev = 6231.954
[info]   CI (99.9%): [610700.590, 658694.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   490.467 ±(99.9%) 18.463 MB/sec [Average]
[info]   (min, avg, max) = (486.461, 490.467, 496.050), stdev = 4.795
[info]   CI (99.9%): [472.004, 508.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1216.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1216.001, 1216.001, 1216.001), stdev = 0.001
[info]   CI (99.9%): [1216.001, 1216.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   471.446 ±(99.9%) 1057.854 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 471.446, 666.936), stdev = 274.721
[info]   CI (99.9%): [≈ 0, 1529.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1167.207 ±(99.9%) 2620.612 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1167.207, 1667.132), stdev = 680.565
[info]   CI (99.9%): [≈ 0, 3787.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.477 ±(99.9%) 4.019 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.477, 2.344), stdev = 1.044
[info]   CI (99.9%): [≈ 0, 4.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.172 ±(99.9%) 9.866 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.172, 5.754), stdev = 2.562
[info]   CI (99.9%): [≈ 0, 11.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.29% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1592799.984 ops/s
[info] # Warmup Iteration   2: 1842281.515 ops/s
[info] # Warmup Iteration   3: 1836753.224 ops/s
[info] # Warmup Iteration   4: 1849495.229 ops/s
[info] # Warmup Iteration   5: 1854216.960 ops/s
[info] Iteration   1: 1856270.342 ops/s
[info]                  ·gc.alloc.rate:                   858.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1140.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1814862.822 ops/s
[info]                  ·gc.alloc.rate:               839.472 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 582.906 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1850016.319 ops/s
[info]                  ·gc.alloc.rate:                   856.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     571.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1843210.690 ops/s
[info]                  ·gc.alloc.rate:                   852.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     573.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1830547.122 ops/s
[info]                  ·gc.alloc.rate:                   846.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1156.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala":
[info]   1838981.459 ±(99.9%) 63605.792 ops/s [Average]
[info]   (min, avg, max) = (1814862.822, 1838981.459, 1856270.342), stdev = 16518.222
[info]   CI (99.9%): [1775375.667, 1902587.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   850.715 ±(99.9%) 29.698 MB/sec [Average]
[info]   (min, avg, max) = (839.472, 850.715, 858.659), stdev = 7.712
[info]   CI (99.9%): [821.017, 880.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   728.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (728.000, 728.000, 728.000), stdev = 0.001
[info]   CI (99.9%): [728.000, 728.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   941.481 ±(99.9%) 1419.533 MB/sec [Average]
[info]   (min, avg, max) = (672.161, 941.481, 1345.564), stdev = 368.648
[info]   CI (99.9%): [≈ 0, 2361.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   805.190 ±(99.9%) 1207.620 B/op [Average]
[info]   (min, avg, max) = (571.812, 805.190, 1156.905), stdev = 313.615
[info]   CI (99.9%): [≈ 0, 2012.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.101 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.071), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 99.53% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1714957.663 ops/s
[info] # Warmup Iteration   2: 1885191.102 ops/s
[info] # Warmup Iteration   3: 1896552.027 ops/s
[info] # Warmup Iteration   4: 1895186.864 ops/s
[info] # Warmup Iteration   5: 1887966.373 ops/s
[info] Iteration   1: 1895690.970 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1895659.895 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1894858.929 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1894723.775 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1895291.223 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   1895244.958 ±(99.9%) 1715.471 ops/s [Average]
[info]   (min, avg, max) = (1894723.775, 1895244.958, 1895690.970), stdev = 445.502
[info]   CI (99.9%): [1893529.487, 1896960.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 99.76% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 269422.089 ops/s
[info] # Warmup Iteration   2: 335255.334 ops/s
[info] # Warmup Iteration   3: 330414.142 ops/s
[info] # Warmup Iteration   4: 346344.224 ops/s
[info] # Warmup Iteration   5: 334881.662 ops/s
[info] Iteration   1: 346860.574 ops/s
[info]                  ·gc.alloc.rate:               513.060 MB/sec
[info]                  ·gc.alloc.rate.norm:          2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2321.350 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 331111.115 ops/s
[info]                  ·gc.alloc.rate:               489.798 MB/sec
[info]                  ·gc.alloc.rate.norm:          2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2431.840 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 345785.980 ops/s
[info]                  ·gc.alloc.rate:                   511.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3048.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.043 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.296 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 345882.967 ops/s
[info]                  ·gc.alloc.rate:                   511.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3047.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 347423.327 ops/s
[info]                  ·gc.alloc.rate:      513.877 MB/sec
[info]                  ·gc.alloc.rate.norm: 2328.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson":
[info]   343412.793 ±(99.9%) 26611.030 ops/s [Average]
[info]   (min, avg, max) = (331111.115, 343412.793, 347423.327), stdev = 6910.800
[info]   CI (99.9%): [316801.763, 370023.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   507.990 ±(99.9%) 39.339 MB/sec [Average]
[info]   (min, avg, max) = (489.798, 507.990, 513.877), stdev = 10.216
[info]   CI (99.9%): [468.651, 547.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2328.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2328.001, 2328.001, 2328.001), stdev = 0.001
[info]   CI (99.9%): [2328.001, 2328.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   472.603 ±(99.9%) 1061.968 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 472.603, 669.988), stdev = 275.790
[info]   CI (99.9%): [≈ 0, 1534.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2169.930 ±(99.9%) 4848.962 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2169.930, 3048.662), stdev = 1259.260
[info]   CI (99.9%): [≈ 0, 7018.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.413 ±(99.9%) 3.509 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.413, 2.043), stdev = 0.911
[info]   CI (99.9%): [≈ 0, 3.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.878 ±(99.9%) 15.968 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.878, 9.296), stdev = 4.147
[info]   CI (99.9%): [≈ 0, 17.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # Run complete. Total time: 01:54:00
[info] REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
[info] why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
[info] experiments, perform baseline and negative tests that provide experimental control, make sure
[info] the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
[info] Do not assume the numbers tell you what you want them to tell.
[info] Benchmark                                                                                      (size)   Mode  Cnt         Score         Error   Units
[info] AdtBenchmark.readCirce                                                                            N/A  thrpt    5    787430.775 ±   18840.565   ops/s
[info] AdtBenchmark.readCirce:·gc.alloc.rate                                                             N/A  thrpt    5      2073.593 ±      50.253  MB/sec
[info] AdtBenchmark.readCirce:·gc.alloc.rate.norm                                                        N/A  thrpt    5      4144.001 ±       0.001    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                    N/A  thrpt    5      2158.456 ±    1141.212  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                               N/A  thrpt    5      4313.580 ±    2276.093    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                                N/A  thrpt    5         0.075 ±       0.091  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                           N/A  thrpt    5         0.150 ±       0.183    B/op
[info] AdtBenchmark.readCirce:·gc.count                                                                  N/A  thrpt    5        16.000                counts
[info] AdtBenchmark.readCirce:·gc.time                                                                   N/A  thrpt    5        13.000                    ms
[info] AdtBenchmark.readJacksonScala                                                                     N/A  thrpt    5   1643485.726 ±   43143.761   ops/s
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate                                                      N/A  thrpt    5      1169.699 ±      30.246  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm                                                 N/A  thrpt    5      1120.000 ±       0.001    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1201.718 ±    1147.860  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5      1151.533 ±    1110.211    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.050 ±       0.146  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.048 ±       0.141    B/op
[info] AdtBenchmark.readJacksonScala:·gc.count                                                           N/A  thrpt    5         9.000                counts
[info] AdtBenchmark.readJacksonScala:·gc.time                                                            N/A  thrpt    5         9.000                    ms
[info] AdtBenchmark.readJsoniterScala                                                                    N/A  thrpt    5   3683167.492 ±  225302.236   ops/s
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate                                                     N/A  thrpt    5       243.393 ±      14.929  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                                N/A  thrpt    5       104.000 ±       0.001    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5       204.637 ±    1078.993  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5        88.556 ±     467.032    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.010 ±       0.090  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.005 ±       0.039    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.count                                                          N/A  thrpt    5         2.000                counts
[info] AdtBenchmark.readJsoniterScala:·gc.time                                                           N/A  thrpt    5         3.000                    ms
[info] AdtBenchmark.readPlayJson                                                                         N/A  thrpt    5    172775.027 ±    6066.184   ops/s
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate                                                          N/A  thrpt    5      1456.089 ±      51.075  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate.norm                                                     N/A  thrpt    5     13264.003 ±       0.001    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5      1471.719 ±    1151.545  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5     13401.378 ±   10322.624    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.029 ±       0.072  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5         0.265 ±       0.650    B/op
[info] AdtBenchmark.readPlayJson:·gc.count                                                               N/A  thrpt    5        11.000                counts
[info] AdtBenchmark.readPlayJson:·gc.time                                                                N/A  thrpt    5        10.000                    ms
[info] AdtBenchmark.writeCirce                                                                           N/A  thrpt    5    562440.499 ±   17974.234   ops/s
[info] AdtBenchmark.writeCirce:·gc.alloc.rate                                                            N/A  thrpt    5      1878.530 ±      59.928  MB/sec
[info] AdtBenchmark.writeCirce:·gc.alloc.rate.norm                                                       N/A  thrpt    5      5256.001 ±       0.001    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5      1887.072 ±    1160.587  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5      5281.635 ±    3286.628    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5         0.058 ±       0.154  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5         0.163 ±       0.428    B/op
[info] AdtBenchmark.writeCirce:·gc.count                                                                 N/A  thrpt    5        14.000                counts
[info] AdtBenchmark.writeCirce:·gc.time                                                                  N/A  thrpt    5        12.000                    ms
[info] AdtBenchmark.writeJacksonScala                                                                    N/A  thrpt    5   2108764.574 ±   49615.934   ops/s
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate                                                     N/A  thrpt    5       878.988 ±      20.593  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                                N/A  thrpt    5       656.000 ±       0.001    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5       800.358 ±    1148.142  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5       597.022 ±     850.930    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.025 ±       0.143  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.019 ±       0.107    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.count                                                          N/A  thrpt    5         6.000                counts
[info] AdtBenchmark.writeJacksonScala:·gc.time                                                           N/A  thrpt    5         6.000                    ms
[info] AdtBenchmark.writeJsoniterScala                                                                   N/A  thrpt    5  18760204.014 ±  500595.730   ops/s
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate                                                    N/A  thrpt    5       953.700 ±      25.789  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                               N/A  thrpt    5        80.000 ±       0.001    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5       941.592 ±    1419.269  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5        78.999 ±     119.232    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.029 ±       0.166  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         0.002 ±       0.014    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.count                                                         N/A  thrpt    5         7.000                counts
[info] AdtBenchmark.writeJsoniterScala:·gc.time                                                          N/A  thrpt    5         5.000                    ms
[info] AdtBenchmark.writeJsoniterScalaPrealloc                                                           N/A  thrpt    5  19499596.286 ± 1173542.619   ops/s
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                            N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                       N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                 N/A  thrpt    5           ≈ 0                counts
[info] AdtBenchmark.writePlayJson                                                                        N/A  thrpt    5    314306.016 ±    9661.633   ops/s
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate                                                         N/A  thrpt    5       997.152 ±      30.946  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate.norm                                                    N/A  thrpt    5      4992.001 ±       0.001    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5      1067.823 ±    1407.430  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5      5353.248 ±    7136.568    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                            N/A  thrpt    5         0.054 ±       0.193  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                       N/A  thrpt    5         0.272 ±       0.968    B/op
[info] AdtBenchmark.writePlayJson:·gc.count                                                              N/A  thrpt    5         8.000                counts
[info] AdtBenchmark.writePlayJson:·gc.time                                                               N/A  thrpt    5         8.000                    ms
[info] AnyRefsBenchmark.readCirce                                                                        N/A  thrpt    5   1688669.976 ±   51546.650   ops/s
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate                                                         N/A  thrpt    5      2635.547 ±      80.309  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm                                                    N/A  thrpt    5      2456.000 ±       0.001    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5      2710.423 ±      27.081  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5      2525.916 ±      88.531    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                            N/A  thrpt    5         0.062 ±       0.080  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                       N/A  thrpt    5         0.058 ±       0.074    B/op
[info] AnyRefsBenchmark.readCirce:·gc.count                                                              N/A  thrpt    5        20.000                counts
[info] AnyRefsBenchmark.readCirce:·gc.time                                                               N/A  thrpt    5        17.000                    ms
[info] AnyRefsBenchmark.readDslJsonJava                                                                  N/A  thrpt    5   9885452.089 ±  365112.157   ops/s
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate                                                   N/A  thrpt    5      1206.061 ±      45.041  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                              N/A  thrpt    5       192.000 ±       0.001    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1202.317 ±    1150.618  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       191.388 ±     182.954    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.485 ±       3.965  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.078 ±       0.635    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.count                                                        N/A  thrpt    5         9.000                counts
[info] AnyRefsBenchmark.readDslJsonJava:·gc.time                                                         N/A  thrpt    5        17.000                    ms
[info] AnyRefsBenchmark.readJacksonScala                                                                 N/A  thrpt    5   2614131.150 ±  139911.839   ops/s
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate                                                  N/A  thrpt    5      1833.696 ±      98.115  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                             N/A  thrpt    5      1104.000 ±       0.001    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      1745.239 ±    1409.636  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5      1050.722 ±     846.916    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.067 ±       0.154  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.040 ±       0.094    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.count                                                       N/A  thrpt    5        13.000                counts
[info] AnyRefsBenchmark.readJacksonScala:·gc.time                                                        N/A  thrpt    5        13.000                    ms
[info] AnyRefsBenchmark.readJsoniterScala                                                                N/A  thrpt    5  10749033.173 ±  204970.654   ops/s
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate                                                 N/A  thrpt    5      1366.057 ±      26.096  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                            N/A  thrpt    5       200.000 ±       0.001    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1351.317 ±       4.695  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5       197.846 ±       4.257    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.054 ±       0.072  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.008 ±       0.010    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.count                                                      N/A  thrpt    5        10.000                counts
[info] AnyRefsBenchmark.readJsoniterScala:·gc.time                                                       N/A  thrpt    5         8.000                    ms
[info] AnyRefsBenchmark.readPlayJson                                                                     N/A  thrpt    5    634281.530 ±    9122.755   ops/s
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate                                                      N/A  thrpt    5      1676.853 ±      23.753  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm                                                 N/A  thrpt    5      4160.001 ±       0.001    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1609.167 ±    1412.426  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5      3991.876 ±    3498.814    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.050 ±       0.122  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.124 ±       0.303    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.count                                                           N/A  thrpt    5        12.000                counts
[info] AnyRefsBenchmark.readPlayJson:·gc.time                                                            N/A  thrpt    5        13.000                    ms
[info] AnyRefsBenchmark.writeCirce                                                                       N/A  thrpt    5   1977501.112 ±   79044.889   ops/s
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate                                                        N/A  thrpt    5      1940.325 ±      77.495  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm                                                   N/A  thrpt    5      1544.000 ±       0.001    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      1887.926 ±    1161.797  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5      1503.477 ±     950.810    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.062 ±       0.057  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.050 ±       0.044    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.count                                                             N/A  thrpt    5        14.000                counts
[info] AnyRefsBenchmark.writeCirce:·gc.time                                                              N/A  thrpt    5        11.000                    ms
[info] AnyRefsBenchmark.writeDslJsonJava                                                                 N/A  thrpt    5  18720573.744 ± 1429878.578   ops/s
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate                                                  N/A  thrpt    5       570.954 ±      43.686  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                             N/A  thrpt    5        48.000 ±       0.001    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       500.898 ±    1107.875  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5        41.825 ±      92.071    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.006 ±       0.022  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.001 ±       0.002    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.count                                                       N/A  thrpt    5         4.000                counts
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.time                                                        N/A  thrpt    5         8.000                    ms
[info] AnyRefsBenchmark.writeJacksonScala                                                                N/A  thrpt    5   5990426.009 ±  225417.726   ops/s
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate                                                 N/A  thrpt    5      1644.430 ±      61.337  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                            N/A  thrpt    5       432.000 ±       0.001    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1607.528 ±    1407.256  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5       422.110 ±     364.745    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.046 ±       0.132  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.012 ±       0.035    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.count                                                      N/A  thrpt    5        12.000                counts
[info] AnyRefsBenchmark.writeJacksonScala:·gc.time                                                       N/A  thrpt    5        18.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScala                                                               N/A  thrpt    5  27742481.800 ± 1583866.690   ops/s
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate                                                N/A  thrpt    5       846.186 ±      48.525  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                           N/A  thrpt    5        48.000 ±       0.001    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       807.099 ±    1158.196  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5        45.689 ±      63.762    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.029 ±       0.166  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.002 ±       0.009    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.count                                                     N/A  thrpt    5         6.000                counts
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.time                                                      N/A  thrpt    5         6.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc                                                       N/A  thrpt    5  26956002.336 ±  123169.313   ops/s
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                        N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                   N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                             N/A  thrpt    5           ≈ 0                counts
[info] AnyRefsBenchmark.writePlayJson                                                                    N/A  thrpt    5   1126981.099 ±    8744.845   ops/s
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate                                                     N/A  thrpt    5      1712.947 ±      12.261  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm                                                N/A  thrpt    5      2392.000 ±       0.001    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1744.314 ±    1415.177  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5      2436.396 ±    1988.704    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.029 ±       0.166  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.041 ±       0.232    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.count                                                          N/A  thrpt    5        13.000                counts
[info] AnyRefsBenchmark.writePlayJson:·gc.time                                                           N/A  thrpt    5        13.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readCirce                                                          128  thrpt    5    341352.941 ±    1742.735   ops/s
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      2040.641 ±       9.668  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5      9408.001 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2028.877 ±      16.516  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      9353.774 ±      77.226    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.062 ±       0.127  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.288 ±       0.586    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.count                                                128  thrpt    5        15.000                counts
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.time                                                 128  thrpt    5        12.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala                                                   128  thrpt    5    495341.065 ±   30798.834   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5       674.850 ±      41.718  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5      2144.001 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       666.950 ±       0.716  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      2119.335 ±     130.155    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.498 ±       4.109  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.559 ±      12.859    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5         5.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5         6.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala                                                  128  thrpt    5   1321787.295 ±   68092.869   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       880.192 ±      45.477  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      1048.000 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       942.495 ±    1419.976  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      1126.613 ±    1751.328    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.037 ±       0.143  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.045 ±       0.171    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         7.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5         6.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readPlayJson                                                       128  thrpt    5    118146.552 ±    6901.137   ops/s
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      4091.299 ±     237.304  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     54496.004 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      4079.823 ±      30.936  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     54354.056 ±    3500.139    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.071 ±       0.166  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.940 ±       2.175    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        30.000                counts
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time                                              128  thrpt    5        25.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeCirce                                                         128  thrpt    5    371746.386 ±   32951.291   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      1264.294 ±     112.535  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5      5352.001 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1209.129 ±    1153.044  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      5130.799 ±    5036.901    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.046 ±       0.154  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.195 ±       0.657    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count                                               128  thrpt    5         9.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time                                                128  thrpt    5         9.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala                                                  128  thrpt    5    652547.002 ±    4555.152   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5       487.679 ±       3.569  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      1176.001 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       471.430 ±    1057.799  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      1137.535 ±    2552.772    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.488 ±       4.117  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         1.180 ±       9.944    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5         4.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5         9.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala                                                 128  thrpt    5   2148399.323 ±   32317.374   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       993.761 ±      15.048  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5       728.000 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1076.122 ±    1418.858  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       788.619 ±    1042.883    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.042 ±       0.188  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.030 ±       0.137    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5         8.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5         7.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   2652880.924 ±   50516.542   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson                                                      128  thrpt    5    394764.244 ±    4003.723   ops/s
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5       567.868 ±       5.720  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5      2264.001 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5       504.150 ±    1116.766  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      2008.437 ±    4444.677    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.417 ±       3.411  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.661 ±      13.591    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count                                            128  thrpt    5         4.000                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time                                             128  thrpt    5         7.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readCirce                                                             128  thrpt    5     18882.148 ±    1398.751   ops/s
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      1337.443 ±      98.421  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5    111467.351 ±      40.233    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1347.115 ±       7.366  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    112305.982 ±    8205.954    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         2.412 ±       7.518    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        10.000                counts
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.time                                                    128  thrpt    5         8.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala                                                      128  thrpt    5     31950.603 ±     219.301   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       857.743 ±       6.104  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     42248.014 ±       0.002    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       801.928 ±    1151.021  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     39490.246 ±   56524.556    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.029 ±       0.122  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.435 ±       5.985    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         6.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5         6.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala                                                     128  thrpt    5     38975.799 ±    2548.632   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       523.668 ±      34.190  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5     21144.011 ±       0.002    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       506.189 ±    1122.407  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     20582.008 ±   45868.472    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.334 ±       2.738  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        13.598 ±     111.619    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         4.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5         6.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readPlayJson                                                          128  thrpt    5     26023.025 ±      99.205   ops/s
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      1346.870 ±       5.017  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     81456.017 ±       0.002    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1340.836 ±       9.941  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     81091.069 ±     495.882    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.033 ±       0.091  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         2.015 ±       5.528    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        10.000                counts
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeCirce                                                            128  thrpt    5     27286.776 ±    1106.364   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1867.752 ±      75.769  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5    107728.016 ±       0.001    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1887.717 ±    1161.323  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    108797.935 ±   64940.776    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.037 ±       0.119  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.147 ±       6.743    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        14.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        14.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala                                                     128  thrpt    5     27753.252 ±     210.741   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1627.737 ±      12.270  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     92288.016 ±       0.002    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1608.543 ±    1421.179  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     91182.877 ±   80186.600    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.054 ±       0.193  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         3.067 ±      10.933    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        12.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        12.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala                                                    128  thrpt    5     31266.559 ±     802.751   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5      1735.040 ±      43.213  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5     87328.014 ±       0.002    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1754.176 ±    1422.224  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     88246.757 ±   70603.877    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.075 ±       0.238  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         3.784 ±      12.056    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        13.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        11.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5     31058.480 ±     619.176   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5      1662.689 ±      32.947  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5     84248.014 ±       0.001    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                    128  thrpt    5      1618.886 ±    1422.247  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     82048.073 ±   72494.853    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.050 ±       0.146  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         2.536 ±       7.392    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5        12.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                   128  thrpt    5        11.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writePlayJson                                                         128  thrpt    5      8458.916 ±      59.022   ops/s
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1196.173 ±       8.307  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    222544.052 ±       0.006    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1206.885 ±    1153.273  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    224578.746 ±  215097.521    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.042 ±       0.127  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         7.754 ±      23.637    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5         9.000                counts
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5         9.000                    ms
[info] ArrayOfBigIntsBenchmark.readCirce                                                                 128  thrpt    5     18309.735 ±     663.060   ops/s
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1579.542 ±      57.469  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5    135760.026 ±       0.014    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1618.601 ±    1420.371  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5    139250.940 ±  125031.512    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.050 ±       0.201  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         4.319 ±      17.503    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        12.000                counts
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.time                                                        128  thrpt    5         9.000                    ms
[info] ArrayOfBigIntsBenchmark.readJacksonScala                                                          128  thrpt    5     42765.396 ±     319.177   ops/s
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1180.703 ±       9.198  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5     43448.010 ±       0.001    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1204.635 ±    1151.279  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     44329.553 ±   42377.093    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.033 ±       0.108  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.227 ±       3.966    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         9.000                counts
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] ArrayOfBigIntsBenchmark.readJsoniterScala                                                         128  thrpt    5     61178.468 ±    4271.093   ops/s
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       790.526 ±      54.891  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5     20336.007 ±       0.001    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       807.811 ±    1159.613  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     20897.851 ±   32002.075    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.025 ±       0.067  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.646 ±       1.750    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         6.000                counts
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5         6.000                    ms
[info] ArrayOfBigIntsBenchmark.readPlayJson                                                              128  thrpt    5     31801.042 ±    1759.793   ops/s
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2157.036 ±     117.840  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    106744.014 ±       0.002    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2153.586 ±    1131.327  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    106552.028 ±   54627.932    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.071 ±       0.091  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         3.502 ±       4.487    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        16.000                counts
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        16.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJacksonScala                                                         128  thrpt    5     28909.690 ±     818.888   ops/s
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1685.237 ±      47.058  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     91736.015 ±       0.002    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1610.933 ±    1416.689  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     87754.741 ±   78522.743    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.050 ±       0.209  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.732 ±      11.492    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        12.000                counts
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        12.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala                                                        128  thrpt    5     37524.647 ±     509.994   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1729.356 ±      22.690  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5     72528.012 ±       0.002    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1619.600 ±    1423.013  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     67905.869 ±   59236.650    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.050 ±       0.176  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.095 ±       7.353    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5        12.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        11.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5     37237.243 ±    1196.477   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5      1651.385 ±      53.964  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5     69784.012 ±       0.001    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                        128  thrpt    5      1619.109 ±    1422.985  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     68420.884 ±   60093.986    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.067 ±       0.208  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.820 ±       8.763    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5        12.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                       128  thrpt    5        12.000                    ms
[info] ArrayOfBooleansBenchmark.readCirce                                                                128  thrpt    5    329398.946 ±    4287.896   ops/s
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1821.808 ±      23.980  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5      8704.001 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1891.446 ±    1167.945  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      9036.209 ±    5567.494    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.054 ±       0.146  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.259 ±       0.696    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.count                                                      128  thrpt    5        14.000                counts
[info] ArrayOfBooleansBenchmark.readCirce:·gc.time                                                       128  thrpt    5        11.000                    ms
[info] ArrayOfBooleansBenchmark.readDslJsonJava                                                          128  thrpt    5   1392077.511 ±  102291.966   ops/s
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate                                           128  thrpt    5       438.748 ±      32.282  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                      128  thrpt    5       496.000 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                  128  thrpt    5       470.187 ±    1053.657  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       531.067 ±    1202.960    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time                                                 128  thrpt    5         9.000                    ms
[info] ArrayOfBooleansBenchmark.readJacksonScala                                                         128  thrpt    5    681818.760 ±    5884.517   ops/s
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5       564.960 ±       4.758  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1304.001 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       503.002 ±    1113.644  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1161.529 ±    2569.871    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.432 ±       3.570  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.997 ±       8.246    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfBooleansBenchmark.readJsoniterScala                                                        128  thrpt    5   1739771.076 ±   68063.717   ops/s
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       336.065 ±      13.205  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5       304.000 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       306.968 ±    1079.037  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       278.815 ±     980.199    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.007 ±       0.062  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.007 ±       0.057    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5         3.000                counts
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5         6.000                    ms
[info] ArrayOfBooleansBenchmark.readPlayJson                                                             128  thrpt    5    109638.580 ±    2113.620   ops/s
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      3983.327 ±      77.359  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     57176.004 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      4077.911 ±      31.877  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     58535.040 ±    1396.900    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.079 ±       0.119  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.136 ±       1.708    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        30.000                counts
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        25.000                    ms
[info] ArrayOfBooleansBenchmark.writeCirce                                                               128  thrpt    5    319660.339 ±    5031.691   ops/s
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1091.913 ±      17.281  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5      5376.001 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1073.622 ±    1415.246  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      5289.439 ±    7010.611    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.033 ±       0.146  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.164 ±       0.717    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.count                                                     128  thrpt    5         8.000                counts
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.time                                                      128  thrpt    5         6.000                    ms
[info] ArrayOfBooleansBenchmark.writeDslJsonJava                                                         128  thrpt    5   1517651.302 ±    7852.093   ops/s
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate                                          128  thrpt    5       702.022 ±       3.644  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                     128  thrpt    5       728.000 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                 128  thrpt    5       664.904 ±       4.427  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       689.510 ±       6.791    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.012 ±       0.061  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.012 ±       0.063    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count                                               128  thrpt    5         5.000                counts
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time                                                128  thrpt    5         8.000                    ms
[info] ArrayOfBooleansBenchmark.writeJacksonScala                                                        128  thrpt    5    916526.176 ±   41514.556   ops/s
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5       647.591 ±      29.260  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5      1112.000 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       534.387 ±    1150.309  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       917.302 ±    1975.205    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.422 ±       3.499  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.727 ±       6.028    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5         4.000                counts
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5         5.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScala                                                       128  thrpt    5   2598189.693 ±  148747.640   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1201.999 ±      68.807  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5       728.000 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1211.375 ±    1156.803  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       732.680 ±     687.281    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.054 ±       0.134  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.033 ±       0.082    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5         9.000                counts
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5         8.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   2267247.897 ±   10460.991   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfBooleansBenchmark.writePlayJson                                                            128  thrpt    5    510739.327 ±    8805.431   ops/s
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5       597.180 ±      10.289  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5      1840.001 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5       638.111 ±     272.278  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1966.588 ±     855.797    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.417 ±       3.411  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.279 ±      10.460    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfBytesBenchmark.readCirce                                                                   128  thrpt    5    157492.876 ±    4581.159   ops/s
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1938.143 ±      55.826  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     19368.003 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1892.077 ±    1159.219  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     18905.046 ±   11514.348    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.062 ±       0.113  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.625 ±       1.149    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.count                                                         128  thrpt    5        14.000                counts
[info] ArrayOfBytesBenchmark.readCirce:·gc.time                                                          128  thrpt    5        13.000                    ms
[info] ArrayOfBytesBenchmark.readJacksonScala                                                            128  thrpt    5    420683.438 ±   20971.321   ops/s
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5       348.556 ±      17.435  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      1304.001 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       306.954 ±    1078.987  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1156.455 ±    4065.139    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.002 ±       0.018  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.008 ±       0.068    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         3.000                counts
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         8.000                    ms
[info] ArrayOfBytesBenchmark.readJsoniterScala                                                           128  thrpt    5   1009744.210 ±   17809.694   ops/s
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       195.037 ±       3.437  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       304.000 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       204.637 ±    1078.994  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       320.397 ±    1689.370    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.536 ±       4.611  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.836 ±       7.200    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         2.000                counts
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         3.000                    ms
[info] ArrayOfBytesBenchmark.readPlayJson                                                                128  thrpt    5     83631.466 ±    1532.115   ops/s
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      3452.003 ±      62.789  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     64952.005 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      3393.770 ±      35.324  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     63857.361 ±    1265.551    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.075 ±       0.091  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         1.410 ±       1.716    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        25.000                counts
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        21.000                    ms
[info] ArrayOfBytesBenchmark.writeCirce                                                                  128  thrpt    5    237377.334 ±    7789.680   ops/s
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1309.148 ±      42.931  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5      8680.002 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1343.583 ±       9.306  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5      8908.735 ±     239.584    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.054 ±       0.044  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.359 ±       0.294    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        10.000                counts
[info] ArrayOfBytesBenchmark.writeCirce:·gc.time                                                         128  thrpt    5         9.000                    ms
[info] ArrayOfBytesBenchmark.writeJacksonScala                                                           128  thrpt    5   1645077.744 ±  104422.307   ops/s
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       844.640 ±      53.765  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5       808.000 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       802.243 ±    1150.386  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       771.450 ±    1175.094    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.033 ±       0.185  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.032 ±       0.181    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         5.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScala                                                          128  thrpt    5   1980469.193 ±   83239.364   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       533.547 ±      22.368  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       424.000 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       505.739 ±    1121.136  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       401.042 ±     886.876    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.363 ±       2.932  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.290 ±       2.349    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   1977958.201 ±   37111.119   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfBytesBenchmark.writePlayJson                                                               128  thrpt    5     38821.526 ±    1315.010   ops/s
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      1693.505 ±      57.320  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     68656.011 ±       0.002    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1749.829 ±    1428.503  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     71019.305 ±   59522.278    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.054 ±       0.134  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         2.193 ±       5.455    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        13.000                counts
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        11.000                    ms
[info] ArrayOfCharsBenchmark.readCirce                                                                   128  thrpt    5    221382.923 ±    5039.716   ops/s
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      2356.671 ±      52.767  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     16752.002 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      2302.634 ±    1422.556  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     16374.663 ±   10318.697    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.062 ±       0.127  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.444 ±       0.895    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        17.000                counts
[info] ArrayOfCharsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        14.000                    ms
[info] ArrayOfCharsBenchmark.readJacksonScala                                                            128  thrpt    5    309719.968 ±    5910.378   ops/s
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1550.721 ±      29.228  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      7880.001 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1611.246 ±    1415.581  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      8183.962 ±    7109.572    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.037 ±       0.105  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.191 ±       0.536    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        12.000                counts
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        13.000                    ms
[info] ArrayOfCharsBenchmark.readJsoniterScala                                                           128  thrpt    5   1115965.568 ±   67840.894   ops/s
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       385.736 ±      23.546  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       544.000 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       441.586 ±     987.969  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       626.860 ±    1400.692    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.319 ±       2.679  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.451 ±       3.791    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfCharsBenchmark.readPlayJson                                                                128  thrpt    5     79377.444 ±    3412.114   ops/s
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      3231.250 ±     139.906  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     64064.006 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      3116.318 ±    1420.982  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     61815.339 ±   29238.039    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.075 ±       0.091  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         1.485 ±       1.807    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        23.000                counts
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        24.000                    ms
[info] ArrayOfCharsBenchmark.writeCirce                                                                  128  thrpt    5    220852.563 ±    7792.731   ops/s
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      2174.850 ±      76.767  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     15496.002 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2162.655 ±    1180.592  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     15407.101 ±    8303.707    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.083 ±       0.080  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.593 ±       0.571    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        16.000                counts
[info] ArrayOfCharsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        14.000                    ms
[info] ArrayOfCharsBenchmark.writeJacksonScala                                                           128  thrpt    5   1153686.648 ±    9107.349   ops/s
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       674.390 ±       5.295  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5       920.000 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       668.084 ±       1.097  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       911.401 ±       6.807    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.436 ±       3.571  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.596 ±       4.884    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         5.000                counts
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScala                                                          128  thrpt    5   2878040.515 ±  102979.341   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       980.163 ±      35.142  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       536.000 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       941.513 ±    1418.551  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       514.476 ±     769.925    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.046 ±       0.183  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.025 ±       0.100    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         5.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   2565101.677 ±   12662.064   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfCharsBenchmark.writePlayJson                                                               128  thrpt    5    278102.464 ±    2219.468   ops/s
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      2276.390 ±      19.457  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     12880.002 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2157.678 ±    1163.878  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     12206.810 ±    6521.729    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.037 ±       0.088  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.212 ±       0.496    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        16.000                counts
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        16.000                    ms
[info] ArrayOfDoublesBenchmark.readCirce                                                                 128  thrpt    5     25664.193 ±     506.501   ops/s
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1616.997 ±      31.839  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     99144.017 ±       0.002    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1618.743 ±    1416.020  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     99250.310 ±   86779.632    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.046 ±       0.036  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         2.808 ±       2.187    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.count                                                       128  thrpt    5        12.000                counts
[info] ArrayOfDoublesBenchmark.readCirce:·gc.time                                                        128  thrpt    5        11.000                    ms
[info] ArrayOfDoublesBenchmark.readDslJsonJava                                                           128  thrpt    5     90342.675 ±     388.845   ops/s
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate                                            128  thrpt    5       851.912 ±       3.415  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                       128  thrpt    5     14840.005 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                   128  thrpt    5       799.302 ±    1148.049  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     13927.285 ±   20070.461    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.014 ±       0.105  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.243 ±       1.835    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time                                                  128  thrpt    5        12.000                    ms
[info] ArrayOfDoublesBenchmark.readJacksonScala                                                          128  thrpt    5     57583.137 ±    3607.791   ops/s
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1009.423 ±      64.031  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5     27584.008 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1069.830 ±    1410.552  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     29225.859 ±   38438.549    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.033 ±       0.209  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.907 ±       5.729    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         8.000                counts
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         7.000                    ms
[info] ArrayOfDoublesBenchmark.readJsoniterScala                                                         128  thrpt    5    117463.429 ±    1321.370   ops/s
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       789.962 ±       8.975  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5     10584.004 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       808.184 ±    1159.610  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     10826.706 ±   15507.621    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.033 ±       0.108  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.446 ±       1.439    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5         4.000                    ms
[info] ArrayOfDoublesBenchmark.readPlayJson                                                              128  thrpt    5     34055.981 ±    1442.178   ops/s
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      1742.905 ±      74.034  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     80536.013 ±       0.002    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1748.697 ±    1424.126  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     80868.249 ±   67075.886    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.075 ±       0.231  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         3.469 ±      10.686    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        13.000                counts
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        11.000                    ms
[info] ArrayOfDoublesBenchmark.writeCirce                                                                128  thrpt    5     39562.428 ±     558.279   ops/s
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5       624.083 ±       8.679  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     24824.011 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5       638.489 ±     272.922  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     25389.211 ±   10557.988    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.377 ±       2.983  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        14.992 ±     118.528    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.count                                                      128  thrpt    5         5.000                counts
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.time                                                       128  thrpt    5         7.000                    ms
[info] ArrayOfDoublesBenchmark.writeJacksonScala                                                         128  thrpt    5     40884.288 ±    2016.320   ops/s
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       411.120 ±      20.109  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     15824.011 ±       0.002    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       440.577 ±     983.419  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     17019.237 ±   37922.846    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.419 ±       3.584  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        16.102 ±     137.777    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        10.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScala                                                        128  thrpt    5     44787.032 ±     208.886   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       439.452 ±       2.064  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5     15440.010 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       339.069 ±    1218.501  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     11916.444 ±   42835.452    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.358 ±       3.044  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        12.582 ±     107.102    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         3.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5         6.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5     44361.731 ±    1791.799   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5       384.468 ±      15.547  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5     13640.010 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                        128  thrpt    5       441.448 ±     987.374  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     15668.087 ±   35287.122    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.353 ±       3.018  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        12.734 ±     108.862    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5         4.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                       128  thrpt    5         8.000                    ms
[info] ArrayOfDurationsBenchmark.readCirce                                                               128  thrpt    5     15282.890 ±    1153.178   ops/s
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1091.034 ±      82.499  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5    112352.031 ±       0.019    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1076.416 ±    1419.267  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    111070.153 ±  148757.484    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.029 ±       0.134  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         3.021 ±      14.023    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.count                                                     128  thrpt    5         8.000                counts
[info] ArrayOfDurationsBenchmark.readCirce:·gc.time                                                      128  thrpt    5         6.000                    ms
[info] ArrayOfDurationsBenchmark.readJacksonScala                                                        128  thrpt    5     16610.547 ±    1362.913   ops/s
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1007.788 ±      82.909  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     95477.452 ±      65.493    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1070.208 ±    1411.604  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    101486.005 ±  134863.948    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.740 ±       8.498    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5         8.000                counts
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5         8.000                    ms
[info] ArrayOfDurationsBenchmark.readJsoniterScala                                                       128  thrpt    5     79380.386 ±    1139.671   ops/s
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       206.602 ±       2.974  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      4096.006 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       204.653 ±    1079.076  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      4069.385 ±   21456.792    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.002 ±       0.018  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.041 ±       0.355    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         2.000                counts
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5         3.000                    ms
[info] ArrayOfDurationsBenchmark.readPlayJson                                                            128  thrpt    5     14149.594 ±     230.253   ops/s
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1356.091 ±      22.349  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5    150832.034 ±       0.027    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1340.919 ±      11.229  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    149147.360 ±    3331.009    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.037 ±       0.174  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         4.155 ±      19.253    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        10.000                counts
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5         9.000                    ms
[info] ArrayOfDurationsBenchmark.writeCirce                                                              128  thrpt    5     55838.364 ±    1548.566   ops/s
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1384.341 ±      37.692  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     39016.008 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1344.493 ±       9.865  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     37894.300 ±     960.211    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.029 ±       0.108  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.820 ±       3.022    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        10.000                counts
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] ArrayOfDurationsBenchmark.writeJacksonScala                                                       128  thrpt    5     81330.314 ±    5131.608   ops/s
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1231.672 ±      77.227  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     23832.005 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1205.537 ±    1155.335  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     23302.670 ±   22045.927    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.042 ±       0.170  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.796 ±       3.250    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         9.000                counts
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5         9.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScala                                                      128  thrpt    5    215398.716 ±    1855.593   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       341.594 ±       2.938  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      2496.002 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       306.960 ±    1079.009  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      2246.177 ±    7895.638    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.030 ±       0.262    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         3.000                counts
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         6.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5    232149.781 ±    1292.862   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5         0.002 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] ArrayOfDurationsBenchmark.writePlayJson                                                           128  thrpt    5     74103.043 ±    2038.431   ops/s
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1399.023 ±      38.741  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     29712.006 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1478.047 ±    1168.257  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     31360.180 ±   23877.193    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.037 ±       0.105  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.796 ±       2.226    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        11.000                counts
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        10.000                    ms
[info] ArrayOfEnumsBenchmark.readCirce                                                                   128  thrpt    5     27005.911 ±     165.003   ops/s
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5       600.313 ±       3.714  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     34984.016 ±       0.002    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5       638.033 ±     272.182  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     37178.849 ±   15737.989    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.377 ±       3.114  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        22.016 ±     181.780    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.count                                                         128  thrpt    5         5.000                counts
[info] ArrayOfEnumsBenchmark.readCirce:·gc.time                                                          128  thrpt    5         8.000                    ms
[info] ArrayOfEnumsBenchmark.readJacksonScala                                                            128  thrpt    5     28248.706 ±     566.878   ops/s
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5       389.173 ±       7.592  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     21680.016 ±       0.002    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       440.564 ±     983.445  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     24551.689 ±   54702.065    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.448 ±       3.702  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        24.854 ±     205.296    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         4.000                counts
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        10.000                    ms
[info] ArrayOfEnumsBenchmark.readJsoniterScala                                                           128  thrpt    5    126043.971 ±    1154.610   ops/s
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       492.043 ±       4.496  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      6144.003 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       473.898 ±    1066.472  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      5921.709 ±   13320.407    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.341 ±       2.791  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         4.261 ±      34.918    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfEnumsBenchmark.readPlayJson                                                                128  thrpt    5     22225.730 ±     370.734   ops/s
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1242.036 ±      20.498  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     87928.021 ±       0.015    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1337.105 ±      11.014  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     94659.129 ±    1074.192    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.062 ±       0.080  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         4.425 ±       5.709    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        10.000                counts
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        10.000                    ms
[info] ArrayOfEnumsBenchmark.writeCirce                                                                  128  thrpt    5    168347.776 ±    4254.144   ops/s
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1101.391 ±      28.122  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     10296.003 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1073.556 ±    1414.654  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     10020.238 ±   13029.214    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.025 ±       0.143  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.232 ±       1.335    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5         8.000                counts
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5         6.000                    ms
[info] ArrayOfEnumsBenchmark.writeJacksonScala                                                           128  thrpt    5    559708.951 ±    6972.641   ops/s
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       566.236 ±       7.063  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1592.001 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       503.162 ±    1114.035  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1412.994 ±    3126.133    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.434 ±       3.600  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.220 ±      10.126    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScala                                                          128  thrpt    5    580323.331 ±   42104.303   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       445.450 ±      32.331  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      1208.001 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       473.667 ±    1065.566  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1287.460 ±    2910.367    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.371 ±       3.016  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.036 ±       8.442    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    604743.104 ±    3055.321   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfEnumsBenchmark.writePlayJson                                                               128  thrpt    5    329853.893 ±   16274.000   ops/s
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5       912.090 ±      44.971  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5      4352.001 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5       934.069 ±    1406.865  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      4455.914 ±    6695.091    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.042 ±       0.204  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.199 ±       0.980    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5         7.000                counts
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5         7.000                    ms
[info] ArrayOfFloatsBenchmark.readCirce                                                                  128  thrpt    5     36841.820 ±    1224.210   ops/s
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      1736.122 ±      57.469  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5     74160.012 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1755.066 ±    1416.907  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     75030.756 ±   61781.316    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.037 ±       0.119  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         1.609 ±       5.159    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.count                                                        128  thrpt    5        13.000                counts
[info] ArrayOfFloatsBenchmark.readCirce:·gc.time                                                         128  thrpt    5        12.000                    ms
[info] ArrayOfFloatsBenchmark.readDslJsonJava                                                            128  thrpt    5    283471.452 ±    9414.136   ops/s
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate                                             128  thrpt    5       293.956 ±       9.773  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        128  thrpt    5      1632.002 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    128  thrpt    5       306.980 ±    1079.078  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1702.119 ±    5983.809    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.004 ±       0.031  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.020 ±       0.173    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count                                                  128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time                                                   128  thrpt    5         6.000                    ms
[info] ArrayOfFloatsBenchmark.readJacksonScala                                                           128  thrpt    5     92487.587 ±    6359.796   ops/s
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1079.635 ±      73.747  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     18368.005 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1070.702 ±    1413.375  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     18180.520 ±   23576.641    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.042 ±       0.227  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.705 ±       3.829    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5         8.000                counts
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfFloatsBenchmark.readJsoniterScala                                                          128  thrpt    5    391718.712 ±   13511.381   ops/s
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       254.904 ±       8.694  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      1024.001 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       307.023 ±    1079.228  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1234.741 ±    4340.488    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.003 ±       0.026  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.012 ±       0.103    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5         5.000                    ms
[info] ArrayOfFloatsBenchmark.readPlayJson                                                               128  thrpt    5     39416.691 ±     300.361   ops/s
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      2066.571 ±      16.237  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     82504.011 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2021.640 ±      24.948  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     80710.575 ±    1273.080    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.067 ±       0.105  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         2.659 ±       4.160    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        15.000                counts
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        13.000                    ms
[info] ArrayOfFloatsBenchmark.writeCirce                                                                 128  thrpt    5     86928.682 ±     495.639   ops/s
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5       694.676 ±       4.166  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5     12576.005 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5       670.388 ±       0.878  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     12136.335 ±      72.588    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.381 ±       3.061  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         6.922 ±      55.565    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.count                                                       128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.time                                                        128  thrpt    5         6.000                    ms
[info] ArrayOfFloatsBenchmark.writeDslJsonJava                                                           128  thrpt    5    110675.481 ±    3171.465   ops/s
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate                                            128  thrpt    5       409.612 ±      11.732  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       128  thrpt    5      5824.004 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   128  thrpt    5       337.471 ±    1210.243  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      4816.025 ±   17264.542    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               128  thrpt    5        ≈ 10⁻³                MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.005 ±       0.045    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count                                                 128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfFloatsBenchmark.writeJacksonScala                                                          128  thrpt    5     96739.090 ±     822.284   ops/s
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5       381.621 ±       3.198  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      6208.005 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       440.551 ±     983.503  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      7172.863 ±   16025.840    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.421 ±       3.581  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         6.869 ±      58.415    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5         9.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScala                                                         128  thrpt    5    112264.155 ±    6619.708   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       415.454 ±      24.474  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      5824.004 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       339.166 ±    1218.724  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      4780.378 ±   17151.017    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.356 ±       3.034  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         4.992 ±      42.480    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5         6.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5    113652.891 ±    1741.444   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5       331.059 ±       5.095  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5      4584.004 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                         128  thrpt    5       306.991 ±    1079.118  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      4260.405 ±   14975.924    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.002 ±       0.018  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.029 ±       0.249    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                        128  thrpt    5         6.000                    ms
[info] ArrayOfInstantsBenchmark.readCirce                                                                128  thrpt    5      9496.720 ±     439.018   ops/s
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1576.771 ±      72.791  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5    261298.224 ±      30.948    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1618.104 ±    1426.664  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    268291.538 ±  239325.502    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.050 ±       0.134  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         8.299 ±      22.523    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.count                                                      128  thrpt    5        12.000                counts
[info] ArrayOfInstantsBenchmark.readCirce:·gc.time                                                       128  thrpt    5        11.000                    ms
[info] ArrayOfInstantsBenchmark.readJacksonScala                                                         128  thrpt    5     10302.391 ±     503.592   ops/s
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1587.335 ±      77.737  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5    242478.998 ±      54.109    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1611.149 ±    1421.234  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    246130.878 ±  216993.552    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.050 ±       0.156  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         7.647 ±      24.076    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        12.000                counts
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        12.000                    ms
[info] ArrayOfInstantsBenchmark.readJsoniterScala                                                        128  thrpt    5    207858.149 ±     878.051   ops/s
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       541.023 ±       2.018  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4096.002 ±       0.001    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       506.604 ±    1123.479  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      3836.252 ±    8504.981    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.321 ±       2.629  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.429 ±      19.910    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5         4.000                counts
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5         7.000                    ms
[info] ArrayOfInstantsBenchmark.readPlayJson                                                             128  thrpt    5      5439.400 ±     189.675   ops/s
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1448.406 ±      50.911  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    419032.079 ±       0.003    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1341.850 ±      10.462  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    388230.559 ±   13831.068    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.029 ±       0.072  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         8.443 ±      20.830    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        10.000                counts
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        10.000                    ms
[info] ArrayOfInstantsBenchmark.writeCirce                                                               128  thrpt    5     25460.996 ±     214.577   ops/s
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1875.033 ±      16.285  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5    115896.017 ±       0.002    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1887.987 ±    1160.551  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    116713.836 ±   72131.396    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.050 ±       0.072  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         3.088 ±       4.435    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        14.000                counts
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        12.000                    ms
[info] ArrayOfInstantsBenchmark.writeJacksonScala                                                        128  thrpt    5     29507.526 ±     224.643   ops/s
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1883.169 ±      15.142  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5    100432.015 ±       0.002    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1884.290 ±    1158.404  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    100467.854 ±   61207.422    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.067 ±       0.067  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         3.554 ±       3.591    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5        14.000                counts
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        13.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScala                                                       128  thrpt    5    367643.349 ±   17571.024   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       813.000 ±      38.538  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      3480.001 ±       0.001    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       806.926 ±    1156.724  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      3452.117 ±    4908.858    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.037 ±       0.164  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.161 ±       0.701    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5         6.000                counts
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5         5.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5    429497.277 ±     595.475   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfInstantsBenchmark.writePlayJson                                                            128  thrpt    5     30014.866 ±     869.385   ops/s
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1852.093 ±      53.074  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     97096.015 ±       0.002    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1886.613 ±    1166.340  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     98956.599 ±   62306.579    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.046 ±       0.105  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.409 ±       5.567    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        14.000                counts
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        13.000                    ms
[info] ArrayOfIntsBenchmark.readCirce                                                                    128  thrpt    5     98539.718 ±    1335.900   ops/s
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate                                                     128  thrpt    5      1698.537 ±      23.028  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                                128  thrpt    5     27128.004 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1754.631 ±    1423.738  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     28018.492 ±   22621.074    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.062 ±       0.098  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         0.997 ±       1.564    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.count                                                          128  thrpt    5        13.000                counts
[info] ArrayOfIntsBenchmark.readCirce:·gc.time                                                           128  thrpt    5        11.000                    ms
[info] ArrayOfIntsBenchmark.readDslJsonJava                                                              128  thrpt    5    417103.916 ±    1919.248   ops/s
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       432.573 ±       2.031  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5      1632.001 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5       470.243 ±    1053.749  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1775.085 ±    3977.845    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.006 ±       0.048  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.021 ±       0.182    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.count                                                    128  thrpt    5         4.000                counts
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.time                                                     128  thrpt    5         9.000                    ms
[info] ArrayOfIntsBenchmark.readJacksonScala                                                             128  thrpt    5    307775.890 ±    2516.727   ops/s
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                              128  thrpt    5       434.958 ±       3.550  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      2224.001 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       338.258 ±    1214.140  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1729.585 ±    6204.234    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.425 ±       3.572  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         2.169 ±      18.221    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.count                                                   128  thrpt    5         3.000                counts
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.time                                                    128  thrpt    5         8.000                    ms
[info] ArrayOfIntsBenchmark.readJsoniterScala                                                            128  thrpt    5    706554.283 ±    9586.939   ops/s
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       459.753 ±       6.248  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1024.001 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       474.068 ±    1066.953  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1056.005 ±    2373.449    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.339 ±       2.761  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.753 ±       6.140    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         4.000                counts
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfIntsBenchmark.readPlayJson                                                                 128  thrpt    5     72317.951 ±    4626.468   ops/s
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      3072.476 ±     196.510  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     66856.006 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      2981.834 ±    1423.115  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     64833.659 ±   28508.600    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.058 ±       0.105  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         1.264 ±       2.212    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        22.000                counts
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        19.000                    ms
[info] ArrayOfIntsBenchmark.writeCirce                                                                   128  thrpt    5    214028.178 ±    8708.459   ops/s
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                    128  thrpt    5      1739.614 ±      70.844  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                               128  thrpt    5     12792.002 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1751.561 ±    1412.355  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     12899.302 ±   10781.871    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.054 ±       0.122  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.398 ±       0.893    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.count                                                         128  thrpt    5        13.000                counts
[info] ArrayOfIntsBenchmark.writeCirce:·gc.time                                                          128  thrpt    5        12.000                    ms
[info] ArrayOfIntsBenchmark.writeDslJsonJava                                                             128  thrpt    5    942660.709 ±   35281.255   ops/s
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       512.764 ±      19.331  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5       856.000 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       500.930 ±    1107.931  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       837.806 ±    1856.621    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.007 ±       0.060    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count                                                   128  thrpt    5         4.000                counts
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time                                                    128  thrpt    5         9.000                    ms
[info] ArrayOfIntsBenchmark.writeJacksonScala                                                            128  thrpt    5    865281.548 ±   22566.517   ops/s
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       681.739 ±      17.669  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      1240.001 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       668.009 ±       0.737  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1215.072 ±      31.771    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.433 ±       3.553  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.785 ±       6.432    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5         5.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScala                                                           128  thrpt    5   1031519.203 ±   15324.601   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       561.083 ±       8.407  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       856.000 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       505.932 ±    1121.583  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       772.323 ±    1713.112    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.361 ±       2.973  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.550 ±       4.530    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5   1008221.754 ±    1249.168   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfIntsBenchmark.writePlayJson                                                                128  thrpt    5     30518.827 ±     838.897   ops/s
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                                 128  thrpt    5      1684.528 ±      46.456  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     86872.014 ±       0.002    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1614.696 ±    1419.154  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     83262.693 ±   72961.338    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.079 ±       0.154  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         4.088 ±       8.016    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.count                                                      128  thrpt    5        12.000                counts
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.time                                                       128  thrpt    5        11.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readCirce                                                               128  thrpt    5    126391.025 ±    1251.760   ops/s
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1738.546 ±      17.569  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5     21648.003 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1751.053 ±    1415.493  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     21809.670 ±   17749.130    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.062 ±       0.247  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.778 ±       3.074    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        13.000                counts
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.time                                                      128  thrpt    5        12.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala                                                        128  thrpt    5    191147.885 ±   10704.417   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1140.654 ±      63.992  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5      9392.002 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1203.713 ±    1152.131  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      9907.822 ±    9443.211    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.054 ±       0.209  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.445 ±       1.729    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5         9.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5         8.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala                                                       128  thrpt    5    269759.292 ±   12196.895   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       877.713 ±      40.047  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      5120.002 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       807.947 ±    1160.689  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      4710.334 ±    6711.071    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.073 ±       0.255    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         6.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5         4.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readPlayJson                                                            128  thrpt    5     67546.166 ±    2698.561   ops/s
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      2807.718 ±     113.826  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     65408.006 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2704.382 ±      38.166  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     63005.486 ±    2329.031    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.067 ±       0.191  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.556 ±       4.478    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        20.000                counts
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        20.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeCirce                                                              128  thrpt    5    172040.800 ±   11270.502   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1128.103 ±      73.962  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     10320.003 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1208.132 ±    1158.096  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     11042.638 ±   10468.152    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.058 ±       0.154  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.530 ±       1.388    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5         9.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala                                                       128  thrpt    5    562947.397 ±   34732.569   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5       569.523 ±      34.829  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1592.001 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       502.770 ±    1113.003  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1413.481 ±    3145.633    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.446 ±       3.584  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.262 ±      10.153    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         4.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5         8.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala                                                      128  thrpt    5    571896.818 ±   46785.829   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       439.019 ±      35.883  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      1208.001 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       473.709 ±    1065.698  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1306.095 ±    2918.034    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.370 ±       2.997  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.011 ±       8.182    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         4.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         7.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5    586183.014 ±   37699.231   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson                                                           128  thrpt    5    324206.365 ±   19763.284   ops/s
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5       893.283 ±      54.719  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5      4336.001 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5       934.183 ±    1407.295  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      4536.647 ±    6855.355    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.122 ±       0.515    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5         7.000                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readCirce                                                          128  thrpt    5      9605.873 ±     229.461   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      1258.563 ±      30.068  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5    206160.860 ±       7.018    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1211.753 ±    1158.812  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    198580.740 ±  190941.556    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.033 ±       0.146  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         5.452 ±      23.780    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count                                                128  thrpt    5         9.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala                                                   128  thrpt    5      9482.423 ±     648.477   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1136.482 ±      77.629  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5    188612.881 ±      60.309    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1070.795 ±    1410.078  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    177136.664 ±  226700.437    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.058 ±       0.207  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         9.573 ±      33.974    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5         8.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala                                                  128  thrpt    5    214094.291 ±   12368.386   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1393.287 ±      81.052  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5     10240.002 ±       0.001    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1484.833 ±    1156.290  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     10889.297 ±    7729.972    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.033 ±       0.146  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.243 ±       1.063    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5        11.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5        10.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson                                                       128  thrpt    5      7559.167 ±     389.432   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      1407.854 ±      72.821  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5    293096.360 ±       2.596    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1341.617 ±      10.840  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    279346.142 ±   14303.136    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.042 ±       0.150  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         8.690 ±      31.198    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        10.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time                                              128  thrpt    5         9.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeCirce                                                         128  thrpt    5     20195.644 ±     269.005   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      1072.612 ±      13.962  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5     83585.457 ±      81.238    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1073.910 ±    1417.583  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     83666.528 ±  110221.536    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.037 ±       0.174  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.916 ±      13.524    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count                                               128  thrpt    5         8.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala                                                  128  thrpt    5     21834.313 ±    1451.329   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5       925.425 ±      61.723  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5     66696.020 ±       0.001    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       936.211 ±    1411.182  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     67554.717 ±  102785.213    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.033 ±       0.134  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         2.416 ±       9.846    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5         7.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5         6.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala                                                 128  thrpt    5    755228.774 ±   14555.029   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1363.055 ±      25.763  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      2840.001 ±       0.001    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1347.537 ±       7.364  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      2807.721 ±      53.889    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.050 ±       0.146  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.104 ±       0.304    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5        10.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5         9.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    652293.015 ±    5023.312   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson                                                      128  thrpt    5     20872.462 ±    1179.601   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5       962.427 ±      54.692  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     72561.724 ±      14.663    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5       937.978 ±    1412.625  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     70641.264 ±  105333.948    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.046 ±       0.215  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         3.408 ±      15.963    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time                                             128  thrpt    5         6.000                    ms
[info] ArrayOfLocalDatesBenchmark.readCirce                                                              128  thrpt    5     25933.334 ±     398.732   ops/s
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      1453.321 ±      22.004  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5     88168.017 ±       0.002    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1482.813 ±    1159.804  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     90001.090 ±   71658.751    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.037 ±       0.088  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         2.277 ±       5.349    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.count                                                    128  thrpt    5        11.000                counts
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.time                                                     128  thrpt    5        10.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJacksonScala                                                       128  thrpt    5     25027.696 ±    1922.380   ops/s
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1159.095 ±      88.813  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     72880.018 ±       0.003    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1204.944 ±    1153.260  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     75957.270 ±   74940.256    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.033 ±       0.201  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         2.098 ±      12.655    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5         9.000                counts
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala                                                      128  thrpt    5    354604.189 ±   28166.768   ops/s
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       922.946 ±      72.737  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      4096.001 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       943.209 ±    1421.000  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      4188.955 ±    6335.745    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.042 ±       0.188  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.185 ±       0.835    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5         5.000                    ms
[info] ArrayOfLocalDatesBenchmark.readPlayJson                                                           128  thrpt    5     15973.510 ±     793.161   ops/s
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      1634.046 ±      80.405  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    160984.029 ±       0.017    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1612.357 ±    1407.031  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    158765.496 ±  136434.159    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.062 ±       0.150  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         6.127 ±      14.608    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        12.000                counts
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        11.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeCirce                                                             128  thrpt    5     44344.600 ±    1994.246   ops/s
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate                                              128  thrpt    5      1409.946 ±      63.432  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm                                         128  thrpt    5     50040.010 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1344.598 ±       9.337  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     47725.976 ±    2161.054    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.025 ±       0.088  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.886 ±       3.095    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.count                                                   128  thrpt    5        10.000                counts
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.time                                                    128  thrpt    5         9.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala                                                      128  thrpt    5    124034.150 ±    2403.152   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1212.492 ±      22.984  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     15384.004 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1205.757 ±    1156.599  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     15308.134 ±   14797.658    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.054 ±       0.156  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.687 ±       1.985    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5         9.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala                                                     128  thrpt    5   1156250.462 ±   59063.130   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1240.235 ±      63.552  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1688.000 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1211.940 ±    1158.311  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1647.368 ±    1548.192    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.050 ±       0.146  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.068 ±       0.200    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5    857605.005 ±    1707.711   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson                                                          128  thrpt    5     51496.770 ±    1104.297   ops/s
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5      1365.977 ±      29.431  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     41744.008 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1343.310 ±       9.605  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     41052.619 ±    1133.150    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.050 ±       0.091  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.527 ±       2.784    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count                                                128  thrpt    5        10.000                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5        10.000                    ms
[info] ArrayOfLocalTimesBenchmark.readCirce                                                              128  thrpt    5     15866.277 ±     133.624   ops/s
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      1420.500 ±      12.394  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5    140880.030 ±       0.017    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1482.441 ±    1169.234  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    146990.549 ±  114970.495    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.054 ±       0.193  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         5.366 ±      19.137    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.count                                                    128  thrpt    5        11.000                counts
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.time                                                     128  thrpt    5        10.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJacksonScala                                                       128  thrpt    5     15899.894 ±     754.503   ops/s
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1295.131 ±      61.882  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5    128190.974 ±      62.284    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1339.976 ±      11.142  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    132648.715 ±    7386.762    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         2.462 ±      10.280    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5        10.000                counts
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5        10.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala                                                      128  thrpt    5    452037.233 ±   11095.507   ops/s
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      1176.583 ±      28.804  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      4096.001 ±       0.001    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1078.626 ±    1422.720  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      3760.348 ±    5017.835    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.071 ±       0.224  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.247 ±       0.785    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5         8.000                counts
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5         8.000                    ms
[info] ArrayOfLocalTimesBenchmark.readPlayJson                                                           128  thrpt    5     12038.729 ±     439.743   ops/s
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      1654.514 ±      60.627  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    216280.290 ±       2.156    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1747.532 ±    1418.792  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    228618.615 ±  189033.256    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.042 ±       0.150  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         5.461 ±      19.766    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        13.000                counts
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        12.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeCirce                                                             128  thrpt    5     34292.834 ±    1708.722   ops/s
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate                                              128  thrpt    5      1302.343 ±      64.878  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                         128  thrpt    5     59768.013 ±       0.001    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1343.939 ±       8.060  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     61685.905 ±    3331.598    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.046 ±       0.154  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         2.093 ±       7.012    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.count                                                   128  thrpt    5        10.000                counts
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.time                                                    128  thrpt    5         9.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala                                                      128  thrpt    5     39257.474 ±    1909.166   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1169.390 ±      57.355  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     46872.011 ±       0.002    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1204.889 ±    1151.696  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     48338.632 ±   46728.996    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.054 ±       0.185  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         2.163 ±       7.343    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5         9.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5         8.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala                                                     128  thrpt    5   1269456.824 ±   48270.466   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1155.016 ±      43.933  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1432.000 ±       0.001    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1076.882 ±    1420.453  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1336.709 ±    1780.235    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.067 ±       0.207  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.083 ±       0.257    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5         8.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5         8.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5   1266620.997 ±    9792.637   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson                                                          128  thrpt    5      3484.606 ±      26.636   ops/s
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5       470.535 ±       3.735  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5    212496.126 ±       0.016    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5       472.533 ±    1061.782  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    213586.185 ±  479951.839    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.404 ±       3.481  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       182.665 ±    1572.797    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5         9.000                    ms
[info] ArrayOfLongsBenchmark.readCirce                                                                   128  thrpt    5     78808.489 ±    1827.330   ops/s
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1465.358 ±      34.170  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     29264.006 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1482.483 ±    1152.753  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     29591.345 ±   22557.393    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.042 ±       0.098  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.831 ±       1.950    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        11.000                counts
[info] ArrayOfLongsBenchmark.readCirce:·gc.time                                                          128  thrpt    5         9.000                    ms
[info] ArrayOfLongsBenchmark.readDslJsonJava                                                             128  thrpt    5    339043.790 ±    3391.447   ops/s
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       679.077 ±       6.905  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5      3152.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       665.220 ±       4.502  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      3087.707 ±      43.645    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.039 ±       0.204    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.count                                                   128  thrpt    5         5.000                counts
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.time                                                    128  thrpt    5        10.000                    ms
[info] ArrayOfLongsBenchmark.readJacksonScala                                                            128  thrpt    5    247376.633 ±     857.741   ops/s
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5       543.243 ±       1.819  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      3456.002 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       503.118 ±    1113.918  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      3199.947 ±    7084.011    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.434 ±       3.643  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.760 ±      23.195    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         4.000                counts
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfLongsBenchmark.readJsoniterScala                                                           128  thrpt    5    492458.027 ±   10389.376   ops/s
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       620.795 ±      13.043  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      1984.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       538.769 ±    1159.740  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1721.916 ±    3706.831    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.334 ±       2.648  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.063 ±       8.436    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         5.000                    ms
[info] ArrayOfLongsBenchmark.readPlayJson                                                                128  thrpt    5     70439.083 ±    2685.186   ops/s
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      3053.704 ±     105.962  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     68229.297 ±     527.732    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2981.234 ±    1409.854  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     66623.395 ±   31957.046    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.092 ±       0.201  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         2.039 ±       4.421    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        22.000                counts
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        19.000                    ms
[info] ArrayOfLongsBenchmark.writeCirce                                                                  128  thrpt    5    182633.267 ±    5954.123   ops/s
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1863.311 ±      60.379  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     16056.002 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1888.018 ±    1156.339  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     16270.694 ±   10002.214    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.058 ±       0.174  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.501 ±       1.481    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        14.000                counts
[info] ArrayOfLongsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        12.000                    ms
[info] ArrayOfLongsBenchmark.writeDslJsonJava                                                            128  thrpt    5    765431.378 ±    5704.885   ops/s
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate                                             128  thrpt    5       599.224 ±       4.906  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                        128  thrpt    5      1232.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                    128  thrpt    5       634.368 ±     264.218  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1304.170 ±     539.917    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.003 ±       0.016  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.006 ±       0.032    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time                                                   128  thrpt    5        10.000                    ms
[info] ArrayOfLongsBenchmark.writeJacksonScala                                                           128  thrpt    5    477232.136 ±   43498.086   ops/s
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       490.127 ±      44.420  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1616.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       471.857 ±    1059.274  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1539.082 ±    3443.883    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.432 ±       3.623  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.403 ±      11.758    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScala                                                          128  thrpt    5    606939.682 ±   84097.391   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       475.133 ±      65.678  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      1232.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       473.681 ±    1065.585  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1230.938 ±    2727.005    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.363 ±       2.990  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.922 ±       7.607    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         7.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    703806.750 ±     895.425   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfLongsBenchmark.writePlayJson                                                               128  thrpt    5     27323.570 ±    1105.399   ops/s
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      1502.149 ±      61.460  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     86512.016 ±       0.002    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1478.949 ±    1163.435  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     85156.741 ±   66284.909    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.029 ±       0.156  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         1.668 ±       8.940    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        11.000                counts
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5         9.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readCirce                                                         128  thrpt    5      6886.425 ±     424.852   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      1088.998 ±      67.207  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5    248881.158 ±       9.418    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1076.181 ±    1419.791  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    245427.351 ±  317590.083    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.029 ±       0.122  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         6.613 ±      27.602    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count                                               128  thrpt    5         8.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala                                                  128  thrpt    5      7477.376 ±     333.290   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1092.248 ±      48.464  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5    229857.015 ±      54.459    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1204.238 ±    1152.480  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5    253720.206 ±  246304.297    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.054 ±       0.287  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        11.313 ±      59.933    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5         9.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5         8.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala                                                 128  thrpt    5    164190.138 ±    1133.528   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1590.827 ±      11.360  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5     15248.003 ±       0.001    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1620.564 ±    1420.761  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     15533.534 ±   13628.941    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.058 ±       0.105  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.559 ±       1.002    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        12.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        11.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson                                                      128  thrpt    5      7195.859 ±      45.482   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      1313.490 ±       7.887  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    287248.089 ±       0.248    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1340.990 ±      11.492  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    293263.497 ±    4141.838    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.033 ±       0.209  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         7.280 ±      45.658    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        10.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time                                             128  thrpt    5         9.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce                                                        128  thrpt    5     16713.514 ±     394.023   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5       985.867 ±      23.450  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     92832.403 ±     128.803    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5       938.994 ±    1414.009  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     88515.242 ±  134478.331    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.037 ±       0.105  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         3.530 ±       9.817    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count                                              128  thrpt    5         7.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time                                               128  thrpt    5         6.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala                                                 128  thrpt    5     18687.723 ±     318.806   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       876.497 ±      14.709  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     73808.025 ±       0.015    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       935.859 ±    1411.335  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     78903.634 ±  120193.653    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.029 ±       0.156  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         2.449 ±      13.122    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5         6.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala                                                128  thrpt    5    423678.003 ±   14102.529   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       960.566 ±      31.807  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      3568.001 ±       0.001    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       941.536 ±    1418.166  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      3491.320 ±    5181.224    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.037 ±       0.164  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.139 ±       0.606    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         7.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5         6.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    495119.434 ±    4313.149   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson                                                     128  thrpt    5     18296.546 ±    1025.969   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5       926.434 ±      52.485  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     79675.741 ±      26.806    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5       937.993 ±    1414.202  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     80708.846 ±  122039.036    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.037 ±       0.143  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         3.208 ±      12.294    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count                                           128  thrpt    5         7.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time                                            128  thrpt    5         6.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readCirce                                                             128  thrpt    5     11664.582 ±     492.974   ops/s
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      1202.676 ±      50.789  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5    162264.707 ±       5.741    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1211.414 ±    1160.778  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    163448.522 ±  156679.994    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         3.360 ±      14.046    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.count                                                   128  thrpt    5         9.000                counts
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.time                                                    128  thrpt    5         8.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala                                                      128  thrpt    5     12572.326 ±     479.129   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1166.931 ±      44.227  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5    146073.326 ±      40.554    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1204.689 ±    1154.949  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    150515.548 ±  140774.721    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.050 ±       0.146  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         6.226 ±      18.137    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         9.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5         7.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala                                                     128  thrpt    5    276131.272 ±    4435.152   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1597.503 ±      25.544  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      9104.002 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1620.731 ±    1429.641  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      9239.287 ±    8211.939    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.042 ±       0.150  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.237 ±       0.853    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        12.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        10.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readPlayJson                                                          128  thrpt    5     10837.341 ±     658.335   ops/s
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      1391.239 ±      84.944  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5    202024.129 ±       0.725    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1472.038 ±    1151.388  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    214117.177 ±  177118.196    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         3.029 ±       8.372    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        11.000                counts
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        12.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeCirce                                                            128  thrpt    5     27159.194 ±     616.295   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1191.767 ±      26.272  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     69056.016 ±       0.002    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1208.113 ±    1155.181  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     70037.603 ±   67376.021    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.050 ±       0.201  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.904 ±      11.697    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count                                                  128  thrpt    5         9.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time                                                   128  thrpt    5         8.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala                                                     128  thrpt    5     80007.078 ±    4611.583   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1479.297 ±      85.414  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     29096.006 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1476.884 ±    1164.077  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     29025.321 ±   22089.892    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.042 ±       0.127  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.815 ±       2.487    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        11.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        11.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala                                                    128  thrpt    5    691309.520 ±   26816.390   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       948.990 ±      36.529  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      2160.001 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       941.669 ±    1418.377  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      2139.704 ±    3175.533    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.033 ±       0.122  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.075 ±       0.275    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5         7.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5         6.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    752229.417 ±   51312.273   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson                                                         128  thrpt    5     74720.738 ±     429.853   ops/s
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1803.580 ±      10.269  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     37984.006 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1880.882 ±    1155.808  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     39612.496 ±   24350.887    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.062 ±       0.150  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.316 ±       3.166    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        14.000                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        16.000                    ms
[info] ArrayOfPeriodsBenchmark.readCirce                                                                 128  thrpt    5     12497.856 ±     890.265   ops/s
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5       659.137 ±      46.507  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     83000.676 ±       5.495    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5       640.036 ±     276.089  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     80484.073 ±   29921.384    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.335 ±       2.841  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        41.802 ±     354.324    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.count                                                       128  thrpt    5         5.000                counts
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.time                                                        128  thrpt    5         8.000                    ms
[info] ArrayOfPeriodsBenchmark.readJacksonScala                                                          128  thrpt    5     16861.681 ±     798.374   ops/s
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       719.305 ±      33.662  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5     67135.469 ±      61.808    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       668.103 ±       1.144  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     62363.787 ±    2868.137    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.436 ±       3.580  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        41.118 ±     337.536    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         5.000                counts
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfPeriodsBenchmark.readJsoniterScala                                                         128  thrpt    5    100947.470 ±     526.430   ops/s
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       253.523 ±       1.346  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      3952.004 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       306.996 ±    1079.134  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      4786.543 ±   16825.381    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.008 ±       0.052  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.130 ±       0.815    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         3.000                counts
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5         5.000                    ms
[info] ArrayOfPeriodsBenchmark.readPlayJson                                                              128  thrpt    5     14186.825 ±     864.664   ops/s
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      1104.262 ±      67.723  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    122472.233 ±       1.743    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1071.285 ±    1411.364  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    118594.812 ±  153615.195    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.380 ±       7.910    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5         8.000                counts
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] ArrayOfPeriodsBenchmark.writeCirce                                                                128  thrpt    5     52504.241 ±    1042.643   ops/s
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1476.218 ±      29.396  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     44248.008 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1479.446 ±    1148.263  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     44341.081 ±   34286.000    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.062 ±       0.160  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         1.873 ±       4.798    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        11.000                counts
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5         9.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJacksonScala                                                         128  thrpt    5     74923.581 ±    2525.086   ops/s
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1545.550 ±      51.409  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     32464.006 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1476.868 ±    1149.235  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     31010.686 ±   23777.081    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.037 ±       0.143  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.784 ±       3.003    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        11.000                counts
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5         9.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala                                                        128  thrpt    5    275404.285 ±    8057.514   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       527.781 ±      15.470  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      3016.002 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       505.900 ±    1121.597  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      2897.758 ±    6440.680    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.359 ±       2.931  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.056 ±      16.813    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         4.000                counts
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5         7.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    269553.766 ±   59912.021   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.002 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson                                                             128  thrpt    5     67399.669 ±    2923.776   ops/s
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1510.544 ±      65.452  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     35272.008 ±       0.018    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1478.905 ±    1163.580  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     34515.702 ±   26573.209    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.067 ±       0.183  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.549 ±       4.223    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        11.000                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        11.000                    ms
[info] ArrayOfShortsBenchmark.readCirce                                                                  128  thrpt    5    128679.384 ±    9544.438   ops/s
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      1926.277 ±     142.886  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5     23560.003 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1891.838 ±    1162.929  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     23168.558 ±   14865.261    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.054 ±       0.185  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.660 ±       2.237    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.count                                                        128  thrpt    5        14.000                counts
[info] ArrayOfShortsBenchmark.readCirce:·gc.time                                                         128  thrpt    5        13.000                    ms
[info] ArrayOfShortsBenchmark.readDslJsonJava                                                            128  thrpt    5    535503.787 ±   57396.136   ops/s
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate                                             128  thrpt    5       296.730 ±      31.848  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        128  thrpt    5       872.001 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    128  thrpt    5       306.993 ±    1079.124  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       912.378 ±    3210.391    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.003 ±       0.028  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.010 ±       0.087    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.count                                                  128  thrpt    5         3.000                counts
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfShortsBenchmark.readJacksonScala                                                           128  thrpt    5    391918.948 ±   20597.113   ops/s
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5       400.503 ±      20.964  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1608.001 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       440.580 ±     983.451  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1760.201 ±    3936.489    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.433 ±       3.609  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.739 ±      14.483    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5        10.000                    ms
[info] ArrayOfShortsBenchmark.readJsoniterScala                                                          128  thrpt    5    915621.044 ±   58890.892   ops/s
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       316.473 ±      20.344  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       544.000 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       306.963 ±    1079.017  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       528.923 ±    1859.582    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.010 ±       0.082  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.016 ±       0.140    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         3.000                counts
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfShortsBenchmark.readPlayJson                                                               128  thrpt    5     75560.765 ±   10874.649   ops/s
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      3140.368 ±     451.768  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     65408.006 ±       0.002    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      3253.430 ±    1164.921  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     67654.526 ±   16129.984    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.087 ±       0.215  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         1.796 ±       4.322    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        24.000                counts
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        21.000                    ms
[info] ArrayOfShortsBenchmark.writeCirce                                                                 128  thrpt    5    252602.061 ±    5625.623   ops/s
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5      1662.888 ±      36.569  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5     10360.002 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1616.452 ±    1420.595  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     10069.468 ±    8818.702    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.067 ±       0.067  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.415 ±       0.425    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.count                                                       128  thrpt    5        12.000                counts
[info] ArrayOfShortsBenchmark.writeCirce:·gc.time                                                        128  thrpt    5         9.000                    ms
[info] ArrayOfShortsBenchmark.writeDslJsonJava                                                           128  thrpt    5   1437532.364 ±   13261.992   ops/s
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate                                            128  thrpt    5       489.570 ±       4.528  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       128  thrpt    5       536.000 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   128  thrpt    5       470.177 ±    1053.674  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       514.460 ±    1153.268    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.004 ±       0.025  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.005 ±       0.027    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time                                                  128  thrpt    5         8.000                    ms
[info] ArrayOfShortsBenchmark.writeJacksonScala                                                          128  thrpt    5   1317843.879 ±   68675.912   ops/s
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5       770.430 ±      40.439  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5       920.000 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       801.863 ±    1149.144  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       956.427 ±    1348.746    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.448 ±       3.679  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.531 ±       4.360    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5         6.000                counts
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5         7.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScala                                                         128  thrpt    5   1347871.261 ±   75730.168   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       459.081 ±      25.808  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       536.000 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       473.674 ±    1065.637  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       551.951 ±    1236.385    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.367 ±       3.070  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.431 ±       3.612    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5   1419429.345 ±    1409.164   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] ArrayOfShortsBenchmark.writePlayJson                                                              128  thrpt    5     35317.841 ±     653.349   ops/s
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5      1697.878 ±      31.841  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     75656.012 ±       0.002    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1749.955 ±    1428.437  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     77964.574 ±   63378.159    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.083 ±       0.057  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         3.710 ±       2.512    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5        13.000                counts
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5        16.000                    ms
[info] ArrayOfUUIDsBenchmark.readCirce                                                                   128  thrpt    5     18629.814 ±     614.646   ops/s
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1955.535 ±      64.622  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5    165194.077 ±      40.003    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1892.300 ±    1159.753  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5    159919.884 ±   99521.826    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.083 ±       0.080  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         7.027 ±       6.622    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        14.000                counts
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        12.000                    ms
[info] ArrayOfUUIDsBenchmark.readJacksonScala                                                            128  thrpt    5     98584.910 ±    1121.668   ops/s
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1293.893 ±      14.869  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     20656.004 ±       0.001    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1339.642 ±      10.727  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     21386.530 ±     327.839    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.067 ±       0.119  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.064 ±       1.903    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        10.000                counts
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         9.000                    ms
[info] ArrayOfUUIDsBenchmark.readJsoniterScala                                                           128  thrpt    5    276078.633 ±    2831.663   ops/s
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       898.242 ±       9.233  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      5120.002 ±       0.001    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       808.275 ±    1159.833  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      4605.826 ±    6584.350    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.021 ±       0.098  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.119 ±       0.559    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfUUIDsBenchmark.readPlayJson                                                                128  thrpt    5     16395.153 ±    1372.038   ops/s
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      2090.428 ±     175.196  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5    200640.029 ±       0.019    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2023.177 ±      24.656  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    194256.832 ±   15993.029    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.067 ±       0.088  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         6.432 ±       9.131    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        15.000                counts
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        14.000                    ms
[info] ArrayOfUUIDsBenchmark.writeCirce                                                                  128  thrpt    5     21733.846 ±     701.366   ops/s
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1758.667 ±      56.482  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5    127355.378 ±      28.909    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1751.262 ±    1416.885  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5    126906.281 ±  104373.900    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.042 ±       0.113  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         3.022 ±       8.250    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        13.000                counts
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        11.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJacksonScala                                                           128  thrpt    5     99283.165 ±     797.997   ops/s
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1360.180 ±      11.535  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     21560.004 ±       0.055    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1473.549 ±    1146.466  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     23362.272 ±   18330.539    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.058 ±       0.174  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.925 ±       2.759    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5        11.000                counts
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        10.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala                                                          128  thrpt    5    318544.272 ±   42468.172   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5      1015.377 ±     135.083  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      5016.001 ±       0.001    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       941.810 ±    1418.567  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      4630.195 ±    6646.253    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.033 ±       0.176  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.161 ±       0.851    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    380048.254 ±    2484.274   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson                                                               128  thrpt    5     25895.332 ±    1517.978   ops/s
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      1765.644 ±     103.491  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5    107312.017 ±       0.212    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1750.965 ±    1429.080  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    106610.972 ±   90628.159    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.042 ±       0.113  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         2.543 ±       6.949    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        13.000                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        11.000                    ms
[info] ArrayOfYearMonthsBenchmark.readCirce                                                              128  thrpt    5     23902.913 ±    1151.060   ops/s
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      1280.611 ±      61.403  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5     84304.018 ±       0.002    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1346.401 ±       7.162  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     88645.947 ±    4233.780    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.037 ±       0.132  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         2.455 ±       8.629    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.count                                                    128  thrpt    5        10.000                counts
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.time                                                     128  thrpt    5         9.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJacksonScala                                                       128  thrpt    5     27516.061 ±    1384.098   ops/s
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1095.237 ±      55.517  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     62640.016 ±       0.002    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1070.494 ±    1411.201  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     61210.406 ±   80494.958    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.046 ±       0.256  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         2.602 ±      14.563    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5         8.000                counts
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5         8.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala                                                      128  thrpt    5    514640.201 ±   17709.115   ops/s
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      1339.433 ±      46.256  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      4096.001 ±       0.001    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1348.700 ±       6.387  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      4124.630 ±     157.051    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.062 ±       0.150  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.191 ±       0.454    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5        10.000                counts
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5         8.000                    ms
[info] ArrayOfYearMonthsBenchmark.readPlayJson                                                           128  thrpt    5     20557.925 ±    1012.374   ops/s
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      1549.703 ±      75.672  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    118616.023 ±       0.017    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1607.933 ±    1408.737  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    123012.058 ±  106285.706    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.902 ±       7.900    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        12.000                counts
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        14.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeCirce                                                             128  thrpt    5     58133.748 ±    2056.069   ops/s
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate                                              128  thrpt    5      1611.992 ±      57.272  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm                                         128  thrpt    5     43640.008 ±       0.001    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1614.930 ±    1410.012  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     43686.478 ±   37361.836    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.058 ±       0.174  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.576 ±       4.676    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.count                                                   128  thrpt    5        12.000                counts
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.time                                                    128  thrpt    5        11.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala                                                      128  thrpt    5    165151.095 ±    7541.578   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1466.714 ±      66.539  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     13976.003 ±       0.001    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1475.770 ±    1143.237  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     14046.716 ±   10382.459    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.054 ±       0.091  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.515 ±       0.864    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5        11.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5        10.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala                                                     128  thrpt    5   1360922.441 ±   77940.119   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1127.598 ±      64.752  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1304.000 ±       0.001    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1211.209 ±    1158.923  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1401.965 ±    1356.659    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.054 ±       0.134  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.063 ±       0.157    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5         7.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5   1465925.505 ±   65084.514   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson                                                          128  thrpt    5    124751.200 ±    5896.343   ops/s
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5      1568.971 ±      74.929  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     19792.004 ±       0.001    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1609.532 ±    1420.347  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     20305.356 ±   17922.205    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.050 ±       0.217  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.633 ±       2.762    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count                                                128  thrpt    5        12.000                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5        13.000                    ms
[info] ArrayOfYearsBenchmark.readJacksonScala                                                            128  thrpt    5     35369.600 ±    1706.327   ops/s
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1269.795 ±      61.116  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     56496.012 ±       0.001    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1205.523 ±    1150.891  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     53698.449 ±   51986.851    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.033 ±       0.091  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.488 ±       4.115    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         9.000                counts
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         8.000                    ms
[info] ArrayOfYearsBenchmark.readJsoniterScala                                                           128  thrpt    5    546084.289 ±   34975.153   ops/s
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5      1066.014 ±      68.292  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      3072.001 ±       0.001    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1077.911 ±    1421.174  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      3104.092 ±    4065.313    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.072 ±       0.304    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         8.000                counts
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfYearsBenchmark.readPlayJson                                                                128  thrpt    5     26409.955 ±    1666.015   ops/s
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1887.650 ±     118.681  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5    112472.017 ±       0.003    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1881.788 ±    1172.937  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    112065.565 ±   68347.209    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.062 ±       0.127  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         3.739 ±       7.660    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        14.000                counts
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        16.000                    ms
[info] ArrayOfYearsBenchmark.writeJacksonScala                                                           128  thrpt    5    237008.729 ±    7931.439   ops/s
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       659.001 ±      22.038  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      4376.002 ±       0.001    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       668.096 ±       1.022  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      4436.651 ±     142.722    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.429 ±       3.518  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         2.872 ±      23.549    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         5.000                counts
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScala                                                          128  thrpt    5   1645516.354 ±   30259.395   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       962.021 ±      18.114  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       920.000 ±       0.001    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       941.281 ±    1416.971  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       900.811 ±    1364.067    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.033 ±       0.166  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.032 ±       0.158    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   1564067.600 ±    2322.570   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearsBenchmark.writePlayJson                                                               128  thrpt    5    178866.399 ±    4848.839   ops/s
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      1158.415 ±      31.045  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     10192.002 ±       0.001    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1203.046 ±    1152.182  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     10591.290 ±   10222.263    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.054 ±       0.201  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.476 ±       1.765    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5         9.000                counts
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        10.000                    ms
[info] ArrayOfZoneIdsBenchmark.readCirce                                                                 128  thrpt    5     72770.839 ±    1119.709   ops/s
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1565.667 ±      23.916  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     33856.006 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1614.812 ±    1422.532  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     34933.806 ±   31100.204    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.021 ±       0.113  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.449 ±       2.443    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        12.000                counts
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.time                                                        128  thrpt    5        10.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJacksonScala                                                          128  thrpt    5     92743.824 ±    3337.644   ops/s
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1185.284 ±      43.012  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5     20112.005 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1202.392 ±    1148.964  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     20421.225 ±   19735.658    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.037 ±       0.143  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.638 ±       2.452    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         9.000                counts
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala                                                         128  thrpt    5    103807.852 ±    4432.860   ops/s
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1214.226 ±      52.203  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5     18408.004 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1210.398 ±    1157.953  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     18370.912 ±   17822.143    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.029 ±       0.122  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.440 ±       1.830    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         9.000                counts
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfZoneIdsBenchmark.readPlayJson                                                              128  thrpt    5     46035.658 ±    4057.277   ops/s
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2206.932 ±     194.573  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     75448.010 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2290.761 ±    1430.546  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     78474.830 ±   53363.745    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.075 ±       0.044  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         2.566 ±       1.616    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        17.000                counts
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        22.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeCirce                                                                128  thrpt    5    121359.932 ±     319.043   ops/s
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1138.763 ±       2.852  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     14768.004 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1205.297 ±    1154.027  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     15629.589 ±   14949.641    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.046 ±       0.119  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.594 ±       1.541    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5         9.000                counts
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5         7.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala                                                         128  thrpt    5    332649.586 ±   73109.523   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       493.794 ±     108.509  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      2336.001 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       471.442 ±    1057.931  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      2263.520 ±    5221.193    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.513 ±       4.369  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.361 ±      20.095    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5         8.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala                                                        128  thrpt    5    671949.116 ±   20808.328   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       833.516 ±      25.376  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      1952.001 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       806.147 ±    1156.930  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1889.796 ±    2744.690    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.029 ±       0.108  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.068 ±       0.251    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         6.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5         5.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    704929.114 ±    7239.016   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson                                                             128  thrpt    5    233883.169 ±   42662.727   ops/s
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       764.542 ±     139.110  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5      5144.002 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5       668.323 ±       0.556  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      4504.932 ±     847.282    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.086 ±       0.304    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5         5.000                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5         5.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readCirce                                                             128  thrpt    5    125792.834 ±    4393.692   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      1725.317 ±      59.338  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     21584.004 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1751.207 ±    1419.795  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     21892.620 ±   17418.987    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.046 ±       0.174  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.571 ±       2.159    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        13.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        11.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala                                                      128  thrpt    5    184444.795 ±    4155.700   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1100.062 ±      24.348  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      9384.002 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1070.728 ±    1411.563  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      9140.767 ±   12126.449    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.025 ±       0.088  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.213 ±       0.748    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         8.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5         8.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala                                                     128  thrpt    5    505463.894 ±   30823.510   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       981.525 ±      60.086  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      3056.001 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1077.358 ±    1420.274  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      3362.919 ±    4525.127    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.029 ±       0.108  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.091 ±       0.336    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         8.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5         6.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson                                                          128  thrpt    5     69456.917 ±    2383.593   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2885.617 ±      98.195  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     65384.006 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2976.021 ±    1421.199  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     67469.851 ±   33598.970    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.071 ±       0.122  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.607 ±       2.796    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        22.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        24.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeCirce                                                            128  thrpt    5    171607.501 ±    1250.186   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1097.441 ±       8.548  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     10064.003 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1073.710 ±    1415.272  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      9848.228 ±   13001.268    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.042 ±       0.170  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.382 ±       1.558    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5         8.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala                                                     128  thrpt    5    541011.846 ±    6645.042   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       533.512 ±       6.556  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1552.001 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       503.095 ±    1113.894  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1462.850 ±    3235.568    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.438 ±       3.488  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.275 ±      10.164    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5         4.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5         7.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala                                                    128  thrpt    5   1150762.088 ±   20255.407   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       854.034 ±      15.156  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1168.000 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       941.351 ±    1419.304  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1286.949 ±    1934.278    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.025 ±       0.132  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.034 ±       0.180    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5         7.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5         7.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   1137122.018 ±    3230.840   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson                                                         128  thrpt    5    325285.643 ±   59511.109   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5       887.998 ±     162.628  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      4296.001 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5       934.172 ±    1406.677  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      4504.271 ±    6514.074    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.037 ±       0.164  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.178 ±       0.782    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5         7.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5         6.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readCirce                                                          128  thrpt    5       690.912 ±      17.513   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      1441.830 ±      36.509  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5   3283193.285 ±       3.785    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1468.790 ±    1146.487  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5   3345503.415 ± 2635635.470    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        47.245 ±     127.831    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count                                                128  thrpt    5        11.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time                                                 128  thrpt    5        11.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala                                                   128  thrpt    5       690.418 ±      44.348   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1431.185 ±      91.501  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5   3261262.450 ±     112.873    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1329.212 ±      13.033  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5   3029482.728 ±  172037.149    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        38.444 ±     156.131    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5        10.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5         9.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala                                                  128  thrpt    5     44633.220 ±    2303.681   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       779.737 ±      39.939  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5     27488.010 ±       0.001    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       801.878 ±    1148.784  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     28259.022 ±   40260.259    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.735 ±       6.108  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        25.816 ±     214.497    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         6.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5         8.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson                                                       128  thrpt    5       671.045 ±      29.230   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      1435.818 ±      62.969  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5   3366723.061 ±      16.310    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1463.655 ±    1160.385  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5   3426228.213 ± 2538764.741    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.029 ±       0.072  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        68.116 ±     166.940    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        11.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time                                              128  thrpt    5        10.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeCirce                                                         128  thrpt    5     13345.433 ±     819.562   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      1074.963 ±      66.562  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5    126758.112 ±     103.983    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1063.699 ±    1400.352  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    125647.285 ±  167774.541    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.042 ±       0.127  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         4.910 ±      14.826    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count                                               128  thrpt    5         8.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time                                                128  thrpt    5         8.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala                                                  128  thrpt    5     15351.651 ±     514.528   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5       959.879 ±      32.052  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5     98400.031 ±       0.017    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       928.392 ±    1399.815  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     95253.259 ±  144591.385    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         2.564 ±      10.728    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5         7.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5         9.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala                                                 128  thrpt    5    278549.748 ±    5572.919   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       982.657 ±      19.810  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      5552.002 ±       0.001    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1068.134 ±    1408.138  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      6040.636 ±    8025.373    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.037 ±       0.200  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.212 ±       1.129    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5         8.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5         7.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    339536.026 ±    1383.510   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson                                                      128  thrpt    5     15065.722 ±     698.830   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5      1017.586 ±      47.379  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    106296.263 ±      30.871    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1063.112 ±    1402.343  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    111105.288 ±  147095.971    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.029 ±       0.156  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         3.031 ±      16.267    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count                                            128  thrpt    5         8.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time                                             128  thrpt    5         7.000                    ms
[info] BitSetBenchmark.readJsoniterScala                                                                 128  thrpt    5   1084267.567 ±   21760.748   ops/s
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                                  128  thrpt    5        44.092 ±       0.872  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                             128  thrpt    5        64.000 ±       0.001    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.count                                                       128  thrpt    5           ≈ 0                counts
[info] BitSetBenchmark.readPlayJson                                                                      128  thrpt    5     71658.552 ±    2874.953   ops/s
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate                                                       128  thrpt    5      3139.355 ±     125.654  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                                  128  thrpt    5     68944.006 ±       0.001    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                              128  thrpt    5      3251.135 ±    1162.898  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                         128  thrpt    5     71439.529 ±   27195.256    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                          128  thrpt    5         0.092 ±       0.122  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                     128  thrpt    5         2.013 ±       2.679    B/op
[info] BitSetBenchmark.readPlayJson:·gc.count                                                            128  thrpt    5        24.000                counts
[info] BitSetBenchmark.readPlayJson:·gc.time                                                             128  thrpt    5        25.000                    ms
[info] BitSetBenchmark.writeJacksonScala                                                                 128  thrpt    5   1604241.000 ±   25726.131   ops/s
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                                  128  thrpt    5       897.123 ±      13.884  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                             128  thrpt    5       880.000 ±       0.001    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                         128  thrpt    5       935.247 ±    1409.027  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5       916.949 ±    1375.723    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.046 ±       0.208  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.045 ±       0.203    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.count                                                       128  thrpt    5         7.000                counts
[info] BitSetBenchmark.writeJacksonScala:·gc.time                                                        128  thrpt    5         6.000                    ms
[info] BitSetBenchmark.writeJsoniterScala                                                                128  thrpt    5   1344071.307 ±  116120.218   ops/s
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                                 128  thrpt    5       375.834 ±      32.302  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                            128  thrpt    5       440.000 ±       0.001    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                        128  thrpt    5       441.530 ±     987.579  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5       511.725 ±    1142.401    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.354 ±       2.985  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.409 ±       3.443    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.count                                                      128  thrpt    5         4.000                counts
[info] BitSetBenchmark.writeJsoniterScala:·gc.time                                                       128  thrpt    5         9.000                    ms
[info] BitSetBenchmark.writeJsoniterScalaPrealloc                                                        128  thrpt    5   1411245.721 ±   11942.162   ops/s
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                         128  thrpt    5        14.348 ±       0.121  MB/sec
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                    128  thrpt    5        16.000 ±       0.001    B/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                              128  thrpt    5           ≈ 0                counts
[info] BitSetBenchmark.writePlayJson                                                                     128  thrpt    5     37991.969 ±     557.656   ops/s
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate                                                      128  thrpt    5      1650.306 ±      23.857  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                                 128  thrpt    5     68360.012 ±       0.002    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1744.319 ±    1414.797  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     72270.255 ±   58940.474    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.029 ±       0.134  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         1.208 ±       5.550    B/op
[info] BitSetBenchmark.writePlayJson:·gc.count                                                           128  thrpt    5        13.000                counts
[info] BitSetBenchmark.writePlayJson:·gc.time                                                            128  thrpt    5        14.000                    ms
[info] ExtractFieldsBenchmark.readCirce                                                                  N/A  thrpt    5    808940.049 ±   29638.688   ops/s
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      2635.979 ±      96.206  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5      5128.001 ±       0.001    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      2574.300 ±    1174.495  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      5007.877 ±    2275.374    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.075 ±       0.122  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.146 ±       0.236    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        19.000                counts
[info] ExtractFieldsBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        15.000                    ms
[info] ExtractFieldsBenchmark.readDslJsonJava                                                            N/A  thrpt    5   5213545.299 ±  354798.998   ops/s
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate                                             N/A  thrpt    5       318.011 ±      21.654  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        N/A  thrpt    5        96.000 ±       0.001    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       306.961 ±    1079.012  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5        93.195 ±     327.625    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.004 ±       0.031  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.001 ±       0.010    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.count                                                  N/A  thrpt    5         3.000                counts
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.time                                                   N/A  thrpt    5         7.000                    ms
[info] ExtractFieldsBenchmark.readJacksonScala                                                           N/A  thrpt    5    994142.054 ±   37067.616   ops/s
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5      1233.087 ±      46.013  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5      1952.000 ±       0.001    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      1202.904 ±    1149.709  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5      1901.735 ±    1786.871    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.042 ±       0.170  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         0.066 ±       0.269    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5         9.000                counts
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5         8.000                    ms
[info] ExtractFieldsBenchmark.readJsoniterScala                                                          N/A  thrpt    5   8006885.118 ±   53877.398   ops/s
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5       366.293 ±       2.386  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5        72.000 ±       0.001    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       306.957 ±    1078.996  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5        60.346 ±     212.125    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.001 ±       0.010  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5         3.000                counts
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5         6.000                    ms
[info] ExtractFieldsBenchmark.readPlayJson                                                               N/A  thrpt    5    299750.607 ±    7131.060   ops/s
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate                                                N/A  thrpt    5      1663.982 ±      39.438  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           N/A  thrpt    5      8736.001 ±       0.001    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1742.207 ±    1414.544  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      9146.613 ±    7421.306    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.054 ±       0.044  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.284 ±       0.232    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.count                                                     N/A  thrpt    5        13.000                counts
[info] ExtractFieldsBenchmark.readPlayJson:·gc.time                                                      N/A  thrpt    5        13.000                    ms
[info] GeoJSONBenchmark.readCirce                                                                        N/A  thrpt    5      3693.973 ±      93.166   ops/s
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate                                                         N/A  thrpt    5      1832.392 ±      46.134  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm                                                    N/A  thrpt    5    780640.119 ±       0.015    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5      1748.648 ±    1424.626  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5    745194.700 ±  611607.987    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                            N/A  thrpt    5         0.087 ±       0.174  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                       N/A  thrpt    5        37.310 ±      74.919    B/op
[info] GeoJSONBenchmark.readCirce:·gc.count                                                              N/A  thrpt    5        13.000                counts
[info] GeoJSONBenchmark.readCirce:·gc.time                                                               N/A  thrpt    5        13.000                    ms
[info] GeoJSONBenchmark.readJacksonScala                                                                 N/A  thrpt    5      4907.317 ±     367.158   ops/s
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate                                                  N/A  thrpt    5      2055.847 ±     154.038  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm                                             N/A  thrpt    5    659176.091 ±       0.017    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      1983.765 ±     233.375  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5    636031.523 ±   51990.449    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                                            N/A  thrpt    5         0.060 ±       0.520  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                                       N/A  thrpt    5        19.915 ±     171.471    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.054 ±       0.231  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5        17.514 ±      75.884    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.count                                                       N/A  thrpt    5        16.000                counts
[info] GeoJSONBenchmark.readJacksonScala:·gc.time                                                        N/A  thrpt    5        27.000                    ms
[info] GeoJSONBenchmark.readJsoniterScala                                                                N/A  thrpt    5     43135.935 ±     138.080   ops/s
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate                                                 N/A  thrpt    5       717.697 ±       2.427  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                            N/A  thrpt    5     26184.010 ±       0.001    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5       807.814 ±    1158.377  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5     29476.170 ±   42346.380    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.337 ±       2.767  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5        12.294 ±     100.976    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.count                                                      N/A  thrpt    5         6.000                counts
[info] GeoJSONBenchmark.readJsoniterScala:·gc.time                                                       N/A  thrpt    5         7.000                    ms
[info] GeoJSONBenchmark.writeCirce                                                                       N/A  thrpt    5      4091.985 ±     557.449   ops/s
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate                                                        N/A  thrpt    5       872.299 ±     119.174  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm                                                   N/A  thrpt    5    335456.107 ±       0.017    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5       936.876 ±    1411.255  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5    358666.585 ±  516148.819    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.042 ±       0.188  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5        15.705 ±      70.535    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.count                                                             N/A  thrpt    5         7.000                counts
[info] GeoJSONBenchmark.writeCirce:·gc.time                                                              N/A  thrpt    5         7.000                    ms
[info] GeoJSONBenchmark.writeJacksonScala                                                                N/A  thrpt    5      4760.273 ±      39.541   ops/s
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate                                                 N/A  thrpt    5       530.190 ±       4.269  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                            N/A  thrpt    5    175269.488 ±       2.591    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5       603.121 ±     321.333  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5    199338.586 ±  104880.920    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.562 ±       4.750  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5       185.803 ±    1570.301    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.count                                                      N/A  thrpt    5         5.000                counts
[info] GeoJSONBenchmark.writeJacksonScala:·gc.time                                                       N/A  thrpt    5        11.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScala                                                               N/A  thrpt    5      6262.630 ±      69.029   ops/s
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate                                                N/A  thrpt    5       201.933 ±       2.239  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                           N/A  thrpt    5     50744.166 ±       0.827    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       204.623 ±    1078.918  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5     51543.739 ±  271775.296    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.002 ±       0.014  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.626 ±       3.501    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.count                                                     N/A  thrpt    5         2.000                counts
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.time                                                      N/A  thrpt    5         4.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc                                                       N/A  thrpt    5      6365.745 ±      74.291   ops/s
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                        N/A  thrpt    5       158.741 ±       1.766  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                   N/A  thrpt    5     39240.531 ±       3.952    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       204.681 ±    1079.222  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     50751.939 ±  267600.329    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.588 ±       5.052  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5       145.843 ±    1252.611    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count                                             N/A  thrpt    5         2.000                counts
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time                                              N/A  thrpt    5         4.000                    ms
[info] GoogleMapsAPIBenchmark.readCirce                                                                  N/A  thrpt    5      7665.152 ±     390.466   ops/s
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      1913.155 ±      97.602  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5    392761.238 ±      48.494    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1888.285 ±    1172.933  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5    387115.864 ±  227103.345    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.087 ±       0.298  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5        17.883 ±      60.957    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        14.000                counts
[info] GoogleMapsAPIBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        13.000                    ms
[info] GoogleMapsAPIBenchmark.readDslJsonJava                                                            N/A  thrpt    5     11736.197 ±     782.509   ops/s
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate                                             N/A  thrpt    5       289.577 ±      19.329  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        N/A  thrpt    5     38832.041 ±       0.027    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       306.948 ±    1078.967  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5     40875.047 ±  143681.591    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.554 ±       4.772    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count                                                  N/A  thrpt    5         3.000                counts
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time                                                   N/A  thrpt    5         6.000                    ms
[info] GoogleMapsAPIBenchmark.readJacksonScala                                                           N/A  thrpt    5     13461.761 ±    2433.444   ops/s
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5       486.377 ±      87.914  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5     56848.035 ±       0.023    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       470.396 ±    1054.323  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5     55440.912 ±  122873.465    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.545 ±       4.608  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5        64.409 ±     544.570    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5         4.000                counts
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        10.000                    ms
[info] GoogleMapsAPIBenchmark.readJsoniterScala                                                          N/A  thrpt    5     23907.152 ±     818.233   ops/s
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5       486.864 ±      16.752  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5     32048.018 ±       0.003    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       473.921 ±    1066.475  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5     31276.847 ±   70584.365    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.354 ±       2.932  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5        23.687 ±     196.051    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5         4.000                counts
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5         8.000                    ms
[info] GoogleMapsAPIBenchmark.readPlayJson                                                               N/A  thrpt    5      2427.152 ±      85.264   ops/s
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate                                                N/A  thrpt    5      1519.535 ±      53.582  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                           N/A  thrpt    5    985216.181 ±       0.026    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1475.617 ±    1155.032  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5    957266.112 ±  763600.070    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         5.429 ±      28.623    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.count                                                     N/A  thrpt    5        11.000                counts
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.time                                                      N/A  thrpt    5        17.000                    ms
[info] GoogleMapsAPIBenchmark.writeCirce                                                                 N/A  thrpt    5      8930.302 ±     171.882   ops/s
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate                                                  N/A  thrpt    5      1988.729 ±      38.790  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm                                             N/A  thrpt    5    350482.913 ±      95.644    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      2021.330 ±      24.734  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5    356233.428 ±    6122.317    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.041 ±       0.158  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         7.264 ±      27.780    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.count                                                       N/A  thrpt    5        15.000                counts
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.time                                                        N/A  thrpt    5        14.000                    ms
[info] GoogleMapsAPIBenchmark.writeDslJsonJava                                                           N/A  thrpt    5     55542.553 ±    2578.233   ops/s
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate                                            N/A  thrpt    5       519.242 ±      24.069  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       N/A  thrpt    5     14712.008 ±       0.001    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       500.530 ±    1106.831  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5     14204.830 ±   31275.374    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.014 ±       0.090  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         0.415 ±       2.615    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count                                                 N/A  thrpt    5         4.000                counts
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time                                                  N/A  thrpt    5         9.000                    ms
[info] GoogleMapsAPIBenchmark.writeJacksonScala                                                          N/A  thrpt    5     41092.605 ±    1607.565   ops/s
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                           N/A  thrpt    5       611.825 ±      23.847  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      N/A  thrpt    5     23431.853 ±       0.271    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       634.062 ±     263.617  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5     24295.129 ±   10502.047    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.546 ±       4.437  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5        20.705 ±     167.985    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count                                                N/A  thrpt    5         5.000                counts
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time                                                 N/A  thrpt    5         9.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScala                                                         N/A  thrpt    5     83734.779 ±     475.785   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                          N/A  thrpt    5       629.549 ±       3.431  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     N/A  thrpt    5     11832.005 ±       0.001    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5       537.484 ±    1156.977  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5     10106.492 ±   21755.028    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.390 ±       3.270  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         7.326 ±      61.401    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count                                               N/A  thrpt    5         4.000                counts
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time                                                N/A  thrpt    5         4.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc                                                 N/A  thrpt    5    103370.677 ±    2863.412   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             N/A  thrpt    5         0.004 ±       0.001    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       N/A  thrpt    5           ≈ 0                counts
[info] GoogleMapsAPIBenchmark.writePlayJson                                                              N/A  thrpt    5      6016.858 ±     278.534   ops/s
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate                                               N/A  thrpt    5      1801.815 ±      82.833  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm                                          N/A  thrpt    5    471167.992 ±       1.641    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      1877.727 ±    1155.926  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5    491283.588 ±  308196.660    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.046 ±       0.154  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5        11.972 ±      40.038    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.count                                                    N/A  thrpt    5        14.000                counts
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.time                                                     N/A  thrpt    5        13.000                    ms
[info] IntBenchmark.readCirce                                                                            N/A  thrpt    5   4935162.101 ±   56256.851   ops/s
[info] IntBenchmark.readCirce:·gc.alloc.rate                                                             N/A  thrpt    5      3261.105 ±      36.728  MB/sec
[info] IntBenchmark.readCirce:·gc.alloc.rate.norm                                                        N/A  thrpt    5      1040.000 ±       0.001    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                    N/A  thrpt    5      3395.431 ±      28.456  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                               N/A  thrpt    5      1082.846 ±      15.579    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                                N/A  thrpt    5         0.075 ±       0.134  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                           N/A  thrpt    5         0.024 ±       0.043    B/op
[info] IntBenchmark.readCirce:·gc.count                                                                  N/A  thrpt    5        25.000                counts
[info] IntBenchmark.readCirce:·gc.time                                                                   N/A  thrpt    5        21.000                    ms
[info] IntBenchmark.readDslJsonJava                                                                      N/A  thrpt    5  40140116.486 ±  269762.361   ops/s
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate                                                       N/A  thrpt    5       408.116 ±       2.599  MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                                  N/A  thrpt    5        16.000 ±       0.001    B/op
[info] IntBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5       337.460 ±    1210.062  MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5        13.237 ±      47.461    B/op
[info] IntBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.006 ±       0.048  MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5        ≈ 10⁻⁴                  B/op
[info] IntBenchmark.readDslJsonJava:·gc.count                                                            N/A  thrpt    5         3.000                counts
[info] IntBenchmark.readDslJsonJava:·gc.time                                                             N/A  thrpt    5         6.000                    ms
[info] IntBenchmark.readJacksonScala                                                                     N/A  thrpt    5   8676456.955 ±  222031.497   ops/s
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate                                                      N/A  thrpt    5      3263.760 ±      83.337  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate.norm                                                 N/A  thrpt    5       592.000 ±       0.001    B/op
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      3254.462 ±    1178.756  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5       590.293 ±     212.624    B/op
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.071 ±       0.091  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.013 ±       0.017    B/op
[info] IntBenchmark.readJacksonScala:·gc.count                                                           N/A  thrpt    5        24.000                counts
[info] IntBenchmark.readJacksonScala:·gc.time                                                            N/A  thrpt    5        21.000                    ms
[info] IntBenchmark.readJsoniterScala                                                                    N/A  thrpt    5  43270556.136 ± 6256847.701   ops/s
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate                                                     N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                                N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] IntBenchmark.readJsoniterScala:·gc.count                                                          N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readNaiveScala                                                                       N/A  thrpt    5  17062816.215 ± 1103782.889   ops/s
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate                                                        N/A  thrpt    5      1127.669 ±      72.080  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate.norm                                                   N/A  thrpt    5       104.000 ±       0.001    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      1214.818 ±    1163.251  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5       111.830 ±     104.502    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.058 ±       0.183  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.005 ±       0.017    B/op
[info] IntBenchmark.readNaiveScala:·gc.count                                                             N/A  thrpt    5         9.000                counts
[info] IntBenchmark.readNaiveScala:·gc.time                                                              N/A  thrpt    5         7.000                    ms
[info] IntBenchmark.readPlayJson                                                                         N/A  thrpt    5   7706477.387 ±   62269.208   ops/s
[info] IntBenchmark.readPlayJson:·gc.alloc.rate                                                          N/A  thrpt    5      3721.523 ±      29.985  MB/sec
[info] IntBenchmark.readPlayJson:·gc.alloc.rate.norm                                                     N/A  thrpt    5       760.000 ±       0.001    B/op
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5      3667.719 ±    1419.354  MB/sec
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5       749.069 ±     292.599    B/op
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.092 ±       0.166  MB/sec
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5         0.019 ±       0.034    B/op
[info] IntBenchmark.readPlayJson:·gc.count                                                               N/A  thrpt    5        27.000                counts
[info] IntBenchmark.readPlayJson:·gc.time                                                                N/A  thrpt    5        25.000                    ms
[info] IntBenchmark.writeCirce                                                                           N/A  thrpt    5  11908098.868 ±  357488.004   ops/s
[info] IntBenchmark.writeCirce:·gc.alloc.rate                                                            N/A  thrpt    5      2360.828 ±      71.915  MB/sec
[info] IntBenchmark.writeCirce:·gc.alloc.rate.norm                                                       N/A  thrpt    5       312.000 ±       0.001    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5      2434.589 ±    1426.435  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5       321.791 ±     189.608    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5         0.062 ±       0.127  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5         0.008 ±       0.017    B/op
[info] IntBenchmark.writeCirce:·gc.count                                                                 N/A  thrpt    5        18.000                counts
[info] IntBenchmark.writeCirce:·gc.time                                                                  N/A  thrpt    5        16.000                    ms
[info] IntBenchmark.writeDslJsonJava                                                                     N/A  thrpt    5  60282344.243 ± 1293999.186   ops/s
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate                                                      N/A  thrpt    5      1838.481 ±      39.400  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                                 N/A  thrpt    5        48.000 ±       0.001    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1874.514 ±    1151.532  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5        48.961 ±      30.542    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.465 ±       3.917  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.012 ±       0.103    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.count                                                           N/A  thrpt    5        14.000                counts
[info] IntBenchmark.writeDslJsonJava:·gc.time                                                            N/A  thrpt    5        20.000                    ms
[info] IntBenchmark.writeJacksonScala                                                                    N/A  thrpt    5  12184448.029 ±  332266.658   ops/s
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate                                                     N/A  thrpt    5      2415.598 ±      65.974  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                                N/A  thrpt    5       312.000 ±       0.001    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      2429.693 ±    1432.739  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5       313.772 ±     183.360    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.079 ±       0.174  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.010 ±       0.022    B/op
[info] IntBenchmark.writeJacksonScala:·gc.count                                                          N/A  thrpt    5        18.000                counts
[info] IntBenchmark.writeJacksonScala:·gc.time                                                           N/A  thrpt    5        16.000                    ms
[info] IntBenchmark.writeJsoniterScala                                                                   N/A  thrpt    5  45386804.160 ±  660226.133   ops/s
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate                                                    N/A  thrpt    5       922.844 ±      13.494  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                               N/A  thrpt    5        32.000 ±       0.001    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5       941.539 ±    1418.533  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5        32.657 ±      49.308    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.033 ±       0.146  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         0.001 ±       0.005    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.count                                                         N/A  thrpt    5         7.000                counts
[info] IntBenchmark.writeJsoniterScala:·gc.time                                                          N/A  thrpt    5         6.000                    ms
[info] IntBenchmark.writeJsoniterScalaPrealloc                                                           N/A  thrpt    5  44805048.371 ±  241847.060   ops/s
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                            N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                       N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                 N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeNaiveScala                                                                      N/A  thrpt    5  13677113.448 ±  265085.331   ops/s
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate                                                       N/A  thrpt    5      2294.132 ±      44.421  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       264.000 ±       0.001    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      2307.502 ±    1438.703  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       265.482 ±     163.657    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.062 ±       0.098  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.007 ±       0.011    B/op
[info] IntBenchmark.writeNaiveScala:·gc.count                                                            N/A  thrpt    5        17.000                counts
[info] IntBenchmark.writeNaiveScala:·gc.time                                                             N/A  thrpt    5        13.000                    ms
[info] IntBenchmark.writePlayJson                                                                        N/A  thrpt    5   2316620.385 ±   61487.208   ops/s
[info] IntBenchmark.writePlayJson:·gc.alloc.rate                                                         N/A  thrpt    5      1966.463 ±      52.156  MB/sec
[info] IntBenchmark.writePlayJson:·gc.alloc.rate.norm                                                    N/A  thrpt    5      1336.000 ±       0.001    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5      1890.135 ±    1172.229  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5      1284.401 ±     802.109    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                            N/A  thrpt    5         0.067 ±       0.143  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                       N/A  thrpt    5         0.045 ±       0.097    B/op
[info] IntBenchmark.writePlayJson:·gc.count                                                              N/A  thrpt    5        14.000                counts
[info] IntBenchmark.writePlayJson:·gc.time                                                               N/A  thrpt    5        12.000                    ms
[info] IntMapOfBooleansBenchmark.readJsoniterScala                                                       128  thrpt    5    163174.966 ±    1998.907   ops/s
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      2993.505 ±      36.549  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5     28872.003 ±       0.001    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      2987.807 ±    1446.179  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     28824.379 ±   14235.420    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.079 ±       0.132  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.762 ±       1.265    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5        22.000                counts
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        19.000                    ms
[info] IntMapOfBooleansBenchmark.readPlayJson                                                            128  thrpt    5     26928.065 ±     686.650   ops/s
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      2063.171 ±      52.680  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5    120584.016 ±       0.002    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2018.079 ±      28.635  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    117954.114 ±    4260.510    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.046 ±       0.119  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.670 ±       6.933    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        15.000                counts
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        15.000                    ms
[info] IntMapOfBooleansBenchmark.writeJacksonScala                                                       128  thrpt    5    132371.489 ±    4148.541   ops/s
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1281.934 ±      39.721  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     15240.003 ±       0.001    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1338.064 ±      11.640  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     15907.945 ±     397.406    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.054 ±       0.166  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.645 ±       1.981    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5        10.000                counts
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5         9.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScala                                                      128  thrpt    5    509542.233 ±   24365.512   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      1054.190 ±      50.563  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      3256.001 ±       0.001    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1076.348 ±    1420.269  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      3317.814 ±    4303.245    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.029 ±       0.156  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.090 ±       0.484    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         8.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         7.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5    540073.203 ±   32114.100   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5       527.168 ±      31.134  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5      1536.001 ±       0.001    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                      128  thrpt    5       505.813 ±    1121.315  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      1478.455 ±    3287.183    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.359 ±       2.998  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         1.037 ±       8.661    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5         4.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                                     128  thrpt    5         6.000                    ms
[info] IntMapOfBooleansBenchmark.writePlayJson                                                           128  thrpt    5     62870.418 ±     874.111   ops/s
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1098.449 ±      14.842  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     27496.007 ±       0.001    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1068.853 ±    1411.062  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     26754.837 ±   35316.464    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.021 ±       0.113  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.520 ±       2.831    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5         8.000                counts
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5         8.000                    ms
[info] ListOfBooleansBenchmark.readCirce                                                                 128  thrpt    5    336300.955 ±   21813.640   ops/s
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      2441.193 ±     158.768  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     11424.001 ±       0.001    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      2439.310 ±    1436.188  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     11435.312 ±    7265.433    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.075 ±       0.146  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.351 ±       0.683    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.count                                                       128  thrpt    5        18.000                counts
[info] ListOfBooleansBenchmark.readCirce:·gc.time                                                        128  thrpt    5        14.000                    ms
[info] ListOfBooleansBenchmark.readJacksonScala                                                          128  thrpt    5    361131.150 ±    3291.665   ops/s
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       956.463 ±       8.519  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      4168.001 ±       0.001    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1068.367 ±    1409.219  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      4657.790 ±    6167.229    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.050 ±       0.231  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.218 ±       1.006    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         8.000                counts
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         7.000                    ms
[info] ListOfBooleansBenchmark.readJsoniterScala                                                         128  thrpt    5    459945.648 ±    1482.861   ops/s
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       907.110 ±       2.933  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      3104.001 ±       0.001    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       808.158 ±    1159.761  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      2766.049 ±    3981.075    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.033 ±       0.185  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.114 ±       0.632    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         6.000                counts
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5         5.000                    ms
[info] ListOfBooleansBenchmark.readPlayJson                                                              128  thrpt    5    114366.363 ±    3979.098   ops/s
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      4140.970 ±     144.872  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     56984.004 ±       0.001    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      4079.760 ±      30.013  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     56144.881 ±    1721.477    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.079 ±       0.067  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.088 ±       0.912    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        30.000                counts
[info] ListOfBooleansBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        25.000                    ms
[info] ListOfBooleansBenchmark.writeCirce                                                                128  thrpt    5    351734.892 ±    9490.514   ops/s
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1192.601 ±      31.320  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5      5336.001 ±       0.001    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1074.586 ±    1416.524  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      4814.028 ±    6411.499    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.033 ±       0.122  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.150 ±       0.551    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.count                                                      128  thrpt    5         8.000                counts
[info] ListOfBooleansBenchmark.writeCirce:·gc.time                                                       128  thrpt    5         7.000                    ms
[info] ListOfBooleansBenchmark.writeJacksonScala                                                         128  thrpt    5    744365.263 ±   35730.589   ops/s
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       552.434 ±      26.542  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1168.001 ±       0.001    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       502.556 ±    1112.398  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1065.387 ±    2364.019    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.473 ±       3.939  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.001 ±       8.335    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5         8.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScala                                                        128  thrpt    5   2077591.615 ±   62099.641   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       961.022 ±      28.830  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5       728.000 ±       0.001    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       941.715 ±    1418.978  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       712.296 ±    1059.383    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.037 ±       0.143  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.028 ±       0.108    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         7.000                counts
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5         7.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5   2468175.468 ±   24188.196   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ListOfBooleansBenchmark.writePlayJson                                                             128  thrpt    5    375389.389 ±   21276.046   ops/s
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       540.046 ±      30.251  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5      2264.001 ±       0.001    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5       504.133 ±    1116.748  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      2099.677 ±    4648.802    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.418 ±       3.507  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.744 ±      14.641    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5         4.000                counts
[info] ListOfBooleansBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5         7.000                    ms
[info] MapOfIntsToBooleansBenchmark.readCirce                                                            128  thrpt    5     60293.249 ±    4152.253   ops/s
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1866.029 ±     127.535  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5     48704.007 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1890.574 ±    1158.746  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     49402.324 ±   31495.106    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.050 ±       0.072  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.303 ±       1.853    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.count                                                  128  thrpt    5        14.000                counts
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.time                                                   128  thrpt    5        11.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJacksonScala                                                     128  thrpt    5     64663.470 ±    2517.681   ops/s
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1163.030 ±      45.099  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     28304.007 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1203.306 ±    1153.419  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     29253.167 ±   27663.025    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.054 ±       0.201  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.311 ±       4.867    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5         9.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala                                                    128  thrpt    5    101909.400 ±    1292.414   ops/s
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5      1562.974 ±      19.692  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5     24136.004 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1619.509 ±    1419.856  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     24999.954 ±   21715.173    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.042 ±       0.057  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.643 ±       0.878    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5        12.000                counts
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        10.000                    ms
[info] MapOfIntsToBooleansBenchmark.readPlayJson                                                         128  thrpt    5     17375.955 ±     730.620   ops/s
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      1211.420 ±      51.345  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    109712.027 ±       0.019    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1202.397 ±    1149.291  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    109000.741 ±  105423.360    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.042 ±       0.127  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         3.764 ±      11.504    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                               128  thrpt    5         9.000                counts
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                                128  thrpt    5         9.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala                                                    128  thrpt    5    145265.293 ±    7856.252   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1130.669 ±      60.686  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     12248.003 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1068.596 ±    1406.316  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     11534.853 ±   14713.688    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.046 ±       0.154  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.492 ±       1.644    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         8.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5         7.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala                                                   128  thrpt    5    563659.091 ±   17495.391   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       621.837 ±      19.241  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      1736.001 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       537.943 ±    1157.963  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      1500.756 ±    3231.023    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.372 ±       3.024  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.051 ±       8.554    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         4.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5         5.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    543472.651 ±   13910.984   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         5.525 ±       0.142  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5        16.001 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson                                                        128  thrpt    5     64629.969 ±    3138.981   ops/s
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1185.801 ±      58.049  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     28872.007 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1202.694 ±    1149.711  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     29344.545 ±   28757.189    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.050 ±       0.146  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         1.223 ±       3.573    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                              128  thrpt    5         9.000                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                               128  thrpt    5         9.000                    ms
[info] MissingReqFieldBenchmark.readCirce                                                                N/A  thrpt    5   2261803.934 ±   61711.183   ops/s
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate                                                 N/A  thrpt    5      3391.929 ±      93.410  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm                                            N/A  thrpt    5      2360.000 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      3396.035 ±    1856.301  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5      2361.424 ±    1246.575    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.096 ±       0.122  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.067 ±       0.084    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.count                                                      N/A  thrpt    5        25.000                counts
[info] MissingReqFieldBenchmark.readCirce:·gc.time                                                       N/A  thrpt    5        21.000                    ms
[info] MissingReqFieldBenchmark.readDslJsonJava                                                          N/A  thrpt    5    853572.505 ±    3660.105   ops/s
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate                                           N/A  thrpt    5       520.665 ±       2.228  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                      N/A  thrpt    5       960.001 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       500.867 ±    1107.800  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5       923.672 ±    2043.835    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.024 ±       0.119  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.044 ±       0.219    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.count                                                N/A  thrpt    5         4.000                counts
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.time                                                 N/A  thrpt    5         9.000                    ms
[info] MissingReqFieldBenchmark.readJacksonScala                                                         N/A  thrpt    5    310399.536 ±   16366.941   ops/s
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate                                          N/A  thrpt    5       730.561 ±      38.460  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     N/A  thrpt    5      3704.001 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5       666.799 ±       0.897  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5      3381.238 ±     181.235    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.459 ±       3.814  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         2.318 ±      19.289    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.count                                               N/A  thrpt    5         5.000                counts
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.time                                                N/A  thrpt    5         6.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterScala                                                        N/A  thrpt    5    716818.791 ±   30789.217   ops/s
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate                                         N/A  thrpt    5       641.352 ±      27.410  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    N/A  thrpt    5      1408.001 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                N/A  thrpt    5       540.734 ±    1163.971  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5      1185.134 ±    2551.725    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.306 ±       2.461  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5         0.664 ±       5.328    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.count                                              N/A  thrpt    5         4.000                counts
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.time                                               N/A  thrpt    5         4.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStackless                                                    N/A  thrpt    5   4010317.884 ±  202879.326   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate                                     N/A  thrpt    5      2344.508 ±     117.351  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm                                N/A  thrpt    5       920.000 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space                            N/A  thrpt    5      2306.351 ±    1431.869  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5       904.873 ±     554.838    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.075 ±       0.122  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5         0.029 ±       0.048    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.count                                          N/A  thrpt    5        17.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.time                                           N/A  thrpt    5        13.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump                                              N/A  thrpt    5   8048495.444 ±  376384.198   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate                               N/A  thrpt    5       859.235 ±      40.047  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm                          N/A  thrpt    5       168.000 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space                      N/A  thrpt    5       945.939 ±    1425.765  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm                 N/A  thrpt    5       185.124 ±     281.042    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space                  N/A  thrpt    5         0.029 ±       0.176  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm             N/A  thrpt    5         0.006 ±       0.035    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count                                    N/A  thrpt    5         7.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time                                     N/A  thrpt    5         5.000                    ms
[info] MissingReqFieldBenchmark.readPlayJson                                                             N/A  thrpt    5    180123.150 ±    5406.564   ops/s
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate                                              N/A  thrpt    5      1547.412 ±      46.040  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm                                         N/A  thrpt    5     13520.002 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1472.660 ±    1152.623  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5     12859.222 ±    9824.498    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.037 ±       0.143  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.326 ±       1.245    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.count                                                   N/A  thrpt    5        11.000                counts
[info] MissingReqFieldBenchmark.readPlayJson:·gc.time                                                    N/A  thrpt    5        11.000                    ms
[info] MutableBitSetBenchmark.readJsoniterScala                                                          128  thrpt    5   1103557.302 ±   18777.468   ops/s
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5        61.716 ±       1.082  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5        88.000 ±       0.001    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       102.320 ±     881.006  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       147.019 ±    1265.878    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         1.000                counts
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5         2.000                    ms
[info] MutableBitSetBenchmark.readPlayJson                                                               128  thrpt    5     64662.128 ±     835.565   ops/s
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      2919.692 ±      36.337  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     71056.007 ±       0.001    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2976.240 ±    1412.544  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     72420.774 ±   33894.779    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.083 ±       0.080  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         2.026 ±       1.939    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        22.000                counts
[info] MutableBitSetBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        21.000                    ms
[info] MutableBitSetBenchmark.writeJacksonScala                                                          128  thrpt    5   1559289.196 ±   23371.471   ops/s
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5       895.691 ±      13.548  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5       904.000 ±       0.001    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       935.280 ±    1408.766  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       943.363 ±    1413.441    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.037 ±       0.200  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.038 ±       0.201    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScala                                                         128  thrpt    5   1374982.864 ±   11997.784   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       384.460 ±       3.272  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       440.000 ±       0.001    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       441.535 ±     987.664  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       504.924 ±    1129.919    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.353 ±       2.931  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.404 ±       3.355    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5         8.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5    979985.224 ±   19260.344   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5        ≈ 10⁻³                  B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] MutableBitSetBenchmark.writePlayJson                                                              128  thrpt    5     38848.233 ±    1117.835   ops/s
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5      1694.649 ±      48.839  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     68648.011 ±       0.002    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1611.030 ±    1416.518  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     65242.112 ±   56917.978    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.046 ±       0.105  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.852 ±       4.205    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5        12.000                counts
[info] MutableBitSetBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5        13.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala                                               128  thrpt    5    253281.956 ±   15247.132   ops/s
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5       991.485 ±      59.869  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      6160.002 ±       0.001    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1077.267 ±    1419.882  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      6689.474 ±    8776.441    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.025 ±       0.174  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.153 ±       1.067    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5         8.000                counts
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5         7.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readPlayJson                                                    128  thrpt    5     28170.261 ±     439.506   ops/s
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1492.341 ±      22.511  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     83384.016 ±       0.002    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1472.593 ±    1153.010  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     82292.985 ±   64769.722    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.021 ±       0.080  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         1.161 ±       4.473    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        11.000                counts
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        12.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala                                               128  thrpt    5    112725.266 ±    3922.350   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      1450.295 ±      50.232  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     20248.004 ±       0.001    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1473.387 ±    1152.016  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     20571.712 ±   16098.889    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.050 ±       0.134  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.698 ±       1.885    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        11.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        11.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala                                              128  thrpt    5    357239.451 ±    2181.526   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1701.408 ±      10.243  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      7496.001 ±       0.001    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1754.078 ±    1423.062  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      7728.138 ±    6271.306    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.050 ±       0.134  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.220 ±       0.592    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        13.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        11.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5    427579.393 ±    6625.436   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5      1464.908 ±      22.726  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5      5392.001 ±       0.001    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space              128  thrpt    5      1347.779 ±       7.467  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm         128  thrpt    5      4960.946 ±      87.736    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space          128  thrpt    5         0.042 ±       0.113  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5         0.153 ±       0.417    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5        10.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                             128  thrpt    5         9.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writePlayJson                                                   128  thrpt    5     57083.565 ±    2992.915   ops/s
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1220.454 ±      64.090  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5     33648.010 ±       0.021    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1336.908 ±      10.976  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     36864.419 ±    2052.758    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.042 ±       0.170  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.141 ±       4.663    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        10.000                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        13.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readCirce                                                     128  thrpt    5     71533.826 ±    2931.154   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                      128  thrpt    5      1413.119 ±      57.254  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                 128  thrpt    5     31088.006 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                             128  thrpt    5      1482.167 ±    1163.602  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     32615.038 ±   25786.298    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.029 ±       0.134  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.644 ±       2.983    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count                                           128  thrpt    5        11.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time                                            128  thrpt    5         9.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala                                              128  thrpt    5     99584.136 ±    6056.930   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                               128  thrpt    5       673.362 ±      40.281  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                          128  thrpt    5     10640.004 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                      128  thrpt    5       667.252 ±    1815.791  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     10553.349 ±   29247.418    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.479 ±       3.948  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         7.706 ±      63.591    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                    128  thrpt    5         5.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                     128  thrpt    5         6.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala                                             128  thrpt    5    188028.915 ±   10717.343   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                              128  thrpt    5       774.317 ±      44.761  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                         128  thrpt    5      6480.002 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       807.752 ±    1160.335  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5      6741.655 ±    9340.729    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.029 ±       0.091  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.244 ±       0.768    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                   128  thrpt    5         6.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                    128  thrpt    5         5.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson                                                  128  thrpt    5     27782.269 ±     557.629   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                   128  thrpt    5      1492.402 ±      29.865  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                              128  thrpt    5     84544.016 ±       0.002    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                          128  thrpt    5      1472.692 ±    1152.639  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     83490.937 ±   67165.639    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.042 ±       0.127  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         2.364 ±       7.226    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                        128  thrpt    5        11.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                         128  thrpt    5        11.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala                                             128  thrpt    5    144992.544 ±    6620.431   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                              128  thrpt    5       989.140 ±      44.893  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5     10736.003 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5      1068.072 ±    1408.702  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5     11587.669 ±   15219.684    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.042 ±       0.160  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.450 ±       1.730    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                   128  thrpt    5         8.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                    128  thrpt    5         8.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala                                            128  thrpt    5    565375.689 ±   26027.503   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                             128  thrpt    5       629.451 ±      29.189  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5      1752.001 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       537.944 ±    1157.965  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5      1493.183 ±    3215.011    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.363 ±       2.990  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         1.004 ±       8.273    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                  128  thrpt    5         4.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                   128  thrpt    5         4.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                    128  thrpt    5    594546.011 ±    2200.334   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                     128  thrpt    5        12.090 ±       0.047  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                128  thrpt    5        32.001 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                          128  thrpt    5           ≈ 0                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson                                                 128  thrpt    5     68493.692 ±     424.020   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                  128  thrpt    5      1256.173 ±       7.598  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                             128  thrpt    5     28864.006 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      1203.525 ±    1154.669  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     27659.009 ±   26592.354    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.046 ±       0.143  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         1.052 ±       3.292    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                       128  thrpt    5         9.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                        128  thrpt    5        10.000                    ms
[info] MutableSetOfIntsBenchmark.readCirce                                                               128  thrpt    5     74797.748 ±    2021.409   ops/s
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1377.982 ±      36.927  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5     28992.006 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1347.477 ±       7.852  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     28351.120 ±     640.875    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.042 ±       0.160  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.879 ±       3.385    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        10.000                counts
[info] MutableSetOfIntsBenchmark.readCirce:·gc.time                                                      128  thrpt    5         8.000                    ms
[info] MutableSetOfIntsBenchmark.readJacksonScala                                                        128  thrpt    5    150126.882 ±    3082.453   ops/s
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5       641.887 ±      13.026  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5      6728.003 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       636.013 ±     267.842  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      6667.701 ±    2852.685    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.472 ±       3.931  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         4.951 ±      41.233    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5         5.000                counts
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5         8.000                    ms
[info] MutableSetOfIntsBenchmark.readJsoniterScala                                                       128  thrpt    5    240904.418 ±    2104.613   ops/s
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       858.474 ±       7.978  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      5608.002 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       942.568 ±    1421.234  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      6153.964 ±    9236.349    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.025 ±       0.105  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.163 ±       0.682    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         7.000                counts
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5         6.000                    ms
[info] MutableSetOfIntsBenchmark.readPlayJson                                                            128  thrpt    5     42229.554 ±     370.417   ops/s
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1699.333 ±      15.151  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     63328.010 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1613.606 ±    1417.007  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     60155.576 ±   53311.665    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.062 ±       0.253  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.331 ±       9.483    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        12.000                counts
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        12.000                    ms
[info] MutableSetOfIntsBenchmark.writeCirce                                                              128  thrpt    5    224616.062 ±    1260.883   ops/s
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1534.611 ±       9.067  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     10752.002 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1480.475 ±    1158.046  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     10371.190 ±    8067.406    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.062 ±       0.170  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.438 ±       1.190    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        11.000                counts
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5         9.000                    ms
[info] MutableSetOfIntsBenchmark.writeJacksonScala                                                       128  thrpt    5    530685.633 ±   11950.493   ops/s
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5       426.204 ±       9.601  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1264.001 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       440.261 ±     982.235  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1302.300 ±    2905.284    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.474 ±       4.026  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.402 ±      11.906    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         4.000                counts
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        10.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScala                                                      128  thrpt    5    679824.980 ±   10970.494   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       366.305 ±       5.767  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5       848.001 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       306.988 ±    1079.107  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       712.058 ±    2503.017    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.003 ±       0.026  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.007 ±       0.060    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         3.000                counts
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         6.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5    690771.906 ±    5316.726   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5         7.023 ±       0.055  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5        16.001 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] MutableSetOfIntsBenchmark.writePlayJson                                                           128  thrpt    5     30249.488 ±    1265.088   ops/s
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1590.399 ±      66.873  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     82736.014 ±       0.002    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1613.909 ±    1414.868  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     84050.413 ±   75603.010    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.042 ±       0.098  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         2.164 ±       5.075    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        12.000                counts
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        12.000                    ms
[info] PrimitivesBenchmark.readCirce                                                                     N/A  thrpt    5    699466.223 ±    6175.717   ops/s
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate                                                      N/A  thrpt    5      2240.164 ±      18.889  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm                                                 N/A  thrpt    5      5040.001 ±       0.001    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      2298.316 ±    1424.093  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5      5171.380 ±    3220.875    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.062 ±       0.001  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.141 ±       0.001    B/op
[info] PrimitivesBenchmark.readCirce:·gc.count                                                           N/A  thrpt    5        17.000                counts
[info] PrimitivesBenchmark.readCirce:·gc.time                                                            N/A  thrpt    5        15.000                    ms
[info] PrimitivesBenchmark.readJacksonScala                                                              N/A  thrpt    5   1504905.026 ±   54874.283   ops/s
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate                                               N/A  thrpt    5      1139.989 ±      41.579  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          N/A  thrpt    5      1192.000 ±       0.001    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      1202.263 ±    1148.468  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5      1258.296 ±    1216.051    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.037 ±       0.143  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.039 ±       0.150    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.count                                                    N/A  thrpt    5         9.000                counts
[info] PrimitivesBenchmark.readJacksonScala:·gc.time                                                     N/A  thrpt    5         9.000                    ms
[info] PrimitivesBenchmark.readJsoniterScala                                                             N/A  thrpt    5   6419358.913 ±  182454.957   ops/s
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate                                              N/A  thrpt    5       195.818 ±       5.461  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         N/A  thrpt    5        48.000 ±       0.001    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       204.723 ±    1079.444  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5        50.494 ±     266.250    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.274 ±       2.361  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.067 ±       0.578    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.count                                                   N/A  thrpt    5         2.000                counts
[info] PrimitivesBenchmark.readJsoniterScala:·gc.time                                                    N/A  thrpt    5         4.000                    ms
[info] PrimitivesBenchmark.readPlayJson                                                                  N/A  thrpt    5    226744.264 ±    9068.598   ops/s
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate                                                   N/A  thrpt    5      1560.736 ±      61.793  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm                                              N/A  thrpt    5     10832.002 ±       0.001    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1607.772 ±    1416.868  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5     11154.904 ±    9740.511    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.062 ±       0.188  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.433 ±       1.290    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.count                                                        N/A  thrpt    5        12.000                counts
[info] PrimitivesBenchmark.readPlayJson:·gc.time                                                         N/A  thrpt    5        13.000                    ms
[info] PrimitivesBenchmark.writeCirce                                                                    N/A  thrpt    5    967805.986 ±   56035.158   ops/s
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate                                                     N/A  thrpt    5      1662.975 ±      96.380  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm                                                N/A  thrpt    5      2704.000 ±       0.001    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1615.613 ±    1420.453  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5      2631.912 ±    2415.075    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.067 ±       0.183  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.109 ±       0.307    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.count                                                          N/A  thrpt    5        12.000                counts
[info] PrimitivesBenchmark.writeCirce:·gc.time                                                           N/A  thrpt    5        11.000                    ms
[info] PrimitivesBenchmark.writeJacksonScala                                                             N/A  thrpt    5   2522275.369 ±   97146.071   ops/s
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate                                              N/A  thrpt    5      1115.572 ±      42.461  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         N/A  thrpt    5       696.000 ±       0.001    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1202.501 ±    1150.758  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5       750.413 ±     720.362    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.042 ±       0.196  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.026 ±       0.122    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.count                                                   N/A  thrpt    5         9.000                counts
[info] PrimitivesBenchmark.writeJacksonScala:·gc.time                                                    N/A  thrpt    5         9.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScala                                                            N/A  thrpt    5   7123500.368 ±  188829.156   ops/s
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate                                             N/A  thrpt    5       579.454 ±      14.913  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        N/A  thrpt    5       128.000 ±       0.001    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       505.880 ±    1121.547  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5       111.727 ±     248.166    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.362 ±       2.938  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.080 ±       0.654    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.count                                                  N/A  thrpt    5         4.000                counts
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.time                                                   N/A  thrpt    5         7.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc                                                    N/A  thrpt    5   6510992.426 ±   76321.269   ops/s
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     N/A  thrpt    5       397.159 ±       4.711  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                N/A  thrpt    5        96.000 ±       0.001    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       441.528 ±     987.735  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5       106.679 ±     238.231    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.361 ±       3.003  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5         0.087 ±       0.722    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          N/A  thrpt    5         4.000                counts
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                           N/A  thrpt    5         8.000                    ms
[info] PrimitivesBenchmark.writePlayJson                                                                 N/A  thrpt    5    316419.039 ±   12317.756   ops/s
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate                                                  N/A  thrpt    5      1647.113 ±      64.133  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm                                             N/A  thrpt    5      8192.001 ±       0.001    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      1742.757 ±    1413.435  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5      8675.589 ±    7191.615    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.054 ±       0.122  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.270 ±       0.620    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.count                                                       N/A  thrpt    5        13.000                counts
[info] PrimitivesBenchmark.writePlayJson:·gc.time                                                        N/A  thrpt    5        13.000                    ms
[info] SetOfIntsBenchmark.readCirce                                                                      128  thrpt    5     66054.468 ±     901.624   ops/s
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                       128  thrpt    5      1949.883 ±      27.010  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                                  128  thrpt    5     46456.007 ±       0.001    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              128  thrpt    5      1891.966 ±    1159.060  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         128  thrpt    5     45083.574 ±   27787.661    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          128  thrpt    5         0.067 ±       0.164  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     128  thrpt    5         1.589 ±       3.925    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.count                                                            128  thrpt    5        14.000                counts
[info] SetOfIntsBenchmark.readCirce:·gc.time                                                             128  thrpt    5        12.000                    ms
[info] SetOfIntsBenchmark.readJacksonScala                                                               128  thrpt    5    103966.638 ±    2633.147   ops/s
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                                128  thrpt    5      1601.244 ±      40.557  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           128  thrpt    5     24240.004 ±       0.001    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1609.386 ±    1415.518  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     24350.521 ±   21124.964    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.046 ±       0.119  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.692 ±       1.797    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.count                                                     128  thrpt    5        12.000                counts
[info] SetOfIntsBenchmark.readJacksonScala:·gc.time                                                      128  thrpt    5        12.000                    ms
[info] SetOfIntsBenchmark.readJsoniterScala                                                              128  thrpt    5    152273.894 ±    4460.459   ops/s
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                               128  thrpt    5      2237.074 ±      66.275  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          128  thrpt    5     23120.003 ±       0.001    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2302.127 ±    1426.185  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     23805.306 ±   15133.595    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.058 ±       0.174  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.602 ±       1.789    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.count                                                    128  thrpt    5        17.000                counts
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.time                                                     128  thrpt    5        14.000                    ms
[info] SetOfIntsBenchmark.readPlayJson                                                                   128  thrpt    5     48411.259 ±     324.498   ops/s
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                                    128  thrpt    5      2486.878 ±      17.860  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                               128  thrpt    5     80840.009 ±       0.001    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                           128  thrpt    5      2568.361 ±    1161.438  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     83497.151 ±   38041.212    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.054 ±       0.091  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         1.759 ±       2.965    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.count                                                         128  thrpt    5        19.000                counts
[info] SetOfIntsBenchmark.readPlayJson:·gc.time                                                          128  thrpt    5        18.000                    ms
[info] SetOfIntsBenchmark.writeCirce                                                                     128  thrpt    5    215401.897 ±    2077.268   ops/s
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                      128  thrpt    5      1487.966 ±      14.064  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     10872.002 ±       0.001    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1479.877 ±    1170.498  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     10817.053 ±    8675.134    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.067 ±       0.119  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         0.487 ±       0.868    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.count                                                           128  thrpt    5        11.000                counts
[info] SetOfIntsBenchmark.writeCirce:·gc.time                                                            128  thrpt    5        10.000                    ms
[info] SetOfIntsBenchmark.writeJacksonScala                                                              128  thrpt    5    550853.645 ±   31217.007   ops/s
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                               128  thrpt    5       481.627 ±      27.332  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      1376.001 ±       0.001    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       471.247 ±    1057.314  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1343.943 ±    3015.662    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.477 ±       3.997  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.378 ±      11.553    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.count                                                    128  thrpt    5         4.000                counts
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.time                                                     128  thrpt    5        10.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScala                                                             128  thrpt    5    560965.956 ±   12368.029   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       302.268 ±       6.571  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       848.001 ±       0.001    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       306.997 ±    1079.136  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       862.823 ±    3033.076    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.008 ±       0.044  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.023 ±       0.123    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.count                                                   128  thrpt    5         3.000                counts
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.time                                                    128  thrpt    5         6.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc                                                     128  thrpt    5    601187.216 ±    9910.143   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      128  thrpt    5         6.112 ±       0.101  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 128  thrpt    5        16.001 ±       0.001    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           128  thrpt    5           ≈ 0                counts
[info] SetOfIntsBenchmark.writePlayJson                                                                  128  thrpt    5     31051.460 ±     782.351   ops/s
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                                   128  thrpt    5      1638.399 ±      41.875  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     83024.014 ±       0.002    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1615.076 ±    1423.149  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     81896.184 ±   73314.247    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.058 ±       0.105  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         2.955 ±       5.300    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.count                                                        128  thrpt    5        12.000                counts
[info] SetOfIntsBenchmark.writePlayJson:·gc.time                                                         128  thrpt    5        11.000                    ms
[info] StringOfAsciiCharsBenchmark.readCirce                                                             128  thrpt    5   3386647.634 ±   32580.670   ops/s
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      3133.098 ±      29.485  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5      1456.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      3122.194 ±    1416.190  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1450.827 ±     653.875    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.087 ±       0.119  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.041 ±       0.055    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        23.000                counts
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        19.000                    ms
[info] StringOfAsciiCharsBenchmark.readDslJsonJava                                                       128  thrpt    5   7877309.453 ±  386544.496   ops/s
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                        128  thrpt    5      1481.558 ±      72.438  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                   128  thrpt    5       296.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                               128  thrpt    5      1471.117 ±    1156.957  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       294.127 ±     236.785    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.482 ±       4.070  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.096 ±       0.808    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count                                             128  thrpt    5        11.000                counts
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time                                              128  thrpt    5        16.000                    ms
[info] StringOfAsciiCharsBenchmark.readJacksonScala                                                      128  thrpt    5   4164300.719 ±  139478.208   ops/s
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      2498.040 ±      83.654  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5       944.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      2432.739 ±    1434.763  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       919.325 ±     541.421    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.067 ±       0.208  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.025 ±       0.078    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        18.000                counts
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        16.000                    ms
[info] StringOfAsciiCharsBenchmark.readJsoniterScala                                                     128  thrpt    5   7583201.385 ±  252160.696   ops/s
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1426.196 ±      47.397  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       296.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1482.832 ±    1153.032  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       307.798 ±     240.242    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.071 ±       0.134  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.015 ±       0.027    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        11.000                counts
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        10.000                    ms
[info] StringOfAsciiCharsBenchmark.readPlayJson                                                          128  thrpt    5   4989707.599 ±  301392.893   ops/s
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      3094.615 ±     187.209  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5       976.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      3118.745 ±    1441.232  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       983.542 ±     447.928    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.071 ±       0.091  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.022 ±       0.028    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        23.000                counts
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        19.000                    ms
[info] StringOfAsciiCharsBenchmark.writeCirce                                                            128  thrpt    5   2796980.876 ±   54325.171   ops/s
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1734.557 ±      33.541  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5       976.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1750.229 ±    1410.253  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       985.319 ±     803.989    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.067 ±       0.183  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.037 ±       0.102    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        13.000                counts
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        11.000                    ms
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava                                                      128  thrpt    5   7117069.717 ±  283680.266   ops/s
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       687.386 ±      27.394  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5       152.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       664.925 ±       4.320  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       147.045 ±       5.363    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.004 ±       0.013  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.001 ±       0.003    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                            128  thrpt    5         5.000                counts
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                             128  thrpt    5        10.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJacksonScala                                                     128  thrpt    5   4910416.971 ±  247569.137   ops/s
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1298.068 ±      65.797  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       416.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1339.681 ±      10.339  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       429.403 ±      24.534    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.062 ±       0.098  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.020 ±       0.031    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        10.000                counts
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5         8.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala                                                    128  thrpt    5   9398490.977 ±  437440.668   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       907.785 ±      42.339  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       152.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       942.026 ±    1419.099  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       158.138 ±     243.159    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.033 ±       0.166  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.006 ±       0.028    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5         7.000                counts
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5         7.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   6935742.932 ±    8375.559   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson                                                         128  thrpt    5   5145857.559 ±  187160.890   ops/s
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1647.896 ±      59.607  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5       504.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1614.007 ±    1418.893  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       493.927 ±     440.247    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.050 ±       0.091  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.015 ±       0.028    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        12.000                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        10.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readCirce                                                          128  thrpt    5   1266545.992 ±   32703.733   ops/s
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      1828.848 ±      46.743  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5      2272.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1756.337 ±    1424.426  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      2181.959 ±    1769.692    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.075 ±       0.176  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.093 ±       0.217    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.count                                                128  thrpt    5        13.000                counts
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.time                                                 128  thrpt    5        11.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava                                                    128  thrpt    5   1801035.488 ±   54554.477   ops/s
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                     128  thrpt    5       338.777 ±      10.050  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                128  thrpt    5       296.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                            128  thrpt    5       307.026 ±    1079.241  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       268.943 ±     945.425    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.011 ±       0.074  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.010 ±       0.065    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count                                          128  thrpt    5         3.000                counts
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time                                           128  thrpt    5         6.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala                                                   128  thrpt    5   1053743.195 ±   51537.440   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5       680.266 ±      33.249  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5      1016.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       668.442 ±       0.966  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       998.472 ±      49.612    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.433 ±       3.554  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.662 ±       5.431    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5         5.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5         6.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala                                                  128  thrpt    5   2412323.708 ±   41417.344   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       453.710 ±       7.818  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5       296.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       475.087 ±    1070.578  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       310.145 ±     698.488    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.302 ±       2.514  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.198 ±       1.644    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         4.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5         7.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readPlayJson                                                       128  thrpt    5   1269477.511 ±    2726.438   ops/s
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5       787.239 ±       1.704  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5       976.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5       803.239 ±    1152.486  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       995.955 ±    1431.121    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.422 ±       3.364  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.523 ±       4.170    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count                                             128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time                                              128  thrpt    5         7.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeCirce                                                         128  thrpt    5   1825939.840 ±  132120.311   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      1429.453 ±     102.358  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5      1232.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1479.923 ±    1168.453  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1275.236 ±     992.066    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.046 ±       0.164  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.039 ±       0.141    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count                                               128  thrpt    5        11.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time                                                128  thrpt    5         9.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava                                                   128  thrpt    5   2540244.808 ±   36351.850   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                    128  thrpt    5       658.560 ±       9.572  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                               128  thrpt    5       408.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                           128  thrpt    5       665.191 ±       4.602  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       412.115 ±       8.223    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.015 ±       0.081  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.010 ±       0.050    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                         128  thrpt    5         5.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                          128  thrpt    5        10.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala                                                  128  thrpt    5   2495657.410 ±  107902.819   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1179.789 ±      50.979  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5       744.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1205.379 ±    1154.863  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       760.937 ±     738.407    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.046 ±       0.154  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.029 ±       0.097    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5         9.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5         7.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala                                                 128  thrpt    5   3683277.129 ±  140484.327   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       954.858 ±      36.359  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5       408.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       941.510 ±    1419.122  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       403.411 ±     621.722    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.033 ±       0.146  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.014 ±       0.063    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5         6.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   3826980.318 ±   32565.439   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson                                                      128  thrpt    5   2574836.551 ±   18402.555   ops/s
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5      1243.587 ±       9.001  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5       760.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1211.127 ±    1159.919  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       740.309 ±     710.746    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.029 ±       0.108  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.018 ±       0.066    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count                                            128  thrpt    5         9.000                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time                                             128  thrpt    5         9.000                    ms
[info] TwitterAPIBenchmark.readCirce                                                                     N/A  thrpt    5     11509.926 ±     248.452   ops/s
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate                                                      N/A  thrpt    5      1621.741 ±      35.279  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm                                                 N/A  thrpt    5    221731.890 ±      43.070    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1614.296 ±    1427.347  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5    220798.432 ±  196997.259    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.096 ±       0.146  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5        13.111 ±      20.128    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.count                                                           N/A  thrpt    5        12.000                counts
[info] TwitterAPIBenchmark.readCirce:·gc.time                                                            N/A  thrpt    5        17.000                    ms
[info] TwitterAPIBenchmark.readJacksonScala                                                              N/A  thrpt    5     15407.184 ±     476.418   ops/s
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate                                               N/A  thrpt    5       243.497 ±       7.344  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          N/A  thrpt    5     24873.321 ±      32.755    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       204.633 ±    1078.970  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5     20978.876 ±  110617.878    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5        ≈ 10⁻³                MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.049 ±       0.420    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.count                                                    N/A  thrpt    5         2.000                counts
[info] TwitterAPIBenchmark.readJacksonScala:·gc.time                                                     N/A  thrpt    5         6.000                    ms
[info] TwitterAPIBenchmark.readJsoniterScala                                                             N/A  thrpt    5     36771.439 ±    3460.038   ops/s
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                              N/A  thrpt    5       402.659 ±      38.001  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         N/A  thrpt    5     17232.012 ±       0.002    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       441.621 ±     987.990  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5     18953.293 ±   42246.005    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.343 ±       2.836  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5        14.554 ±     120.291    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.count                                                   N/A  thrpt    5         4.000                counts
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.time                                                    N/A  thrpt    5         8.000                    ms
[info] TwitterAPIBenchmark.readPlayJson                                                                  N/A  thrpt    5      3763.190 ±      44.540   ops/s
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate                                                   N/A  thrpt    5      1186.066 ±      14.220  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                              N/A  thrpt    5    495816.118 ±       0.019    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1072.994 ±    1415.370  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5    448782.711 ±  594557.057    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         1.737 ±      14.956    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.count                                                        N/A  thrpt    5         8.000                counts
[info] TwitterAPIBenchmark.readPlayJson:·gc.time                                                         N/A  thrpt    5        24.000                    ms
[info] TwitterAPIBenchmark.writeJacksonScala                                                             N/A  thrpt    5     59283.153 ±    2305.200   ops/s
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                              N/A  thrpt    5       757.112 ±      29.394  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         N/A  thrpt    5     20099.988 ±       0.131    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       796.553 ±    1143.031  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5     21124.087 ±   29875.712    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.602 ±       4.917  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5        15.954 ±     130.243    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.count                                                   N/A  thrpt    5         6.000                counts
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.time                                                    N/A  thrpt    5         9.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScala                                                            N/A  thrpt    5     79099.162 ±    4316.188   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                             N/A  thrpt    5       518.666 ±      28.326  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        N/A  thrpt    5     10320.006 ±       0.001    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       607.801 ±     338.117  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5     12103.036 ±    6996.130    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.398 ±       3.228  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         7.854 ±      63.597    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.count                                                  N/A  thrpt    5         5.000                counts
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.time                                                   N/A  thrpt    5         8.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc                                                    N/A  thrpt    5     89941.021 ±     205.171   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     N/A  thrpt    5        10.973 ±       0.027  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                N/A  thrpt    5       192.005 ±       0.001    B/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          N/A  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.readCirce                                                               128  thrpt    5    345968.493 ±    5153.814   ops/s
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      2017.177 ±      30.132  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5      9176.001 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1893.329 ±    1156.016  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      8608.532 ±    5158.399    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.054 ±       0.156  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.246 ±       0.710    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.count                                                     128  thrpt    5        14.000                counts
[info] VectorOfBooleansBenchmark.readCirce:·gc.time                                                      128  thrpt    5        12.000                    ms
[info] VectorOfBooleansBenchmark.readJacksonScala                                                        128  thrpt    5    482139.264 ±   26310.009   ops/s
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5       588.220 ±      31.850  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5      1920.001 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       502.455 ±    1112.079  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1646.292 ±    3637.416    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.474 ±       3.948  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         1.565 ±      13.042    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5         4.000                counts
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5         7.000                    ms
[info] VectorOfBooleansBenchmark.readJsoniterScala                                                       128  thrpt    5   1254879.787 ±   29349.684   ops/s
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       656.987 ±      15.368  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5       824.000 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       673.465 ±       0.062  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       844.692 ±      19.911    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.336 ±       2.675  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.426 ±       3.392    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         5.000                counts
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5         5.000                    ms
[info] VectorOfBooleansBenchmark.readPlayJson                                                            128  thrpt    5    116650.981 ±    3565.137   ops/s
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      4054.909 ±     126.054  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     54704.004 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      4078.806 ±      32.559  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     55029.361 ±    1822.844    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.087 ±       0.143  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.181 ±       1.942    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        30.000                counts
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        24.000                    ms
[info] VectorOfBooleansBenchmark.writeCirce                                                              128  thrpt    5    363650.976 ±    6026.711   ops/s
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1249.553 ±      20.737  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5      5408.001 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1209.049 ±    1155.123  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      5235.008 ±    5028.775    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.042 ±       0.098  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.180 ±       0.426    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.count                                                    128  thrpt    5         9.000                counts
[info] VectorOfBooleansBenchmark.writeCirce:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] VectorOfBooleansBenchmark.writeJacksonScala                                                       128  thrpt    5    634697.627 ±   23997.038   ops/s
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5       490.467 ±      18.463  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1216.001 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       471.446 ±    1057.854  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1167.207 ±    2620.612    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.477 ±       4.019  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.172 ±       9.866    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         4.000                counts
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5         9.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScala                                                      128  thrpt    5   1838981.459 ±   63605.792   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       850.715 ±      29.698  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5       728.000 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       941.481 ±    1419.533  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       805.190 ±    1207.620    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.037 ±       0.119  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.032 ±       0.101    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         7.000                counts
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         6.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5   1895244.958 ±    1715.471   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.writePlayJson                                                           128  thrpt    5    343412.793 ±   26611.030   ops/s
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5       507.990 ±      39.339  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5      2328.001 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5       472.603 ±    1061.968  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      2169.930 ±    4848.962    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.413 ±       3.509  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.878 ±      15.968    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5         4.000                counts
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5         8.000                    ms
[info] Benchmark result is saved to jdk8.json
[success] Total time: 7074 s, completed May 13, 2018 11:34:34 PM
